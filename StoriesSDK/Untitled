diff --git a/OpenBook/OpenBook.xcodeproj/project.pbxproj b/OpenBook/OpenBook.xcodeproj/project.pbxproj
index 984a8223..9867cf67 100644
--- a/OpenBook/OpenBook.xcodeproj/project.pbxproj
+++ b/OpenBook/OpenBook.xcodeproj/project.pbxproj
@@ -7,6 +7,10 @@
 	objects = {
 
 /* Begin PBXBuildFile section */
+		0D02E51F2754C5A4003F2D09 /* SelectDocUploadImagesTableViewCell.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0D02E51D2754C5A4003F2D09 /* SelectDocUploadImagesTableViewCell.swift */; };
+		0D02E5202754C5A4003F2D09 /* SelectDocUploadImagesTableViewCell.xib in Resources */ = {isa = PBXBuildFile; fileRef = 0D02E51E2754C5A4003F2D09 /* SelectDocUploadImagesTableViewCell.xib */; };
+		0D04EA902754A1B8002DE5F2 /* MultipleDocumentsUploadViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0D04EA8F2754A1B8002DE5F2 /* MultipleDocumentsUploadViewController.swift */; };
+		0D11A8962751018300F8C2CF /* ViewUploadedImageViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0D11A8952751018200F8C2CF /* ViewUploadedImageViewController.swift */; };
 		0D2435C62655129E009C842A /* TDSViewModel.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0D2435C52655129E009C842A /* TDSViewModel.swift */; };
 		0D2435E72657E937009C842A /* TransferViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0D2435E62657E937009C842A /* TransferViewController.swift */; };
 		0D2435EB2657E96E009C842A /* TransferTableView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0D2435EA2657E96E009C842A /* TransferTableView.swift */; };
@@ -828,6 +832,10 @@
 /* End PBXCopyFilesBuildPhase section */
 
 /* Begin PBXFileReference section */
+		0D02E51D2754C5A4003F2D09 /* SelectDocUploadImagesTableViewCell.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SelectDocUploadImagesTableViewCell.swift; sourceTree = "<group>"; };
+		0D02E51E2754C5A4003F2D09 /* SelectDocUploadImagesTableViewCell.xib */ = {isa = PBXFileReference; lastKnownFileType = file.xib; path = SelectDocUploadImagesTableViewCell.xib; sourceTree = "<group>"; };
+		0D04EA8F2754A1B8002DE5F2 /* MultipleDocumentsUploadViewController.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MultipleDocumentsUploadViewController.swift; sourceTree = "<group>"; };
+		0D11A8952751018200F8C2CF /* ViewUploadedImageViewController.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ViewUploadedImageViewController.swift; sourceTree = "<group>"; };
 		0D2435C52655129E009C842A /* TDSViewModel.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TDSViewModel.swift; sourceTree = "<group>"; };
 		0D2435E62657E937009C842A /* TransferViewController.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TransferViewController.swift; sourceTree = "<group>"; };
 		0D2435EA2657E96E009C842A /* TransferTableView.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TransferTableView.swift; sourceTree = "<group>"; };
@@ -2177,6 +2185,9 @@
 			isa = PBXGroup;
 			children = (
 				152E324927159A770012CA19 /* BusinessVerificationViewController.swift */,
+				0D04EA8F2754A1B8002DE5F2 /* MultipleDocumentsUploadViewController.swift */,
+				0D02E51D2754C5A4003F2D09 /* SelectDocUploadImagesTableViewCell.swift */,
+				0D02E51E2754C5A4003F2D09 /* SelectDocUploadImagesTableViewCell.xib */,
 			);
 			path = View;
 			sourceTree = "<group>";
@@ -2201,6 +2212,7 @@
 			isa = PBXGroup;
 			children = (
 				155E587C270ECB9B00E11940 /* UploadPANViewController.swift */,
+				0D11A8952751018200F8C2CF /* ViewUploadedImageViewController.swift */,
 				155E587E270ED89700E11940 /* KYCProgressIndicatorTableViewCell.swift */,
 				155E5880270ED8A700E11940 /* KYCProgressIndicatorTableViewCell.xib */,
 				155E5882270EDC5500E11940 /* UplodPANImageTableViewCell.swift */,
@@ -5349,6 +5361,7 @@
 				0D65D546273E69420062025C /* FormTextField.xib in Resources */,
 				0DDFBAFF272175EB00EE46EF /* PlanUserDetailsTableViewCell.xib in Resources */,
 				F02A9BB225C2A7D900707AE1 /* montserrat_extrabold.ttf in Resources */,
+				0D02E5202754C5A4003F2D09 /* SelectDocUploadImagesTableViewCell.xib in Resources */,
 				1511367E27105F8A008422CB /* EmploymentStatusTableViewCell.xib in Resources */,
 				F01AB25325F78B66007CCF13 /* FlyTableViewCell.xib in Resources */,
 				15B1411B2722A2BF0011C971 /* SafeAndSecureView.xib in Resources */,
@@ -5873,6 +5886,7 @@
 				151B8BFE270B220E00010752 /* BusinessTypeViewController.swift in Sources */,
 				F090FDDD25C956450008EEA8 /* CommonFunctions.swift in Sources */,
 				F0C2C562267FBA3C00C57EAA /* SendReceiptInvoiceRequest.swift in Sources */,
+				0D11A8962751018300F8C2CF /* ViewUploadedImageViewController.swift in Sources */,
 				F0FA3A7F25E38A540007FA40 /* TransactionDetailViewModel.swift in Sources */,
 				F01AB3DF25FF7DAA007CCF13 /* CategorySearchViewController.swift in Sources */,
 				F04236E3264E968800641D60 /* DiscardView.swift in Sources */,
@@ -5891,6 +5905,7 @@
 				F0C7A59725C7CBC5003BAA40 /* DashboardViewController.swift in Sources */,
 				F02B08ED26282F850023A335 /* BorderButton.swift in Sources */,
 				F0C2C51E267C793700C57EAA /* CreateSaleInvoiceRequest.swift in Sources */,
+				0D04EA902754A1B8002DE5F2 /* MultipleDocumentsUploadViewController.swift in Sources */,
 				15B141122722907B0011C971 /* UnderReviewInfoView.swift in Sources */,
 				F0E023D3266872C500FE67AF /* InvoiceItemEditView.swift in Sources */,
 				F002B39B25E3B25C0017354D /* RPicker.swift in Sources */,
@@ -5947,6 +5962,7 @@
 				F07076AC25DD171900B855ED /* AccountSwipeView.swift in Sources */,
 				F0FA3A4B25DE83160007FA40 /* AddMoneyViewController.swift in Sources */,
 				F018BB78263AFB2F00DA17AD /* WebViewController.swift in Sources */,
+				0D02E51F2754C5A4003F2D09 /* SelectDocUploadImagesTableViewCell.swift in Sources */,
 				15DF6B74271F0BD300324C61 /* UploadBusinessDocumentViewModel.swift in Sources */,
 				F0C7A59125C7C659003BAA40 /* VerifyAccountView.swift in Sources */,
 				F0FA3A6425DF9EAF0007FA40 /* DownloadStatementPopupView.swift in Sources */,
diff --git a/OpenBook/OpenBook/Application/AppDelegate.swift b/OpenBook/OpenBook/Application/AppDelegate.swift
index e954819b..0b9fe77f 100644
--- a/OpenBook/OpenBook/Application/AppDelegate.swift
+++ b/OpenBook/OpenBook/Application/AppDelegate.swift
@@ -21,7 +21,7 @@ class AppDelegate: UIResponder, UIApplicationDelegate {
     // MARK: Properties
     var window: UIWindow?
     var isProdBuild: Bool = false
-    var shouldStoreUserData = false
+    var shouldStoreUserData = true
     var bundle: Bundle?
     static var sharedInstance: AppDelegate?
     let deeplinkManager = DeeplinkManager()
@@ -61,7 +61,7 @@ class AppDelegate: UIResponder, UIApplicationDelegate {
     
     func setUpIntialViewcontroller() {
         let window = UIWindow(frame: UIScreen.main.bounds)
-        let loginNavController = OnboardingVideoViewController.instantiate()
+        let loginNavController = UploadBusinessDocumentViewController.instantiate()
         let navigationController = UINavigationController.init(rootViewController: loginNavController)
         navigationController.isNavigationBarHidden = true
         window.rootViewController = navigationController
@@ -71,7 +71,7 @@ class AppDelegate: UIResponder, UIApplicationDelegate {
     
     fileprivate func initialization(_ application: UIApplication) {
         // MARK: - MAKE TRUE FOR PROD BUILD
-        isProdBuild = true
+//        isProdBuild = true
         FirebaseApp.configure()
         #if DEBUG
         NetworkActivityLogger.shared.startLogging()
diff --git a/OpenBook/OpenBook/Scenes/Onboarding/Nominee Details/View/BusinessVerificationDetailViewController.swift b/OpenBook/OpenBook/Scenes/Onboarding/Nominee Details/View/BusinessVerificationDetailViewController.swift
index 7f73133c..cb0e918c 100644
--- a/OpenBook/OpenBook/Scenes/Onboarding/Nominee Details/View/BusinessVerificationDetailViewController.swift	
+++ b/OpenBook/OpenBook/Scenes/Onboarding/Nominee Details/View/BusinessVerificationDetailViewController.swift	
@@ -243,7 +243,7 @@ extension BusinessVerificationDetailViewController: UITableViewDataSource, UITab
             case .addressProof:
                 let cell = tableView.dequeueReusableCell(for: indexPath) as AadharImagesTableViewCell
                 cell.setupData(sideLabelTxt: "", image: pickedImage, shouldHideHeader: true)
-                cell.imagePicked = { [weak self] in
+                cell.clickOnSelectImage = { [weak self] in
                     self?.presentImagePicker(tag: indexPath.row)
                 }
                 return cell
diff --git a/OpenBook/OpenBook/Scenes/Onboarding/Subscription/View/SubscriptionPlanTableViewCell.swift b/OpenBook/OpenBook/Scenes/Onboarding/Subscription/View/SubscriptionPlanTableViewCell.swift
index 03de5074..eb2b3fc3 100644
--- a/OpenBook/OpenBook/Scenes/Onboarding/Subscription/View/SubscriptionPlanTableViewCell.swift
+++ b/OpenBook/OpenBook/Scenes/Onboarding/Subscription/View/SubscriptionPlanTableViewCell.swift
@@ -67,9 +67,11 @@ class SubscriptionPlanTableViewCell: UITableViewCell, NibReusable {
         infoLabel.text = package.info
         upgradeToLabel.text = "Upgrade to \(package.packageName ?? "")"
     }
+    
     @IBAction func upgradePlanButtonAction(_ sender: Any) {
         upgradePlanClicked?()
     }
+    
     // MARK: - Methods
     @objc func tappedOnLabel(_ gesture: UITapGestureRecognizer) {
         guard let length = detailLabel.attributedText?.length, length > 10 else {
diff --git a/OpenBook/OpenBook/Scenes/Onboarding/Welcome/View/OnboardingVideoViewController.swift b/OpenBook/OpenBook/Scenes/Onboarding/Welcome/View/OnboardingVideoViewController.swift
index 0f0264de..747bf329 100644
--- a/OpenBook/OpenBook/Scenes/Onboarding/Welcome/View/OnboardingVideoViewController.swift
+++ b/OpenBook/OpenBook/Scenes/Onboarding/Welcome/View/OnboardingVideoViewController.swift
@@ -20,12 +20,12 @@ class OnboardingVideoViewController: BaseViewController, StoryboardSceneBased {
     override func viewDidLoad() {
         super.viewDidLoad()
         startScreen(screenName: ScreenNamesConstants.onboardingScreen)
-        forceAppUpdateViewModel.getAppConfig(completion: { [weak self] _ in
-            self?.isResponseDone = true
-            if self?.isVedioComplete ?? false {
-                self?.showAlert()
-            }
-        })
+//        forceAppUpdateViewModel.getAppConfig(completion: { [weak self] _ in
+//            self?.isResponseDone = true
+//            if self?.isVedioComplete ?? false {
+//                self?.showAlert()
+//            }
+//        })
         playOnBoardingVideo()
     }
     
@@ -101,7 +101,7 @@ class OnboardingVideoViewController: BaseViewController, StoryboardSceneBased {
         if isResponseDone {
             showAlert()
         }
-        //        navigateToController()
+        navigateToController()
     }
     
     func navigateToController() {
diff --git a/OpenBook/OpenBook/Scenes/Tab/More/KYC/Aadhar KYC/AadharImageUploadViewController.swift b/OpenBook/OpenBook/Scenes/Tab/More/KYC/Aadhar KYC/AadharImageUploadViewController.swift
index 2b70621e..b107b5df 100644
--- a/OpenBook/OpenBook/Scenes/Tab/More/KYC/Aadhar KYC/AadharImageUploadViewController.swift	
+++ b/OpenBook/OpenBook/Scenes/Tab/More/KYC/Aadhar KYC/AadharImageUploadViewController.swift	
@@ -109,12 +109,12 @@ extension AadharImageUploadViewController: UITableViewDelegate, UITableViewDataS
         switch indexPath.row {
         case 0:
             cell.setupData(sideLabelTxt: "Font side", image: pickedFrontImage)
-            cell.imagePicked = { [weak self] in
+            cell.clickOnSelectImage = { [weak self] in
                 self?.presentImagePicker(tag: indexPath.row)
             }
         case 1:
             cell.setupData(sideLabelTxt: "Back side", image: pickedBackImage)
-            cell.imagePicked = { [weak self] in
+            cell.clickOnSelectImage = { [weak self] in
                 self?.presentImagePicker(tag: indexPath.row)
             }
         default:
diff --git a/OpenBook/OpenBook/Scenes/Tab/More/KYC/Aadhar KYC/AadharImagesTableViewCell.swift b/OpenBook/OpenBook/Scenes/Tab/More/KYC/Aadhar KYC/AadharImagesTableViewCell.swift
index 3a841cab..003b6f7c 100644
--- a/OpenBook/OpenBook/Scenes/Tab/More/KYC/Aadhar KYC/AadharImagesTableViewCell.swift	
+++ b/OpenBook/OpenBook/Scenes/Tab/More/KYC/Aadhar KYC/AadharImagesTableViewCell.swift	
@@ -16,9 +16,10 @@ class AadharImagesTableViewCell: UITableViewCell, NibReusable {
     @IBOutlet private weak var documentImage: UIImageView!
     @IBOutlet private weak var documentValueLabel: UILabel!
     @IBOutlet private weak var headerView: UIView!
-
+    @IBOutlet weak var headerViewHeightConst: NSLayoutConstraint!
+    
     // MARK: - Properties
-    var imagePicked: (() -> Void)?
+    var clickOnSelectImage: (() -> Void)?
     
     // MARK: - View life cycle methods
     override func awakeFromNib() {
@@ -39,6 +40,6 @@ class AadharImagesTableViewCell: UITableViewCell, NibReusable {
     
     // MARK: - Button Actions
     @IBAction func uploadImageAction(_ sender: UIButton) {
-        imagePicked?()
+        clickOnSelectImage?()
     }
 }
diff --git a/OpenBook/OpenBook/Scenes/Tab/More/KYC/Aadhar KYC/AadharImagesTableViewCell.xib b/OpenBook/OpenBook/Scenes/Tab/More/KYC/Aadhar KYC/AadharImagesTableViewCell.xib
index 5f1c20ce..eb24a168 100644
--- a/OpenBook/OpenBook/Scenes/Tab/More/KYC/Aadhar KYC/AadharImagesTableViewCell.xib	
+++ b/OpenBook/OpenBook/Scenes/Tab/More/KYC/Aadhar KYC/AadharImagesTableViewCell.xib	
@@ -1,9 +1,9 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="18122" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" useTraitCollections="YES" useSafeAreas="YES" colorMatched="YES">
+<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="17701" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" useTraitCollections="YES" useSafeAreas="YES" colorMatched="YES">
     <device id="retina6_1" orientation="portrait" appearance="light"/>
     <dependencies>
         <deployment identifier="iOS"/>
-        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="18093"/>
+        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="17703"/>
         <capability name="Safe area layout guides" minToolsVersion="9.0"/>
         <capability name="System colors in document resources" minToolsVersion="11.0"/>
         <capability name="documents saved in the Xcode 8 format" minToolsVersion="8.0"/>
@@ -157,6 +157,7 @@
                 <outlet property="documentImage" destination="3a7-9i-Xqs" id="l8l-eF-Puu"/>
                 <outlet property="documentValueLabel" destination="bM8-4k-Fag" id="MkF-92-j1R"/>
                 <outlet property="headerView" destination="IYi-br-fWq" id="U9M-Ne-w0W"/>
+                <outlet property="headerViewHeightConst" destination="fRJ-rC-hbE" id="aFt-Cd-d0f"/>
                 <outlet property="sidesKeyLabel" destination="XvB-rM-Zq1" id="6vf-sQ-9hJ"/>
                 <outlet property="uploadImageKeyLabel" destination="KWJ-0R-wfS" id="OqV-9L-5Jc"/>
             </connections>
diff --git a/OpenBook/OpenBook/Scenes/Tab/More/KYC/Business Proof KYC/View/UploadBusinessProofViewController.swift b/OpenBook/OpenBook/Scenes/Tab/More/KYC/Business Proof KYC/View/UploadBusinessProofViewController.swift
index 7eba98d0..4e8956c7 100644
--- a/OpenBook/OpenBook/Scenes/Tab/More/KYC/Business Proof KYC/View/UploadBusinessProofViewController.swift	
+++ b/OpenBook/OpenBook/Scenes/Tab/More/KYC/Business Proof KYC/View/UploadBusinessProofViewController.swift	
@@ -83,7 +83,7 @@ extension UploadBusinessProofViewController: UITableViewDelegate, UITableViewDat
     func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
         let cell = tableView.dequeueReusableCell(for: indexPath) as AadharImagesTableViewCell
         cell.setupData(sideLabelTxt: "", image: pickedImage)
-        cell.imagePicked = { [weak self] in
+        cell.clickOnSelectImage = { [weak self] in
             self?.presentImagePicker(tag: indexPath.row)
         }
         return cell
diff --git a/OpenBook/OpenBook/Scenes/Tab/More/KYC/Business Verification/View/BusinessVerificationViewController.swift b/OpenBook/OpenBook/Scenes/Tab/More/KYC/Business Verification/View/BusinessVerificationViewController.swift
index dd4ce56d..6d1484e8 100644
--- a/OpenBook/OpenBook/Scenes/Tab/More/KYC/Business Verification/View/BusinessVerificationViewController.swift	
+++ b/OpenBook/OpenBook/Scenes/Tab/More/KYC/Business Verification/View/BusinessVerificationViewController.swift	
@@ -119,14 +119,14 @@ class BusinessVerificationViewController: BaseViewController, StoryboardSceneBas
     }
 
     private func updateKyc() {
-        currentOnbordingStep = KYCScreenType.businessDocVerificationScreen(CommonFunctions.sharedInstance.selectedBusinessType).screenCodes
-        updateKycStatusAPICall { [weak self] _ in
-            self?.stopActivityIndicator()
-            DispatchQueue.main.async {
+//        currentOnbordingStep = KYCScreenType.businessDocVerificationScreen(CommonFunctions.sharedInstance.selectedBusinessType).screenCodes
+//        updateKycStatusAPICall { [weak self] _ in
+//            self?.stopActivityIndicator()
+//            DispatchQueue.main.async {
                 let vc = UploadBusinessDocumentViewController.instantiate()
-                self?.navigationController?.pushViewController(vc, animated: true)
-            }
-        }
+                self.navigationController?.pushViewController(vc, animated: true)
+//            }
+//        }
     }
     
     // MARK: - Actions
diff --git a/OpenBook/OpenBook/Scenes/Tab/More/KYC/Business Verification/View/MultipleDocumentsUploadViewController.swift b/OpenBook/OpenBook/Scenes/Tab/More/KYC/Business Verification/View/MultipleDocumentsUploadViewController.swift
new file mode 100644
index 00000000..1e9b3ad7
--- /dev/null
+++ b/OpenBook/OpenBook/Scenes/Tab/More/KYC/Business Verification/View/MultipleDocumentsUploadViewController.swift	
@@ -0,0 +1,170 @@
+//
+//  MultipleDocumentsUploadViewController.swift
+//  OpenBook
+//
+//  Created by Pallavi Anant Dipke on 29/11/21.
+//  Copyright © 2021 Open Digi Technologies Pvt Ltd. All rights reserved.
+//
+
+import UIKit
+enum DocumentUploadId {
+    case doc1
+    case doc2
+}
+class MultipleDocumentsUploadViewController: BaseViewController, StoryboardSceneBased {
+    static let sceneStoryboard = UIStoryboard(name: Constants.Storyboard.kyc, bundle: nil)
+    
+    // MARK: - IBOutlets
+    @IBOutlet private weak var panUploadButton: UIButton!
+    @IBOutlet private weak var panImageView: UIImageView!
+    @IBOutlet private weak var wrongDocumentView: UIView!
+    @IBOutlet private weak var proceedButton: BorderButton!
+    @IBOutlet private weak var tableView: UITableView!
+    @IBOutlet private weak var tableViewHeight: NSLayoutConstraint!
+    @IBOutlet private weak var itemsCountLabel: UILabel!
+    @IBOutlet private weak var imageLabel: UILabel!
+    
+    
+    // MARK: - Properties
+    private var docId: [Int]? = []
+    private var docImage: [String] = []
+    private var imagePicker: ImagePicker!
+    let viewModel: UploadBusinessDocumentViewModel = UploadBusinessDocumentViewModel()
+    var titleName: String?
+    var docType: DocumentUploadId = .doc1
+    var dismissView: (() -> Void)?
+    // MARK: - View life cycle methods
+    override func viewDidLoad() {
+        super.viewDidLoad()
+        initialSetUp()
+    }
+    
+    // MARK: - Methods
+    private func initialSetUp() {
+        setUpNavigationItem(title: titleName ?? "", left: .back)
+        tableViewHeight.constant = CGFloat((docId?.count ?? 0) * 76)
+        itemsCountLabel.text = "\(docId?.count ?? 0)  \(Strings.textItems.localized)"
+        
+        startScreen(screenName: ScreenNamesConstants.uploadPanScreen)
+        itemsCountLabel.isHidden = true
+        imageLabel.text = Strings.textUploadPanFrontCard.localized
+        proceedButton.isEnabled = false
+        imagePicker = ImagePicker(presentationController: self, delegate: self)
+        viewModel.addressProofArray = [ProfileManager.shared.businessProfileData?.data?.businessDocumentDetails?.documentType2 ?? 0, ProfileManager.shared.businessProfileData?.data?.businessDocumentDetails?.documentType1 ?? 0]
+    }
+    
+    
+    // MARK: - EVENT LOGGER
+    private func logEvent(typeSelection: String, eventName: String) {
+        var properties: AnalyticsProperties?
+        properties = AnalyticsProperties(screenName: EventConstants.uploadPanCard, typeOfUpload: typeSelection)
+        
+        TriggerEvent.shared.triggerEvent(eventName: eventName, properties: properties)
+    }
+    
+    // MARK: - Button Actions
+    fileprivate func openCamera(_ sender: UIButton) {
+        imagePicker.present(from: sender)
+    }
+    
+    @IBAction func panUploadAction(_ sender: UIButton) {
+        openCamera(sender)
+    }
+    
+    @IBAction func proceedAction(_ sender: UIButton) {
+        //        viewModel.uploadDocData(addId: addId, fileId: docId) { [weak self] (response) in
+        //            if let resp = response, resp.isSuccess ?? false {
+        dismissView?()
+        //            }
+        //        }
+    }
+}
+
+// MARK: - ImagePickerDelegate
+extension MultipleDocumentsUploadViewController: ImagePickerProtocol {
+    func didSelect(_ image: UIImage?) {
+        var addressProofId = 0
+        if image != nil {
+            var docImages: [UIImage] = []
+            if viewModel.docImages.isEmpty {
+                docImages.append(image!)
+                viewModel.docImages = [docType: docImages]
+            } else {
+                docImages = viewModel.docImages[docType]!
+                docImages.append(image!)
+                viewModel.docImages.updateValue(docImages, forKey: docType)
+            }
+            print(viewModel.docImages)
+            if docType == .doc1 {
+                addressProofId = viewModel.addressProofArray.first ?? 0
+            } else {
+                addressProofId = viewModel.addressProofArray.last ?? 0
+            }
+            logEvent(typeSelection: imagePicker.typeSelction, eventName: EventConstants.cleverTapAlernateBusinessProofUploadedEvent)
+            viewModel.uploadAddressProofImage(image: image ?? UIImage(), addressproofId: addressProofId) { [weak self] response in
+                if let resp = response, resp.isSuccess ?? false {
+                    self?.docId?.append(resp.result?.data?.id ?? 0)
+                    self?.docImage.append(resp.result?.data?.url ?? "")
+                    self?.itemsCountLabel.text = "\(self?.docId?.count ?? 0)  \(Strings.textItems.localized)"
+                    self?.tableViewHeight.constant = CGFloat((self?.docId?.count ?? 0) * 76)
+                    self?.proceedButton.isEnabled = true
+                    self?.tableView.reloadData()
+                }
+            }
+        }
+    }
+}
+
+// MARK: - TableView methods
+extension MultipleDocumentsUploadViewController: UITableViewDelegate, UITableViewDataSource {
+    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
+        return docId?.count ?? 0
+    }
+    
+    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
+        let cell = tableView.dequeueReusableCell(for: indexPath) as DocumentUploadTableViewCell
+        cell.delegate = self
+        cell.id = docId?.getElement(at: indexPath.row)
+        cell.updateImageUI(image: viewModel.docImages[docType]?.getElement(at: indexPath.row), docName: "Document \(indexPath.row)", size: "", tag: indexPath.row)
+        return cell
+    }
+}
+
+// MARK: - DocumentUploadTableViewCellDelegate
+extension MultipleDocumentsUploadViewController: DocumentUploadTableViewCellProtocol {
+    func didTapOnViewDoc(index: Int) {
+        let deckVC = DeckPresenterViewController.instanceFromNib()
+        let viewDocImageView = ViewUploadedImageViewController.instantiate()
+        viewDocImageView.docImage = viewModel.docImages[docType]?[index]
+        viewDocImageView.title = "Document \(index)"
+        let popupRequiredHeight = 400
+        viewDocImageView.dismiss = { [weak self] in
+            self?.dismiss(animated: true, completion: nil)
+        }
+        deckVC.containerView.addSubview(viewDocImageView.view, toView: deckVC.containerView)
+        deckVC.initialHeight = CGFloat(hasTopNotch ? popupRequiredHeight + 32 : popupRequiredHeight)
+        deckVC.isSticky = true
+        guard navigationController?.presentedViewController != deckVC else {
+            return
+        }
+        present(deckVC, animated: true, completion: nil)
+    }
+    
+    func didTapOnDeleteDoc(_ id: Int?, index: Int) {
+        viewModel.deleteDoc(fileId: id) { [weak self] response in
+            if response.isSuccess ?? false {
+                self?.docId?.remove(at: index)
+                self?.docImage.remove(at: index)
+                self?.tableViewHeight.constant = CGFloat((self?.docId?.count ?? 0) * 76)
+                if self?.docId?.count == 0 {
+                    self?.proceedButton.isEnabled = false
+                }
+                self?.tableView.reloadData()
+                self?.itemsCountLabel.text = "\(self?.docId?.count ?? 0)  \(Strings.textItems.localized)"
+            } else {
+                CustomAlertController.showAlertWith(subTitle: response.result?.message ?? Strings.errorSomethingElseWentWrong.localized, theme: .error)
+            }
+        }
+    }
+}
+
diff --git a/OpenBook/OpenBook/Scenes/Tab/More/KYC/Business Verification/View/SelectDocUploadImagesTableViewCell.swift b/OpenBook/OpenBook/Scenes/Tab/More/KYC/Business Verification/View/SelectDocUploadImagesTableViewCell.swift
new file mode 100644
index 00000000..056e39a4
--- /dev/null
+++ b/OpenBook/OpenBook/Scenes/Tab/More/KYC/Business Verification/View/SelectDocUploadImagesTableViewCell.swift	
@@ -0,0 +1,48 @@
+//
+//  SelectDocUploadImagesTableViewCell.swift
+//  OpenBook
+//
+//  Created by Pallavi Anant Dipke on 29/11/21.
+//  Copyright © 2021 Open Digi Technologies Pvt Ltd. All rights reserved.
+//
+
+import UIKit
+
+class SelectDocUploadImagesTableViewCell: UITableViewCell, NibReusable {
+    // MARK: - IBOutlets
+    @IBOutlet private weak var uploadImageKeyLabel: UILabel!
+    @IBOutlet private weak var sidesKeyLabel: UILabel!
+    @IBOutlet private weak var cameraImage: UIImageView!
+    @IBOutlet private weak var documentImage: UIImageView!
+    @IBOutlet private weak var documentValueLabel: UILabel!
+    @IBOutlet private weak var selectionButtonView: UIView!
+    @IBOutlet private weak var rectangularImageView: UIView!
+    @IBOutlet weak var headerViewHeightConst: NSLayoutConstraint!
+    
+    // MARK: - Properties
+    var clickOnSelectImage: (() -> Void)?
+    
+    // MARK: - View life cycle methods
+    override func awakeFromNib() {
+        super.awakeFromNib()
+    }
+    
+    // MARK: - Methods
+    func setupData(sideLabelTxt: String, documentText: String = "", image: UIImage?, shouldHideHeader: Bool = false, hideSelectioView: Bool = false) {
+            uploadImageKeyLabel.text = documentText.isEmpty ? Strings.textUploadHighResolutionImages.localized : sideLabelTxt
+            sidesKeyLabel.text = sideLabelTxt
+            headerViewHeightConst.constant = shouldHideHeader ? 0 : 30
+            documentValueLabel.text = "  \(documentText)  "
+            documentValueLabel.isHidden = documentText.isEmpty
+            if let img = image {
+                documentImage.image = img
+            }
+            rectangularImageView.isHidden = !hideSelectioView
+            selectionButtonView.isHidden = hideSelectioView
+    }
+    
+    // MARK: - Button Actions
+    @IBAction func uploadImageAction(_ sender: UIButton) {
+        clickOnSelectImage?()
+    }
+}
diff --git a/OpenBook/OpenBook/Scenes/Tab/More/KYC/Business Verification/View/SelectDocUploadImagesTableViewCell.xib b/OpenBook/OpenBook/Scenes/Tab/More/KYC/Business Verification/View/SelectDocUploadImagesTableViewCell.xib
new file mode 100644
index 00000000..f2773778
--- /dev/null
+++ b/OpenBook/OpenBook/Scenes/Tab/More/KYC/Business Verification/View/SelectDocUploadImagesTableViewCell.xib	
@@ -0,0 +1,211 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="17701" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" useTraitCollections="YES" useSafeAreas="YES" colorMatched="YES">
+    <device id="retina6_1" orientation="portrait" appearance="light"/>
+    <dependencies>
+        <deployment identifier="iOS"/>
+        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="17703"/>
+        <capability name="Safe area layout guides" minToolsVersion="9.0"/>
+        <capability name="System colors in document resources" minToolsVersion="11.0"/>
+        <capability name="documents saved in the Xcode 8 format" minToolsVersion="8.0"/>
+    </dependencies>
+    <customFonts key="customFonts">
+        <array key="montserrat_medium.ttf">
+            <string>Montserrat-Medium</string>
+        </array>
+    </customFonts>
+    <objects>
+        <placeholder placeholderIdentifier="IBFilesOwner" id="-1" userLabel="File's Owner"/>
+        <placeholder placeholderIdentifier="IBFirstResponder" id="-2" customClass="UIResponder"/>
+        <tableViewCell contentMode="scaleToFill" selectionStyle="default" indentationWidth="10" reuseIdentifier="SelectDocUploadImagesTableViewCell" rowHeight="469" id="4Wb-bF-k5j" customClass="SelectDocUploadImagesTableViewCell" customModule="OpenBook" customModuleProvider="target">
+            <rect key="frame" x="0.0" y="0.0" width="490" height="480"/>
+            <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
+            <tableViewCellContentView key="contentView" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" tableViewCell="4Wb-bF-k5j" id="CXO-io-8zj">
+                <rect key="frame" x="0.0" y="0.0" width="490" height="480"/>
+                <autoresizingMask key="autoresizingMask"/>
+                <subviews>
+                    <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="grM-Fb-8Ay">
+                        <rect key="frame" x="0.0" y="0.0" width="490" height="471.5"/>
+                        <subviews>
+                            <stackView opaque="NO" contentMode="scaleToFill" axis="vertical" spacing="20" translatesAutoresizingMaskIntoConstraints="NO" id="IjK-Xz-LG4">
+                                <rect key="frame" x="16" y="12" width="458" height="451.5"/>
+                                <subviews>
+                                    <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="bbC-dO-CY2">
+                                        <rect key="frame" x="0.0" y="0.0" width="458" height="30"/>
+                                        <subviews>
+                                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Front Side" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="FTF-X5-f6i">
+                                                <rect key="frame" x="0.0" y="0.0" width="72" height="30"/>
+                                                <fontDescription key="fontDescription" name="Montserrat-Medium" family="Montserrat" pointSize="14"/>
+                                                <nil key="textColor"/>
+                                                <nil key="highlightedColor"/>
+                                            </label>
+                                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Front Side" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="Pgt-NH-QHg">
+                                                <rect key="frame" x="82" y="0.0" width="51.5" height="30"/>
+                                                <color key="backgroundColor" red="0.0" green="0.71764705880000002" blue="0.83529411760000005" alpha="0.10000000000000001" colorSpace="custom" customColorSpace="calibratedRGB"/>
+                                                <fontDescription key="fontDescription" name="Montserrat-Medium" family="Montserrat" pointSize="10"/>
+                                                <color key="textColor" red="0.0" green="0.71764705880000002" blue="0.83529411760000005" alpha="1" colorSpace="calibratedRGB"/>
+                                                <nil key="highlightedColor"/>
+                                                <userDefinedRuntimeAttributes>
+                                                    <userDefinedRuntimeAttribute type="number" keyPath="cornerRadius">
+                                                        <real key="value" value="4"/>
+                                                    </userDefinedRuntimeAttribute>
+                                                </userDefinedRuntimeAttributes>
+                                            </label>
+                                        </subviews>
+                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
+                                        <constraints>
+                                            <constraint firstAttribute="height" constant="30" id="653-le-OQS"/>
+                                            <constraint firstAttribute="bottom" secondItem="FTF-X5-f6i" secondAttribute="bottom" id="DBL-DV-QsR"/>
+                                            <constraint firstAttribute="trailing" relation="greaterThanOrEqual" secondItem="Pgt-NH-QHg" secondAttribute="trailing" constant="10" id="Er0-jW-uIa"/>
+                                            <constraint firstItem="FTF-X5-f6i" firstAttribute="top" secondItem="bbC-dO-CY2" secondAttribute="top" id="KDu-Mh-5eb"/>
+                                            <constraint firstItem="FTF-X5-f6i" firstAttribute="leading" secondItem="bbC-dO-CY2" secondAttribute="leading" id="SdF-QF-rAm"/>
+                                            <constraint firstAttribute="bottom" secondItem="Pgt-NH-QHg" secondAttribute="bottom" id="YJf-Kb-6qo"/>
+                                            <constraint firstItem="Pgt-NH-QHg" firstAttribute="leading" secondItem="FTF-X5-f6i" secondAttribute="trailing" constant="10" id="rOB-fc-PlK"/>
+                                            <constraint firstItem="Pgt-NH-QHg" firstAttribute="top" secondItem="bbC-dO-CY2" secondAttribute="top" id="zlY-Dz-o1B"/>
+                                        </constraints>
+                                    </view>
+                                    <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="BYp-hO-cZr" customClass="RectangularDashedView" customModule="OpenBook" customModuleProvider="target">
+                                        <rect key="frame" x="0.0" y="50" width="458" height="257.5"/>
+                                        <subviews>
+                                            <imageView clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" image="ic_camera" translatesAutoresizingMaskIntoConstraints="NO" id="khq-Fh-gPQ">
+                                                <rect key="frame" x="217" y="108" width="24" height="24"/>
+                                                <constraints>
+                                                    <constraint firstAttribute="height" constant="24" id="Juj-At-a1L"/>
+                                                    <constraint firstAttribute="width" constant="24" id="pEI-Ba-sRE"/>
+                                                </constraints>
+                                                <userDefinedRuntimeAttributes>
+                                                    <userDefinedRuntimeAttribute type="number" keyPath="cornerRadius">
+                                                        <real key="value" value="8"/>
+                                                    </userDefinedRuntimeAttribute>
+                                                </userDefinedRuntimeAttributes>
+                                            </imageView>
+                                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Upload high resolution images" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="wKb-uu-Ggf">
+                                                <rect key="frame" x="152" y="136" width="154" height="12.5"/>
+                                                <fontDescription key="fontDescription" name="Montserrat-Medium" family="Montserrat" pointSize="10"/>
+                                                <color key="textColor" red="0.1333333333" green="0.1333333333" blue="0.1333333333" alpha="0.80441241200000002" colorSpace="custom" customColorSpace="displayP3"/>
+                                                <nil key="highlightedColor"/>
+                                            </label>
+                                            <imageView clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleAspectFill" horizontalHuggingPriority="251" verticalHuggingPriority="251" translatesAutoresizingMaskIntoConstraints="NO" id="NmO-Ca-fdG">
+                                                <rect key="frame" x="8" y="8" width="442" height="241.5"/>
+                                            </imageView>
+                                        </subviews>
+                                        <color key="backgroundColor" red="0.96078431369999995" green="0.96862745100000003" blue="0.98431372549999996" alpha="1" colorSpace="custom" customColorSpace="displayP3"/>
+                                        <constraints>
+                                            <constraint firstItem="khq-Fh-gPQ" firstAttribute="centerX" secondItem="BYp-hO-cZr" secondAttribute="centerX" id="1rJ-Yj-pVR"/>
+                                            <constraint firstItem="wKb-uu-Ggf" firstAttribute="centerX" secondItem="khq-Fh-gPQ" secondAttribute="centerX" id="4Fa-JR-DT4"/>
+                                            <constraint firstItem="NmO-Ca-fdG" firstAttribute="top" secondItem="BYp-hO-cZr" secondAttribute="top" constant="8" id="Bzi-Jt-B7w"/>
+                                            <constraint firstItem="wKb-uu-Ggf" firstAttribute="top" secondItem="khq-Fh-gPQ" secondAttribute="bottom" constant="4" id="DDp-Oz-hYu"/>
+                                            <constraint firstAttribute="width" secondItem="BYp-hO-cZr" secondAttribute="height" multiplier="16:9" id="L3w-kx-SVA"/>
+                                            <constraint firstItem="NmO-Ca-fdG" firstAttribute="leading" secondItem="BYp-hO-cZr" secondAttribute="leading" constant="8" id="NBK-0f-sjf"/>
+                                            <constraint firstItem="khq-Fh-gPQ" firstAttribute="centerY" secondItem="BYp-hO-cZr" secondAttribute="centerY" constant="-9" id="TYD-LS-ysE"/>
+                                            <constraint firstAttribute="bottom" secondItem="NmO-Ca-fdG" secondAttribute="bottom" constant="8" id="sZm-79-ui0"/>
+                                            <constraint firstAttribute="trailing" secondItem="NmO-Ca-fdG" secondAttribute="trailing" constant="8" id="yiB-Zq-rGj"/>
+                                        </constraints>
+                                        <userDefinedRuntimeAttributes>
+                                            <userDefinedRuntimeAttribute type="number" keyPath="cornerRadius">
+                                                <real key="value" value="8"/>
+                                            </userDefinedRuntimeAttribute>
+                                            <userDefinedRuntimeAttribute type="number" keyPath="dashWidth">
+                                                <real key="value" value="1"/>
+                                            </userDefinedRuntimeAttribute>
+                                            <userDefinedRuntimeAttribute type="color" keyPath="dashColor">
+                                                <color key="value" red="0.4941176471" green="0.4941176471" blue="0.4941176471" alpha="1" colorSpace="custom" customColorSpace="displayP3"/>
+                                            </userDefinedRuntimeAttribute>
+                                            <userDefinedRuntimeAttribute type="number" keyPath="dashLength">
+                                                <real key="value" value="15"/>
+                                            </userDefinedRuntimeAttribute>
+                                            <userDefinedRuntimeAttribute type="number" keyPath="betweenDashesSpace">
+                                                <real key="value" value="15"/>
+                                            </userDefinedRuntimeAttribute>
+                                        </userDefinedRuntimeAttributes>
+                                    </view>
+                                    <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="qkZ-Wm-fJm" customClass="RectangularDashedView" customModule="OpenBook" customModuleProvider="target">
+                                        <rect key="frame" x="0.0" y="327.5" width="458" height="124"/>
+                                        <subviews>
+                                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Upload high resolution images" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="ANo-E4-JEN">
+                                                <rect key="frame" x="152" y="52" width="154" height="20"/>
+                                                <constraints>
+                                                    <constraint firstAttribute="height" constant="20" id="K4p-kP-xeC"/>
+                                                </constraints>
+                                                <fontDescription key="fontDescription" name="Montserrat-Medium" family="Montserrat" pointSize="10"/>
+                                                <color key="textColor" red="0.1333333333" green="0.1333333333" blue="0.1333333333" alpha="0.80441241200000002" colorSpace="custom" customColorSpace="displayP3"/>
+                                                <nil key="highlightedColor"/>
+                                            </label>
+                                            <button opaque="NO" contentMode="scaleAspectFit" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="Cxc-fS-L6A">
+                                                <rect key="frame" x="0.0" y="0.0" width="458" height="124"/>
+                                                <color key="tintColor" white="0.0" alpha="0.0" colorSpace="custom" customColorSpace="genericGamma22GrayColorSpace"/>
+                                                <connections>
+                                                    <action selector="uploadImageAction:" destination="4Wb-bF-k5j" eventType="touchUpInside" id="J7W-0s-VdT"/>
+                                                </connections>
+                                            </button>
+                                        </subviews>
+                                        <color key="backgroundColor" red="0.96078431369999995" green="0.96862745100000003" blue="0.98431372549999996" alpha="1" colorSpace="custom" customColorSpace="displayP3"/>
+                                        <constraints>
+                                            <constraint firstItem="ANo-E4-JEN" firstAttribute="centerY" secondItem="qkZ-Wm-fJm" secondAttribute="centerY" id="39S-fm-h20"/>
+                                            <constraint firstAttribute="width" secondItem="qkZ-Wm-fJm" secondAttribute="height" multiplier="229:62" id="8Gt-uC-MRe"/>
+                                            <constraint firstItem="ANo-E4-JEN" firstAttribute="centerX" secondItem="qkZ-Wm-fJm" secondAttribute="centerX" id="Udt-6J-6g6"/>
+                                            <constraint firstAttribute="trailing" secondItem="Cxc-fS-L6A" secondAttribute="trailing" id="WLk-eW-QDp"/>
+                                            <constraint firstItem="Cxc-fS-L6A" firstAttribute="top" secondItem="qkZ-Wm-fJm" secondAttribute="top" id="egY-xq-RHg"/>
+                                            <constraint firstAttribute="bottom" secondItem="Cxc-fS-L6A" secondAttribute="bottom" id="l5j-v1-SLw"/>
+                                            <constraint firstItem="Cxc-fS-L6A" firstAttribute="leading" secondItem="qkZ-Wm-fJm" secondAttribute="leading" id="tnQ-AN-gtD"/>
+                                        </constraints>
+                                        <userDefinedRuntimeAttributes>
+                                            <userDefinedRuntimeAttribute type="number" keyPath="cornerRadius">
+                                                <real key="value" value="8"/>
+                                            </userDefinedRuntimeAttribute>
+                                            <userDefinedRuntimeAttribute type="number" keyPath="dashWidth">
+                                                <real key="value" value="1"/>
+                                            </userDefinedRuntimeAttribute>
+                                            <userDefinedRuntimeAttribute type="color" keyPath="dashColor">
+                                                <color key="value" red="0.4941176471" green="0.4941176471" blue="0.4941176471" alpha="1" colorSpace="custom" customColorSpace="displayP3"/>
+                                            </userDefinedRuntimeAttribute>
+                                            <userDefinedRuntimeAttribute type="number" keyPath="dashLength">
+                                                <real key="value" value="15"/>
+                                            </userDefinedRuntimeAttribute>
+                                            <userDefinedRuntimeAttribute type="number" keyPath="betweenDashesSpace">
+                                                <real key="value" value="15"/>
+                                            </userDefinedRuntimeAttribute>
+                                        </userDefinedRuntimeAttributes>
+                                    </view>
+                                </subviews>
+                                <constraints>
+                                    <constraint firstItem="BYp-hO-cZr" firstAttribute="width" secondItem="IjK-Xz-LG4" secondAttribute="width" id="lRz-um-Fsq"/>
+                                </constraints>
+                            </stackView>
+                        </subviews>
+                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
+                        <constraints>
+                            <constraint firstAttribute="bottom" secondItem="IjK-Xz-LG4" secondAttribute="bottom" constant="8" id="6TP-Ze-kQG"/>
+                            <constraint firstItem="IjK-Xz-LG4" firstAttribute="leading" secondItem="grM-Fb-8Ay" secondAttribute="leading" constant="16" id="Bv8-lc-JbO"/>
+                            <constraint firstAttribute="trailing" secondItem="IjK-Xz-LG4" secondAttribute="trailing" constant="16" id="s0Z-G4-cjl"/>
+                            <constraint firstItem="IjK-Xz-LG4" firstAttribute="top" secondItem="grM-Fb-8Ay" secondAttribute="top" constant="12" id="wGX-Mg-SIX"/>
+                        </constraints>
+                    </view>
+                </subviews>
+                <constraints>
+                    <constraint firstItem="grM-Fb-8Ay" firstAttribute="leading" secondItem="CXO-io-8zj" secondAttribute="leading" id="3H3-w9-vvX"/>
+                    <constraint firstAttribute="bottom" secondItem="grM-Fb-8Ay" secondAttribute="bottom" constant="8" id="Mgc-pu-oTz"/>
+                    <constraint firstItem="grM-Fb-8Ay" firstAttribute="top" secondItem="CXO-io-8zj" secondAttribute="top" id="SIK-56-bo9"/>
+                    <constraint firstAttribute="trailing" secondItem="grM-Fb-8Ay" secondAttribute="trailing" id="wQq-d9-KRb"/>
+                </constraints>
+            </tableViewCellContentView>
+            <viewLayoutGuide key="safeArea" id="IaX-oq-hYy"/>
+            <connections>
+                <outlet property="cameraImage" destination="khq-Fh-gPQ" id="206-ak-zBY"/>
+                <outlet property="documentImage" destination="NmO-Ca-fdG" id="wSE-FN-out"/>
+                <outlet property="documentValueLabel" destination="Pgt-NH-QHg" id="8OL-Wi-t5s"/>
+                <outlet property="headerViewHeightConst" destination="653-le-OQS" id="Zzp-hV-gES"/>
+                <outlet property="rectangularImageView" destination="BYp-hO-cZr" id="EO4-5Y-jgO"/>
+                <outlet property="selectionButtonView" destination="qkZ-Wm-fJm" id="i1n-AI-Hom"/>
+                <outlet property="sidesKeyLabel" destination="FTF-X5-f6i" id="3BY-5h-RZs"/>
+                <outlet property="uploadImageKeyLabel" destination="wKb-uu-Ggf" id="BBe-xG-b32"/>
+            </connections>
+            <point key="canvasLocation" x="-15.942028985507248" y="-7.3660714285714279"/>
+        </tableViewCell>
+    </objects>
+    <resources>
+        <image name="ic_camera" width="24" height="24"/>
+        <systemColor name="systemBackgroundColor">
+            <color white="1" alpha="1" colorSpace="custom" customColorSpace="genericGamma22GrayColorSpace"/>
+        </systemColor>
+    </resources>
+</document>
diff --git a/OpenBook/OpenBook/Scenes/Tab/More/KYC/KYC Revamp/OfflineAadharViewController.swift b/OpenBook/OpenBook/Scenes/Tab/More/KYC/KYC Revamp/OfflineAadharViewController.swift
index c52bd3f8..3e12b276 100644
--- a/OpenBook/OpenBook/Scenes/Tab/More/KYC/KYC Revamp/OfflineAadharViewController.swift	
+++ b/OpenBook/OpenBook/Scenes/Tab/More/KYC/KYC Revamp/OfflineAadharViewController.swift	
@@ -133,12 +133,12 @@ extension OfflineAadharViewController: UITableViewDelegate, UITableViewDataSourc
             return cell
         case 1:
             cell.setupData(sideLabelTxt: "Front side", image: pickedFrontImage)
-            cell.imagePicked = { [weak self] in
+            cell.clickOnSelectImage = { [weak self] in
                 self?.presentImagePicker(tag: indexPath.row)
             }
         case 2:
             cell.setupData(sideLabelTxt: "Back side", image: pickedBackImage)
-            cell.imagePicked = { [weak self] in
+            cell.clickOnSelectImage = { [weak self] in
                 self?.presentImagePicker(tag: indexPath.row)
             }
         default:
diff --git a/OpenBook/OpenBook/Scenes/Tab/More/KYC/Pan KYC/View Model/PanKYCViewModel.swift b/OpenBook/OpenBook/Scenes/Tab/More/KYC/Pan KYC/View Model/PanKYCViewModel.swift
index bf57faf9..7e003b69 100644
--- a/OpenBook/OpenBook/Scenes/Tab/More/KYC/Pan KYC/View Model/PanKYCViewModel.swift	
+++ b/OpenBook/OpenBook/Scenes/Tab/More/KYC/Pan KYC/View Model/PanKYCViewModel.swift	
@@ -11,6 +11,7 @@ import Foundation
 class PanKYCViewModel {
     var panId: Int? = 0
     var url: String? = ""
+    var docImages: [DocumentUploadId: [UIImage]] = [:]
     var panDetails: PanKycAutoReadResponse?
     // MARK: - Methods
     let userData = ProfileManager.shared.userData
diff --git a/OpenBook/OpenBook/Scenes/Tab/More/KYC/Pan KYC/View/DocumentUploadTableViewCell.swift b/OpenBook/OpenBook/Scenes/Tab/More/KYC/Pan KYC/View/DocumentUploadTableViewCell.swift
index e8e6c7e6..40979494 100644
--- a/OpenBook/OpenBook/Scenes/Tab/More/KYC/Pan KYC/View/DocumentUploadTableViewCell.swift	
+++ b/OpenBook/OpenBook/Scenes/Tab/More/KYC/Pan KYC/View/DocumentUploadTableViewCell.swift	
@@ -11,6 +11,7 @@ import UIKit
 // MARK: - DocumentUploadTableViewCellProtocol
 protocol DocumentUploadTableViewCellProtocol: AnyObject {
     func didTapOnDeleteDoc(_ id: Int?, index: Int)
+    func didTapOnViewDoc(index: Int)
 }
 
 class DocumentUploadTableViewCell: UITableViewCell, Reusable {
@@ -33,6 +34,7 @@ class DocumentUploadTableViewCell: UITableViewCell, Reusable {
     func updateUI(image: String, docName: String, size: String, tag: Int) {
         docNameLabel.text = docName
         deleteButton.tag = tag
+        documentImageView.tag = tag
         documentImageView.sd_setImage(with: URL(string: image)) { [weak self] (image, error, _, _) in
             if error != nil {
                 self?.documentImageView?.image = #imageLiteral(resourceName: "ic_user1")
@@ -42,6 +44,24 @@ class DocumentUploadTableViewCell: UITableViewCell, Reusable {
         }
     }
     
+    func updateImageUI(image: UIImage?, docName: String, size: String, tag: Int) {
+        docNameLabel.text = docName
+        deleteButton.tag = tag
+        documentImageView.tag = tag
+        if image != nil {
+            documentImageView?.image = image
+        }
+        documentImageView.isUserInteractionEnabled = true
+        let tapgesture = UITapGestureRecognizer(target: self, action: #selector(tappedOnLabel(_ :)))
+        tapgesture.numberOfTapsRequired = 1
+        documentImageView.addGestureRecognizer(tapgesture)
+    }
+    
+    // MARK: - Methods
+    @objc func tappedOnLabel(_ gesture: UITapGestureRecognizer) {
+        delegate?.didTapOnViewDoc(index: documentImageView.tag)
+    }
+    
     // MARK: - Button Actions
     @IBAction func deleteAction(_ sender: UIButton) {
         delegate?.didTapOnDeleteDoc(id, index: sender.tag)
diff --git a/OpenBook/OpenBook/Scenes/Tab/More/KYC/Pan KYC/View/PanKYCViewController.swift b/OpenBook/OpenBook/Scenes/Tab/More/KYC/Pan KYC/View/PanKYCViewController.swift
index 876e4eb5..a914191c 100644
--- a/OpenBook/OpenBook/Scenes/Tab/More/KYC/Pan KYC/View/PanKYCViewController.swift	
+++ b/OpenBook/OpenBook/Scenes/Tab/More/KYC/Pan KYC/View/PanKYCViewController.swift	
@@ -248,6 +248,8 @@ extension PanKYCViewController: DocumentUploadTableViewCellProtocol {
             }
         }
     }
+    
+    func didTapOnViewDoc(index: Int) {}
 }
 
 extension PanKYCViewController: UITextFieldDelegate {
diff --git a/OpenBook/OpenBook/Scenes/Tab/More/KYC/Upload Business Document/View Model/UploadBusinessDocumentViewModel.swift b/OpenBook/OpenBook/Scenes/Tab/More/KYC/Upload Business Document/View Model/UploadBusinessDocumentViewModel.swift
index dd8ab9dd..67b9f4bb 100644
--- a/OpenBook/OpenBook/Scenes/Tab/More/KYC/Upload Business Document/View Model/UploadBusinessDocumentViewModel.swift	
+++ b/OpenBook/OpenBook/Scenes/Tab/More/KYC/Upload Business Document/View Model/UploadBusinessDocumentViewModel.swift	
@@ -14,7 +14,9 @@ class UploadBusinessDocumentViewModel {
     var updateLoadingStatus:((_ isLoaing: Bool) -> Void)?
     var businessFileUploadRequest = BusinessFileUploadRequest()
     var documentTypes = [DocumentTypeResponse]()
-
+    var docImages: [DocumentUploadId: [UIImage]] = [:]
+    var docId: [Int]? = []
+    var addressProofArray: [Int] = []
     // MARK: - Methods
     func getDocumentTypeList(completionHandler: @escaping (Bool) -> Void) {
         if let url = Bundle.main.url(forResource: JSONFileName.documentType, withExtension: JSONFileName.jsonExtension) {
@@ -32,7 +34,7 @@ class UploadBusinessDocumentViewModel {
         let item = documentTypes.filter({ $0.addressProofsTypesId == id })
         return item.first
     }
-
+    
     func getBusinessProfileDetails(apiResponse: @escaping (Bool, BusinessProfileUpdateResponse?) -> Void) {
         guard let data = ProfileManager.shared.userData else {
             return
@@ -76,6 +78,23 @@ class UploadBusinessDocumentViewModel {
         }
     }
     
+    func deleteDoc(fileId: Int?, apiResponse: @escaping (_ response: ApiResponseModel<DeleteDocResponse?>) -> Void) {
+        if let fileID = fileId {
+            let url = CommonFunctions.sharedInstance.getUrlByAppendingBaseUrl(ApiEndPoints.deleteBusinessProof + "\(fileId ?? 0)")
+            
+            BaseServiceClass.sharedInstance.connect(url: url, httpMethod: .delete, headers: ApiHeaders.sharedInstance.header()) { (response) in
+                let responseDict = response.result as! [String: Any]
+                let modelObj = CommonFunctions.sharedInstance.convertJsonObjectToModel(responseDict, modelType: DeleteDocResponse.self)
+                if response.isSuccess ?? false {
+                    let data = ApiResponseModel(error: nil, result: modelObj, isSuccess: true)
+                    apiResponse(data)
+                } else {
+                    CustomAlertController.showAlertWith(subTitle: modelObj?.message ?? Strings.errorSomethingElseWentWrong.localized, theme: .error)
+                }
+            }
+        }
+    }
+    
     func uploadBusinessDocument(completion: @escaping (Bool) -> Void) {
         guard let data = ProfileManager.shared.userData else {
             return
diff --git a/OpenBook/OpenBook/Scenes/Tab/More/KYC/Upload Business Document/View/UploadBusinessDocumentViewController.swift b/OpenBook/OpenBook/Scenes/Tab/More/KYC/Upload Business Document/View/UploadBusinessDocumentViewController.swift
index a011134c..6326f755 100644
--- a/OpenBook/OpenBook/Scenes/Tab/More/KYC/Upload Business Document/View/UploadBusinessDocumentViewController.swift	
+++ b/OpenBook/OpenBook/Scenes/Tab/More/KYC/Upload Business Document/View/UploadBusinessDocumentViewController.swift	
@@ -23,15 +23,12 @@ class UploadBusinessDocumentViewController: BaseViewController, StoryboardSceneB
     
     // MARK: - Properties
     private var imagePicker: ImagePicker!
-    private var document1: UIImage?
-    private var document2: UIImage?
     let viewModel: UploadBusinessDocumentViewModel = UploadBusinessDocumentViewModel()
     private var moreViewModel = MoreViewModel()
     var selectedIndex = 0
-    var documentsUploaded = false
     private lazy var deckVC = DeckPresenterViewController.instanceFromNib()
-
-  // MARK: - View life cycle methods
+    var docType: DocumentUploadId = .doc1
+    // MARK: - View life cycle methods
     override func viewDidLoad() {
         super.viewDidLoad()
         initialSetUp()
@@ -43,7 +40,6 @@ class UploadBusinessDocumentViewController: BaseViewController, StoryboardSceneB
         tableView.dataSource = self
         setUpNavigationItem(title: "Business Verification", subtitle: nil, left: nil, primaryRight: .help)
         registerCells()
-        imagePicker = ImagePicker(presentationController: self, delegate: self)
         viewModel.updateLoadingStatus = { status in
             DispatchQueue.main.async {
                 status ? self.showActivityIndicator() : self.stopActivityIndicator()
@@ -66,7 +62,7 @@ class UploadBusinessDocumentViewController: BaseViewController, StoryboardSceneB
     
     private func registerCells() {
         tableView.register(cellType: KYCProgressIndicatorTableViewCell.self)
-        tableView.register(cellType: AadharImagesTableViewCell.self)
+        tableView.register(cellType: SelectDocUploadImagesTableViewCell.self)
     }
     
     private func presentImagePicker(tag: Int?) {
@@ -87,41 +83,76 @@ class UploadBusinessDocumentViewController: BaseViewController, StoryboardSceneB
         }
     }
     
+    func openMultipleFileUpload(type: DocumentUploadId) {
+        let multipleImageUPloadVC = MultipleDocumentsUploadViewController.instantiate()
+        multipleImageUPloadVC.docType = type
+        multipleImageUPloadVC.dismissView = { [weak self] in
+            if self?.viewModel.docImages.isEmpty == true {
+                self?.viewModel.docImages = multipleImageUPloadVC.viewModel.docImages
+            } else {
+                multipleImageUPloadVC.viewModel.docImages.filter { data -> Bool in
+                    if data.key == type {
+                        self?.viewModel.docImages.updateValue(data.value, forKey: type)
+                    }
+                    return true
+                }
+                print(self?.viewModel.docImages)
+                print(multipleImageUPloadVC.viewModel.docImages.count)
+                if self?.viewModel.docImages.keys.count == 2 {
+                    self?.proceedButton.isEnabled = true
+                }
+                self?.navigationController?.popViewController(animated: true)
+                self?.tableView.reloadData()
+            }
+        }
+        self.navigationController?.pushViewController(multipleImageUPloadVC, animated: true)
+    }
+    
     // MARK: - Button Actions
     @IBAction func proceedButtonTapped(_ sender: BorderButton) {
-        if documentsUploaded {
-            updateKyc()
-        }
+        updateKyc()
     }
 }
 
 extension UploadBusinessDocumentViewController: UITableViewDataSource, UITableViewDelegate {
-    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
+    func numberOfSections(in tableView: UITableView) -> Int {
         return 3
     }
+    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
+        switch section {
+        case 0:
+            return 1
+        case 1:
+            return viewModel.docImages[.doc1]?.count ?? 1
+        case 2:
+            return viewModel.docImages[.doc2]?.count ?? 1
+        default:
+            return 0
+        }
+        
+    }
     
     func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
-        let cellType = UploadBusinessDocumentCell(rawValue: indexPath.row)
-        switch cellType {
-        case .progressCell:
+        switch indexPath.section {
+        case 0:
             let cell = tableView.dequeueReusableCell(for: indexPath) as KYCProgressIndicatorTableViewCell
             cell.infoDelegate = self
             cell.configureCell(title: "Upload the business documents for verification ⓘ ")
             return cell
-        case .document1Cell:
-            let cell = tableView.dequeueReusableCell(for: indexPath) as AadharImagesTableViewCell
+        case 1:
+            let cell = tableView.dequeueReusableCell(for: indexPath) as SelectDocUploadImagesTableViewCell
             let document = viewModel.getDocumentType(id: ProfileManager.shared.businessProfileData?.data?.businessDocumentDetails?.documentType1 ?? 0)
-            cell.setupData(sideLabelTxt: document?.name ?? "", documentText: ProfileManager.shared.businessProfileData?.data?.businessDocumentDetails?.documentValue1 ?? "", image: document1, shouldHideHeader: false)
-            cell.imagePicked = { [weak self] in
-                self?.presentImagePicker(tag: indexPath.row)
+            cell.setupData(sideLabelTxt: document?.name ?? "ABC", documentText: ProfileManager.shared.businessProfileData?.data?.businessDocumentDetails?.documentValue1 ?? "DOC 1", image: viewModel.docImages[.doc1]?[indexPath.row], shouldHideHeader: indexPath.row != 0 ? true : false, hideSelectioView: (viewModel.docImages[.doc1]?.count ?? 0) == 0 ? false : true)
+            cell.clickOnSelectImage = { [weak self] in
+                self?.openMultipleFileUpload(type: .doc1)
             }
             return cell
-        case .document2Cell:
-            let cell = tableView.dequeueReusableCell(for: indexPath) as AadharImagesTableViewCell
+        case 2:
+            let cell = tableView.dequeueReusableCell(for: indexPath) as SelectDocUploadImagesTableViewCell
             let document = viewModel.getDocumentType(id: ProfileManager.shared.businessProfileData?.data?.businessDocumentDetails?.documentType2 ?? 0)
-            cell.setupData(sideLabelTxt: document?.name ?? "", documentText: ProfileManager.shared.businessProfileData?.data?.businessDocumentDetails?.documentValue2 ?? "", image: document2, shouldHideHeader: false)
-            cell.imagePicked = { [weak self] in
-                self?.presentImagePicker(tag: indexPath.row)
+            cell.setupData(sideLabelTxt: document?.name ?? "ABC 2", documentText: ProfileManager.shared.businessProfileData?.data?.businessDocumentDetails?.documentValue2 ?? "DOC @", image: viewModel.docImages[.doc2]?[indexPath.row], shouldHideHeader: indexPath.row != 0 ? true : false, hideSelectioView: (viewModel.docImages[.doc2]?.count ?? 0) == 0 ? false : true)
+            cell.clickOnSelectImage = { [weak self] in
+                self?.openMultipleFileUpload(type: .doc2)
             }
             return cell
         default:
@@ -135,39 +166,6 @@ extension UploadBusinessDocumentViewController: UITableViewDataSource, UITableVi
     }
 }
 
-// MARK: - ImagePickerDelegate
-extension UploadBusinessDocumentViewController: ImagePickerProtocol {
-    func didSelect(_ image: UIImage?) {
-        var addressProofId = 0
-        if selectedIndex == 1 {
-            document1 = image
-            addressProofId = ProfileManager.shared.businessProfileData?.data?.businessDocumentDetails?.documentType1 ?? 0
-        } else {
-            document2 = image
-            addressProofId = ProfileManager.shared.businessProfileData?.data?.businessDocumentDetails?.documentType2 ?? 0
-        }
-        if document1 != nil && document2 != nil {
-            proceedButton.isEnabled = true
-        }
-        if image != nil {
-            viewModel.uploadAddressProofImage(image: image ?? UIImage(), addressproofId: addressProofId) { [weak self] response in
-                if let resp = response, (200...299).contains(resp.result?.status ?? 0) {
-                    self?.tableView.reloadData()
-                    self?.viewModel.uploadBusinessDocument { [weak self] status in
-                        if status {
-                            self?.documentsUploaded = true
-                        }
-                    }
-                } else {
-                    self?.document1 = nil
-                    self?.document2 = nil
-                    self?.tableView.reloadData()
-                }
-            }
-        }
-    }
-}
-
 // MARK: - ProgressTableViewCellProtocol
 extension UploadBusinessDocumentViewController: ProgressTableViewCellProtocol {
     func didTapOnInfo() {
diff --git a/OpenBook/OpenBook/Scenes/Tab/More/KYC/Upload PAN/View/ViewUploadedImageViewController.swift b/OpenBook/OpenBook/Scenes/Tab/More/KYC/Upload PAN/View/ViewUploadedImageViewController.swift
new file mode 100644
index 00000000..ef9eaf65
--- /dev/null
+++ b/OpenBook/OpenBook/Scenes/Tab/More/KYC/Upload PAN/View/ViewUploadedImageViewController.swift	
@@ -0,0 +1,37 @@
+//
+//  ViewUploadedImageViewController.swift
+//  OpenBook
+//
+//  Created by Pallavi Anant Dipke on 26/11/21.
+//  Copyright © 2021 Open Digi Technologies Pvt Ltd. All rights reserved.
+//
+
+import UIKit
+
+class ViewUploadedImageViewController: BaseViewController, StoryboardSceneBased {
+    static let sceneStoryboard = UIStoryboard(name: Constants.Storyboard.kyc, bundle: nil)
+    
+    // MARK: - Outlets
+    @IBOutlet private weak var titleLabel: UILabel!
+    @IBOutlet private weak var documentImage: UIImageView!
+    @IBOutlet private weak var okButton: UIButton!
+    
+    // MARK: - Properties
+    var docImage: UIImage?
+    var dismiss:(() -> Void)?
+    // MARK: - View life cycle methods
+    override func viewDidLoad() {
+        super.viewDidLoad()
+        initialSetUp()
+    }
+    
+    // MARK: - Methods
+    private func initialSetUp() {
+        documentImage.image = docImage
+    }
+    
+    @IBAction func okbuttonClicked(_ sender: Any) {
+        dismiss?()
+    }
+    
+}
diff --git a/OpenBook/OpenBook/Scenes/Tab/More/More Menu/View/Unlock KYC Table Cell/UnlockKYCTableViewCell.swift b/OpenBook/OpenBook/Scenes/Tab/More/More Menu/View/Unlock KYC Table Cell/UnlockKYCTableViewCell.swift
index 3c6a4404..f56ea9fd 100644
--- a/OpenBook/OpenBook/Scenes/Tab/More/More Menu/View/Unlock KYC Table Cell/UnlockKYCTableViewCell.swift	
+++ b/OpenBook/OpenBook/Scenes/Tab/More/More Menu/View/Unlock KYC Table Cell/UnlockKYCTableViewCell.swift	
@@ -64,7 +64,7 @@ class UnlockKYCTableViewCell: UITableViewCell, Reusable {
         } else {
             unlockView.startShimmeringAnimation()
             unlockView.isUserInteractionEnabled = false
-            unlockView.backgroundColor = .lightGray.withAlphaComponent(0.1)
+            unlockView.backgroundColor = UIColor.lightGray.withAlphaComponent(0.1)
             unlockFeaturesLabel.textColor = .black
             completeKycLabel.textColor = .black
             statusImage.image = nil
diff --git a/OpenBook/OpenBook/Storyboards/Base.lproj/Invoice.storyboard b/OpenBook/OpenBook/Storyboards/Base.lproj/Invoice.storyboard
index 645056a7..7f524bee 100644
--- a/OpenBook/OpenBook/Storyboards/Base.lproj/Invoice.storyboard
+++ b/OpenBook/OpenBook/Storyboards/Base.lproj/Invoice.storyboard
@@ -1,9 +1,9 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<document type="com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB" version="3.0" toolsVersion="18122" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" useTraitCollections="YES" useSafeAreas="YES" colorMatched="YES">
+<document type="com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB" version="3.0" toolsVersion="17701" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" useTraitCollections="YES" useSafeAreas="YES" colorMatched="YES">
     <device id="retina6_1" orientation="portrait" appearance="light"/>
     <dependencies>
         <deployment identifier="iOS"/>
-        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="18093"/>
+        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="17703"/>
         <capability name="Safe area layout guides" minToolsVersion="9.0"/>
         <capability name="System colors in document resources" minToolsVersion="11.0"/>
         <capability name="collection view cell content view" minToolsVersion="11.0"/>
diff --git a/OpenBook/OpenBook/Storyboards/Base.lproj/KYC.storyboard b/OpenBook/OpenBook/Storyboards/Base.lproj/KYC.storyboard
index d1da823b..de6ebf0a 100644
--- a/OpenBook/OpenBook/Storyboards/Base.lproj/KYC.storyboard
+++ b/OpenBook/OpenBook/Storyboards/Base.lproj/KYC.storyboard
@@ -1,9 +1,9 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<document type="com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB" version="3.0" toolsVersion="18122" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" useTraitCollections="YES" useSafeAreas="YES" colorMatched="YES">
+<document type="com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB" version="3.0" toolsVersion="17701" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" useTraitCollections="YES" useSafeAreas="YES" colorMatched="YES">
     <device id="retina6_5" orientation="portrait" appearance="light"/>
     <dependencies>
         <deployment identifier="iOS"/>
-        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="18093"/>
+        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="17703"/>
         <capability name="Safe area layout guides" minToolsVersion="9.0"/>
         <capability name="System colors in document resources" minToolsVersion="11.0"/>
         <capability name="documents saved in the Xcode 8 format" minToolsVersion="8.0"/>
@@ -52,19 +52,19 @@
                                         <rect key="frame" x="0.0" y="0.0" width="414" height="756.33333333333337"/>
                                         <subviews>
                                             <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Aadhaar Card Verification" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="xcj-32-Hf6">
-                                                <rect key="frame" x="16" y="15.999999999999998" width="159.33333333333334" height="16.333333333333329"/>
+                                                <rect key="frame" x="16" y="15.999999999999998" width="182.33333333333334" height="17.333333333333329"/>
                                                 <fontDescription key="fontDescription" name="Montserrat-SemiBold" family="Montserrat" pointSize="14"/>
                                                 <nil key="textColor"/>
                                                 <nil key="highlightedColor"/>
                                             </label>
                                             <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="We need to check that you’re really you. It helps us fight fraud and keep your business secure." textAlignment="natural" lineBreakMode="tailTruncation" numberOfLines="0" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="z9N-32-CEj">
-                                                <rect key="frame" x="16" y="40.333333333333343" width="382" height="23.333333333333329"/>
+                                                <rect key="frame" x="16" y="41.333333333333343" width="382" height="24.666666666666671"/>
                                                 <fontDescription key="fontDescription" name="Montserrat-Medium" family="Montserrat" pointSize="10"/>
                                                 <nil key="textColor"/>
                                                 <nil key="highlightedColor"/>
                                             </label>
                                             <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="MnN-QO-MVl">
-                                                <rect key="frame" x="0.0" y="79.666666666666657" width="414" height="8"/>
+                                                <rect key="frame" x="0.0" y="82" width="414" height="8"/>
                                                 <color key="backgroundColor" red="0.96078431369999995" green="0.96862745100000003" blue="0.98431372549999996" alpha="1" colorSpace="custom" customColorSpace="displayP3"/>
                                                 <constraints>
                                                     <constraint firstAttribute="height" constant="8" id="QUU-9S-RIU"/>
@@ -74,10 +74,10 @@
                                                 <nil key="highlightedColor"/>
                                             </label>
                                             <stackView opaque="NO" contentMode="scaleToFill" axis="vertical" spacing="16" translatesAutoresizingMaskIntoConstraints="NO" id="avE-lF-LGx">
-                                                <rect key="frame" x="16" y="103.66666666666667" width="382" height="167.66666666666663"/>
+                                                <rect key="frame" x="16" y="105.99999999999999" width="382" height="169.66666666666663"/>
                                                 <subviews>
                                                     <stackView opaque="NO" contentMode="scaleToFill" axis="vertical" spacing="8" translatesAutoresizingMaskIntoConstraints="NO" id="V3f-Zl-NAV">
-                                                        <rect key="frame" x="0.0" y="0.0" width="382" height="67.666666666666671"/>
+                                                        <rect key="frame" x="0.0" y="0.0" width="382" height="68.333333333333329"/>
                                                         <subviews>
                                                             <textField opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="left" contentVerticalAlignment="center" placeholder="12 digit Aadhaar number" textAlignment="natural" minimumFontSize="17" translatesAutoresizingMaskIntoConstraints="NO" id="SXY-Fp-Gis" customClass="BorderedTextField" customModule="OpenBook" customModuleProvider="target">
                                                                 <rect key="frame" x="0.0" y="0.0" width="382" height="48"/>
@@ -93,7 +93,7 @@
                                                                 </userDefinedRuntimeAttributes>
                                                             </textField>
                                                             <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Enter your 12 digit number exactly as per your Aadhaar card" textAlignment="natural" lineBreakMode="tailTruncation" numberOfLines="0" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="B2Z-7g-oxC">
-                                                                <rect key="frame" x="0.0" y="56.000000000000028" width="382" height="11.666666666666671"/>
+                                                                <rect key="frame" x="0.0" y="56" width="382" height="12.333333333333329"/>
                                                                 <fontDescription key="fontDescription" name="Montserrat-Regular" family="Montserrat" pointSize="10"/>
                                                                 <color key="textColor" red="0.13333333333333333" green="0.13333333333333333" blue="0.13333333333333333" alpha="0.5" colorSpace="custom" customColorSpace="displayP3"/>
                                                                 <nil key="highlightedColor"/>
@@ -101,7 +101,7 @@
                                                         </subviews>
                                                     </stackView>
                                                     <stackView opaque="NO" contentMode="scaleToFill" axis="vertical" spacing="8" translatesAutoresizingMaskIntoConstraints="NO" id="ZbP-DV-EyW">
-                                                        <rect key="frame" x="0.0" y="83.666666666666657" width="382" height="84"/>
+                                                        <rect key="frame" x="0.0" y="84.333333333333314" width="382" height="85.333333333333314"/>
                                                         <subviews>
                                                             <textField opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="left" contentVerticalAlignment="center" placeholder="Name as per Aadhaar card" textAlignment="natural" minimumFontSize="17" translatesAutoresizingMaskIntoConstraints="NO" id="xMW-bU-Cwx" customClass="BorderedTextField" customModule="OpenBook" customModuleProvider="target">
                                                                 <rect key="frame" x="0.0" y="0.0" width="382" height="48"/>
@@ -112,7 +112,7 @@
                                                                 <textInputTraits key="textInputTraits"/>
                                                             </textField>
                                                             <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Note: Enter your full name &amp; 12 digit number exactly as per your Aadhaar card." lineBreakMode="tailTruncation" numberOfLines="0" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="GOp-h3-4Mx">
-                                                                <rect key="frame" x="0.0" y="56" width="382" height="28"/>
+                                                                <rect key="frame" x="0.0" y="56.000000000000007" width="382" height="29.333333333333336"/>
                                                                 <fontDescription key="fontDescription" name="Montserrat-Regular" family="Montserrat" pointSize="12"/>
                                                                 <color key="textColor" red="0.1333333333" green="0.1333333333" blue="0.1333333333" alpha="0.5" colorSpace="custom" customColorSpace="displayP3"/>
                                                                 <nil key="highlightedColor"/>
@@ -122,13 +122,13 @@
                                                 </subviews>
                                             </stackView>
                                             <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="By continuing you agree to our " textAlignment="right" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="bAL-hf-G4C">
-                                                <rect key="frame" x="97.000000000000014" y="637.66666666666663" width="140.33333333333337" height="11.666666666666629"/>
+                                                <rect key="frame" x="90.333333333333314" y="637" width="154" height="12.333333333333371"/>
                                                 <fontDescription key="fontDescription" name="Montserrat-Regular" family="Montserrat" pointSize="10"/>
                                                 <nil key="textColor"/>
                                                 <nil key="highlightedColor"/>
                                             </label>
                                             <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="left" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="hFa-7X-E4j">
-                                                <rect key="frame" x="240.33333333333337" y="631.66666666666663" width="60" height="24"/>
+                                                <rect key="frame" x="247.33333333333337" y="630.66666666666663" width="64" height="25"/>
                                                 <fontDescription key="fontDescription" name="Montserrat-Regular" family="Montserrat" pointSize="10"/>
                                                 <state key="normal" title="Aadhaar T&amp;C">
                                                     <color key="titleColor" red="0.0" green="0.71764705880000002" blue="0.83529411760000005" alpha="1" colorSpace="calibratedRGB"/>
@@ -373,22 +373,22 @@
                                 <rect key="frame" x="0.0" y="101" width="320" height="499"/>
                                 <subviews>
                                     <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="CFu-3c-6kA" userLabel=" Content View">
-                                        <rect key="frame" x="0.0" y="0.0" width="320" height="531.33333333333337"/>
+                                        <rect key="frame" x="0.0" y="0.0" width="320" height="533.66666666666663"/>
                                         <subviews>
                                             <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="GST number" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="UM3-8q-uLm">
-                                                <rect key="frame" x="16" y="15.999999999999998" width="79.666666666666671" height="16.333333333333329"/>
+                                                <rect key="frame" x="16" y="15.999999999999998" width="88" height="17.333333333333329"/>
                                                 <fontDescription key="fontDescription" name="Montserrat-SemiBold" family="Montserrat" pointSize="14"/>
                                                 <nil key="textColor"/>
                                                 <nil key="highlightedColor"/>
                                             </label>
                                             <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="We need to check that you’re really you. It helps us fight fraud and keep your business secure." textAlignment="natural" lineBreakMode="tailTruncation" numberOfLines="0" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="fAE-K7-VMb">
-                                                <rect key="frame" x="16" y="48.333333333333343" width="288" height="23.333333333333329"/>
+                                                <rect key="frame" x="16" y="49.333333333333343" width="288" height="24.666666666666671"/>
                                                 <fontDescription key="fontDescription" name="Montserrat-Medium" family="Montserrat" pointSize="10"/>
                                                 <color key="textColor" red="0.1333333333" green="0.1333333333" blue="0.1333333333" alpha="0.80127640850000004" colorSpace="custom" customColorSpace="displayP3"/>
                                                 <nil key="highlightedColor"/>
                                             </label>
                                             <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="SDi-sH-b57">
-                                                <rect key="frame" x="0.0" y="87.666666666666657" width="320" height="8"/>
+                                                <rect key="frame" x="0.0" y="90" width="320" height="8"/>
                                                 <color key="backgroundColor" red="0.96078431369999995" green="0.96862745100000003" blue="0.98431372549999996" alpha="1" colorSpace="custom" customColorSpace="displayP3"/>
                                                 <constraints>
                                                     <constraint firstAttribute="height" constant="8" id="Rg8-91-fv6"/>
@@ -398,7 +398,7 @@
                                                 <nil key="highlightedColor"/>
                                             </label>
                                             <stackView opaque="NO" contentMode="scaleToFill" axis="vertical" spacing="16" translatesAutoresizingMaskIntoConstraints="NO" id="cdr-NE-IKR">
-                                                <rect key="frame" x="16" y="111.66666666666666" width="288" height="190.99999999999997"/>
+                                                <rect key="frame" x="16" y="114" width="288" height="191"/>
                                                 <subviews>
                                                     <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Choose GST number" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="yVX-bZ-wQX">
                                                         <rect key="frame" x="0.0" y="0.0" width="288" height="17.666666666666668"/>
@@ -410,34 +410,34 @@
                                                         <nil key="highlightedColor"/>
                                                     </label>
                                                     <tableView clipsSubviews="YES" contentMode="scaleToFill" placeholderIntrinsicWidth="288" placeholderIntrinsicHeight="109.5" alwaysBounceVertical="YES" dataMode="prototypes" style="plain" separatorStyle="default" rowHeight="-1" estimatedRowHeight="-1" sectionHeaderHeight="28" sectionFooterHeight="28" translatesAutoresizingMaskIntoConstraints="NO" id="ELD-Vr-IoN" customClass="SelfSizedTableView" customModule="OpenBook" customModuleProvider="target">
-                                                        <rect key="frame" x="0.0" y="33.666666666666679" width="288" height="109.33333333333331"/>
+                                                        <rect key="frame" x="0.0" y="33.66666666666665" width="288" height="109.33333333333331"/>
                                                         <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                                         <prototypes>
                                                             <tableViewCell clipsSubviews="YES" contentMode="scaleToFill" preservesSuperviewLayoutMargins="YES" selectionStyle="default" indentationWidth="10" reuseIdentifier="BusinessProofTableViewCell" id="03i-C0-Wg7" customClass="BusinessProofTableViewCell" customModule="OpenBook" customModuleProvider="target">
-                                                                <rect key="frame" x="0.0" y="24.333333969116211" width="288" height="52.333332061767578"/>
+                                                                <rect key="frame" x="0.0" y="28" width="288" height="53"/>
                                                                 <autoresizingMask key="autoresizingMask"/>
                                                                 <tableViewCellContentView key="contentView" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" preservesSuperviewLayoutMargins="YES" insetsLayoutMarginsFromSafeArea="NO" tableViewCell="03i-C0-Wg7" id="rBL-87-m6h">
-                                                                    <rect key="frame" x="0.0" y="0.0" width="288" height="52.333332061767578"/>
+                                                                    <rect key="frame" x="0.0" y="0.0" width="288" height="53"/>
                                                                     <autoresizingMask key="autoresizingMask"/>
                                                                     <subviews>
                                                                         <imageView clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" image="ic_radiodeselct" translatesAutoresizingMaskIntoConstraints="NO" id="DnT-rC-Bgs">
-                                                                            <rect key="frame" x="16" y="14.333333333333336" width="24" height="24"/>
+                                                                            <rect key="frame" x="16" y="14.666666666666664" width="24" height="24"/>
                                                                             <constraints>
                                                                                 <constraint firstAttribute="width" constant="24" id="9f2-I0-3b9"/>
                                                                                 <constraint firstAttribute="height" constant="24" id="a8X-Xr-jTE"/>
                                                                             </constraints>
                                                                         </imageView>
                                                                         <stackView opaque="NO" contentMode="scaleToFill" axis="vertical" spacing="5" translatesAutoresizingMaskIntoConstraints="NO" id="CWs-MV-pA0">
-                                                                            <rect key="frame" x="50" y="10" width="162" height="32.333333333333336"/>
+                                                                            <rect key="frame" x="50" y="10" width="162" height="33"/>
                                                                             <subviews>
                                                                                 <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="29AAAAA000A1ZS" textAlignment="natural" lineBreakMode="tailTruncation" numberOfLines="0" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="4aS-FC-SQu">
-                                                                                    <rect key="frame" x="0.0" y="0.0" width="162" height="14.333333333333334"/>
+                                                                                    <rect key="frame" x="0.0" y="0.0" width="162" height="15"/>
                                                                                     <fontDescription key="fontDescription" name="Montserrat-Medium" family="Montserrat" pointSize="12"/>
                                                                                     <nil key="textColor"/>
                                                                                     <nil key="highlightedColor"/>
                                                                                 </label>
                                                                                 <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Karnataka" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="Zag-bC-1uO">
-                                                                                    <rect key="frame" x="0.0" y="19.333333333333332" width="162" height="12.999999999999996"/>
+                                                                                    <rect key="frame" x="0.0" y="20" width="162" height="13"/>
                                                                                     <constraints>
                                                                                         <constraint firstAttribute="height" constant="13" id="Cbc-1u-3gj"/>
                                                                                     </constraints>
@@ -448,7 +448,7 @@
                                                                             </subviews>
                                                                         </stackView>
                                                                         <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Inactive" textAlignment="center" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="BbV-sM-Nkh">
-                                                                            <rect key="frame" x="222" y="16.333333333333332" width="50" height="19.999999999999996"/>
+                                                                            <rect key="frame" x="222" y="16.666666666666668" width="50" height="20.000000000000004"/>
                                                                             <color key="backgroundColor" red="0.89411764709999997" green="0.13725490200000001" blue="0.13725490200000001" alpha="0.19872359149999999" colorSpace="custom" customColorSpace="displayP3"/>
                                                                             <constraints>
                                                                                 <constraint firstAttribute="height" constant="20" id="xLh-w7-SwJ"/>
@@ -464,7 +464,7 @@
                                                                             </userDefinedRuntimeAttributes>
                                                                         </label>
                                                                         <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="k4J-cp-DFt">
-                                                                            <rect key="frame" x="0.0" y="0.0" width="288" height="52.333333333333336"/>
+                                                                            <rect key="frame" x="0.0" y="0.0" width="288" height="53"/>
                                                                             <color key="tintColor" white="0.0" alpha="0.0" colorSpace="custom" customColorSpace="genericGamma22GrayColorSpace"/>
                                                                             <connections>
                                                                                 <action selector="cellSelectedAction:" destination="03i-C0-Wg7" eventType="touchUpInside" id="EdU-6K-KJh"/>
@@ -501,10 +501,10 @@
                                                         </connections>
                                                     </tableView>
                                                     <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="6QF-mR-i6R">
-                                                        <rect key="frame" x="0.0" y="159.00000000000003" width="288" height="32"/>
+                                                        <rect key="frame" x="0.0" y="159" width="288" height="32"/>
                                                         <subviews>
                                                             <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Add GST number manually" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="pbE-WA-Omt">
-                                                                <rect key="frame" x="44" y="9" width="145" height="14"/>
+                                                                <rect key="frame" x="44" y="8.6666666666666856" width="163.33333333333334" height="14.666666666666664"/>
                                                                 <fontDescription key="fontDescription" name="Montserrat-SemiBold" family="Montserrat" pointSize="12"/>
                                                                 <color key="textColor" red="0.0" green="0.71764705882352942" blue="0.83529411764705885" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
                                                                 <nil key="highlightedColor"/>
@@ -545,14 +545,14 @@
                                                 </subviews>
                                             </stackView>
                                             <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="0ui-mo-ojJ" customClass="DataSecurityView" customModule="OpenBook" customModuleProvider="target">
-                                                <rect key="frame" x="0.0" y="337.33333333333331" width="320" height="110"/>
+                                                <rect key="frame" x="0.0" y="339.66666666666669" width="320" height="110"/>
                                                 <color key="backgroundColor" white="1" alpha="1" colorSpace="custom" customColorSpace="genericGamma22GrayColorSpace"/>
                                                 <constraints>
                                                     <constraint firstAttribute="height" constant="110" id="VkK-BE-TFp"/>
                                                 </constraints>
                                             </view>
                                             <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="RKY-Ge-145" customClass="BorderButton" customModule="OpenBook" customModuleProvider="target">
-                                                <rect key="frame" x="16" y="463.33333333333337" width="288" height="48"/>
+                                                <rect key="frame" x="16" y="465.66666666666663" width="288" height="48"/>
                                                 <color key="backgroundColor" red="0.0" green="0.71764705880000002" blue="0.83529411760000005" alpha="1" colorSpace="custom" customColorSpace="displayP3"/>
                                                 <constraints>
                                                     <constraint firstAttribute="height" constant="48" id="rRz-MU-PUI"/>
@@ -663,7 +663,7 @@
                 </viewController>
                 <placeholder placeholderIdentifier="IBFirstResponder" id="ZCS-dU-R0N" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
             </objects>
-            <point key="canvasLocation" x="2936" y="-466"/>
+            <point key="canvasLocation" x="3270" y="-631"/>
         </scene>
         <!--UploadPAN View Controller-->
         <scene sceneID="1Cn-VP-kzH">
@@ -747,7 +747,53 @@
                 </viewController>
                 <placeholder placeholderIdentifier="IBFirstResponder" id="yDJ-TX-jFP" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
             </objects>
-            <point key="canvasLocation" x="3705.7971014492755" y="-491.51785714285711"/>
+            <point key="canvasLocation" x="4041" y="-657"/>
+        </scene>
+        <!--View Uploaded Image View Controller-->
+        <scene sceneID="FSB-BA-LeR">
+            <objects>
+                <viewController storyboardIdentifier="ViewUploadedImageViewController" id="zVq-bN-xZn" customClass="ViewUploadedImageViewController" customModule="OpenBook" customModuleProvider="target" sceneMemberID="viewController">
+                    <view key="view" contentMode="scaleToFill" id="alm-7H-GVn">
+                        <rect key="frame" x="0.0" y="0.0" width="414" height="896"/>
+                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
+                        <subviews>
+                            <stackView opaque="NO" contentMode="scaleToFill" axis="vertical" spacing="12" translatesAutoresizingMaskIntoConstraints="NO" id="HMo-VY-Tve">
+                                <rect key="frame" x="20" y="64" width="374" height="306.33333333333331"/>
+                                <subviews>
+                                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Label" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="DV1-RF-OR4">
+                                        <rect key="frame" x="0.0" y="0.0" width="374" height="40"/>
+                                        <constraints>
+                                            <constraint firstAttribute="height" constant="40" id="DaX-Va-gFi"/>
+                                        </constraints>
+                                        <fontDescription key="fontDescription" type="system" pointSize="17"/>
+                                        <nil key="textColor"/>
+                                        <nil key="highlightedColor"/>
+                                    </label>
+                                    <imageView clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" translatesAutoresizingMaskIntoConstraints="NO" id="MOw-Ft-tNE">
+                                        <rect key="frame" x="0.0" y="52.000000000000014" width="374" height="254.33333333333337"/>
+                                        <constraints>
+                                            <constraint firstAttribute="height" constant="254.33333333333337" id="PJW-aa-EzT"/>
+                                        </constraints>
+                                    </imageView>
+                                </subviews>
+                            </stackView>
+                        </subviews>
+                        <viewLayoutGuide key="safeArea" id="lws-xi-wB7"/>
+                        <color key="backgroundColor" white="1" alpha="1" colorSpace="custom" customColorSpace="genericGamma22GrayColorSpace"/>
+                        <constraints>
+                            <constraint firstItem="HMo-VY-Tve" firstAttribute="top" secondItem="lws-xi-wB7" secondAttribute="top" constant="20" id="4xc-PE-eGX"/>
+                            <constraint firstItem="HMo-VY-Tve" firstAttribute="leading" secondItem="lws-xi-wB7" secondAttribute="leading" constant="20" id="DOW-XO-TqL"/>
+                            <constraint firstItem="lws-xi-wB7" firstAttribute="trailing" secondItem="HMo-VY-Tve" secondAttribute="trailing" constant="20" id="Qf1-YR-DRf"/>
+                        </constraints>
+                    </view>
+                    <connections>
+                        <outlet property="documentImage" destination="MOw-Ft-tNE" id="JEZ-yU-9W0"/>
+                        <outlet property="titleLabel" destination="DV1-RF-OR4" id="Cwv-UY-Yre"/>
+                    </connections>
+                </viewController>
+                <placeholder placeholderIdentifier="IBFirstResponder" id="gzk-ie-Yni" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
+            </objects>
+            <point key="canvasLocation" x="4680" y="-658"/>
         </scene>
         <!--CongratulationKYC View Controller-->
         <scene sceneID="0Mg-8f-fSY">
@@ -775,17 +821,17 @@
                                 <nil key="highlightedColor"/>
                             </label>
                             <imageView clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" image="ic_time" translatesAutoresizingMaskIntoConstraints="NO" id="oM3-lZ-VTv">
-                                <rect key="frame" x="161" y="267" width="92" height="92"/>
+                                <rect key="frame" x="161" y="265.33333333333331" width="92" height="92"/>
                                 <constraints>
                                     <constraint firstAttribute="width" constant="92" id="KWQ-4u-j8j"/>
                                     <constraint firstAttribute="height" constant="92" id="wNv-xk-WNd"/>
                                 </constraints>
                             </imageView>
                             <stackView opaque="NO" contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="J6H-4F-ohf">
-                                <rect key="frame" x="8" y="383" width="398" height="21"/>
+                                <rect key="frame" x="8" y="381.33333333333331" width="398" height="22"/>
                                 <subviews>
                                     <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Congratulations, " textAlignment="center" lineBreakMode="tailTruncation" numberOfLines="2" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="Gao-Nb-bSX" userLabel="Congratulations,">
-                                        <rect key="frame" x="0.0" y="0.0" width="398" height="21"/>
+                                        <rect key="frame" x="0.0" y="0.0" width="398" height="22"/>
                                         <fontDescription key="fontDescription" name="Montserrat-SemiBold" family="Montserrat" pointSize="18"/>
                                         <nil key="textColor"/>
                                         <nil key="highlightedColor"/>
@@ -809,13 +855,13 @@
                                 </userDefinedRuntimeAttributes>
                             </label>
                             <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Status" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="17W-sN-19t">
-                                <rect key="frame" x="189.66666666666666" y="416" width="34.666666666666657" height="14"/>
+                                <rect key="frame" x="188" y="415.33333333333331" width="38.333333333333343" height="14.666666666666686"/>
                                 <fontDescription key="fontDescription" name="Montserrat-Medium" family="Montserrat" pointSize="12"/>
                                 <nil key="textColor"/>
                                 <nil key="highlightedColor"/>
                             </label>
                             <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="your application is complete. after verification you will receive the status on your KYC" textAlignment="center" lineBreakMode="tailTruncation" numberOfLines="0" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="LWg-qW-hBt">
-                                <rect key="frame" x="16" y="482" width="382" height="28"/>
+                                <rect key="frame" x="16" y="482" width="382" height="29.333333333333314"/>
                                 <fontDescription key="fontDescription" name="Montserrat-Medium" family="Montserrat" pointSize="12"/>
                                 <color key="textColor" red="0.13333333333333333" green="0.13333333333333333" blue="0.13333333333333333" alpha="0.80210167253521125" colorSpace="custom" customColorSpace="displayP3"/>
                                 <nil key="highlightedColor"/>
@@ -1001,7 +1047,7 @@
                                 <rect key="frame" x="0.0" y="101" width="414" height="32"/>
                                 <subviews>
                                     <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Select any one of these document" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="eYI-a6-FiF">
-                                        <rect key="frame" x="16" y="8.6666666666666714" width="205.66666666666666" height="15"/>
+                                        <rect key="frame" x="16" y="9" width="205.33333333333334" height="14"/>
                                         <fontDescription key="fontDescription" name="Montserrat-SemiBold" family="Montserrat" pointSize="12"/>
                                         <nil key="textColor"/>
                                         <nil key="highlightedColor"/>
@@ -1019,14 +1065,14 @@
                                 <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                 <prototypes>
                                     <tableViewCell clipsSubviews="YES" contentMode="scaleToFill" preservesSuperviewLayoutMargins="YES" selectionStyle="none" indentationWidth="10" reuseIdentifier="DocumentTypeTableViewCell" rowHeight="55" id="llv-db-3Y3" customClass="DocumentTypeTableViewCell" customModule="OpenBook" customModuleProvider="target">
-                                        <rect key="frame" x="0.0" y="24.333333969116211" width="414" height="55"/>
+                                        <rect key="frame" x="0.0" y="28" width="414" height="55"/>
                                         <autoresizingMask key="autoresizingMask"/>
                                         <tableViewCellContentView key="contentView" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" preservesSuperviewLayoutMargins="YES" insetsLayoutMarginsFromSafeArea="NO" tableViewCell="llv-db-3Y3" id="sOI-ri-F3D">
                                             <rect key="frame" x="0.0" y="0.0" width="414" height="55"/>
                                             <autoresizingMask key="autoresizingMask"/>
                                             <subviews>
                                                 <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Label" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="pkt-hF-4vl">
-                                                    <rect key="frame" x="15.999999999999996" y="17" width="37.666666666666657" height="21"/>
+                                                    <rect key="frame" x="16.000000000000004" y="17" width="37.333333333333343" height="21"/>
                                                     <fontDescription key="fontDescription" name="Montserrat-Regular" family="Montserrat" pointSize="14"/>
                                                     <nil key="textColor"/>
                                                     <nil key="highlightedColor"/>
@@ -1181,7 +1227,7 @@
                                 <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                 <prototypes>
                                     <tableViewCell clipsSubviews="YES" contentMode="scaleToFill" preservesSuperviewLayoutMargins="YES" selectionStyle="none" indentationWidth="10" reuseIdentifier="DocumentTypeTableViewCell" rowHeight="55" id="jsN-zS-8uV" customClass="DocumentTypeTableViewCell" customModule="OpenBook" customModuleProvider="target">
-                                        <rect key="frame" x="0.0" y="24.333333969116211" width="414" height="55"/>
+                                        <rect key="frame" x="0.0" y="28" width="414" height="55"/>
                                         <autoresizingMask key="autoresizingMask"/>
                                         <tableViewCellContentView key="contentView" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" preservesSuperviewLayoutMargins="YES" insetsLayoutMarginsFromSafeArea="NO" tableViewCell="jsN-zS-8uV" id="CBX-oa-g49">
                                             <rect key="frame" x="0.0" y="0.0" width="414" height="55"/>
@@ -1707,13 +1753,13 @@
                                 </constraints>
                             </view>
                             <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Please upload the business proof" textAlignment="natural" lineBreakMode="tailTruncation" numberOfLines="0" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="Htb-aa-AKX">
-                                <rect key="frame" x="16" y="116" width="390" height="14.666666666666657"/>
+                                <rect key="frame" x="16" y="116" width="390" height="14"/>
                                 <fontDescription key="fontDescription" name="Montserrat-Medium" family="Montserrat" pointSize="12"/>
                                 <color key="textColor" red="0.1333333333" green="0.1333333333" blue="0.1333333333" alpha="0.80127640850000004" colorSpace="custom" customColorSpace="displayP3"/>
                                 <nil key="highlightedColor"/>
                             </label>
                             <tableView clipsSubviews="YES" contentMode="scaleToFill" alwaysBounceVertical="YES" dataMode="prototypes" style="plain" separatorStyle="none" rowHeight="-1" estimatedRowHeight="-1" sectionHeaderHeight="28" sectionFooterHeight="28" translatesAutoresizingMaskIntoConstraints="NO" id="3m6-6w-PTn">
-                                <rect key="frame" x="0.0" y="162.66666666666663" width="414" height="605"/>
+                                <rect key="frame" x="0.0" y="162" width="414" height="606.33333333333337"/>
                                 <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                 <connections>
                                     <outlet property="dataSource" destination="c9h-UW-JBN" id="Pp5-ik-bOI"/>
@@ -1721,7 +1767,7 @@
                                 </connections>
                             </tableView>
                             <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="Ntj-rn-ea1">
-                                <rect key="frame" x="0.0" y="146.66666666666666" width="414" height="8"/>
+                                <rect key="frame" x="0.0" y="146" width="414" height="8"/>
                                 <color key="backgroundColor" red="0.96078431369999995" green="0.96862745100000003" blue="0.98431372549999996" alpha="1" colorSpace="custom" customColorSpace="displayP3"/>
                                 <constraints>
                                     <constraint firstAttribute="height" constant="8" id="FnP-28-CdL"/>
@@ -1731,19 +1777,19 @@
                                 <nil key="highlightedColor"/>
                             </label>
                             <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="MRE-rS-kRd">
-                                <rect key="frame" x="16" y="775.66666666666663" width="382" height="70.333333333333371"/>
+                                <rect key="frame" x="16" y="776.33333333333337" width="382" height="69.666666666666629"/>
                                 <subviews>
                                     <stackView opaque="NO" contentMode="scaleToFill" axis="vertical" spacing="16" translatesAutoresizingMaskIntoConstraints="NO" id="rzy-ds-cvP">
-                                        <rect key="frame" x="0.0" y="0.0" width="382" height="70.333333333333329"/>
+                                        <rect key="frame" x="0.0" y="0.0" width="382" height="69.666666666666671"/>
                                         <subviews>
                                             <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="By continuing you agree to our Aadhaar T&amp;C" textAlignment="center" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="sa2-za-72o">
-                                                <rect key="frame" x="0.0" y="0.0" width="382" height="12.333333333333334"/>
+                                                <rect key="frame" x="0.0" y="0.0" width="382" height="11.666666666666666"/>
                                                 <fontDescription key="fontDescription" name="Montserrat-Regular" family="Montserrat" pointSize="10"/>
                                                 <nil key="textColor"/>
                                                 <nil key="highlightedColor"/>
                                             </label>
                                             <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="DIf-b9-YM7" customClass="BorderButton" customModule="OpenBook" customModuleProvider="target">
-                                                <rect key="frame" x="0.0" y="28.333333333333371" width="382" height="42"/>
+                                                <rect key="frame" x="0.0" y="27.666666666666629" width="382" height="42"/>
                                                 <constraints>
                                                     <constraint firstAttribute="height" constant="42" id="fku-Rt-ioh"/>
                                                 </constraints>
@@ -2065,22 +2111,22 @@
                                 <rect key="frame" x="0.0" y="101" width="320" height="815"/>
                                 <subviews>
                                     <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="ECM-MN-f4c" userLabel="Content View">
-                                        <rect key="frame" x="0.0" y="0.0" width="320" height="1084.6666666666667"/>
+                                        <rect key="frame" x="0.0" y="0.0" width="320" height="1087"/>
                                         <subviews>
                                             <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Upload PAN Card" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="xA7-Sd-jqP">
-                                                <rect key="frame" x="16" y="15.999999999999998" width="111" height="16.333333333333329"/>
+                                                <rect key="frame" x="16" y="15.999999999999998" width="122" height="17.333333333333329"/>
                                                 <fontDescription key="fontDescription" name="Montserrat-SemiBold" family="Montserrat" pointSize="14"/>
                                                 <nil key="textColor"/>
                                                 <nil key="highlightedColor"/>
                                             </label>
                                             <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="We need to check that you’re really you. It helps us fight fraud and keep your business secure." textAlignment="natural" lineBreakMode="tailTruncation" numberOfLines="0" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="yoI-iq-4Cw">
-                                                <rect key="frame" x="16" y="48.333333333333343" width="288" height="23.333333333333329"/>
+                                                <rect key="frame" x="16" y="49.333333333333343" width="288" height="24.666666666666671"/>
                                                 <fontDescription key="fontDescription" name="Montserrat-Medium" family="Montserrat" pointSize="10"/>
                                                 <color key="textColor" red="0.1333333333" green="0.1333333333" blue="0.1333333333" alpha="0.80127640850000004" colorSpace="custom" customColorSpace="displayP3"/>
                                                 <nil key="highlightedColor"/>
                                             </label>
                                             <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="4QO-Eb-ym1">
-                                                <rect key="frame" x="0.0" y="87.666666666666657" width="320" height="8"/>
+                                                <rect key="frame" x="0.0" y="90" width="320" height="8"/>
                                                 <color key="backgroundColor" red="0.96078431369999995" green="0.96862745100000003" blue="0.98431372549999996" alpha="1" colorSpace="custom" customColorSpace="displayP3"/>
                                                 <constraints>
                                                     <constraint firstAttribute="height" constant="8" id="7aB-0M-4z2"/>
@@ -2090,17 +2136,17 @@
                                                 <nil key="highlightedColor"/>
                                             </label>
                                             <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="aTL-1n-w6g" customClass="RectangularDashedView" customModule="OpenBook" customModuleProvider="target">
-                                                <rect key="frame" x="16" y="111.66666666666666" width="288" height="169.99999999999997"/>
+                                                <rect key="frame" x="16" y="114" width="288" height="170"/>
                                                 <subviews>
                                                     <imageView clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" image="ic_camera" translatesAutoresizingMaskIntoConstraints="NO" id="kEK-FF-90b">
-                                                        <rect key="frame" x="132" y="64.000000000000028" width="24" height="24"/>
+                                                        <rect key="frame" x="132" y="64" width="24" height="24"/>
                                                         <constraints>
                                                             <constraint firstAttribute="height" constant="24" id="1JD-lK-nBO"/>
                                                             <constraint firstAttribute="width" constant="24" id="9Lh-m9-acR"/>
                                                         </constraints>
                                                     </imageView>
                                                     <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Upload PAN card front" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="dse-uw-Ucb">
-                                                        <rect key="frame" x="93.666666666666657" y="92.000000000000028" width="100.66666666666666" height="11.666666666666671"/>
+                                                        <rect key="frame" x="87.666666666666657" y="92" width="112.66666666666666" height="12.333333333333329"/>
                                                         <fontDescription key="fontDescription" name="Montserrat-Medium" family="Montserrat" pointSize="10"/>
                                                         <color key="textColor" red="0.1333333333" green="0.1333333333" blue="0.1333333333" alpha="0.80441241200000002" colorSpace="custom" customColorSpace="displayP3"/>
                                                         <nil key="highlightedColor"/>
@@ -2151,7 +2197,7 @@
                                                 </userDefinedRuntimeAttributes>
                                             </view>
                                             <stackView opaque="NO" contentMode="scaleToFill" axis="vertical" translatesAutoresizingMaskIntoConstraints="NO" id="DW0-Ju-fcK">
-                                                <rect key="frame" x="0.0" y="449.66666666666663" width="320" height="300"/>
+                                                <rect key="frame" x="0.0" y="452" width="320" height="300"/>
                                                 <subviews>
                                                     <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="dxU-zK-3iR">
                                                         <rect key="frame" x="0.0" y="0.0" width="320" height="172"/>
@@ -2160,7 +2206,7 @@
                                                                 <rect key="frame" x="0.0" y="0.0" width="320" height="48"/>
                                                                 <subviews>
                                                                     <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Wrong documents" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="7Z0-nw-aeu">
-                                                                        <rect key="frame" x="16" y="17" width="99" height="14"/>
+                                                                        <rect key="frame" x="15.999999999999993" y="16.666666666666629" width="113.33333333333331" height="14.666666666666664"/>
                                                                         <fontDescription key="fontDescription" name="Montserrat-SemiBold" family="Montserrat" pointSize="12"/>
                                                                         <nil key="textColor"/>
                                                                         <nil key="highlightedColor"/>
@@ -2231,16 +2277,16 @@
                                                         <rect key="frame" x="0.0" y="172" width="320" height="128"/>
                                                         <subviews>
                                                             <stackView opaque="NO" contentMode="scaleToFill" axis="vertical" spacing="8" translatesAutoresizingMaskIntoConstraints="NO" id="rNu-Mn-o7R">
-                                                                <rect key="frame" x="16" y="0.0" width="288" height="55.333333333333336"/>
+                                                                <rect key="frame" x="16" y="0.0" width="288" height="54.666666666666664"/>
                                                                 <subviews>
                                                                     <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Name on PAN Card" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="iEa-Xt-gS4">
-                                                                        <rect key="frame" x="0.0" y="0.0" width="288" height="11.666666666666666"/>
+                                                                        <rect key="frame" x="0.0" y="0.0" width="288" height="12.333333333333334"/>
                                                                         <fontDescription key="fontDescription" name="Montserrat-Regular" family="Montserrat" pointSize="10"/>
                                                                         <nil key="textColor"/>
                                                                         <nil key="highlightedColor"/>
                                                                     </label>
                                                                     <textField opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="left" contentVerticalAlignment="center" borderStyle="roundedRect" textAlignment="natural" minimumFontSize="17" translatesAutoresizingMaskIntoConstraints="NO" id="PxN-SL-yIo">
-                                                                        <rect key="frame" x="0.0" y="19.666666666666739" width="288" height="35.666666666666657"/>
+                                                                        <rect key="frame" x="0.0" y="20.333333333333375" width="288" height="34.333333333333343"/>
                                                                         <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                                                         <textInputTraits key="textInputTraits" keyboardType="alphabet"/>
                                                                         <connections>
@@ -2250,19 +2296,19 @@
                                                                 </subviews>
                                                             </stackView>
                                                             <stackView opaque="NO" contentMode="scaleToFill" distribution="fillEqually" spacing="8" translatesAutoresizingMaskIntoConstraints="NO" id="bAp-Se-BoI">
-                                                                <rect key="frame" x="16" y="74.333333333333371" width="288" height="53.666666666666657"/>
+                                                                <rect key="frame" x="16" y="73.666666666666629" width="288" height="54.333333333333343"/>
                                                                 <subviews>
                                                                     <stackView opaque="NO" contentMode="scaleToFill" axis="vertical" spacing="8" translatesAutoresizingMaskIntoConstraints="NO" id="sai-4R-viE">
-                                                                        <rect key="frame" x="0.0" y="0.0" width="140" height="53.666666666666664"/>
+                                                                        <rect key="frame" x="0.0" y="0.0" width="140" height="54.333333333333336"/>
                                                                         <subviews>
                                                                             <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="PAN Number" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="cPX-tp-Bu3">
-                                                                                <rect key="frame" x="0.0" y="0.0" width="140" height="11.666666666666666"/>
+                                                                                <rect key="frame" x="0.0" y="0.0" width="140" height="12.333333333333334"/>
                                                                                 <fontDescription key="fontDescription" name="Montserrat-Regular" family="Montserrat" pointSize="10"/>
                                                                                 <nil key="textColor"/>
                                                                                 <nil key="highlightedColor"/>
                                                                             </label>
                                                                             <textField opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="left" contentVerticalAlignment="center" borderStyle="roundedRect" textAlignment="natural" minimumFontSize="17" translatesAutoresizingMaskIntoConstraints="NO" id="oGh-4U-MZu">
-                                                                                <rect key="frame" x="0.0" y="19.666666666666629" width="140" height="34"/>
+                                                                                <rect key="frame" x="0.0" y="20.333333333333371" width="140" height="34"/>
                                                                                 <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                                                                 <textInputTraits key="textInputTraits" autocapitalizationType="allCharacters" keyboardType="alphabet"/>
                                                                                 <connections>
@@ -2272,16 +2318,16 @@
                                                                         </subviews>
                                                                     </stackView>
                                                                     <stackView opaque="NO" contentMode="scaleToFill" axis="vertical" spacing="8" translatesAutoresizingMaskIntoConstraints="NO" id="xgY-LK-Lzd">
-                                                                        <rect key="frame" x="148" y="0.0" width="140" height="53.666666666666664"/>
+                                                                        <rect key="frame" x="148" y="0.0" width="140" height="54.333333333333336"/>
                                                                         <subviews>
                                                                             <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Date of Birth" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="jPR-tP-CUV">
-                                                                                <rect key="frame" x="0.0" y="0.0" width="140" height="11.666666666666666"/>
+                                                                                <rect key="frame" x="0.0" y="0.0" width="140" height="12.333333333333334"/>
                                                                                 <fontDescription key="fontDescription" name="Montserrat-Regular" family="Montserrat" pointSize="10"/>
                                                                                 <nil key="textColor"/>
                                                                                 <nil key="highlightedColor"/>
                                                                             </label>
                                                                             <textField opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="left" contentVerticalAlignment="center" borderStyle="roundedRect" textAlignment="natural" minimumFontSize="17" translatesAutoresizingMaskIntoConstraints="NO" id="ic9-Ff-Eog">
-                                                                                <rect key="frame" x="0.0" y="19.666666666666629" width="140" height="34"/>
+                                                                                <rect key="frame" x="0.0" y="20.333333333333371" width="140" height="34"/>
                                                                                 <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                                                                 <textInputTraits key="textInputTraits" keyboardType="numberPad"/>
                                                                                 <connections>
@@ -2308,7 +2354,7 @@
                                                 </subviews>
                                             </stackView>
                                             <stackView opaque="NO" contentMode="scaleToFill" axis="vertical" spacing="10" translatesAutoresizingMaskIntoConstraints="NO" id="sgp-GQ-EOB">
-                                                <rect key="frame" x="16" y="829.66666666666663" width="288" height="225.99999999999989"/>
+                                                <rect key="frame" x="16" y="832" width="288" height="226"/>
                                                 <subviews>
                                                     <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="JXD-vN-aqF" customClass="DataSecurityView" customModule="OpenBook" customModuleProvider="target">
                                                         <rect key="frame" x="0.0" y="0.0" width="288" height="110"/>
@@ -2318,7 +2364,7 @@
                                                         </constraints>
                                                     </view>
                                                     <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="UfQ-sj-MwW">
-                                                        <rect key="frame" x="0.0" y="120.00000000000011" width="288" height="48"/>
+                                                        <rect key="frame" x="0.0" y="120" width="288" height="48"/>
                                                         <color key="backgroundColor" white="1" alpha="1" colorSpace="custom" customColorSpace="genericGamma22GrayColorSpace"/>
                                                         <constraints>
                                                             <constraint firstAttribute="height" constant="48" id="ioz-k6-eiO"/>
@@ -2337,7 +2383,7 @@
                                                         </connections>
                                                     </button>
                                                     <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="Cyh-Cz-TJ2" customClass="BorderButton" customModule="OpenBook" customModuleProvider="target">
-                                                        <rect key="frame" x="0.0" y="178.00000000000011" width="288" height="48"/>
+                                                        <rect key="frame" x="0.0" y="178" width="288" height="48"/>
                                                         <color key="backgroundColor" red="0.0" green="0.71764705880000002" blue="0.83529411760000005" alpha="1" colorSpace="custom" customColorSpace="displayP3"/>
                                                         <constraints>
                                                             <constraint firstAttribute="height" constant="48" id="fka-fg-eiO"/>
@@ -2358,9 +2404,9 @@
                                                 </subviews>
                                             </stackView>
                                             <stackView opaque="NO" contentMode="scaleToFill" axis="vertical" translatesAutoresizingMaskIntoConstraints="NO" id="2G3-8R-7YY">
-                                                <rect key="frame" x="0.0" y="310.33333333333331" width="320" height="139.33333333333331"/>
+                                                <rect key="frame" x="0.0" y="312.66666666666669" width="320" height="139.33333333333331"/>
                                                 <subviews>
-                                                    <tableView clipsSubviews="YES" contentMode="scaleToFill" alwaysBounceVertical="YES" dataMode="prototypes" style="plain" separatorStyle="default" rowHeight="-1" estimatedRowHeight="-1" sectionHeaderHeight="28" sectionFooterHeight="28" translatesAutoresizingMaskIntoConstraints="NO" id="zQV-qF-TR1">
+                                                    <tableView clipsSubviews="YES" contentMode="scaleToFill" alwaysBounceVertical="YES" scrollEnabled="NO" showsVerticalScrollIndicator="NO" dataMode="prototypes" style="plain" separatorStyle="default" rowHeight="-1" estimatedRowHeight="-1" sectionHeaderHeight="28" sectionFooterHeight="28" translatesAutoresizingMaskIntoConstraints="NO" id="zQV-qF-TR1">
                                                         <rect key="frame" x="0.0" y="0.0" width="320" height="139.33333333333334"/>
                                                         <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                                         <constraints>
@@ -2368,7 +2414,7 @@
                                                         </constraints>
                                                         <prototypes>
                                                             <tableViewCell clipsSubviews="YES" contentMode="scaleToFill" preservesSuperviewLayoutMargins="YES" selectionStyle="default" indentationWidth="10" reuseIdentifier="DocumentUploadTableViewCell" rowHeight="76.5" id="4O3-iL-ab5" customClass="DocumentUploadTableViewCell" customModule="OpenBook" customModuleProvider="target">
-                                                                <rect key="frame" x="0.0" y="24.333333969116211" width="320" height="76.5"/>
+                                                                <rect key="frame" x="0.0" y="28" width="320" height="76.5"/>
                                                                 <autoresizingMask key="autoresizingMask"/>
                                                                 <tableViewCellContentView key="contentView" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" preservesSuperviewLayoutMargins="YES" insetsLayoutMarginsFromSafeArea="NO" tableViewCell="4O3-iL-ab5" id="ns7-MV-fIE">
                                                                     <rect key="frame" x="0.0" y="0.0" width="320" height="76.5"/>
@@ -2426,7 +2472,7 @@
                                                 </subviews>
                                             </stackView>
                                             <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="2 Items" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="pMK-GN-Ho4">
-                                                <rect key="frame" x="16" y="289.66666666666669" width="288" height="12.666666666666686"/>
+                                                <rect key="frame" x="16" y="292" width="288" height="12.666666666666686"/>
                                                 <constraints>
                                                     <constraint firstAttribute="height" constant="12.5" id="mb3-0c-lZJ"/>
                                                 </constraints>
@@ -2512,21 +2558,399 @@
                 </viewController>
                 <placeholder placeholderIdentifier="IBFirstResponder" id="ZXT-kx-ZAH" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
             </objects>
-            <point key="canvasLocation" x="2211" y="-385"/>
+            <point key="canvasLocation" x="2084" y="-614"/>
+        </scene>
+        <!--Multiple Documents Upload View Controller-->
+        <scene sceneID="F77-8v-LYs">
+            <objects>
+                <viewController storyboardIdentifier="MultipleDocumentsUploadViewController" id="4rV-Xi-Y2L" customClass="MultipleDocumentsUploadViewController" customModule="OpenBook" customModuleProvider="target" sceneMemberID="viewController">
+                    <view key="view" contentMode="scaleToFill" id="wf8-Nh-sgQ">
+                        <rect key="frame" x="0.0" y="0.0" width="320" height="950"/>
+                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
+                        <subviews>
+                            <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="IsT-1S-MZn" customClass="NavigationBarView" customModule="OpenBook" customModuleProvider="target">
+                                <rect key="frame" x="0.0" y="44" width="320" height="56"/>
+                                <color key="backgroundColor" white="1" alpha="1" colorSpace="custom" customColorSpace="genericGamma22GrayColorSpace"/>
+                                <constraints>
+                                    <constraint firstAttribute="height" constant="56" id="U4X-xb-Bw2"/>
+                                </constraints>
+                            </view>
+                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="dVt-F6-IDu">
+                                <rect key="frame" x="0.0" y="100" width="320" height="1"/>
+                                <color key="backgroundColor" red="0.67843137249999996" green="0.67843137249999996" blue="0.67843137249999996" alpha="0.20362015850000001" colorSpace="custom" customColorSpace="sRGB"/>
+                                <constraints>
+                                    <constraint firstAttribute="height" constant="1" id="m2H-8t-sgH"/>
+                                </constraints>
+                                <fontDescription key="fontDescription" type="system" pointSize="17"/>
+                                <color key="textColor" red="0.67843137249999996" green="0.67843137249999996" blue="0.67843137249999996" alpha="0.20362015850000001" colorSpace="custom" customColorSpace="sRGB"/>
+                                <nil key="highlightedColor"/>
+                            </label>
+                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="ln5-BY-8i0">
+                                <rect key="frame" x="0.0" y="101" width="320" height="815"/>
+                                <subviews>
+                                    <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="IeN-mV-BX6" userLabel="Content View">
+                                        <rect key="frame" x="0.0" y="0.0" width="320" height="823.66666666666663"/>
+                                        <subviews>
+                                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Upload PAN Card" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="60Z-rP-qWz">
+                                                <rect key="frame" x="16" y="16" width="122" height="0.0"/>
+                                                <constraints>
+                                                    <constraint firstAttribute="height" id="bXF-ka-bi0"/>
+                                                </constraints>
+                                                <fontDescription key="fontDescription" name="Montserrat-SemiBold" family="Montserrat" pointSize="14"/>
+                                                <nil key="textColor"/>
+                                                <nil key="highlightedColor"/>
+                                            </label>
+                                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="We need to check that you’re really you. It helps us fight fraud and keep your business secure." textAlignment="natural" lineBreakMode="tailTruncation" numberOfLines="0" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="QUr-Yo-Ndq">
+                                                <rect key="frame" x="16" y="32" width="288" height="24.666666666666671"/>
+                                                <fontDescription key="fontDescription" name="Montserrat-Medium" family="Montserrat" pointSize="10"/>
+                                                <color key="textColor" red="0.1333333333" green="0.1333333333" blue="0.1333333333" alpha="0.80127640850000004" colorSpace="custom" customColorSpace="displayP3"/>
+                                                <nil key="highlightedColor"/>
+                                            </label>
+                                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="5mW-JQ-Xia">
+                                                <rect key="frame" x="0.0" y="72.666666666666657" width="320" height="8"/>
+                                                <color key="backgroundColor" red="0.96078431369999995" green="0.96862745100000003" blue="0.98431372549999996" alpha="1" colorSpace="custom" customColorSpace="displayP3"/>
+                                                <constraints>
+                                                    <constraint firstAttribute="height" constant="8" id="QGW-ON-1aC"/>
+                                                </constraints>
+                                                <fontDescription key="fontDescription" type="system" pointSize="17"/>
+                                                <nil key="textColor"/>
+                                                <nil key="highlightedColor"/>
+                                            </label>
+                                            <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="wg1-w4-Rcl" customClass="RectangularDashedView" customModule="OpenBook" customModuleProvider="target">
+                                                <rect key="frame" x="16" y="96.666666666666657" width="288" height="169.99999999999997"/>
+                                                <subviews>
+                                                    <imageView clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" image="ic_camera" translatesAutoresizingMaskIntoConstraints="NO" id="4u0-yr-d2b">
+                                                        <rect key="frame" x="132" y="64.000000000000028" width="24" height="24"/>
+                                                        <constraints>
+                                                            <constraint firstAttribute="height" constant="24" id="Kdx-00-eVn"/>
+                                                            <constraint firstAttribute="width" constant="24" id="LhV-lf-bvw"/>
+                                                        </constraints>
+                                                    </imageView>
+                                                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Upload PAN card front" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="jG4-rZ-G9V">
+                                                        <rect key="frame" x="87.666666666666657" y="92.000000000000028" width="112.66666666666666" height="12.333333333333329"/>
+                                                        <fontDescription key="fontDescription" name="Montserrat-Medium" family="Montserrat" pointSize="10"/>
+                                                        <color key="textColor" red="0.1333333333" green="0.1333333333" blue="0.1333333333" alpha="0.80441241200000002" colorSpace="custom" customColorSpace="displayP3"/>
+                                                        <nil key="highlightedColor"/>
+                                                    </label>
+                                                    <imageView clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" translatesAutoresizingMaskIntoConstraints="NO" id="nja-KC-E8S">
+                                                        <rect key="frame" x="0.0" y="0.0" width="288" height="170"/>
+                                                    </imageView>
+                                                    <button opaque="NO" contentMode="scaleAspectFit" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="CwY-e3-5tC">
+                                                        <rect key="frame" x="0.0" y="0.0" width="288" height="170"/>
+                                                        <color key="tintColor" white="0.0" alpha="0.0" colorSpace="custom" customColorSpace="genericGamma22GrayColorSpace"/>
+                                                        <connections>
+                                                            <action selector="panUploadAction:" destination="4rV-Xi-Y2L" eventType="touchUpInside" id="kQF-XD-183"/>
+                                                        </connections>
+                                                    </button>
+                                                </subviews>
+                                                <color key="backgroundColor" red="0.96078431369999995" green="0.96862745100000003" blue="0.98431372549999996" alpha="1" colorSpace="custom" customColorSpace="displayP3"/>
+                                                <constraints>
+                                                    <constraint firstItem="CwY-e3-5tC" firstAttribute="leading" secondItem="wg1-w4-Rcl" secondAttribute="leading" id="4iv-E6-Onk"/>
+                                                    <constraint firstItem="CwY-e3-5tC" firstAttribute="top" secondItem="wg1-w4-Rcl" secondAttribute="top" id="FWs-se-0Hx"/>
+                                                    <constraint firstAttribute="trailing" secondItem="CwY-e3-5tC" secondAttribute="trailing" id="IQm-lO-SrT"/>
+                                                    <constraint firstAttribute="height" constant="170" id="JOm-2L-nyl"/>
+                                                    <constraint firstAttribute="bottom" secondItem="CwY-e3-5tC" secondAttribute="bottom" id="Kto-u8-Sxo"/>
+                                                    <constraint firstItem="jG4-rZ-G9V" firstAttribute="centerX" secondItem="4u0-yr-d2b" secondAttribute="centerX" id="Rtx-IA-vry"/>
+                                                    <constraint firstItem="4u0-yr-d2b" firstAttribute="centerX" secondItem="wg1-w4-Rcl" secondAttribute="centerX" id="YaP-gr-8cJ"/>
+                                                    <constraint firstAttribute="trailing" secondItem="nja-KC-E8S" secondAttribute="trailing" id="l70-P8-YbQ"/>
+                                                    <constraint firstItem="nja-KC-E8S" firstAttribute="top" secondItem="wg1-w4-Rcl" secondAttribute="top" id="mBf-5t-AQd"/>
+                                                    <constraint firstItem="4u0-yr-d2b" firstAttribute="centerY" secondItem="wg1-w4-Rcl" secondAttribute="centerY" constant="-9" id="nMh-ld-9RX"/>
+                                                    <constraint firstItem="jG4-rZ-G9V" firstAttribute="top" secondItem="4u0-yr-d2b" secondAttribute="bottom" constant="4" id="qxe-N5-UxA"/>
+                                                    <constraint firstItem="nja-KC-E8S" firstAttribute="leading" secondItem="wg1-w4-Rcl" secondAttribute="leading" id="vgG-oj-jih"/>
+                                                    <constraint firstAttribute="bottom" secondItem="nja-KC-E8S" secondAttribute="bottom" id="yEW-lj-2kO"/>
+                                                </constraints>
+                                                <userDefinedRuntimeAttributes>
+                                                    <userDefinedRuntimeAttribute type="number" keyPath="cornerRadius">
+                                                        <real key="value" value="8"/>
+                                                    </userDefinedRuntimeAttribute>
+                                                    <userDefinedRuntimeAttribute type="number" keyPath="dashWidth">
+                                                        <real key="value" value="1"/>
+                                                    </userDefinedRuntimeAttribute>
+                                                    <userDefinedRuntimeAttribute type="color" keyPath="dashColor">
+                                                        <color key="value" red="0.4941176471" green="0.4941176471" blue="0.4941176471" alpha="1" colorSpace="custom" customColorSpace="displayP3"/>
+                                                    </userDefinedRuntimeAttribute>
+                                                    <userDefinedRuntimeAttribute type="number" keyPath="dashLength">
+                                                        <real key="value" value="15"/>
+                                                    </userDefinedRuntimeAttribute>
+                                                    <userDefinedRuntimeAttribute type="number" keyPath="betweenDashesSpace">
+                                                        <real key="value" value="15"/>
+                                                    </userDefinedRuntimeAttribute>
+                                                </userDefinedRuntimeAttributes>
+                                            </view>
+                                            <stackView opaque="NO" contentMode="scaleToFill" axis="vertical" translatesAutoresizingMaskIntoConstraints="NO" id="9AJ-S4-8JZ">
+                                                <rect key="frame" x="0.0" y="434.66666666666663" width="320" height="172"/>
+                                                <subviews>
+                                                    <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="Vow-3Q-W2h">
+                                                        <rect key="frame" x="0.0" y="0.0" width="320" height="172"/>
+                                                        <subviews>
+                                                            <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="HW3-Yf-GAk">
+                                                                <rect key="frame" x="0.0" y="0.0" width="320" height="48"/>
+                                                                <subviews>
+                                                                    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Wrong documents" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="kyz-HB-NDg">
+                                                                        <rect key="frame" x="15.999999999999993" y="16.666666666666742" width="113.33333333333331" height="14.666666666666664"/>
+                                                                        <fontDescription key="fontDescription" name="Montserrat-SemiBold" family="Montserrat" pointSize="12"/>
+                                                                        <nil key="textColor"/>
+                                                                        <nil key="highlightedColor"/>
+                                                                    </label>
+                                                                </subviews>
+                                                                <color key="backgroundColor" red="0.96078431369999995" green="0.96862745100000003" blue="0.98431372549999996" alpha="1" colorSpace="custom" customColorSpace="displayP3"/>
+                                                                <constraints>
+                                                                    <constraint firstItem="kyz-HB-NDg" firstAttribute="centerY" secondItem="HW3-Yf-GAk" secondAttribute="centerY" id="O65-If-gBH"/>
+                                                                    <constraint firstItem="kyz-HB-NDg" firstAttribute="leading" secondItem="HW3-Yf-GAk" secondAttribute="leading" constant="16" id="qtL-l3-fvN"/>
+                                                                    <constraint firstAttribute="height" constant="48" id="yWZ-In-NK5"/>
+                                                                </constraints>
+                                                            </view>
+                                                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="Ts1-XG-IJ7">
+                                                                <rect key="frame" x="0.0" y="64" width="320" height="108"/>
+                                                                <subviews>
+                                                                    <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="hHK-iJ-bSu" userLabel="Content View">
+                                                                        <rect key="frame" x="0.0" y="0.0" width="392" height="108"/>
+                                                                        <subviews>
+                                                                            <stackView opaque="NO" contentMode="scaleToFill" distribution="fillEqually" spacing="16" translatesAutoresizingMaskIntoConstraints="NO" id="Tsn-1E-DaQ">
+                                                                                <rect key="frame" x="16" y="0.0" width="376" height="108"/>
+                                                                                <subviews>
+                                                                                    <imageView clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" image="ic_pan_sample" translatesAutoresizingMaskIntoConstraints="NO" id="eoD-tN-ZgE">
+                                                                                        <rect key="frame" x="0.0" y="0.0" width="82" height="108"/>
+                                                                                    </imageView>
+                                                                                    <imageView clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" image="ic_invoice_sample" translatesAutoresizingMaskIntoConstraints="NO" id="WBE-AX-ADl">
+                                                                                        <rect key="frame" x="98" y="0.0" width="82" height="108"/>
+                                                                                    </imageView>
+                                                                                    <imageView clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" image="ic_bill_sample" translatesAutoresizingMaskIntoConstraints="NO" id="atP-ie-8ib">
+                                                                                        <rect key="frame" x="196" y="0.0" width="82" height="108"/>
+                                                                                    </imageView>
+                                                                                    <imageView clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" image="ic_aadharcard" translatesAutoresizingMaskIntoConstraints="NO" id="LbQ-Fr-c0I">
+                                                                                        <rect key="frame" x="294" y="0.0" width="82" height="108"/>
+                                                                                    </imageView>
+                                                                                </subviews>
+                                                                            </stackView>
+                                                                        </subviews>
+                                                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
+                                                                        <constraints>
+                                                                            <constraint firstAttribute="bottom" secondItem="Tsn-1E-DaQ" secondAttribute="bottom" id="EMc-DK-s56"/>
+                                                                            <constraint firstAttribute="trailing" secondItem="Tsn-1E-DaQ" secondAttribute="trailing" id="hl2-QD-xch"/>
+                                                                            <constraint firstItem="Tsn-1E-DaQ" firstAttribute="leading" secondItem="hHK-iJ-bSu" secondAttribute="leading" constant="16" id="iX1-Pr-XMv"/>
+                                                                            <constraint firstItem="Tsn-1E-DaQ" firstAttribute="top" secondItem="hHK-iJ-bSu" secondAttribute="top" id="xRe-jm-tDw"/>
+                                                                        </constraints>
+                                                                    </view>
+                                                                </subviews>
+                                                                <constraints>
+                                                                    <constraint firstAttribute="height" constant="108" id="1ha-Sd-EqO"/>
+                                                                    <constraint firstItem="hHK-iJ-bSu" firstAttribute="top" secondItem="Ts1-XG-IJ7" secondAttribute="top" id="AoP-Nj-VvO"/>
+                                                                    <constraint firstAttribute="trailing" secondItem="hHK-iJ-bSu" secondAttribute="trailing" id="IVz-aR-6y1"/>
+                                                                    <constraint firstAttribute="bottom" secondItem="hHK-iJ-bSu" secondAttribute="bottom" id="Mc6-0h-5T3"/>
+                                                                    <constraint firstItem="hHK-iJ-bSu" firstAttribute="leading" secondItem="Ts1-XG-IJ7" secondAttribute="leading" id="Qwx-9R-SXD"/>
+                                                                    <constraint firstItem="hHK-iJ-bSu" firstAttribute="height" secondItem="Ts1-XG-IJ7" secondAttribute="height" id="dqS-SJ-olO"/>
+                                                                </constraints>
+                                                            </scrollView>
+                                                        </subviews>
+                                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
+                                                        <constraints>
+                                                            <constraint firstItem="Ts1-XG-IJ7" firstAttribute="top" secondItem="HW3-Yf-GAk" secondAttribute="bottom" constant="16" id="5dn-3A-fjZ"/>
+                                                            <constraint firstItem="HW3-Yf-GAk" firstAttribute="top" secondItem="Vow-3Q-W2h" secondAttribute="top" id="7dT-1g-vRs"/>
+                                                            <constraint firstAttribute="trailing" secondItem="Ts1-XG-IJ7" secondAttribute="trailing" id="dmT-e2-Tbj"/>
+                                                            <constraint firstItem="Ts1-XG-IJ7" firstAttribute="leading" secondItem="Vow-3Q-W2h" secondAttribute="leading" id="h6K-ow-k3b"/>
+                                                            <constraint firstAttribute="height" constant="172" id="hAy-5m-YK3"/>
+                                                            <constraint firstItem="HW3-Yf-GAk" firstAttribute="leading" secondItem="Vow-3Q-W2h" secondAttribute="leading" id="k1I-hO-fhO"/>
+                                                            <constraint firstAttribute="trailing" secondItem="HW3-Yf-GAk" secondAttribute="trailing" id="kmu-R2-Lyq"/>
+                                                        </constraints>
+                                                    </view>
+                                                </subviews>
+                                                <constraints>
+                                                    <constraint firstAttribute="bottom" secondItem="Vow-3Q-W2h" secondAttribute="bottom" id="TMR-bP-5Yi"/>
+                                                </constraints>
+                                            </stackView>
+                                            <stackView opaque="NO" contentMode="scaleToFill" axis="vertical" spacing="10" translatesAutoresizingMaskIntoConstraints="NO" id="rkg-xY-fn3">
+                                                <rect key="frame" x="16" y="626.66666666666663" width="288" height="168"/>
+                                                <subviews>
+                                                    <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="szb-u5-Jae" customClass="DataSecurityView" customModule="OpenBook" customModuleProvider="target">
+                                                        <rect key="frame" x="0.0" y="0.0" width="288" height="110"/>
+                                                        <color key="backgroundColor" white="1" alpha="1" colorSpace="custom" customColorSpace="genericGamma22GrayColorSpace"/>
+                                                        <constraints>
+                                                            <constraint firstAttribute="height" constant="110" id="B8U-Dz-Pux"/>
+                                                        </constraints>
+                                                    </view>
+                                                    <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="ZQf-h5-RXs" customClass="BorderButton" customModule="OpenBook" customModuleProvider="target">
+                                                        <rect key="frame" x="0.0" y="120" width="288" height="48"/>
+                                                        <color key="backgroundColor" red="0.0" green="0.71764705880000002" blue="0.83529411760000005" alpha="1" colorSpace="custom" customColorSpace="displayP3"/>
+                                                        <constraints>
+                                                            <constraint firstAttribute="height" constant="48" id="8gS-IE-zD0"/>
+                                                        </constraints>
+                                                        <fontDescription key="fontDescription" name="Montserrat-Medium" family="Montserrat" pointSize="14"/>
+                                                        <state key="normal" title="Proceed">
+                                                            <color key="titleColor" white="1" alpha="1" colorSpace="custom" customColorSpace="genericGamma22GrayColorSpace"/>
+                                                        </state>
+                                                        <userDefinedRuntimeAttributes>
+                                                            <userDefinedRuntimeAttribute type="number" keyPath="layer.cornerRadius">
+                                                                <integer key="value" value="5"/>
+                                                            </userDefinedRuntimeAttribute>
+                                                        </userDefinedRuntimeAttributes>
+                                                        <connections>
+                                                            <action selector="proceedAction:" destination="4rV-Xi-Y2L" eventType="touchUpInside" id="whS-hm-aCZ"/>
+                                                        </connections>
+                                                    </button>
+                                                </subviews>
+                                            </stackView>
+                                            <stackView opaque="NO" contentMode="scaleToFill" axis="vertical" translatesAutoresizingMaskIntoConstraints="NO" id="gGm-go-rOu">
+                                                <rect key="frame" x="0.0" y="295.33333333333331" width="320" height="139.33333333333331"/>
+                                                <subviews>
+                                                    <tableView clipsSubviews="YES" contentMode="scaleToFill" alwaysBounceVertical="YES" scrollEnabled="NO" showsVerticalScrollIndicator="NO" dataMode="prototypes" style="plain" separatorStyle="default" rowHeight="-1" estimatedRowHeight="-1" sectionHeaderHeight="28" sectionFooterHeight="28" translatesAutoresizingMaskIntoConstraints="NO" id="fEu-ZA-E5z">
+                                                        <rect key="frame" x="0.0" y="0.0" width="320" height="139.33333333333334"/>
+                                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
+                                                        <constraints>
+                                                            <constraint firstAttribute="height" constant="139.5" id="4nd-tO-9QF"/>
+                                                        </constraints>
+                                                        <prototypes>
+                                                            <tableViewCell clipsSubviews="YES" contentMode="scaleToFill" preservesSuperviewLayoutMargins="YES" selectionStyle="default" indentationWidth="10" reuseIdentifier="DocumentUploadTableViewCell" rowHeight="76.5" id="HMo-pv-zn6" customClass="DocumentUploadTableViewCell" customModule="OpenBook" customModuleProvider="target">
+                                                                <rect key="frame" x="0.0" y="28" width="320" height="76.5"/>
+                                                                <autoresizingMask key="autoresizingMask"/>
+                                                                <tableViewCellContentView key="contentView" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" preservesSuperviewLayoutMargins="YES" insetsLayoutMarginsFromSafeArea="NO" tableViewCell="HMo-pv-zn6" id="QXo-Lj-6kT">
+                                                                    <rect key="frame" x="0.0" y="0.0" width="320" height="76.5"/>
+                                                                    <autoresizingMask key="autoresizingMask"/>
+                                                                    <subviews>
+                                                                        <imageView clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" image="ic_bill_sample" translatesAutoresizingMaskIntoConstraints="NO" id="FPU-Aa-LLR">
+                                                                            <rect key="frame" x="16" y="9.9999999999999964" width="46" height="56.666666666666657"/>
+                                                                            <constraints>
+                                                                                <constraint firstAttribute="height" constant="56" id="VyE-36-Oi1"/>
+                                                                                <constraint firstAttribute="width" constant="46" id="qSL-dh-LJ3"/>
+                                                                            </constraints>
+                                                                        </imageView>
+                                                                        <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="9rW-U7-32h">
+                                                                            <rect key="frame" x="254" y="13.333333333333336" width="50" height="50"/>
+                                                                            <constraints>
+                                                                                <constraint firstAttribute="width" constant="50" id="ewF-as-Hv6"/>
+                                                                                <constraint firstAttribute="height" constant="50" id="sQc-Tz-Gdu"/>
+                                                                            </constraints>
+                                                                            <state key="normal" image="Delete"/>
+                                                                            <connections>
+                                                                                <action selector="deleteAction:" destination="HMo-pv-zn6" eventType="touchUpInside" id="F25-Xu-bPH"/>
+                                                                            </connections>
+                                                                        </button>
+                                                                        <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="Label" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="wak-kB-vW8">
+                                                                            <rect key="frame" x="72" y="28" width="174" height="20.333333333333329"/>
+                                                                            <fontDescription key="fontDescription" type="system" pointSize="17"/>
+                                                                            <nil key="textColor"/>
+                                                                            <nil key="highlightedColor"/>
+                                                                        </label>
+                                                                    </subviews>
+                                                                    <constraints>
+                                                                        <constraint firstAttribute="trailing" secondItem="9rW-U7-32h" secondAttribute="trailing" constant="16" id="5tt-fe-udM"/>
+                                                                        <constraint firstItem="FPU-Aa-LLR" firstAttribute="top" secondItem="QXo-Lj-6kT" secondAttribute="top" constant="10" id="93d-AL-h3i"/>
+                                                                        <constraint firstItem="9rW-U7-32h" firstAttribute="leading" secondItem="wak-kB-vW8" secondAttribute="trailing" constant="8" id="cwu-ku-mWu"/>
+                                                                        <constraint firstItem="FPU-Aa-LLR" firstAttribute="leading" secondItem="QXo-Lj-6kT" secondAttribute="leading" constant="16" id="fhw-Lp-Lo5"/>
+                                                                        <constraint firstItem="wak-kB-vW8" firstAttribute="leading" secondItem="FPU-Aa-LLR" secondAttribute="trailing" constant="10" id="n5I-bT-SNd"/>
+                                                                        <constraint firstAttribute="bottom" secondItem="FPU-Aa-LLR" secondAttribute="bottom" constant="10" id="raJ-JE-NEE"/>
+                                                                        <constraint firstItem="9rW-U7-32h" firstAttribute="centerY" secondItem="FPU-Aa-LLR" secondAttribute="centerY" id="t1V-A0-zKU"/>
+                                                                        <constraint firstItem="FPU-Aa-LLR" firstAttribute="centerY" secondItem="QXo-Lj-6kT" secondAttribute="centerY" id="xBt-TK-yOQ"/>
+                                                                        <constraint firstItem="wak-kB-vW8" firstAttribute="centerY" secondItem="FPU-Aa-LLR" secondAttribute="centerY" id="zUA-jw-VZ8"/>
+                                                                    </constraints>
+                                                                </tableViewCellContentView>
+                                                                <connections>
+                                                                    <outlet property="deleteButton" destination="9rW-U7-32h" id="Ivq-Nj-tRS"/>
+                                                                    <outlet property="docNameLabel" destination="wak-kB-vW8" id="LEH-x3-PRS"/>
+                                                                    <outlet property="documentImageView" destination="FPU-Aa-LLR" id="kGb-sH-I3J"/>
+                                                                </connections>
+                                                            </tableViewCell>
+                                                        </prototypes>
+                                                        <connections>
+                                                            <outlet property="dataSource" destination="4rV-Xi-Y2L" id="ReB-1l-Lxw"/>
+                                                            <outlet property="delegate" destination="4rV-Xi-Y2L" id="bfV-rC-Cil"/>
+                                                        </connections>
+                                                    </tableView>
+                                                </subviews>
+                                            </stackView>
+                                            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="2 Items" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" id="NES-ig-mcr">
+                                                <rect key="frame" x="16" y="274.66666666666669" width="288" height="12.666666666666686"/>
+                                                <constraints>
+                                                    <constraint firstAttribute="height" constant="12.5" id="W3l-1s-EP6"/>
+                                                </constraints>
+                                                <fontDescription key="fontDescription" name="Montserrat-SemiBold" family="Montserrat" pointSize="10"/>
+                                                <nil key="textColor"/>
+                                                <nil key="highlightedColor"/>
+                                            </label>
+                                        </subviews>
+                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
+                                        <constraints>
+                                            <constraint firstItem="wg1-w4-Rcl" firstAttribute="top" secondItem="5mW-JQ-Xia" secondAttribute="bottom" constant="16" id="0DH-96-kqA"/>
+                                            <constraint firstItem="9AJ-S4-8JZ" firstAttribute="leading" secondItem="IeN-mV-BX6" secondAttribute="leading" id="2UY-za-azd"/>
+                                            <constraint firstItem="NES-ig-mcr" firstAttribute="top" secondItem="wg1-w4-Rcl" secondAttribute="bottom" constant="8" id="4Pw-5b-RtN"/>
+                                            <constraint firstAttribute="trailing" secondItem="rkg-xY-fn3" secondAttribute="trailing" constant="16" id="5wF-tv-XXS"/>
+                                            <constraint firstItem="9AJ-S4-8JZ" firstAttribute="top" secondItem="gGm-go-rOu" secondAttribute="bottom" id="E6T-oT-d0j"/>
+                                            <constraint firstItem="rkg-xY-fn3" firstAttribute="top" secondItem="9AJ-S4-8JZ" secondAttribute="bottom" constant="20" id="HIo-ka-0CL"/>
+                                            <constraint firstAttribute="trailing" secondItem="9AJ-S4-8JZ" secondAttribute="trailing" id="I47-3O-3Rb"/>
+                                            <constraint firstItem="gGm-go-rOu" firstAttribute="leading" secondItem="IeN-mV-BX6" secondAttribute="leading" id="K58-bP-dTI"/>
+                                            <constraint firstAttribute="trailing" secondItem="5mW-JQ-Xia" secondAttribute="trailing" id="K6L-9h-wUO"/>
+                                            <constraint firstAttribute="trailing" secondItem="NES-ig-mcr" secondAttribute="trailing" constant="16" id="MPy-8e-17r"/>
+                                            <constraint firstItem="60Z-rP-qWz" firstAttribute="leading" secondItem="IeN-mV-BX6" secondAttribute="leading" constant="16" id="Mku-HY-qqZ"/>
+                                            <constraint firstAttribute="trailing" secondItem="QUr-Yo-Ndq" secondAttribute="trailing" constant="16" id="Qul-rG-yvn"/>
+                                            <constraint firstItem="5mW-JQ-Xia" firstAttribute="leading" secondItem="IeN-mV-BX6" secondAttribute="leading" id="TxO-Tx-1So"/>
+                                            <constraint firstAttribute="trailing" secondItem="gGm-go-rOu" secondAttribute="trailing" id="XhV-Gr-mlH"/>
+                                            <constraint firstItem="wg1-w4-Rcl" firstAttribute="leading" secondItem="IeN-mV-BX6" secondAttribute="leading" constant="16" id="Zt4-Qh-8sl"/>
+                                            <constraint firstItem="60Z-rP-qWz" firstAttribute="top" secondItem="IeN-mV-BX6" secondAttribute="top" constant="16" id="a0t-Px-VZq"/>
+                                            <constraint firstItem="NES-ig-mcr" firstAttribute="leading" secondItem="IeN-mV-BX6" secondAttribute="leading" constant="16" id="bCe-Am-78q"/>
+                                            <constraint firstAttribute="trailing" secondItem="wg1-w4-Rcl" secondAttribute="trailing" constant="16" id="hSt-SC-G9C"/>
+                                            <constraint firstItem="QUr-Yo-Ndq" firstAttribute="leading" secondItem="IeN-mV-BX6" secondAttribute="leading" constant="16" id="hX3-Je-fRc"/>
+                                            <constraint firstItem="5mW-JQ-Xia" firstAttribute="top" secondItem="QUr-Yo-Ndq" secondAttribute="bottom" constant="16" id="ksB-AG-m8j"/>
+                                            <constraint firstItem="gGm-go-rOu" firstAttribute="top" secondItem="NES-ig-mcr" secondAttribute="bottom" constant="8" id="rkE-uj-PRP"/>
+                                            <constraint firstItem="rkg-xY-fn3" firstAttribute="leading" secondItem="IeN-mV-BX6" secondAttribute="leading" constant="16" id="vgA-65-kB4"/>
+                                            <constraint firstAttribute="bottom" secondItem="rkg-xY-fn3" secondAttribute="bottom" constant="29" id="xZa-6f-hQF"/>
+                                            <constraint firstItem="QUr-Yo-Ndq" firstAttribute="top" secondItem="60Z-rP-qWz" secondAttribute="bottom" constant="16" id="y2J-GM-mRA"/>
+                                        </constraints>
+                                    </view>
+                                </subviews>
+                                <constraints>
+                                    <constraint firstAttribute="trailing" secondItem="IeN-mV-BX6" secondAttribute="trailing" id="63E-6u-yLq"/>
+                                    <constraint firstItem="IeN-mV-BX6" firstAttribute="width" secondItem="ln5-BY-8i0" secondAttribute="width" id="7tC-HA-mK9"/>
+                                    <constraint firstAttribute="bottom" secondItem="IeN-mV-BX6" secondAttribute="bottom" id="I04-KZ-ps6"/>
+                                    <constraint firstItem="IeN-mV-BX6" firstAttribute="leading" secondItem="ln5-BY-8i0" secondAttribute="leading" id="IaR-r3-dv6"/>
+                                    <constraint firstItem="IeN-mV-BX6" firstAttribute="top" secondItem="ln5-BY-8i0" secondAttribute="top" id="vxj-Lv-kEI"/>
+                                </constraints>
+                            </scrollView>
+                        </subviews>
+                        <viewLayoutGuide key="safeArea" id="3ZL-vK-Xaf"/>
+                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
+                        <constraints>
+                            <constraint firstItem="dVt-F6-IDu" firstAttribute="leading" secondItem="wf8-Nh-sgQ" secondAttribute="leading" id="6aW-cj-ifY"/>
+                            <constraint firstItem="3ZL-vK-Xaf" firstAttribute="bottom" secondItem="ln5-BY-8i0" secondAttribute="bottom" id="6ae-jE-E7F"/>
+                            <constraint firstItem="IsT-1S-MZn" firstAttribute="top" secondItem="3ZL-vK-Xaf" secondAttribute="top" id="R0Z-ZA-wPf"/>
+                            <constraint firstItem="ln5-BY-8i0" firstAttribute="trailing" secondItem="3ZL-vK-Xaf" secondAttribute="trailing" id="TcK-OQ-TLv"/>
+                            <constraint firstItem="ln5-BY-8i0" firstAttribute="top" secondItem="dVt-F6-IDu" secondAttribute="bottom" id="cZb-XC-Gku"/>
+                            <constraint firstItem="IsT-1S-MZn" firstAttribute="leading" secondItem="3ZL-vK-Xaf" secondAttribute="leading" id="h83-gy-hAH"/>
+                            <constraint firstItem="IsT-1S-MZn" firstAttribute="trailing" secondItem="3ZL-vK-Xaf" secondAttribute="trailing" id="sDr-eI-mMI"/>
+                            <constraint firstItem="dVt-F6-IDu" firstAttribute="top" secondItem="IsT-1S-MZn" secondAttribute="bottom" id="spC-e3-VZJ"/>
+                            <constraint firstAttribute="trailing" secondItem="dVt-F6-IDu" secondAttribute="trailing" id="syo-om-i5y"/>
+                            <constraint firstItem="ln5-BY-8i0" firstAttribute="leading" secondItem="3ZL-vK-Xaf" secondAttribute="leading" id="uIS-36-ImK"/>
+                        </constraints>
+                    </view>
+                    <size key="freeformSize" width="320" height="950"/>
+                    <connections>
+                        <outlet property="imageLabel" destination="jG4-rZ-G9V" id="5mt-qF-E37"/>
+                        <outlet property="itemsCountLabel" destination="NES-ig-mcr" id="pJj-NM-C57"/>
+                        <outlet property="navigationBarView" destination="IsT-1S-MZn" id="vSD-A3-xEm"/>
+                        <outlet property="panImageView" destination="nja-KC-E8S" id="DJX-ld-1n5"/>
+                        <outlet property="panUploadButton" destination="CwY-e3-5tC" id="0Qc-Ms-hDF"/>
+                        <outlet property="proceedButton" destination="ZQf-h5-RXs" id="tzQ-L2-P7n"/>
+                        <outlet property="tableView" destination="fEu-ZA-E5z" id="LvB-kn-0a8"/>
+                        <outlet property="tableViewHeight" destination="4nd-tO-9QF" id="aFr-Lp-oGd"/>
+                        <outlet property="wrongDocumentView" destination="Vow-3Q-W2h" id="cxe-V9-pVf"/>
+                    </connections>
+                </viewController>
+                <placeholder placeholderIdentifier="IBFirstResponder" id="XLI-EG-pua" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
+            </objects>
+            <point key="canvasLocation" x="2646" y="-620"/>
         </scene>
     </scenes>
     <designables>
         <designable name="5SB-Tt-x6l">
-            <size key="intrinsicContentSize" width="87" height="17"/>
+            <size key="intrinsicContentSize" width="109" height="18"/>
         </designable>
         <designable name="AQW-14-gCs">
             <size key="intrinsicContentSize" width="57" height="30"/>
         </designable>
         <designable name="Amw-dF-Lfx">
-            <size key="intrinsicContentSize" width="40" height="31"/>
+            <size key="intrinsicContentSize" width="46" height="32"/>
         </designable>
         <designable name="Cyh-Cz-TJ2">
-            <size key="intrinsicContentSize" width="53" height="29"/>
+            <size key="intrinsicContentSize" width="58" height="30"/>
         </designable>
         <designable name="DIf-b9-YM7">
             <size key="intrinsicContentSize" width="57" height="30"/>
@@ -2538,13 +2962,13 @@
             <size key="intrinsicContentSize" width="57" height="30"/>
         </designable>
         <designable name="Pdw-Gu-64P">
-            <size key="intrinsicContentSize" width="53" height="29"/>
+            <size key="intrinsicContentSize" width="58" height="30"/>
         </designable>
         <designable name="RKY-Ge-145">
-            <size key="intrinsicContentSize" width="53" height="29"/>
+            <size key="intrinsicContentSize" width="58" height="30"/>
         </designable>
         <designable name="RVX-Yf-Ye7">
-            <size key="intrinsicContentSize" width="53" height="29"/>
+            <size key="intrinsicContentSize" width="58" height="30"/>
         </designable>
         <designable name="SXY-Fp-Gis">
             <size key="intrinsicContentSize" width="157.66666666666666" height="18.666666666666668"/>
@@ -2553,16 +2977,19 @@
             <size key="intrinsicContentSize" width="55" height="30"/>
         </designable>
         <designable name="YRM-1h-tJV">
-            <size key="intrinsicContentSize" width="34" height="31"/>
+            <size key="intrinsicContentSize" width="38" height="32"/>
+        </designable>
+        <designable name="ZQf-h5-RXs">
+            <size key="intrinsicContentSize" width="58" height="30"/>
         </designable>
         <designable name="Zhh-wH-WK5">
-            <size key="intrinsicContentSize" width="135" height="24"/>
+            <size key="intrinsicContentSize" width="156" height="24"/>
         </designable>
         <designable name="gsQ-24-fRO">
-            <size key="intrinsicContentSize" width="34" height="29"/>
+            <size key="intrinsicContentSize" width="38" height="30"/>
         </designable>
         <designable name="ljq-ED-uIU">
-            <size key="intrinsicContentSize" width="75" height="31"/>
+            <size key="intrinsicContentSize" width="84" height="32"/>
         </designable>
         <designable name="xMW-bU-Cwx">
             <size key="intrinsicContentSize" width="171.66666666666666" height="18.666666666666668"/>
diff --git a/OpenBook/OpenBook/Storyboards/Base.lproj/Money.storyboard b/OpenBook/OpenBook/Storyboards/Base.lproj/Money.storyboard
index 631fe221..749ed3d5 100644
--- a/OpenBook/OpenBook/Storyboards/Base.lproj/Money.storyboard
+++ b/OpenBook/OpenBook/Storyboards/Base.lproj/Money.storyboard
@@ -1,9 +1,9 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<document type="com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB" version="3.0" toolsVersion="18122" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" useTraitCollections="YES" useSafeAreas="YES" colorMatched="YES" initialViewController="7DO-QE-M1N">
+<document type="com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB" version="3.0" toolsVersion="17701" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" useTraitCollections="YES" useSafeAreas="YES" colorMatched="YES" initialViewController="7DO-QE-M1N">
     <device id="retina6_1" orientation="portrait" appearance="light"/>
     <dependencies>
         <deployment identifier="iOS"/>
-        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="18093"/>
+        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="17703"/>
         <capability name="Safe area layout guides" minToolsVersion="9.0"/>
         <capability name="System colors in document resources" minToolsVersion="11.0"/>
         <capability name="collection view cell content view" minToolsVersion="11.0"/>
@@ -34,7 +34,7 @@
                                 <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                 <prototypes>
                                     <tableViewCell clipsSubviews="YES" contentMode="scaleToFill" preservesSuperviewLayoutMargins="YES" selectionStyle="none" indentationWidth="10" reuseIdentifier="CardsFirstTabeViewcell" rowHeight="282" id="lKg-Ih-4wz" customClass="CardsFirstTabeViewcell" customModule="OpenBook" customModuleProvider="target">
-                                        <rect key="frame" x="0.0" y="24.5" width="414" height="282"/>
+                                        <rect key="frame" x="0.0" y="28" width="414" height="282"/>
                                         <autoresizingMask key="autoresizingMask"/>
                                         <tableViewCellContentView key="contentView" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" preservesSuperviewLayoutMargins="YES" insetsLayoutMarginsFromSafeArea="NO" tableViewCell="lKg-Ih-4wz" id="Hgw-vV-mqu">
                                             <rect key="frame" x="0.0" y="0.0" width="414" height="282"/>
@@ -107,7 +107,7 @@
                                         </connections>
                                     </tableViewCell>
                                     <tableViewCell clipsSubviews="YES" contentMode="scaleToFill" preservesSuperviewLayoutMargins="YES" selectionStyle="none" indentationWidth="10" reuseIdentifier="CardHeaderTableViewCell" id="vTZ-ro-4Tj" customClass="CardHeaderTableViewCell" customModule="OpenBook" customModuleProvider="target">
-                                        <rect key="frame" x="0.0" y="306.5" width="414" height="40"/>
+                                        <rect key="frame" x="0.0" y="310" width="414" height="40"/>
                                         <autoresizingMask key="autoresizingMask"/>
                                         <tableViewCellContentView key="contentView" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" preservesSuperviewLayoutMargins="YES" insetsLayoutMarginsFromSafeArea="NO" tableViewCell="vTZ-ro-4Tj" id="vrx-6i-5kT">
                                             <rect key="frame" x="0.0" y="0.0" width="414" height="40"/>
@@ -143,7 +143,7 @@
                                         </connections>
                                     </tableViewCell>
                                     <tableViewCell clipsSubviews="YES" contentMode="scaleToFill" preservesSuperviewLayoutMargins="YES" selectionStyle="none" indentationWidth="10" reuseIdentifier="CardSecondTableViewCell" rowHeight="205" id="55B-qU-1R0" customClass="CardSecondTableViewCell" customModule="OpenBook" customModuleProvider="target">
-                                        <rect key="frame" x="0.0" y="346.5" width="414" height="205"/>
+                                        <rect key="frame" x="0.0" y="350" width="414" height="205"/>
                                         <autoresizingMask key="autoresizingMask"/>
                                         <tableViewCellContentView key="contentView" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" preservesSuperviewLayoutMargins="YES" insetsLayoutMarginsFromSafeArea="NO" tableViewCell="55B-qU-1R0" id="Kbm-KQ-P7C">
                                             <rect key="frame" x="0.0" y="0.0" width="414" height="205"/>
@@ -305,7 +305,7 @@
                                         </connections>
                                     </tableViewCell>
                                     <tableViewCell clipsSubviews="YES" contentMode="scaleToFill" preservesSuperviewLayoutMargins="YES" selectionStyle="none" indentationWidth="10" reuseIdentifier="CardThirdTableViewCell" id="1fo-JV-9Mc" customClass="CardThirdTableViewCell" customModule="OpenBook" customModuleProvider="target">
-                                        <rect key="frame" x="0.0" y="551.5" width="414" height="369.5"/>
+                                        <rect key="frame" x="0.0" y="555" width="414" height="369.5"/>
                                         <autoresizingMask key="autoresizingMask"/>
                                         <tableViewCellContentView key="contentView" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" preservesSuperviewLayoutMargins="YES" insetsLayoutMarginsFromSafeArea="NO" tableViewCell="1fo-JV-9Mc" id="Rhd-ed-hMR">
                                             <rect key="frame" x="0.0" y="0.0" width="414" height="369.5"/>
@@ -697,7 +697,7 @@
                                         <color key="backgroundColor" white="1" alpha="1" colorSpace="custom" customColorSpace="genericGamma22GrayColorSpace"/>
                                         <prototypes>
                                             <tableViewCell clipsSubviews="YES" contentMode="scaleToFill" preservesSuperviewLayoutMargins="YES" selectionStyle="default" indentationWidth="10" reuseIdentifier="CardManagementTableViewCell" rowHeight="57" id="Nrq-eK-Mjs" customClass="CardManagementTableViewCell" customModule="OpenBook" customModuleProvider="target">
-                                                <rect key="frame" x="0.0" y="24.5" width="414" height="57"/>
+                                                <rect key="frame" x="0.0" y="28" width="414" height="57"/>
                                                 <autoresizingMask key="autoresizingMask"/>
                                                 <tableViewCellContentView key="contentView" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" preservesSuperviewLayoutMargins="YES" insetsLayoutMarginsFromSafeArea="NO" tableViewCell="Nrq-eK-Mjs" id="mKY-P4-n62">
                                                     <rect key="frame" x="0.0" y="0.0" width="414" height="57"/>
@@ -758,7 +758,7 @@
                                                 </connections>
                                             </tableViewCell>
                                             <tableViewCell clipsSubviews="YES" contentMode="scaleToFill" preservesSuperviewLayoutMargins="YES" selectionStyle="default" indentationWidth="10" reuseIdentifier="CardManagementBottomTableViewCell" rowHeight="68" id="WiZ-wf-9sw" customClass="CardManagementTableViewCell" customModule="OpenBook" customModuleProvider="target">
-                                                <rect key="frame" x="0.0" y="81.5" width="414" height="68"/>
+                                                <rect key="frame" x="0.0" y="85" width="414" height="68"/>
                                                 <autoresizingMask key="autoresizingMask"/>
                                                 <tableViewCellContentView key="contentView" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" preservesSuperviewLayoutMargins="YES" insetsLayoutMarginsFromSafeArea="NO" tableViewCell="WiZ-wf-9sw" id="CaU-G5-Xwx">
                                                     <rect key="frame" x="0.0" y="0.0" width="414" height="68"/>
@@ -1082,7 +1082,7 @@
                                 <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                 <prototypes>
                                     <tableViewCell clipsSubviews="YES" contentMode="scaleToFill" preservesSuperviewLayoutMargins="YES" selectionStyle="none" indentationWidth="10" reuseIdentifier="AccountDetailsTableViewCell" rowHeight="94" id="VRF-a0-YyK" customClass="AccountDetailsTableViewCell" customModule="OpenBook" customModuleProvider="target">
-                                        <rect key="frame" x="0.0" y="24.5" width="414" height="94"/>
+                                        <rect key="frame" x="0.0" y="28" width="414" height="94"/>
                                         <autoresizingMask key="autoresizingMask"/>
                                         <tableViewCellContentView key="contentView" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" preservesSuperviewLayoutMargins="YES" insetsLayoutMarginsFromSafeArea="NO" tableViewCell="VRF-a0-YyK" id="7ym-LF-gKy">
                                             <rect key="frame" x="0.0" y="0.0" width="414" height="94"/>
@@ -1154,7 +1154,7 @@
                                         </connections>
                                     </tableViewCell>
                                     <tableViewCell clipsSubviews="YES" contentMode="scaleToFill" preservesSuperviewLayoutMargins="YES" selectionStyle="none" indentationWidth="10" reuseIdentifier="TransferAmountToTableViewCell" rowHeight="120" id="vgH-A5-4Sz" customClass="TransferAmountToTableViewCell" customModule="OpenBook" customModuleProvider="target">
-                                        <rect key="frame" x="0.0" y="118.5" width="414" height="120"/>
+                                        <rect key="frame" x="0.0" y="122" width="414" height="120"/>
                                         <autoresizingMask key="autoresizingMask"/>
                                         <tableViewCellContentView key="contentView" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" preservesSuperviewLayoutMargins="YES" insetsLayoutMarginsFromSafeArea="NO" tableViewCell="vgH-A5-4Sz" id="D0r-aP-jRD">
                                             <rect key="frame" x="0.0" y="0.0" width="414" height="120"/>
@@ -1260,7 +1260,7 @@
                                         </connections>
                                     </tableViewCell>
                                     <tableViewCell clipsSubviews="YES" contentMode="scaleToFill" preservesSuperviewLayoutMargins="YES" selectionStyle="none" indentationWidth="10" reuseIdentifier="TransferAmountFromTableViewCell" rowHeight="105" id="j2J-FQ-CW4" customClass="TransferAmountFromTableViewCell" customModule="OpenBook" customModuleProvider="target">
-                                        <rect key="frame" x="0.0" y="238.5" width="414" height="105"/>
+                                        <rect key="frame" x="0.0" y="242" width="414" height="105"/>
                                         <autoresizingMask key="autoresizingMask"/>
                                         <tableViewCellContentView key="contentView" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" preservesSuperviewLayoutMargins="YES" insetsLayoutMarginsFromSafeArea="NO" tableViewCell="j2J-FQ-CW4" id="SVW-ZF-4h4">
                                             <rect key="frame" x="0.0" y="0.0" width="414" height="105"/>
@@ -1358,7 +1358,7 @@
                                         </connections>
                                     </tableViewCell>
                                     <tableViewCell clipsSubviews="YES" contentMode="scaleToFill" preservesSuperviewLayoutMargins="YES" selectionStyle="none" indentationWidth="10" reuseIdentifier="BankLogoBottomTableViewCell" id="iAt-C6-oaU" customClass="BankLogoBottomTableViewCell" customModule="OpenBook" customModuleProvider="target">
-                                        <rect key="frame" x="0.0" y="343.5" width="414" height="44"/>
+                                        <rect key="frame" x="0.0" y="347" width="414" height="44"/>
                                         <autoresizingMask key="autoresizingMask"/>
                                         <tableViewCellContentView key="contentView" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" preservesSuperviewLayoutMargins="YES" insetsLayoutMarginsFromSafeArea="NO" tableViewCell="iAt-C6-oaU" id="CX5-Dr-pB2">
                                             <rect key="frame" x="0.0" y="0.0" width="414" height="44"/>
@@ -1996,7 +1996,7 @@
                                         <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                         <prototypes>
                                             <tableViewCell clipsSubviews="YES" contentMode="scaleToFill" preservesSuperviewLayoutMargins="YES" selectionStyle="none" indentationWidth="10" reuseIdentifier="CardTransactionsTableViewCell" rowHeight="50" id="C0S-t0-dIx" customClass="CardTransactionsTableViewCell" customModule="OpenBook" customModuleProvider="target">
-                                                <rect key="frame" x="0.0" y="24.5" width="414" height="50"/>
+                                                <rect key="frame" x="0.0" y="28" width="414" height="50"/>
                                                 <autoresizingMask key="autoresizingMask"/>
                                                 <tableViewCellContentView key="contentView" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" preservesSuperviewLayoutMargins="YES" insetsLayoutMarginsFromSafeArea="NO" tableViewCell="C0S-t0-dIx" id="nKT-a2-GSW">
                                                     <rect key="frame" x="0.0" y="0.0" width="414" height="50"/>
diff --git a/OpenBook/Podfile.lock b/OpenBook/Podfile.lock
index 29b058d0..d4ce084a 100644
--- a/OpenBook/Podfile.lock
+++ b/OpenBook/Podfile.lock
@@ -1,125 +1,132 @@
 PODS:
-  - Alamofire (5.4.3)
+  - Alamofire (5.4.4)
   - AlamofireNetworkActivityLogger (3.4.0):
     - Alamofire (~> 5.4.0)
   - CleverTap-iOS-SDK (3.10.0):
     - SDWebImage (~> 5.1)
-  - Firebase/Analytics (8.7.0):
+  - Firebase/Analytics (8.9.1):
     - Firebase/Core
-  - Firebase/Core (8.7.0):
+  - Firebase/Core (8.9.1):
     - Firebase/CoreOnly
-    - FirebaseAnalytics (~> 8.7.0)
-  - Firebase/CoreOnly (8.7.0):
-    - FirebaseCore (= 8.7.0)
-  - Firebase/Crashlytics (8.7.0):
+    - FirebaseAnalytics (~> 8.9.1)
+  - Firebase/CoreOnly (8.9.1):
+    - FirebaseCore (= 8.9.1)
+  - Firebase/Crashlytics (8.9.1):
     - Firebase/CoreOnly
-    - FirebaseCrashlytics (~> 8.7.0)
-  - Firebase/Messaging (8.7.0):
+    - FirebaseCrashlytics (~> 8.9.0)
+  - Firebase/Messaging (8.9.1):
     - Firebase/CoreOnly
-    - FirebaseMessaging (~> 8.7.0)
-  - FirebaseAnalytics (8.7.0):
-    - FirebaseAnalytics/AdIdSupport (= 8.7.0)
+    - FirebaseMessaging (~> 8.9.0)
+  - FirebaseAnalytics (8.9.1):
+    - FirebaseAnalytics/AdIdSupport (= 8.9.1)
     - FirebaseCore (~> 8.0)
     - FirebaseInstallations (~> 8.0)
-    - GoogleUtilities/AppDelegateSwizzler (~> 7.4)
-    - GoogleUtilities/MethodSwizzler (~> 7.4)
-    - GoogleUtilities/Network (~> 7.4)
-    - "GoogleUtilities/NSData+zlib (~> 7.4)"
+    - GoogleUtilities/AppDelegateSwizzler (~> 7.6)
+    - GoogleUtilities/MethodSwizzler (~> 7.6)
+    - GoogleUtilities/Network (~> 7.6)
+    - "GoogleUtilities/NSData+zlib (~> 7.6)"
     - nanopb (~> 2.30908.0)
-  - FirebaseAnalytics/AdIdSupport (8.7.0):
+  - FirebaseAnalytics/AdIdSupport (8.9.1):
     - FirebaseCore (~> 8.0)
     - FirebaseInstallations (~> 8.0)
-    - GoogleAppMeasurement (= 8.7.0)
-    - GoogleUtilities/AppDelegateSwizzler (~> 7.4)
-    - GoogleUtilities/MethodSwizzler (~> 7.4)
-    - GoogleUtilities/Network (~> 7.4)
-    - "GoogleUtilities/NSData+zlib (~> 7.4)"
+    - GoogleAppMeasurement (= 8.9.1)
+    - GoogleUtilities/AppDelegateSwizzler (~> 7.6)
+    - GoogleUtilities/MethodSwizzler (~> 7.6)
+    - GoogleUtilities/Network (~> 7.6)
+    - "GoogleUtilities/NSData+zlib (~> 7.6)"
     - nanopb (~> 2.30908.0)
-  - FirebaseCore (8.7.0):
+  - FirebaseCore (8.9.1):
     - FirebaseCoreDiagnostics (~> 8.0)
-    - GoogleUtilities/Environment (~> 7.4)
-    - GoogleUtilities/Logger (~> 7.4)
-  - FirebaseCoreDiagnostics (8.7.0):
-    - GoogleDataTransport (~> 9.0)
-    - GoogleUtilities/Environment (~> 7.4)
-    - GoogleUtilities/Logger (~> 7.4)
+    - GoogleUtilities/Environment (~> 7.6)
+    - GoogleUtilities/Logger (~> 7.6)
+  - FirebaseCoreDiagnostics (8.9.0):
+    - GoogleDataTransport (~> 9.1)
+    - GoogleUtilities/Environment (~> 7.6)
+    - GoogleUtilities/Logger (~> 7.6)
     - nanopb (~> 2.30908.0)
-  - FirebaseCrashlytics (8.7.0):
+  - FirebaseCrashlytics (8.9.0):
     - FirebaseCore (~> 8.0)
     - FirebaseInstallations (~> 8.0)
-    - GoogleDataTransport (~> 9.0)
-    - GoogleUtilities/Environment (~> 7.4)
+    - GoogleDataTransport (~> 9.1)
+    - GoogleUtilities/Environment (~> 7.6)
     - nanopb (~> 2.30908.0)
     - PromisesObjC (< 3.0, >= 1.2)
-  - FirebaseInstallations (8.7.0):
+  - FirebaseInstallations (8.9.0):
     - FirebaseCore (~> 8.0)
-    - GoogleUtilities/Environment (~> 7.4)
-    - GoogleUtilities/UserDefaults (~> 7.4)
+    - GoogleUtilities/Environment (~> 7.6)
+    - GoogleUtilities/UserDefaults (~> 7.6)
     - PromisesObjC (< 3.0, >= 1.2)
-  - FirebaseMessaging (8.7.0):
+  - FirebaseMessaging (8.9.0):
     - FirebaseCore (~> 8.0)
     - FirebaseInstallations (~> 8.0)
-    - GoogleDataTransport (~> 9.0)
-    - GoogleUtilities/AppDelegateSwizzler (~> 7.4)
-    - GoogleUtilities/Environment (~> 7.4)
-    - GoogleUtilities/Reachability (~> 7.4)
-    - GoogleUtilities/UserDefaults (~> 7.4)
+    - GoogleDataTransport (~> 9.1)
+    - GoogleUtilities/AppDelegateSwizzler (~> 7.6)
+    - GoogleUtilities/Environment (~> 7.6)
+    - GoogleUtilities/Reachability (~> 7.6)
+    - GoogleUtilities/UserDefaults (~> 7.6)
     - nanopb (~> 2.30908.0)
-  - FloatingPanel (2.4.0)
-  - GoogleAppMeasurement (8.7.0):
-    - GoogleAppMeasurement/AdIdSupport (= 8.7.0)
-    - GoogleUtilities/AppDelegateSwizzler (~> 7.4)
-    - GoogleUtilities/MethodSwizzler (~> 7.4)
-    - GoogleUtilities/Network (~> 7.4)
-    - "GoogleUtilities/NSData+zlib (~> 7.4)"
+  - FloatingPanel (2.5.0)
+  - GoogleAppMeasurement (8.9.1):
+    - GoogleAppMeasurement/AdIdSupport (= 8.9.1)
+    - GoogleUtilities/AppDelegateSwizzler (~> 7.6)
+    - GoogleUtilities/MethodSwizzler (~> 7.6)
+    - GoogleUtilities/Network (~> 7.6)
+    - "GoogleUtilities/NSData+zlib (~> 7.6)"
     - nanopb (~> 2.30908.0)
-  - GoogleAppMeasurement/AdIdSupport (8.7.0):
-    - GoogleUtilities/AppDelegateSwizzler (~> 7.4)
-    - GoogleUtilities/MethodSwizzler (~> 7.4)
-    - GoogleUtilities/Network (~> 7.4)
-    - "GoogleUtilities/NSData+zlib (~> 7.4)"
+  - GoogleAppMeasurement/AdIdSupport (8.9.1):
+    - GoogleAppMeasurement/WithoutAdIdSupport (= 8.9.1)
+    - GoogleUtilities/AppDelegateSwizzler (~> 7.6)
+    - GoogleUtilities/MethodSwizzler (~> 7.6)
+    - GoogleUtilities/Network (~> 7.6)
+    - "GoogleUtilities/NSData+zlib (~> 7.6)"
     - nanopb (~> 2.30908.0)
-  - GoogleDataTransport (9.1.0):
+  - GoogleAppMeasurement/WithoutAdIdSupport (8.9.1):
+    - GoogleUtilities/AppDelegateSwizzler (~> 7.6)
+    - GoogleUtilities/MethodSwizzler (~> 7.6)
+    - GoogleUtilities/Network (~> 7.6)
+    - "GoogleUtilities/NSData+zlib (~> 7.6)"
+    - nanopb (~> 2.30908.0)
+  - GoogleDataTransport (9.1.2):
     - GoogleUtilities/Environment (~> 7.2)
     - nanopb (~> 2.30908.0)
     - PromisesObjC (< 3.0, >= 1.2)
-  - GoogleUtilities/AppDelegateSwizzler (7.5.2):
+  - GoogleUtilities/AppDelegateSwizzler (7.6.0):
     - GoogleUtilities/Environment
     - GoogleUtilities/Logger
     - GoogleUtilities/Network
-  - GoogleUtilities/Environment (7.5.2):
+  - GoogleUtilities/Environment (7.6.0):
     - PromisesObjC (< 3.0, >= 1.2)
-  - GoogleUtilities/Logger (7.5.2):
+  - GoogleUtilities/Logger (7.6.0):
     - GoogleUtilities/Environment
-  - GoogleUtilities/MethodSwizzler (7.5.2):
+  - GoogleUtilities/MethodSwizzler (7.6.0):
     - GoogleUtilities/Logger
-  - GoogleUtilities/Network (7.5.2):
+  - GoogleUtilities/Network (7.6.0):
     - GoogleUtilities/Logger
     - "GoogleUtilities/NSData+zlib"
     - GoogleUtilities/Reachability
-  - "GoogleUtilities/NSData+zlib (7.5.2)"
-  - GoogleUtilities/Reachability (7.5.2):
+  - "GoogleUtilities/NSData+zlib (7.6.0)"
+  - GoogleUtilities/Reachability (7.6.0):
     - GoogleUtilities/Logger
-  - GoogleUtilities/UserDefaults (7.5.2):
+  - GoogleUtilities/UserDefaults (7.6.0):
     - GoogleUtilities/Logger
-  - IQKeyboardManagerSwift (6.5.6)
+  - IQKeyboardManagerSwift (6.5.9)
   - nanopb (2.30908.0):
     - nanopb/decode (= 2.30908.0)
     - nanopb/encode (= 2.30908.0)
   - nanopb/decode (2.30908.0)
   - nanopb/encode (2.30908.0)
   - OTPFieldView (1.0.1)
-  - Parchment (3.0.1)
+  - Parchment (3.1.0)
   - PromisesObjC (2.0.0)
   - ScrollingFollowView (1.1.1)
-  - SDWebImage (5.11.1):
-    - SDWebImage/Core (= 5.11.1)
-  - SDWebImage/Core (5.11.1)
-  - SwiftLint (0.43.1)
-  - SwiftMessages (9.0.3):
-    - SwiftMessages/App (= 9.0.3)
-  - SwiftMessages/App (9.0.3)
-  - UserExperior (5.0.6)
+  - SDWebImage (5.12.1):
+    - SDWebImage/Core (= 5.12.1)
+  - SDWebImage/Core (5.12.1)
+  - SwiftLint (0.45.0)
+  - SwiftMessages (9.0.5):
+    - SwiftMessages/App (= 9.0.5)
+  - SwiftMessages/App (9.0.5)
+  - UserExperior (5.0.9)
   - XLPagerTabStrip (9.0.0)
   - youtube-ios-player-helper (1.0.3)
 
@@ -172,30 +179,30 @@ SPEC REPOS:
     - youtube-ios-player-helper
 
 SPEC CHECKSUMS:
-  Alamofire: e447a2774a40c996748296fa2c55112fdbbc42f9
+  Alamofire: f3b09a368f1582ab751b3fff5460276e0d2cf5c9
   AlamofireNetworkActivityLogger: 162ab8aee00e6267a4304d7cc134e13ccfe3bcc5
   CleverTap-iOS-SDK: 1e38a25eee5bdb3e525c5c8497504bc64b7d695d
-  Firebase: bc9325d5ee2041524bac78a5213d0e530c651309
-  FirebaseAnalytics: 52768800c2add1d84b751420cb4caaf8195f2c41
-  FirebaseCore: f4804c1d3f4bbbefc88904d15653038f2c99ddf7
-  FirebaseCoreDiagnostics: b63732f581a1c6a453ec7241f9ab60b3a5bd3450
-  FirebaseCrashlytics: 6fac03d1eef054833b71c929c93ab95c12989728
-  FirebaseInstallations: ede6fb72bb6337914e5888b399271259d0c4910c
-  FirebaseMessaging: 93227dd71d7888e200baef65043f81acb2b6596e
-  FloatingPanel: fa60183672ed86313b9e241e34465e82211260e8
-  GoogleAppMeasurement: 2be61ce546ad074dbe4dd545f222ac6033bb1d9e
-  GoogleDataTransport: 85fd18ff3019bb85d3f2c551d04c481dedf71fc9
-  GoogleUtilities: 8de2a97a17e15b6b98e38e8770e2d129a57c0040
-  IQKeyboardManagerSwift: c7df9d2deb356c04522f5c4b7b6e4ce4d8ed94fe
+  Firebase: fb5114cd2bf96e2ff7bcb01d0d9a156cf5fd2f07
+  FirebaseAnalytics: 4ab446ce08a3fe52e8a4303dd997cf26276bf968
+  FirebaseCore: c5aab092d9c4b8efea894946166b04c9d9ef0e68
+  FirebaseCoreDiagnostics: 5daa63f1c1409d981a2d5007daa100b36eac6a34
+  FirebaseCrashlytics: 40efbd81157dae307ec95612fa1328347284d2c2
+  FirebaseInstallations: caa7c8e0d3e2345b8829d2fa9ca1b4dfbf2fcc85
+  FirebaseMessaging: 82c4a48638f53f7b184f3cc9f6cd2cbe533ab316
+  FloatingPanel: ddb1c8cbbacd164cfee651c449febe867a28e2cb
+  GoogleAppMeasurement: 837649ad3987936c232f6717c5680216f6243d24
+  GoogleDataTransport: 629c20a4d363167143f30ea78320d5a7eb8bd940
+  GoogleUtilities: 684ee790a24f73ebb2d1d966e9711c203f2a4237
+  IQKeyboardManagerSwift: 6e839c575c4aa1078d58a596e41244e77abe918f
   nanopb: a0ba3315591a9ae0a16a309ee504766e90db0c96
   OTPFieldView: 700a752fe62c41d1c4914c78aa500fb30d97c255
-  Parchment: 466a1cfb6151780db8acb4bbedc2d9c6bfa1e2ff
+  Parchment: 6250722ed0456d68f6bae03118eda722a28486f3
   PromisesObjC: 68159ce6952d93e17b2dfe273b8c40907db5ba58
   ScrollingFollowView: 135102baad0e35fb34b2a2eaeabcb60c4d0955c8
-  SDWebImage: a7f831e1a65eb5e285e3fb046a23fcfbf08e696d
-  SwiftLint: 99f82d07b837b942dd563c668de129a03fc3fb52
-  SwiftMessages: 077f19126c24033fe24042237ecc20261adb46e4
-  UserExperior: 2543964022f3fc7688452ef635029b8164093da9
+  SDWebImage: 4dc3e42d9ec0c1028b960a33ac6b637bb432207b
+  SwiftLint: e5c7f1fba68eccfc51509d5b2ce1699f5502e0c7
+  SwiftMessages: 9cca50659fa22bb523b4dd2a958d4442e843a354
+  UserExperior: 22bb6da09c1aac07e88ebc61ee3f4c90bd7d21bd
   XLPagerTabStrip: 61c57fd61f611ee5f01ff1495ad6fbee8bf496c5
   youtube-ios-player-helper: 0185c57db23c80d63d6ca11251d110abb8a4ca61
 
diff --git a/OpenBook/Pods/Alamofire/README.md b/OpenBook/Pods/Alamofire/README.md
index 9a5a8063..26e1c586 100644
--- a/OpenBook/Pods/Alamofire/README.md
+++ b/OpenBook/Pods/Alamofire/README.md
@@ -1,12 +1,12 @@
-![Alamofire: Elegant Networking in Swift](https://raw.githubusercontent.com/Alamofire/Alamofire/master/alamofire.png)
+![Alamofire: Elegant Networking in Swift](https://raw.githubusercontent.com/Alamofire/Alamofire/master/Resources/AlamofireLogo.png)
 
-[![Build Status](https://github.com/Alamofire/Alamofire/workflows/Alamofire%20CI/badge.svg?branch=master)](https://github.com/Alamofire/Alamofire/actions)
-[![CocoaPods Compatible](https://img.shields.io/cocoapods/v/Alamofire.svg)](https://img.shields.io/cocoapods/v/Alamofire.svg)
-[![Carthage Compatible](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat)](https://github.com/Carthage/Carthage)
-[![Platform](https://img.shields.io/cocoapods/p/Alamofire.svg?style=flat)](https://alamofire.github.io/Alamofire)
-[![Twitter](https://img.shields.io/badge/twitter-@AlamofireSF-blue.svg?style=flat)](https://twitter.com/AlamofireSF)
-[![Gitter](https://badges.gitter.im/Alamofire/Alamofire.svg)](https://gitter.im/Alamofire/Alamofire?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)
-[![Open Source Helpers](https://www.codetriage.com/alamofire/alamofire/badges/users.svg)](https://www.codetriage.com/alamofire/alamofire)
+[![Swift](https://img.shields.io/badge/Swift-5.1_5.2_5.3_5.4-orange?style=flat-square)](https://img.shields.io/badge/Swift-5.1_5.2_5.3_5.4-Orange?style=flat-square)
+[![Platforms](https://img.shields.io/badge/Platforms-macOS_iOS_tvOS_watchOS_Linux_Windows-yellowgreen?style=flat-square)](https://img.shields.io/badge/Platforms-macOS_iOS_tvOS_watchOS_Linux_Windows-Green?style=flat-square)
+[![CocoaPods Compatible](https://img.shields.io/cocoapods/v/Alamofire.svg?style=flat-square)](https://img.shields.io/cocoapods/v/Alamofire.svg)
+[![Carthage Compatible](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat-square)](https://github.com/Carthage/Carthage)
+[![Swift Package Manager](https://img.shields.io/badge/Swift_Package_Manager-compatible-orange?style=flat-square)](https://img.shields.io/badge/Swift_Package_Manager-compatible-orange?style=flat-square)
+[![Twitter](https://img.shields.io/badge/twitter-@AlamofireSF-blue.svg?style=flat-square)](https://twitter.com/AlamofireSF)
+[![Swift Forums](https://img.shields.io/badge/Swift_Forums-Alamofire-orange?style=flat-square)](https://forums.swift.org/c/related-projects/alamofire/37)
 
 Alamofire is an HTTP networking library written in Swift.
 
@@ -58,9 +58,21 @@ In order to keep Alamofire focused specifically on core networking implementatio
 
 ## Requirements
 
-- iOS 10.0+ / macOS 10.12+ / tvOS 10.0+ / watchOS 3.0+
-- Xcode 11+
-- Swift 5.1+
+| Platform | Minimum Swift Version | Installation | Status |
+| --- | --- | --- | --- |
+| iOS 10.0+ / macOS 10.12+ / tvOS 10.0+ / watchOS 3.0+ | 5.1 | [CocoaPods](#cocoapods), [Carthage](#carthage), [Swift Package Manager](#swift-package-manager), [Manual](#manually) | Fully Tested |
+| Linux | Latest Only | [Swift Package Manager](#swift-package-manager) | Building But Unsupported |
+| Windows | Latest Only | [Swift Package Manager](#swift-package-manager) | Building But Unsupported |
+
+#### Known Issues on Linux and Windows
+
+Alamofire builds on Linux and Windows but there are missing features and many issues in the underlying `swift-corelibs-foundation` that prevent full functionality and may cause crashes. These include:
+- `ServerTrustManager` and associated certificate functionality is unavailable, so there is no certificate pinning and no client certificate support.
+- Various methods of HTTP authentication may crash, including HTTP Basic and HTTP Digest. Crashes may occur if responses contain server challenges.
+- Cache control through `CachedResponseHandler` and associated APIs is unavailable, as the underlying delegate methods aren't called.
+- `URLSessionTaskMetrics` are never gathered.
+
+Due to these issues, Alamofire is unsupported on Linux and Windows. Please report any crashes to the [Swift bug reporter](https://bugs.swift.org).
 
 ## Migration Guides
 
@@ -85,7 +97,7 @@ In order to keep Alamofire focused specifically on core networking implementatio
 [CocoaPods](https://cocoapods.org) is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. To integrate Alamofire into your Xcode project using CocoaPods, specify it in your `Podfile`:
 
 ```ruby
-pod 'Alamofire', '~> 5.2'
+pod 'Alamofire', '~> 5.4'
 ```
 
 ### Carthage
@@ -93,7 +105,7 @@ pod 'Alamofire', '~> 5.2'
 [Carthage](https://github.com/Carthage/Carthage) is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks. To integrate Alamofire into your Xcode project using Carthage, specify it in your `Cartfile`:
 
 ```ogdl
-github "Alamofire/Alamofire" ~> 5.2
+github "Alamofire/Alamofire" ~> 5.4
 ```
 
 ### Swift Package Manager
@@ -104,7 +116,7 @@ Once you have your Swift package set up, adding Alamofire as a dependency is as
 
 ```swift
 dependencies: [
-    .package(url: "https://github.com/Alamofire/Alamofire.git", .upToNextMajor(from: "5.2.0"))
+    .package(url: "https://github.com/Alamofire/Alamofire.git", .upToNextMajor(from: "5.4.0"))
 ]
 ```
 
@@ -153,7 +165,6 @@ The following radars have some effect on the current implementation of Alamofire
 - [`rdar://21349340`](http://www.openradar.me/radar?id=5517037090635776) - Compiler throwing warning due to toll-free bridging issue in the test case
 - `rdar://26870455` - Background URL Session Configurations do not work in the simulator
 - `rdar://26849668` - Some URLProtocol APIs do not properly handle `URLRequest`
-- `FB7624529` - `urlSession(_:task:didFinishCollecting:)` never called on watchOS
 
 ## Resolved Radars
 
@@ -163,10 +174,8 @@ The following radars have been resolved over time after being filed against the
   - (Resolved): 9/1/17 in Xcode 9 beta 6.
 - [`rdar://36082113`](http://openradar.appspot.com/radar?id=4942308441063424) - `URLSessionTaskMetrics` failing to link on watchOS 3.0+
   - (Resolved): Just add `CFNetwork` to your linked frameworks.
-
-## Workarounds
-
-- Collection of `URLSessionTaskMetrics` is currently disabled on watchOS due to `FB7624529`.
+- `FB7624529` - `urlSession(_:task:didFinishCollecting:)` never called on watchOS
+  - (Resolved): Metrics now collected on watchOS 7+.
 
 ## FAQ
 
@@ -201,6 +210,12 @@ Any amount you can donate today to help us reach our goal would be greatly appre
 
 [![paypal](https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=W34WPEE74APJQ)
 
+## Supporters
+
+[MacStadium](https://macstadium.com) provides Alamofire with a free, hosted Mac mini.
+
+![Powered by MacStadium](https://raw.githubusercontent.com/Alamofire/Alamofire/master/Resources/MacStadiumLogo.png)
+
 ## License
 
 Alamofire is released under the MIT license. [See LICENSE](https://github.com/Alamofire/Alamofire/blob/master/LICENSE) for details.
diff --git a/OpenBook/Pods/Alamofire/Source/AFError.swift b/OpenBook/Pods/Alamofire/Source/AFError.swift
index e8e4fe83..8cd60c70 100644
--- a/OpenBook/Pods/Alamofire/Source/AFError.swift
+++ b/OpenBook/Pods/Alamofire/Source/AFError.swift
@@ -129,6 +129,7 @@ public enum AFError: Error {
         case invalidEmptyResponse(type: String)
     }
 
+    #if !(os(Linux) || os(Windows))
     /// Underlying reason a server trust evaluation error occurred.
     public enum ServerTrustFailureReason {
         /// The output of a server trust evaluation.
@@ -178,6 +179,7 @@ public enum AFError: Error {
         /// Custom server trust evaluation failed due to the associated `Error`.
         case customEvaluationFailed(error: Error)
     }
+    #endif
 
     /// The underlying reason the `.urlRequestValidationFailed`
     public enum URLRequestValidationFailureReason {
@@ -209,8 +211,10 @@ public enum AFError: Error {
     case responseValidationFailed(reason: ResponseValidationFailureReason)
     /// Response serialization failed.
     case responseSerializationFailed(reason: ResponseSerializationFailureReason)
+    #if !(os(Linux) || os(Windows))
     /// `ServerTrustEvaluating` instance threw an error during trust evaluation.
     case serverTrustEvaluationFailed(reason: ServerTrustFailureReason)
+    #endif
     /// `Session` which issued the `Request` was deinitialized, most likely because its reference went out of scope.
     case sessionDeinitialized
     /// `Session` was explicitly invalidated, possibly with the `Error` produced by the underlying `URLSession`.
@@ -310,12 +314,14 @@ extension AFError {
         return false
     }
 
+    #if !(os(Linux) || os(Windows))
     /// Returns whether the instance is `.serverTrustEvaluationFailed`. When `true`, the `underlyingError` property will
     /// contain the associated value.
     public var isServerTrustEvaluationError: Bool {
         if case .serverTrustEvaluationFailed = self { return true }
         return false
     }
+    #endif
 
     /// Returns whether the instance is `requestRetryFailed`. When `true`, the `underlyingError` property will
     /// contain the associated value.
@@ -387,8 +393,10 @@ extension AFError {
             return reason.underlyingError
         case let .responseSerializationFailed(reason):
             return reason.underlyingError
+        #if !(os(Linux) || os(Windows))
         case let .serverTrustEvaluationFailed(reason):
             return reason.underlyingError
+        #endif
         case let .sessionInvalidated(error):
             return error
         case let .createUploadableFailed(error):
@@ -443,10 +451,12 @@ extension AFError {
         return destination
     }
 
+    #if !(os(Linux) || os(Windows))
     /// The download resume data of any underlying network error. Only produced by `DownloadRequest`s.
     public var downloadResumeData: Data? {
         (underlyingError as? URLError)?.userInfo[NSURLSessionDownloadTaskResumeData] as? Data
     }
+    #endif
 }
 
 extension AFError.ParameterEncodingFailureReason {
@@ -600,6 +610,7 @@ extension AFError.ResponseSerializationFailureReason {
     }
 }
 
+#if !(os(Linux) || os(Windows))
 extension AFError.ServerTrustFailureReason {
     var output: AFError.ServerTrustFailureReason.Output? {
         switch self {
@@ -642,6 +653,7 @@ extension AFError.ServerTrustFailureReason {
         }
     }
 }
+#endif
 
 // MARK: - Error Descriptions
 
@@ -676,8 +688,10 @@ extension AFError: LocalizedError {
             """
         case let .sessionInvalidated(error):
             return "Session was invalidated with error: \(error?.localizedDescription ?? "No description.")"
+        #if !(os(Linux) || os(Windows))
         case let .serverTrustEvaluationFailed(reason):
             return "Server trust evaluation failed due to reason: \(reason.localizedDescription)"
+        #endif
         case let .urlRequestValidationFailed(reason):
             return "URLRequest validation failed due to reason: \(reason.localizedDescription)"
         case let .createUploadableFailed(error):
@@ -808,6 +822,7 @@ extension AFError.ResponseValidationFailureReason {
     }
 }
 
+#if !(os(Linux) || os(Windows))
 extension AFError.ServerTrustFailureReason {
     var localizedDescription: String {
         switch self {
@@ -840,6 +855,7 @@ extension AFError.ServerTrustFailureReason {
         }
     }
 }
+#endif
 
 extension AFError.URLRequestValidationFailureReason {
     var localizedDescription: String {
diff --git a/OpenBook/Pods/Alamofire/Source/Alamofire.swift b/OpenBook/Pods/Alamofire/Source/Alamofire.swift
index bcf43d02..630e1692 100644
--- a/OpenBook/Pods/Alamofire/Source/Alamofire.swift
+++ b/OpenBook/Pods/Alamofire/Source/Alamofire.swift
@@ -22,8 +22,14 @@
 //  THE SOFTWARE.
 //
 
+import Dispatch
+import Foundation
+#if canImport(FoundationNetworking)
+@_exported import FoundationNetworking
+#endif
+
 /// Reference to `Session.default` for quick bootstrapping and examples.
 public let AF = Session.default
 
 /// Current Alamofire version. Necessary since SPM doesn't use dynamic libraries. Plus this will be more accurate.
-let version = "5.4.3"
+let version = "5.4.4"
diff --git a/OpenBook/Pods/Alamofire/Source/CachedResponseHandler.swift b/OpenBook/Pods/Alamofire/Source/CachedResponseHandler.swift
index b6e0d4b2..8465ed71 100644
--- a/OpenBook/Pods/Alamofire/Source/CachedResponseHandler.swift
+++ b/OpenBook/Pods/Alamofire/Source/CachedResponseHandler.swift
@@ -58,9 +58,9 @@ public struct ResponseCacher {
         case modify((URLSessionDataTask, CachedURLResponse) -> CachedURLResponse?)
     }
 
-    /// Returns a `ResponseCacher` with a follow `Behavior`.
+    /// Returns a `ResponseCacher` with a `.cache` `Behavior`.
     public static let cache = ResponseCacher(behavior: .cache)
-    /// Returns a `ResponseCacher` with a do not follow `Behavior`.
+    /// Returns a `ResponseCacher` with a `.doNotCache` `Behavior`.
     public static let doNotCache = ResponseCacher(behavior: .doNotCache)
 
     /// The `Behavior` of the `ResponseCacher`.
diff --git a/OpenBook/Pods/Alamofire/Source/Combine.swift b/OpenBook/Pods/Alamofire/Source/Combine.swift
index a1382494..b5e50441 100644
--- a/OpenBook/Pods/Alamofire/Source/Combine.swift
+++ b/OpenBook/Pods/Alamofire/Source/Combine.swift
@@ -22,7 +22,7 @@
 //  THE SOFTWARE.
 //
 
-#if canImport(Combine)
+#if !((os(iOS) && (arch(i386) || arch(arm))) || os(Windows) || os(Linux))
 
 import Combine
 import Dispatch
diff --git a/OpenBook/Pods/Alamofire/Source/HTTPHeaders.swift b/OpenBook/Pods/Alamofire/Source/HTTPHeaders.swift
index 7829fc69..cd90fcf1 100644
--- a/OpenBook/Pods/Alamofire/Source/HTTPHeaders.swift
+++ b/OpenBook/Pods/Alamofire/Source/HTTPHeaders.swift
@@ -371,12 +371,12 @@ extension HTTPHeader {
     /// Example: `iOS Example/1.0 (org.alamofire.iOS-Example; build:1; iOS 13.0.0) Alamofire/5.0.0`
     public static let defaultUserAgent: HTTPHeader = {
         let info = Bundle.main.infoDictionary
-        let executable = (info?[kCFBundleExecutableKey as String] as? String) ??
+        let executable = (info?["CFBundleExecutable"] as? String) ??
             (ProcessInfo.processInfo.arguments.first?.split(separator: "/").last.map(String.init)) ??
             "Unknown"
-        let bundle = info?[kCFBundleIdentifierKey as String] as? String ?? "Unknown"
+        let bundle = info?["CFBundleIdentifier"] as? String ?? "Unknown"
         let appVersion = info?["CFBundleShortVersionString"] as? String ?? "Unknown"
-        let appBuild = info?[kCFBundleVersionKey as String] as? String ?? "Unknown"
+        let appBuild = info?["CFBundleVersion"] as? String ?? "Unknown"
 
         let osNameVersion: String = {
             let version = ProcessInfo.processInfo.operatingSystemVersion
diff --git a/OpenBook/Pods/Alamofire/Source/MultipartFormData.swift b/OpenBook/Pods/Alamofire/Source/MultipartFormData.swift
index d9cecef5..8f72860b 100644
--- a/OpenBook/Pods/Alamofire/Source/MultipartFormData.swift
+++ b/OpenBook/Pods/Alamofire/Source/MultipartFormData.swift
@@ -213,6 +213,7 @@ open class MultipartFormData {
         //              Check 2 - is file URL reachable?
         //============================================================
 
+        #if !(os(Linux) || os(Windows))
         do {
             let isReachable = try fileURL.checkPromisedItemIsReachable()
             guard isReachable else {
@@ -223,6 +224,7 @@ open class MultipartFormData {
             setBodyPartError(withReason: .bodyPartFileNotReachableWithError(atURL: fileURL, error: error))
             return
         }
+        #endif
 
         //============================================================
         //            Check 3 - is file URL a directory?
@@ -509,11 +511,13 @@ open class MultipartFormData {
     // MARK: - Private - Mime Type
 
     private func mimeType(forPathExtension pathExtension: String) -> String {
+        #if !(os(Linux) || os(Windows))
         if
             let id = UTTypeCreatePreferredIdentifierForTag(kUTTagClassFilenameExtension, pathExtension as CFString, nil)?.takeRetainedValue(),
             let contentType = UTTypeCopyPreferredTagWithClass(id, kUTTagClassMIMEType)?.takeRetainedValue() {
             return contentType as String
         }
+        #endif
 
         return "application/octet-stream"
     }
diff --git a/OpenBook/Pods/Alamofire/Source/NetworkReachabilityManager.swift b/OpenBook/Pods/Alamofire/Source/NetworkReachabilityManager.swift
index b97b62fa..deeb3a42 100644
--- a/OpenBook/Pods/Alamofire/Source/NetworkReachabilityManager.swift
+++ b/OpenBook/Pods/Alamofire/Source/NetworkReachabilityManager.swift
@@ -22,7 +22,7 @@
 //  THE SOFTWARE.
 //
 
-#if !(os(watchOS) || os(Linux))
+#if !(os(watchOS) || os(Linux) || os(Windows))
 
 import Foundation
 import SystemConfiguration
diff --git a/OpenBook/Pods/Alamofire/Source/Protected.swift b/OpenBook/Pods/Alamofire/Source/Protected.swift
index 6288205e..b673a1b2 100644
--- a/OpenBook/Pods/Alamofire/Source/Protected.swift
+++ b/OpenBook/Pods/Alamofire/Source/Protected.swift
@@ -49,37 +49,10 @@ extension Lock {
     }
 }
 
-#if os(Linux)
-/// A `pthread_mutex_t` wrapper.
-final class MutexLock: Lock {
-    private var mutex: UnsafeMutablePointer<pthread_mutex_t>
+#if os(Linux) || os(Windows)
 
-    init() {
-        mutex = .allocate(capacity: 1)
-
-        var attr = pthread_mutexattr_t()
-        pthread_mutexattr_init(&attr)
-        pthread_mutexattr_settype(&attr, .init(PTHREAD_MUTEX_ERRORCHECK))
-
-        let error = pthread_mutex_init(mutex, &attr)
-        precondition(error == 0, "Failed to create pthread_mutex")
-    }
-
-    deinit {
-        let error = pthread_mutex_destroy(mutex)
-        precondition(error == 0, "Failed to destroy pthread_mutex")
-    }
+extension NSLock: Lock {}
 
-    fileprivate func lock() {
-        let error = pthread_mutex_lock(mutex)
-        precondition(error == 0, "Failed to lock pthread_mutex")
-    }
-
-    fileprivate func unlock() {
-        let error = pthread_mutex_unlock(mutex)
-        precondition(error == 0, "Failed to unlock pthread_mutex")
-    }
-}
 #endif
 
 #if os(macOS) || os(iOS) || os(watchOS) || os(tvOS)
@@ -113,8 +86,8 @@ final class UnfairLock: Lock {
 final class Protected<T> {
     #if os(macOS) || os(iOS) || os(watchOS) || os(tvOS)
     private let lock = UnfairLock()
-    #elseif os(Linux)
-    private let lock = MutexLock()
+    #elseif os(Linux) || os(Windows)
+    private let lock = NSLock()
     #endif
     private var value: T
 
diff --git a/OpenBook/Pods/Alamofire/Source/Request.swift b/OpenBook/Pods/Alamofire/Source/Request.swift
index 849f8784..5ac29291 100644
--- a/OpenBook/Pods/Alamofire/Source/Request.swift
+++ b/OpenBook/Pods/Alamofire/Source/Request.swift
@@ -1298,12 +1298,14 @@ public final class DataStreamRequest: Request {
 
     func didReceive(data: Data) {
         $streamMutableState.write { state in
+            #if !(os(Linux) || os(Windows))
             if let stream = state.outputStream {
                 underlyingQueue.async {
                     var bytes = Array(data)
                     stream.write(&bytes, maxLength: bytes.count)
                 }
             }
+            #endif
             state.numberOfExecutingStreams += state.streams.count
             let localState = state
             underlyingQueue.async { localState.streams.forEach { $0(data) } }
@@ -1337,6 +1339,7 @@ public final class DataStreamRequest: Request {
         return self
     }
 
+    #if !(os(Linux) || os(Windows))
     /// Produces an `InputStream` that receives the `Data` received by the instance.
     ///
     /// - Note: The `InputStream` produced by this method must have `open()` called before being able to read `Data`.
@@ -1359,6 +1362,7 @@ public final class DataStreamRequest: Request {
 
         return inputStream
     }
+    #endif
 
     func capturingError(from closure: () throws -> Void) {
         do {
@@ -1532,7 +1536,14 @@ public class DownloadRequest: Request {
     /// using the `download(resumingWith data:)` API.
     ///
     /// - Note: For more information about `resumeData`, see [Apple's documentation](https://developer.apple.com/documentation/foundation/urlsessiondownloadtask/1411634-cancel).
-    public var resumeData: Data? { mutableDownloadState.resumeData ?? error?.downloadResumeData }
+    public var resumeData: Data? {
+        #if !(os(Linux) || os(Windows))
+        return mutableDownloadState.resumeData ?? error?.downloadResumeData
+        #else
+        return mutableDownloadState.resumeData
+        #endif
+    }
+
     /// If the download is successful, the `URL` where the file was downloaded.
     public var fileURL: URL? { mutableDownloadState.fileURL }
 
diff --git a/OpenBook/Pods/Alamofire/Source/ServerTrustEvaluation.swift b/OpenBook/Pods/Alamofire/Source/ServerTrustEvaluation.swift
index 9ca94f16..e5c955a4 100644
--- a/OpenBook/Pods/Alamofire/Source/ServerTrustEvaluation.swift
+++ b/OpenBook/Pods/Alamofire/Source/ServerTrustEvaluation.swift
@@ -48,6 +48,7 @@ open class ServerTrustManager {
         self.evaluators = evaluators
     }
 
+    #if !(os(Linux) || os(Windows))
     /// Returns the `ServerTrustEvaluating` value for the given host, if one is set.
     ///
     /// By default, this method will return the policy that perfectly matches the given host. Subclasses could override
@@ -69,12 +70,13 @@ open class ServerTrustManager {
 
         return evaluator
     }
+    #endif
 }
 
 /// A protocol describing the API used to evaluate server trusts.
 public protocol ServerTrustEvaluating {
-    #if os(Linux)
-    // Implement this once Linux has API for evaluating server trusts.
+    #if os(Linux) || os(Windows)
+    // Implement this once Linux/Windows has API for evaluating server trusts.
     #else
     /// Evaluates the given `SecTrust` value for the given `host`.
     ///
@@ -89,6 +91,7 @@ public protocol ServerTrustEvaluating {
 
 // MARK: - Server Trust Evaluators
 
+#if !(os(Linux) || os(Windows))
 /// An evaluator which uses the default server trust evaluation while allowing you to control whether to validate the
 /// host provided by the challenge. Applications are encouraged to always validate the host in production environments
 /// to guarantee the validity of the server's certificate chain.
@@ -358,8 +361,8 @@ public final class DisabledTrustEvaluator: ServerTrustEvaluating {
 // MARK: - Extensions
 
 extension Array where Element == ServerTrustEvaluating {
-    #if os(Linux)
-    // Add this same convenience method for Linux.
+    #if os(Linux) || os(Windows)
+    // Add this same convenience method for Linux/Windows.
     #else
     /// Evaluates the given `SecTrust` value for the given `host`.
     ///
@@ -617,3 +620,4 @@ extension AlamofireExtension where ExtendedType == SecTrustResultType {
         type == .unspecified || type == .proceed
     }
 }
+#endif
diff --git a/OpenBook/Pods/Alamofire/Source/SessionDelegate.swift b/OpenBook/Pods/Alamofire/Source/SessionDelegate.swift
index befc80ea..a794d83d 100644
--- a/OpenBook/Pods/Alamofire/Source/SessionDelegate.swift
+++ b/OpenBook/Pods/Alamofire/Source/SessionDelegate.swift
@@ -91,11 +91,15 @@ extension SessionDelegate: URLSessionTaskDelegate {
 
         let evaluation: ChallengeEvaluation
         switch challenge.protectionSpace.authenticationMethod {
+        case NSURLAuthenticationMethodHTTPBasic, NSURLAuthenticationMethodHTTPDigest, NSURLAuthenticationMethodNTLM,
+             NSURLAuthenticationMethodNegotiate:
+            evaluation = attemptCredentialAuthentication(for: challenge, belongingTo: task)
+        #if !(os(Linux) || os(Windows))
         case NSURLAuthenticationMethodServerTrust:
             evaluation = attemptServerTrustAuthentication(with: challenge)
-        case NSURLAuthenticationMethodHTTPBasic, NSURLAuthenticationMethodHTTPDigest, NSURLAuthenticationMethodNTLM,
-             NSURLAuthenticationMethodNegotiate, NSURLAuthenticationMethodClientCertificate:
+        case NSURLAuthenticationMethodClientCertificate:
             evaluation = attemptCredentialAuthentication(for: challenge, belongingTo: task)
+        #endif
         default:
             evaluation = (.performDefaultHandling, nil, nil)
         }
@@ -107,6 +111,7 @@ extension SessionDelegate: URLSessionTaskDelegate {
         completionHandler(evaluation.disposition, evaluation.credential)
     }
 
+    #if !(os(Linux) || os(Windows))
     /// Evaluates the server trust `URLAuthenticationChallenge` received.
     ///
     /// - Parameter challenge: The `URLAuthenticationChallenge`.
@@ -133,6 +138,7 @@ extension SessionDelegate: URLSessionTaskDelegate {
             return (.cancelAuthenticationChallenge, nil, error.asAFError(or: .serverTrustEvaluationFailed(reason: .customEvaluationFailed(error: error))))
         }
     }
+    #endif
 
     /// Evaluates the credential-based authentication `URLAuthenticationChallenge` received for `task`.
     ///
diff --git a/OpenBook/Pods/Alamofire/Source/URLEncodedFormEncoder.swift b/OpenBook/Pods/Alamofire/Source/URLEncodedFormEncoder.swift
index e5cc0c50..a631f75b 100644
--- a/OpenBook/Pods/Alamofire/Source/URLEncodedFormEncoder.swift
+++ b/OpenBook/Pods/Alamofire/Source/URLEncodedFormEncoder.swift
@@ -495,7 +495,7 @@ enum URLEncodedFormComponent {
 
     /// Recursive backing method to `set(to:at:)`.
     private func set(_ context: inout URLEncodedFormComponent, to value: URLEncodedFormComponent, at path: [CodingKey]) {
-        guard path.count >= 1 else {
+        guard !path.isEmpty else {
             context = value
             return
         }
diff --git a/OpenBook/Pods/Alamofire/Source/URLSessionConfiguration+Alamofire.swift b/OpenBook/Pods/Alamofire/Source/URLSessionConfiguration+Alamofire.swift
index de3e290a..292a8fe7 100644
--- a/OpenBook/Pods/Alamofire/Source/URLSessionConfiguration+Alamofire.swift
+++ b/OpenBook/Pods/Alamofire/Source/URLSessionConfiguration+Alamofire.swift
@@ -34,4 +34,13 @@ extension AlamofireExtension where ExtendedType: URLSessionConfiguration {
 
         return configuration
     }
+
+    /// `.ephemeral` configuration with Alamofire's default `Accept-Language`, `Accept-Encoding`, and `User-Agent`
+    /// headers.
+    public static var ephemeral: URLSessionConfiguration {
+        let configuration = URLSessionConfiguration.ephemeral
+        configuration.headers = .default
+
+        return configuration
+    }
 }
diff --git a/OpenBook/Pods/FloatingPanel/Sources/BackdropView.swift b/OpenBook/Pods/FloatingPanel/Sources/BackdropView.swift
index 6c7b1d2c..21cfc19a 100644
--- a/OpenBook/Pods/FloatingPanel/Sources/BackdropView.swift
+++ b/OpenBook/Pods/FloatingPanel/Sources/BackdropView.swift
@@ -7,5 +7,5 @@ import UIKit
 public class BackdropView: UIView {
 
     /// The gesture recognizer for tap gestures to dismiss a panel.
-    public var dismissalTapGestureRecognizer: UITapGestureRecognizer!
+    @objc public var dismissalTapGestureRecognizer: UITapGestureRecognizer!
 }
diff --git a/OpenBook/Pods/FloatingPanel/Sources/Core.swift b/OpenBook/Pods/FloatingPanel/Sources/Core.swift
index 71eef31f..2f8dd1f0 100644
--- a/OpenBook/Pods/FloatingPanel/Sources/Core.swift
+++ b/OpenBook/Pods/FloatingPanel/Sources/Core.swift
@@ -837,6 +837,7 @@ class Core: NSObject, UIGestureRecognizerDelegate {
     }
 
     private func tearDownActiveInteraction() {
+        guard panGestureRecognizer.isEnabled else { return }
         // Cancel the pan gesture so that panningEnd(with:velocity:) is called
         panGestureRecognizer.isEnabled = false
         panGestureRecognizer.isEnabled = true
diff --git a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/Categories/IQNSArray+Sort.swift b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/Categories/IQNSArray+Sort.swift
index 442ef43f..1d3a4c23 100644
--- a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/Categories/IQNSArray+Sort.swift
+++ b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/Categories/IQNSArray+Sort.swift
@@ -1,7 +1,7 @@
 //
 //  IQNSArray+Sort.swift
 // https://github.com/hackiftekhar/IQKeyboardManager
-// Copyright (c) 2013-16 Iftekhar Qurashi.
+// Copyright (c) 2013-20 Iftekhar Qurashi.
 //
 // Permission is hereby granted, free of charge, to any person obtaining a copy
 // of this software and associated documentation files (the "Software"), to deal
@@ -21,34 +21,31 @@
 // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 // THE SOFTWARE.
 
-import Foundation
+// import Foundation - UIKit contains Foundation
 import UIKit
 
 /**
 UIView.subviews sorting category.
 */
+@available(iOSApplicationExtension, unavailable)
 internal extension Array where Element: UIView {
-    
-    ///--------------
-    /// MARK: Sorting
-    ///--------------
-    
+
     /**
     Returns the array by sorting the UIView's by their tag property.
     */
     func sortedArrayByTag() -> [Element] {
-        
+
         return sorted(by: { (obj1: Element, obj2: Element) -> Bool in
-            
+
             return (obj1.tag < obj2.tag)
         })
     }
-    
+
     /**
     Returns the array by sorting the UIView's by their tag property.
     */
     func sortedArrayByPosition() -> [Element] {
-        
+
         return sorted(by: { (obj1: Element, obj2: Element) -> Bool in
             if obj1.frame.minY != obj2.frame.minY {
                 return obj1.frame.minY < obj2.frame.minY
diff --git a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/Categories/IQUIScrollView+Additions.swift b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/Categories/IQUIScrollView+Additions.swift
index 3dc04e70..93d495ab 100644
--- a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/Categories/IQUIScrollView+Additions.swift
+++ b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/Categories/IQUIScrollView+Additions.swift
@@ -1,7 +1,7 @@
 //
 //  IQUIScrollView+Additions.swift
 // https://github.com/hackiftekhar/IQKeyboardManager
-// Copyright (c) 2013-16 Iftekhar Qurashi.
+// Copyright (c) 2013-20 Iftekhar Qurashi.
 //
 // Permission is hereby granted, free of charge, to any person obtaining a copy
 // of this software and associated documentation files (the "Software"), to deal
@@ -21,83 +21,71 @@
 // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 // THE SOFTWARE.
 
-import Foundation
+// import Foundation - UIKit contains Foundation
 import UIKit
 
-private var kIQShouldIgnoreScrollingAdjustment      = "kIQShouldIgnoreScrollingAdjustment"
-private var kIQShouldIgnoreContentInsetAdjustment   = "kIQShouldIgnoreContentInsetAdjustment"
-private var kIQShouldRestoreScrollViewContentOffset = "kIQShouldRestoreScrollViewContentOffset"
-
+@available(iOSApplicationExtension, unavailable)
 @objc public extension UIScrollView {
-    
+
+    private struct AssociatedKeys {
+        static var shouldIgnoreScrollingAdjustment = "shouldIgnoreScrollingAdjustment"
+        static var shouldIgnoreContentInsetAdjustment = "shouldIgnoreContentInsetAdjustment"
+        static var shouldRestoreScrollViewContentOffset = "shouldRestoreScrollViewContentOffset"
+    }
+
     /**
      If YES, then scrollview will ignore scrolling (simply not scroll it) for adjusting textfield position. Default is NO.
      */
-    @objc var shouldIgnoreScrollingAdjustment: Bool {
+    var shouldIgnoreScrollingAdjustment: Bool {
         get {
-            
-            if let aValue = objc_getAssociatedObject(self, &kIQShouldIgnoreScrollingAdjustment) as? Bool {
-                return aValue
-            } else {
-                return false
-            }
+            return objc_getAssociatedObject(self, &AssociatedKeys.shouldIgnoreScrollingAdjustment) as? Bool ?? false
         }
         set(newValue) {
-            objc_setAssociatedObject(self, &kIQShouldIgnoreScrollingAdjustment, newValue, objc_AssociationPolicy.OBJC_ASSOCIATION_RETAIN_NONATOMIC)
+            objc_setAssociatedObject(self, &AssociatedKeys.shouldIgnoreScrollingAdjustment, newValue, .OBJC_ASSOCIATION_RETAIN_NONATOMIC)
         }
     }
 
     /**
      If YES, then scrollview will ignore content inset adjustment (simply not updating it) when keyboard is shown. Default is NO.
      */
-    @objc var shouldIgnoreContentInsetAdjustment: Bool {
+    var shouldIgnoreContentInsetAdjustment: Bool {
         get {
-            
-            if let aValue = objc_getAssociatedObject(self, &kIQShouldIgnoreContentInsetAdjustment) as? Bool {
-                return aValue
-            } else {
-                return false
-            }
+            return objc_getAssociatedObject(self, &AssociatedKeys.shouldIgnoreContentInsetAdjustment) as? Bool ?? false
         }
         set(newValue) {
-            objc_setAssociatedObject(self, &kIQShouldIgnoreContentInsetAdjustment, newValue, objc_AssociationPolicy.OBJC_ASSOCIATION_RETAIN_NONATOMIC)
+            objc_setAssociatedObject(self, &AssociatedKeys.shouldIgnoreContentInsetAdjustment, newValue, .OBJC_ASSOCIATION_RETAIN_NONATOMIC)
         }
     }
-    
+
     /**
      To set customized distance from keyboard for textField/textView. Can't be less than zero
      */
-    @objc var shouldRestoreScrollViewContentOffset: Bool {
+    var shouldRestoreScrollViewContentOffset: Bool {
         get {
-            
-            if let aValue = objc_getAssociatedObject(self, &kIQShouldRestoreScrollViewContentOffset) as? Bool {
-                return aValue
-            } else {
-                return false
-            }
+            return objc_getAssociatedObject(self, &AssociatedKeys.shouldRestoreScrollViewContentOffset) as? Bool ?? false
         }
         set(newValue) {
-            objc_setAssociatedObject(self, &kIQShouldRestoreScrollViewContentOffset, newValue, objc_AssociationPolicy.OBJC_ASSOCIATION_RETAIN_NONATOMIC)
+            objc_setAssociatedObject(self, &AssociatedKeys.shouldRestoreScrollViewContentOffset, newValue, .OBJC_ASSOCIATION_RETAIN_NONATOMIC)
         }
     }
 }
 
+@available(iOSApplicationExtension, unavailable)
 internal extension UITableView {
-    
+
     func previousIndexPath(of indexPath: IndexPath) -> IndexPath? {
         var previousRow = indexPath.row - 1
         var previousSection = indexPath.section
-        
+
         //Fixing indexPath
         if previousRow < 0 {
             previousSection -= 1
-            
             if previousSection >= 0 {
                 previousRow = self.numberOfRows(inSection: previousSection) - 1
             }
         }
-        
-        if previousRow >= 0 && previousSection >= 0 {
+
+        if previousRow >= 0, previousSection >= 0 {
             return IndexPath(row: previousRow, section: previousSection)
         } else {
             return nil
@@ -105,22 +93,22 @@ internal extension UITableView {
     }
 }
 
+@available(iOSApplicationExtension, unavailable)
 internal extension UICollectionView {
-    
+
     func previousIndexPath(of indexPath: IndexPath) -> IndexPath? {
         var previousRow = indexPath.row - 1
         var previousSection = indexPath.section
-        
+
         //Fixing indexPath
         if previousRow < 0 {
             previousSection -= 1
-            
             if previousSection >= 0 {
                 previousRow = self.numberOfItems(inSection: previousSection) - 1
             }
         }
-        
-        if previousRow >= 0 && previousSection >= 0 {
+
+        if previousRow >= 0, previousSection >= 0 {
             return IndexPath(item: previousRow, section: previousSection)
         } else {
             return nil
diff --git a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/Categories/IQUITextFieldView+Additions.swift b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/Categories/IQUITextFieldView+Additions.swift
index 38a23a8d..3a14494f 100644
--- a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/Categories/IQUITextFieldView+Additions.swift
+++ b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/Categories/IQUITextFieldView+Additions.swift
@@ -1,7 +1,7 @@
 //
 //  IQUITextFieldView+Additions.swift
 // https://github.com/hackiftekhar/IQKeyboardManager
-// Copyright (c) 2013-16 Iftekhar Qurashi.
+// Copyright (c) 2013-20 Iftekhar Qurashi.
 //
 // Permission is hereby granted, free of charge, to any person obtaining a copy
 // of this software and associated documentation files (the "Software"), to deal
@@ -21,89 +21,73 @@
 // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 // THE SOFTWARE.
 
-import Foundation
+// import Foundation - UIKit contains Foundation
 import UIKit
 
 /**
 Uses default keyboard distance for textField.
 */
+@available(iOSApplicationExtension, unavailable)
 public let kIQUseDefaultKeyboardDistance = CGFloat.greatestFiniteMagnitude
 
-private var kIQKeyboardDistanceFromTextField = "kIQKeyboardDistanceFromTextField"
-private var kIQKeyboardEnableMode = "kIQKeyboardEnableMode"
-private var kIQShouldResignOnTouchOutsideMode = "kIQShouldResignOnTouchOutsideMode"
-private var kIQIgnoreSwitchingByNextPrevious = "kIQIgnoreSwitchingByNextPrevious"
-
 /**
 UIView category for managing UITextField/UITextView
 */
+@available(iOSApplicationExtension, unavailable)
 @objc public extension UIView {
 
+    private struct AssociatedKeys {
+        static var keyboardDistanceFromTextField = "keyboardDistanceFromTextField"
+        static var ignoreSwitchingByNextPrevious = "ignoreSwitchingByNextPrevious"
+        static var enableMode = "enableMode"
+        static var shouldResignOnTouchOutsideMode = "shouldResignOnTouchOutsideMode"
+    }
+
     /**
      To set customized distance from keyboard for textField/textView. Can't be less than zero
      */
-    @objc var keyboardDistanceFromTextField: CGFloat {
+    var keyboardDistanceFromTextField: CGFloat {
         get {
-            
-            if let aValue = objc_getAssociatedObject(self, &kIQKeyboardDistanceFromTextField) as? CGFloat {
-                return aValue
-            } else {
-                return kIQUseDefaultKeyboardDistance
-            }
+            return objc_getAssociatedObject(self, &AssociatedKeys.keyboardDistanceFromTextField) as? CGFloat ?? kIQUseDefaultKeyboardDistance
         }
         set(newValue) {
-            objc_setAssociatedObject(self, &kIQKeyboardDistanceFromTextField, newValue, objc_AssociationPolicy.OBJC_ASSOCIATION_RETAIN_NONATOMIC)
+            objc_setAssociatedObject(self, &AssociatedKeys.keyboardDistanceFromTextField, newValue, .OBJC_ASSOCIATION_RETAIN_NONATOMIC)
         }
     }
-    
+
     /**
      If shouldIgnoreSwitchingByNextPrevious is true then library will ignore this textField/textView while moving to other textField/textView using keyboard toolbar next previous buttons. Default is false
      */
-    @objc var ignoreSwitchingByNextPrevious: Bool {
+    var ignoreSwitchingByNextPrevious: Bool {
         get {
-            
-            if let aValue = objc_getAssociatedObject(self, &kIQIgnoreSwitchingByNextPrevious) as? Bool {
-                return aValue
-            } else {
-                return false
-            }
+            return objc_getAssociatedObject(self, &AssociatedKeys.ignoreSwitchingByNextPrevious) as? Bool ?? false
         }
         set(newValue) {
-            objc_setAssociatedObject(self, &kIQIgnoreSwitchingByNextPrevious, newValue, objc_AssociationPolicy.OBJC_ASSOCIATION_RETAIN_NONATOMIC)
+            objc_setAssociatedObject(self, &AssociatedKeys.ignoreSwitchingByNextPrevious, newValue, .OBJC_ASSOCIATION_RETAIN_NONATOMIC)
         }
     }
-    
-//    /**
-//     Override Enable/disable managing distance between keyboard and textField behaviour for this particular textField.
-//     */
-    @objc var enableMode: IQEnableMode {
+
+    /**
+     Override Enable/disable managing distance between keyboard and textField behaviour for this particular textField.
+     */
+    var enableMode: IQEnableMode {
         get {
-            
-            if let savedMode = objc_getAssociatedObject(self, &kIQKeyboardEnableMode) as? IQEnableMode {
-                return savedMode
-            } else {
-                return .default
-            }
+            return objc_getAssociatedObject(self, &AssociatedKeys.enableMode) as? IQEnableMode ?? .default
         }
         set(newValue) {
-            objc_setAssociatedObject(self, &kIQKeyboardEnableMode, newValue, objc_AssociationPolicy.OBJC_ASSOCIATION_RETAIN_NONATOMIC)
+            objc_setAssociatedObject(self, &AssociatedKeys.enableMode, newValue, .OBJC_ASSOCIATION_RETAIN_NONATOMIC)
         }
     }
-    
+
     /**
      Override resigns Keyboard on touching outside of UITextField/View behaviour for this particular textField.
      */
-    @objc var shouldResignOnTouchOutsideMode: IQEnableMode {
+    var shouldResignOnTouchOutsideMode: IQEnableMode {
         get {
-            
-            if let savedMode = objc_getAssociatedObject(self, &kIQShouldResignOnTouchOutsideMode) as? IQEnableMode {
-                return savedMode
-            } else {
-                return .default
-            }
+            return objc_getAssociatedObject(self, &AssociatedKeys.shouldResignOnTouchOutsideMode) as? IQEnableMode ?? .default
         }
         set(newValue) {
-            objc_setAssociatedObject(self, &kIQShouldResignOnTouchOutsideMode, newValue, objc_AssociationPolicy.OBJC_ASSOCIATION_RETAIN_NONATOMIC)
+            objc_setAssociatedObject(self, &AssociatedKeys.shouldResignOnTouchOutsideMode, newValue, .OBJC_ASSOCIATION_RETAIN_NONATOMIC)
         }
     }
 }
diff --git a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/Categories/IQUIView+Hierarchy.swift b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/Categories/IQUIView+Hierarchy.swift
index 70033319..99a0c763 100644
--- a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/Categories/IQUIView+Hierarchy.swift
+++ b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/Categories/IQUIView+Hierarchy.swift
@@ -1,7 +1,7 @@
 //
 //  IQUIView+Hierarchy.swift
 // https://github.com/hackiftekhar/IQKeyboardManager
-// Copyright (c) 2013-16 Iftekhar Qurashi.
+// Copyright (c) 2013-20 Iftekhar Qurashi.
 //
 // Permission is hereby granted, free of charge, to any person obtaining a copy
 // of this software and associated documentation files (the "Software"), to deal
@@ -26,86 +26,85 @@ import UIKit
 /**
 UIView hierarchy category.
 */
+@available(iOSApplicationExtension, unavailable)
 @objc public extension UIView {
-    
-    ///----------------------
-    /// MARK: viewControllers
-    ///----------------------
+
+    // MARK: viewControllers
 
     /**
     Returns the UIViewController object that manages the receiver.
     */
-    @objc func viewContainingController() -> UIViewController? {
-        
+    func viewContainingController() -> UIViewController? {
+
         var nextResponder: UIResponder? = self
-        
+
         repeat {
             nextResponder = nextResponder?.next
-            
+
             if let viewController = nextResponder as? UIViewController {
                 return viewController
             }
-            
+
         } while nextResponder != nil
-        
+
         return nil
     }
-    
+
     /**
     Returns the topMost UIViewController object in hierarchy.
     */
-    @objc func topMostController() -> UIViewController? {
-        
+    func topMostController() -> UIViewController? {
+
         var controllersHierarchy = [UIViewController]()
 
         if var topController = window?.rootViewController {
             controllersHierarchy.append(topController)
 
             while let presented = topController.presentedViewController {
-                
+
                 topController = presented
 
                 controllersHierarchy.append(presented)
             }
-            
+
             var matchController: UIResponder? = viewContainingController()
 
             while let mController = matchController as? UIViewController, controllersHierarchy.contains(mController) == false {
-                
+
                 repeat {
                     matchController = matchController?.next
 
                 } while matchController != nil && matchController is UIViewController == false
             }
-            
+
             return matchController as? UIViewController
-            
+
         } else {
             return viewContainingController()
         }
     }
-    
+
     /**
      Returns the UIViewController object that is actually the parent of this object. Most of the time it's the viewController object which actually contains it, but result may be different if it's viewController is added as childViewController of another viewController.
      */
-    @objc func parentContainerViewController() -> UIViewController? {
-        
+    func parentContainerViewController() -> UIViewController? {
+
         var matchController = viewContainingController()
         var parentContainerViewController: UIViewController?
 
         if var navController = matchController?.navigationController {
-            
+
             while let parentNav = navController.navigationController {
                 navController = parentNav
             }
-            
+
             var parentController: UIViewController = navController
 
             while let parent = parentController.parent,
                 (parent.isKind(of: UINavigationController.self) == false &&
                     parent.isKind(of: UITabBarController.self) == false &&
                     parent.isKind(of: UISplitViewController.self) == false) {
-                        
+
                         parentController = parent
             }
 
@@ -115,7 +114,7 @@ UIView hierarchy category.
                 parentContainerViewController = parentController
             }
         } else if let tabController = matchController?.tabBarController {
-            
+
             if let navController = tabController.selectedViewController as? UINavigationController {
                 parentContainerViewController = navController.topViewController
             } else {
@@ -126,23 +125,21 @@ UIView hierarchy category.
                 (parentController.isKind(of: UINavigationController.self) == false &&
                     parentController.isKind(of: UITabBarController.self) == false &&
                     parentController.isKind(of: UISplitViewController.self) == false) {
-                        
+
                         matchController = parentController
             }
 
             parentContainerViewController = matchController
         }
-        
+
         let finalController = parentContainerViewController?.parentIQContainerViewController() ?? parentContainerViewController
-        
+
         return finalController
 
     }
 
-    ///-----------------------------------
-    /// MARK: Superviews/Subviews/Siglings
-    ///-----------------------------------
-    
+    // MARK: Superviews/Subviews/Siglings
+
     /**
     Returns the superView of provided class type.
 
@@ -151,24 +148,24 @@ UIView hierarchy category.
      
      @param belowView view object in upper hierarchy where method should stop searching and return nil
 */
-    @objc func superviewOfClassType(_ classType: UIView.Type, belowView: UIView? = nil) -> UIView? {
+    func superviewOfClassType(_ classType: UIView.Type, belowView: UIView? = nil) -> UIView? {
 
         var superView = superview
-        
+
         while let unwrappedSuperView = superView {
-            
+
             if unwrappedSuperView.isKind(of: classType) {
-                
+
                 //If it's UIScrollView, then validating for special cases
                 if unwrappedSuperView.isKind(of: UIScrollView.self) {
-                    
+
                     let classNameString = NSStringFromClass(type(of: unwrappedSuperView.self))
 
                     //  If it's not UITableViewWrapperView class, this is internal class which is actually manage in UITableview. The speciality of this class is that it's superview is UITableView.
                     //  If it's not UITableViewCellScrollView class, this is internal class which is actually manage in UITableviewCell. The speciality of this class is that it's superview is UITableViewCell.
                     //If it's not _UIQueuingScrollView class, actually we validate for _ prefix which usually used by Apple internal classes
-                    if unwrappedSuperView.superview?.isKind(of: UITableView.self) == false &&
-                        unwrappedSuperView.superview?.isKind(of: UITableViewCell.self) == false &&
+                    if unwrappedSuperView.superview?.isKind(of: UITableView.self) == false,
+                        unwrappedSuperView.superview?.isKind(of: UITableViewCell.self) == false,
                         classNameString.hasPrefix("_") == false {
                         return superView
                     }
@@ -178,10 +175,10 @@ UIView hierarchy category.
             } else if unwrappedSuperView == belowView {
                 return nil
             }
-            
+
             superView = unwrappedSuperView.superview
         }
-        
+
         return nil
     }
 
@@ -195,10 +192,8 @@ UIView hierarchy category.
 
         //	Getting all siblings
         if let siblings = superview?.subviews {
-            
             for textField in siblings {
-                
-                if (textField == self || textField.ignoreSwitchingByNextPrevious == false) && textField.IQcanBecomeFirstResponder() == true {
+                if (textField == self || textField.ignoreSwitchingByNextPrevious == false), textField.IQcanBecomeFirstResponder() {
                     tempTextFields.append(textField)
                 }
             }
@@ -206,32 +201,32 @@ UIView hierarchy category.
 
         return tempTextFields
     }
-    
+
     /**
     Returns all deep subViews of the receiver which canBecomeFirstResponder.
     */
     internal func deepResponderViews() -> [UIView] {
-        
+
         //Array of (UITextField/UITextView's).
         var textfields = [UIView]()
-        
+
         for textField in subviews {
-            
-            if (textField == self || textField.ignoreSwitchingByNextPrevious == false) && textField.IQcanBecomeFirstResponder() == true {
+
+            if (textField == self || textField.ignoreSwitchingByNextPrevious == false), textField.IQcanBecomeFirstResponder() {
                 textfields.append(textField)
             }
             //Sometimes there are hidden or disabled views and textField inside them still recorded, so we added some more validations here (Bug ID: #458)
             //Uncommented else (Bug ID: #625)
-            else if textField.subviews.count != 0  && isUserInteractionEnabled == true && isHidden == false && alpha != 0.0 {
+            else if textField.subviews.count != 0, isUserInteractionEnabled, !isHidden, alpha != 0.0 {
                 for deepView in textField.deepResponderViews() {
                     textfields.append(deepView)
                 }
             }
         }
-        
+
         //subviews are returning in opposite order. Sorting according the frames 'y'.
         return textfields.sorted(by: { (view1: UIView, view2: UIView) -> Bool in
-            
+
             let frame1 = view1.convert(view1.bounds, to: self)
             let frame2 = view2.convert(view2.bounds, to: self)
 
@@ -242,11 +237,11 @@ UIView hierarchy category.
             }
         })
     }
-    
+
     private func IQcanBecomeFirstResponder() -> Bool {
-        
+
         var IQcanBecomeFirstResponder = false
-        
+
         if self.conforms(to: UITextInput.self) {
             //  Setting toolbar to keyboard.
             if let textView = self as? UITextView {
@@ -255,75 +250,74 @@ UIView hierarchy category.
                 IQcanBecomeFirstResponder = textField.isEnabled
             }
         }
-        
-        if IQcanBecomeFirstResponder == true {
-            IQcanBecomeFirstResponder = isUserInteractionEnabled == true && isHidden == false && alpha != 0.0 && isAlertViewTextField() == false && textFieldSearchBar() == nil
+
+        if IQcanBecomeFirstResponder {
+            IQcanBecomeFirstResponder = isUserInteractionEnabled && !isHidden && alpha != 0.0 && !isAlertViewTextField() && textFieldSearchBar() == nil
         }
 
         return IQcanBecomeFirstResponder
     }
 
-    ///-------------------------
-    /// MARK: Special TextFields
-    ///-------------------------
-    
+    // MARK: Special TextFields
+
     /**
      Returns searchBar if receiver object is UISearchBarTextField, otherwise return nil.
     */
     internal func textFieldSearchBar() -> UISearchBar? {
-        
+
         var responder: UIResponder? = self.next
-        
+
         while let bar = responder {
-            
+
             if let searchBar = bar as? UISearchBar {
                 return searchBar
             } else if bar is UIViewController {
                 break
             }
-            
+
             responder = bar.next
         }
-        
+
         return nil
     }
-    
+
     /**
     Returns YES if the receiver object is UIAlertSheetTextField, otherwise return NO.
     */
     internal func isAlertViewTextField() -> Bool {
-        
+
         var alertViewController: UIResponder? = viewContainingController()
-        
+
         var isAlertViewTextField = false
-        
-        while let controller = alertViewController, isAlertViewTextField == false {
-            
+
+        while let controller = alertViewController, !isAlertViewTextField {
+
             if controller.isKind(of: UIAlertController.self) {
                 isAlertViewTextField = true
                 break
             }
-            
+
             alertViewController = controller.next
         }
-        
+
         return isAlertViewTextField
     }
-    
+
     private func depth() -> Int {
         var depth: Int = 0
-        
+
         if let superView = superview {
             depth = superView.depth()+1
         }
-        
+
         return depth
     }
-    
+
 }
 
+@available(iOSApplicationExtension, unavailable)
 extension NSObject {
-    
+
     internal func _IQDescription() -> String {
         return "<\(self) \(Unmanaged.passUnretained(self).toOpaque())>"
     }
diff --git a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/Categories/IQUIViewController+Additions.swift b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/Categories/IQUIViewController+Additions.swift
index 61b59c5a..0750edf4 100644
--- a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/Categories/IQUIViewController+Additions.swift
+++ b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/Categories/IQUIViewController+Additions.swift
@@ -1,7 +1,7 @@
 //
 //  IQUIViewController+Additions.swift
 // https://github.com/hackiftekhar/IQKeyboardManager
-// Copyright (c) 2013-16 Iftekhar Qurashi.
+// Copyright (c) 2013-20 Iftekhar Qurashi.
 //
 // Permission is hereby granted, free of charge, to any person obtaining a copy
 // of this software and associated documentation files (the "Software"), to deal
@@ -23,31 +23,32 @@
 
 import UIKit
 
-private var kIQLayoutGuideConstraint = "kIQLayoutGuideConstraint"
-
+@available(iOSApplicationExtension, unavailable)
 @objc public extension UIViewController {
 
+    private struct AssociatedKeys {
+        static var IQLayoutGuideConstraint = "IQLayoutGuideConstraint"
+    }
+
     /**
      This method is provided to override by viewController's if the library lifts a viewController which you doesn't want to lift . This may happen if you have implemented side menu feature in your app and the library try to lift the side menu controller. Overriding this method in side menu class to return correct controller should fix the problem.
     */
     func parentIQContainerViewController() -> UIViewController? {
         return self
     }
-    
+
     /**
     To set customized distance from keyboard for textField/textView. Can't be less than zero
      
      @deprecated    Due to change in core-logic of handling distance between textField and keyboard distance, this layout contraint tweak is no longer needed and things will just work out of the box regardless of constraint pinned with safeArea/layoutGuide/superview
     */
     @available(*, deprecated, message: "Due to change in core-logic of handling distance between textField and keyboard distance, this layout contraint tweak is no longer needed and things will just work out of the box regardless of constraint pinned with safeArea/layoutGuide/superview.")
-    @IBOutlet @objc var IQLayoutGuideConstraint: NSLayoutConstraint? {
+    @IBOutlet var IQLayoutGuideConstraint: NSLayoutConstraint? {
         get {
-            
-            return objc_getAssociatedObject(self, &kIQLayoutGuideConstraint) as? NSLayoutConstraint
+            return objc_getAssociatedObject(self, &AssociatedKeys.IQLayoutGuideConstraint) as? NSLayoutConstraint
         }
-
         set(newValue) {
-            objc_setAssociatedObject(self, &kIQLayoutGuideConstraint, newValue, objc_AssociationPolicy.OBJC_ASSOCIATION_RETAIN_NONATOMIC)
+            objc_setAssociatedObject(self, &AssociatedKeys.IQLayoutGuideConstraint, newValue, .OBJC_ASSOCIATION_RETAIN_NONATOMIC)
         }
     }
 }
diff --git a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/Constants/IQKeyboardManagerConstants.swift b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/Constants/IQKeyboardManagerConstants.swift
index 60b910dd..3eea6965 100644
--- a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/Constants/IQKeyboardManagerConstants.swift
+++ b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/Constants/IQKeyboardManagerConstants.swift
@@ -1,7 +1,7 @@
 //
 //  IQKeyboardManagerConstants.swift
 // https://github.com/hackiftekhar/IQKeyboardManager
-// Copyright (c) 2013-16 Iftekhar Qurashi.
+// Copyright (c) 2013-20 Iftekhar Qurashi.
 //
 // Permission is hereby granted, free of charge, to any person obtaining a copy
 // of this software and associated documentation files (the "Software"), to deal
@@ -23,9 +23,7 @@
 
 import Foundation
 
-///-----------------------------------
-/// MARK: IQAutoToolbarManageBehaviour
-///-----------------------------------
+// MARK: IQAutoToolbarManageBehaviour
 
 /**
 `IQAutoToolbarBySubviews`
@@ -37,6 +35,7 @@ Creates Toolbar according to tag property of TextField's.
 `IQAutoToolbarByPosition`
 Creates Toolbar according to the y,x position of textField in it's superview coordinate.
 */
+@available(iOSApplicationExtension, unavailable)
 @objc public enum IQAutoToolbarManageBehaviour: Int {
     case bySubviews
     case byTag
@@ -53,6 +52,7 @@ Creates Toolbar according to the y,x position of textField in it's superview coo
  `IQPreviousNextDisplayModeAlwaysShow`
  Always show nextPrevious buttons, if there are more than 1 textField then both buttons will be visible but will be shown as disabled.
  */
+@available(iOSApplicationExtension, unavailable)
 @objc public enum IQPreviousNextDisplayMode: Int {
     case `default`
     case alwaysHide
@@ -69,6 +69,7 @@ Creates Toolbar according to the y,x position of textField in it's superview coo
  `IQEnableModeDisabled`
  setting is disabled.
  */
+@available(iOSApplicationExtension, unavailable)
 @objc public enum IQEnableMode: Int {
     case `default`
     case enabled
diff --git a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/Constants/IQKeyboardManagerConstantsInternal.swift b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/Constants/IQKeyboardManagerConstantsInternal.swift
index 1e65ac11..595b2e55 100644
--- a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/Constants/IQKeyboardManagerConstantsInternal.swift
+++ b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/Constants/IQKeyboardManagerConstantsInternal.swift
@@ -1,7 +1,7 @@
 //
 //  IQKeyboardManagerConstantsInternal.swift
 // https://github.com/hackiftekhar/IQKeyboardManager
-// Copyright (c) 2013-16 Iftekhar Qurashi.
+// Copyright (c) 2013-20 Iftekhar Qurashi.
 //
 // Permission is hereby granted, free of charge, to any person obtaining a copy
 // of this software and associated documentation files (the "Software"), to deal
@@ -21,4 +21,4 @@
 // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 // THE SOFTWARE.
 
-import Foundation
+import UIKit
diff --git a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQKeyboardManager.swift b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQKeyboardManager.swift
index 2c9328ac..5d9e92e4 100644
--- a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQKeyboardManager.swift
+++ b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQKeyboardManager.swift
@@ -1,7 +1,7 @@
 //
 //  IQKeyboardManager.swift
 // https://github.com/hackiftekhar/IQKeyboardManager
-// Copyright (c) 2013-16 Iftekhar Qurashi.
+// Copyright (c) 2013-20 Iftekhar Qurashi.
 //
 // Permission is hereby granted, free of charge, to any person obtaining a copy
 // of this software and associated documentation files (the "Software"), to deal
@@ -21,171 +21,64 @@
 // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 // THE SOFTWARE.
 
-import Foundation
-import CoreGraphics
+// import Foundation - UIKit contains Foundation
 import UIKit
+import CoreGraphics
 import QuartzCore
 
-///---------------------
-/// MARK: IQToolbar tags
-///---------------------
+// MARK: IQToolbar tags
 
 /**
 Codeless drop-in universal library allows to prevent issues of keyboard sliding up and cover UITextField/UITextView. Neither need to write any code nor any setup required and much more. A generic version of KeyboardManagement. https://developer.apple.com/library/ios/documentation/StringsTextFonts/Conceptual/TextAndWebiPhoneOS/KeyboardManagement/KeyboardManagement.html
 */
 
-@objc public class IQKeyboardManager: NSObject, UIGestureRecognizerDelegate {
-    
-    /**
-    Default tag for toolbar with Done button   -1002.
-    */
-    private static let  kIQDoneButtonToolbarTag         =   -1002
-    
+@available(iOSApplicationExtension, unavailable)
+@objc public final class IQKeyboardManager: NSObject {
+
     /**
-    Default tag for toolbar with Previous/Next buttons -1005.
+    Returns the default singleton instance.
     */
-    private static let  kIQPreviousNextButtonToolbarTag =   -1005
+    @objc public static let shared = IQKeyboardManager()
 
     /**
      Invalid point value.
      */
-    private static let  kIQCGPointInvalid = CGPoint.init(x: CGFloat.greatestFiniteMagnitude, y: CGFloat.greatestFiniteMagnitude)
+    internal static let  kIQCGPointInvalid = CGPoint.init(x: CGFloat.greatestFiniteMagnitude, y: CGFloat.greatestFiniteMagnitude)
+
+    // MARK: UIKeyboard handling
 
-    ///---------------------------
-    ///  MARK: UIKeyboard handling
-    ///---------------------------
-    
     /**
     Enable/disable managing distance between keyboard and textField. Default is YES(Enabled when class loads in `+(void)load` method).
     */
     @objc public var enable = false {
-        
+
         didSet {
             //If not enable, enable it.
-            if enable == true &&
-                oldValue == false {
+            if enable, !oldValue {
                 //If keyboard is currently showing. Sending a fake notification for keyboardWillHide to retain view's original position.
-                if let notification = _kbShowNotification {
+                if let notification = keyboardShowNotification {
                     keyboardWillShow(notification)
                 }
                 showLog("Enabled")
-            } else if enable == false &&
-                oldValue == true {   //If not disable, desable it.
+            } else if !enable, oldValue {   //If not disable, desable it.
                 keyboardWillHide(nil)
                 showLog("Disabled")
             }
         }
     }
-    
-    private func privateIsEnabled() -> Bool {
-        
-        var isEnabled = enable
-        
-        let enableMode = _textFieldView?.enableMode
-
-        if enableMode == .enabled {
-            isEnabled = true
-        } else if enableMode == .disabled {
-            isEnabled = false
-        } else {
-            if var textFieldViewController = _textFieldView?.viewContainingController() {
-                
-                //If it is searchBar textField embedded in Navigation Bar
-                if _textFieldView?.textFieldSearchBar() != nil, let navController = textFieldViewController as? UINavigationController, let topController = navController.topViewController {
-                    textFieldViewController = topController
-                }
-                
-                if isEnabled == false {
-                    
-                    //If viewController is kind of enable viewController class, then assuming it's enabled.
-                    for enabledClass in enabledDistanceHandlingClasses {
-                        
-                        if textFieldViewController.isKind(of: enabledClass) {
-                            isEnabled = true
-                            break
-                        }
-                    }
-                }
-                
-                if isEnabled == true {
-                    
-                    //If viewController is kind of disabled viewController class, then assuming it's disabled.
-                    for disabledClass in disabledDistanceHandlingClasses {
-                        
-                        if textFieldViewController.isKind(of: disabledClass) {
-                            isEnabled = false
-                            break
-                        }
-                    }
-                    
-                    //Special Controllers
-                    if isEnabled == true {
-                        
-                        let classNameString = NSStringFromClass(type(of: textFieldViewController.self))
-                        
-                        //_UIAlertControllerTextFieldViewController
-                        if classNameString.contains("UIAlertController") && classNameString.hasSuffix("TextFieldViewController") {
-                            isEnabled = false
-                        }
-                    }
-                }
-            }
-        }
-        
-        return isEnabled
-    }
-    
+
     /**
     To set keyboard distance from textField. can't be less than zero. Default is 10.0.
     */
-    @objc public var keyboardDistanceFromTextField: CGFloat {
-        
-        set {
-            _privateKeyboardDistanceFromTextField =  max(0, newValue)
-            showLog("keyboardDistanceFromTextField: \(_privateKeyboardDistanceFromTextField)")
-        }
-        get {
-            return _privateKeyboardDistanceFromTextField
-        }
-    }
-    
-    /**
-     Boolean to know if keyboard is showing.
-     */
-    @objc public var keyboardShowing: Bool {
-        
-        return _privateIsKeyboardShowing
-    }
-    
-    /**
-     moved distance to the top used to maintain distance between keyboard and textField. Most of the time this will be a positive value.
-     */
-    @objc public var movedDistance: CGFloat {
-        
-        return _privateMovedDistance
-    }
-    
-    /**
-    Will be called then movedDistance will be changed
-     */
-    @objc public var movedDistanceChanged: ((CGFloat) -> Void)?
+    @objc public var keyboardDistanceFromTextField: CGFloat = 10.0
+
+    // MARK: IQToolbar handling
 
-    /**
-    Returns the default singleton instance.
-    */
-    @objc public static let shared = IQKeyboardManager()
-    
-    ///-------------------------
-    /// MARK: IQToolbar handling
-    ///-------------------------
-    
     /**
     Automatic add the IQToolbar functionality. Default is YES.
     */
     @objc public var enableAutoToolbar = true {
-        
         didSet {
-
             privateIsEnableAutoToolbar() ? addToolbarIfRequired() : removeToolbarIfRequired()
 
             let enableToolbar = enableAutoToolbar ? "Yes" : "NO"
@@ -193,63 +86,13 @@ Codeless drop-in universal library allows to prevent issues of keyboard sliding
             showLog("enableAutoToolbar: \(enableToolbar)")
         }
     }
-    
-    private func privateIsEnableAutoToolbar() -> Bool {
-        
-        var enableToolbar = enableAutoToolbar
-        
-        if var textFieldViewController = _textFieldView?.viewContainingController() {
-            
-            //If it is searchBar textField embedded in Navigation Bar
-            if _textFieldView?.textFieldSearchBar() != nil, let navController = textFieldViewController as? UINavigationController, let topController = navController.topViewController {
-                textFieldViewController = topController
-            }
-
-            if enableToolbar == false {
-                
-                //If found any toolbar enabled classes then return.
-                for enabledClass in enabledToolbarClasses {
-                    
-                    if textFieldViewController.isKind(of: enabledClass) {
-                        enableToolbar = true
-                        break
-                    }
-                }
-            }
-            
-            if enableToolbar == true {
-                
-                //If found any toolbar disabled classes then return.
-                for disabledClass in disabledToolbarClasses {
-                    
-                    if textFieldViewController.isKind(of: disabledClass) {
-                        enableToolbar = false
-                        break
-                    }
-                }
-                
-                //Special Controllers
-                if enableToolbar == true {
-                    
-                    let classNameString = NSStringFromClass(type(of: textFieldViewController.self))
-                    
-                    //_UIAlertControllerTextFieldViewController
-                    if classNameString.contains("UIAlertController") && classNameString.hasSuffix("TextFieldViewController") {
-                        enableToolbar = false
-                    }
-                }
-            }
-        }
-
-        return enableToolbar
-    }
 
     /**
      /**
      IQAutoToolbarBySubviews:   Creates Toolbar according to subview's hirarchy of Textfield's in view.
      IQAutoToolbarByTag:        Creates Toolbar according to tag property of TextField's.
      IQAutoToolbarByPosition:   Creates Toolbar according to the y,x position of textField in it's superview coordinate.
-     
+
      Default is IQAutoToolbarBySubviews.
      */
     AutoToolbar managing behaviour. Default is IQAutoToolbarBySubviews.
@@ -260,7 +103,7 @@ Codeless drop-in universal library allows to prevent issues of keyboard sliding
     If YES, then uses textField's tintColor property for IQToolbar, otherwise tint color is default. Default is NO.
     */
     @objc public var shouldToolbarUsesTextFieldTintColor = false
-    
+
     /**
     This is used for toolbar.tintColor when textfield.keyboardAppearance is UIKeyboardAppearanceDefault. If shouldToolbarUsesTextFieldTintColor is YES then this property is ignored. Default is nil and uses black color.
     */
@@ -304,62 +147,45 @@ Codeless drop-in universal library allows to prevent issues of keyboard sliding
     Placeholder Font. Default is nil.
     */
     @objc public var placeholderFont: UIFont?
-    
+
     /**
      Placeholder Color. Default is nil. Which means lightGray
      */
     @objc public var placeholderColor: UIColor?
-    
+
     /**
      Placeholder Button Color when it's treated as button. Default is nil.
      */
     @objc public var placeholderButtonColor: UIColor?
 
-    ///--------------------------
-    /// MARK: UITextView handling
-    ///--------------------------
-    
-    /** used to adjust contentInset of UITextView. */
-    private var         startingTextViewContentInsets = UIEdgeInsets()
-    
-    /** used to adjust scrollIndicatorInsets of UITextView. */
-    private var         startingTextViewScrollIndicatorInsets = UIEdgeInsets()
-    
-    /** used with textView to detect a textFieldView contentInset is changed or not. (Bug ID: #92)*/
-    private var         isTextViewContentInsetChanged = false
-
-    ///---------------------------------------
-    /// MARK: UIKeyboard appearance overriding
-    ///---------------------------------------
+    // MARK: UIKeyboard appearance overriding
 
     /**
     Override the keyboardAppearance for all textField/textView. Default is NO.
     */
     @objc public var overrideKeyboardAppearance = false
-    
+
     /**
     If overrideKeyboardAppearance is YES, then all the textField keyboardAppearance is set using this property.
     */
     @objc public var keyboardAppearance = UIKeyboardAppearance.default
 
-    ///-----------------------------------------------------------
-    /// MARK: UITextField/UITextView Next/Previous/Resign handling
-    ///-----------------------------------------------------------
+    // MARK: UITextField/UITextView Next/Previous/Resign handling
 
     /**
     Resigns Keyboard on touching outside of UITextField/View. Default is NO.
     */
     @objc public var shouldResignOnTouchOutside = false {
-        
+
         didSet {
             resignFirstResponderGesture.isEnabled = privateShouldResignOnTouchOutside()
-            
+
             let shouldResign = shouldResignOnTouchOutside ? "Yes" : "NO"
-            
+
             showLog("shouldResignOnTouchOutside: \(shouldResign)")
         }
     }
-    
+
     /** TapGesture to resign keyboard on view's touch. It's a readonly property and exposed only for adding/removing dependencies if your added gesture does have collision with this one */
     @objc lazy public var resignFirstResponderGesture: UITapGestureRecognizer = {
 
@@ -369,361 +195,60 @@ Codeless drop-in universal library allows to prevent issues of keyboard sliding
 
         return tapGesture
     }()
-    
+
     /*******************************************/
-    
-    private func privateShouldResignOnTouchOutside() -> Bool {
-        
-        var shouldResign = shouldResignOnTouchOutside
-        
-        let enableMode = _textFieldView?.shouldResignOnTouchOutsideMode
-        
-        if enableMode == .enabled {
-            shouldResign = true
-        } else if enableMode == .disabled {
-            shouldResign = false
-        } else {
-            if var textFieldViewController = _textFieldView?.viewContainingController() {
-                
-                //If it is searchBar textField embedded in Navigation Bar
-                if _textFieldView?.textFieldSearchBar() != nil, let navController = textFieldViewController as? UINavigationController, let topController = navController.topViewController {
-                    textFieldViewController = topController
-                }
 
-                if shouldResign == false {
-                    
-                    //If viewController is kind of enable viewController class, then assuming shouldResignOnTouchOutside is enabled.
-                    for enabledClass in enabledTouchResignedClasses {
-                        
-                        if textFieldViewController.isKind(of: enabledClass) {
-                            shouldResign = true
-                            break
-                        }
-                    }
-                }
-                
-                if shouldResign == true {
-                    
-                    //If viewController is kind of disable viewController class, then assuming shouldResignOnTouchOutside is disable.
-                    for disabledClass in disabledTouchResignedClasses {
-                        
-                        if textFieldViewController.isKind(of: disabledClass) {
-                            shouldResign = false
-                            break
-                        }
-                    }
-                    
-                    //Special Controllers
-                    if shouldResign == true {
-                        
-                        let classNameString = NSStringFromClass(type(of: textFieldViewController.self))
-                        
-                        //_UIAlertControllerTextFieldViewController
-                        if classNameString.contains("UIAlertController") && classNameString.hasSuffix("TextFieldViewController") {
-                            shouldResign = false
-                        }
-                    }
-                }
-            }
-        }
-        
-        return shouldResign
-    }
-    
     /**
     Resigns currently first responder field.
     */
     @objc @discardableResult public func resignFirstResponder() -> Bool {
-        
-        if let textFieldRetain = _textFieldView {
-            
-            //Resigning first responder
-            let isResignFirstResponder = textFieldRetain.resignFirstResponder()
-            
-            //  If it refuses then becoming it as first responder again.    (Bug ID: #96)
-            if isResignFirstResponder == false {
-                //If it refuses to resign then becoming it first responder again for getting notifications callback.
-                textFieldRetain.becomeFirstResponder()
-                
-                showLog("Refuses to resign first responder: \(textFieldRetain)")
-            }
-            
-            return isResignFirstResponder
-        }
-        
-        return false
-    }
-    
-    /**
-    Returns YES if can navigate to previous responder textField/textView, otherwise NO.
-    */
-    @objc public var canGoPrevious: Bool {
-        //Getting all responder view's.
-        if let textFields = responderViews() {
-            if let  textFieldRetain = _textFieldView {
-                
-                //Getting index of current textField.
-                if let index = textFields.firstIndex(of: textFieldRetain) {
-                    
-                    //If it is not first textField. then it's previous object canBecomeFirstResponder.
-                    if index > 0 {
-                        return true
-                    }
-                }
-            }
-        }
-        return false
-    }
-    
-    /**
-    Returns YES if can navigate to next responder textField/textView, otherwise NO.
-    */
-    @objc public var canGoNext: Bool {
-        //Getting all responder view's.
-        if let textFields = responderViews() {
-            if let  textFieldRetain = _textFieldView {
-                //Getting index of current textField.
-                if let index = textFields.firstIndex(of: textFieldRetain) {
-                    
-                    //If it is not first textField. then it's previous object canBecomeFirstResponder.
-                    if index < textFields.count-1 {
-                        return true
-                    }
-                }
-            }
-        }
-        return false
-    }
-    
-    /**
-    Navigate to previous responder textField/textView.
-    */
-    @objc @discardableResult public func goPrevious() -> Bool {
-        
-        //Getting all responder view's.
-        if let  textFieldRetain = _textFieldView {
-            if let textFields = responderViews() {
-                //Getting index of current textField.
-                if let index = textFields.firstIndex(of: textFieldRetain) {
-                    
-                    //If it is not first textField. then it's previous object becomeFirstResponder.
-                    if index > 0 {
-                        
-                        let nextTextField = textFields[index-1]
-                        
-                        let isAcceptAsFirstResponder = nextTextField.becomeFirstResponder()
-                        
-                        //  If it refuses then becoming previous textFieldView as first responder again.    (Bug ID: #96)
-                        if isAcceptAsFirstResponder == false {
-                            //If next field refuses to become first responder then restoring old textField as first responder.
-                            textFieldRetain.becomeFirstResponder()
-                            
-                            showLog("Refuses to become first responder: \(nextTextField)")
-                        }
-                        
-                        return isAcceptAsFirstResponder
-                    }
-                }
-            }
-        }
-        
-        return false
-    }
-    
-    /**
-    Navigate to next responder textField/textView.
-    */
-    @objc @discardableResult public func goNext() -> Bool {
-
-        //Getting all responder view's.
-        if let  textFieldRetain = _textFieldView {
-            if let textFields = responderViews() {
-                //Getting index of current textField.
-                if let index = textFields.firstIndex(of: textFieldRetain) {
-                    //If it is not last textField. then it's next object becomeFirstResponder.
-                    if index < textFields.count-1 {
-                        
-                        let nextTextField = textFields[index+1]
-                        
-                        let isAcceptAsFirstResponder = nextTextField.becomeFirstResponder()
-                        
-                        //  If it refuses then becoming previous textFieldView as first responder again.    (Bug ID: #96)
-                        if isAcceptAsFirstResponder == false {
-                            //If next field refuses to become first responder then restoring old textField as first responder.
-                            textFieldRetain.becomeFirstResponder()
-                            
-                            showLog("Refuses to become first responder: \(nextTextField)")
-                        }
-                        
-                        return isAcceptAsFirstResponder
-                    }
-                }
-            }
-        }
 
-        return false
-    }
-    
-    /**	previousAction. */
-    @objc internal func previousAction (_ barButton: IQBarButtonItem) {
-        
-        //If user wants to play input Click sound.
-        if shouldPlayInputClicks == true {
-            //Play Input Click Sound.
-            UIDevice.current.playInputClick()
+        guard let textFieldRetain = textFieldView else {
+            return false
         }
-        
-        if canGoPrevious == true {
-            
-            if let textFieldRetain = _textFieldView {
-                let isAcceptAsFirstResponder = goPrevious()
-                
-                var invocation = barButton.invocation
-                var sender = textFieldRetain
-
-                //Handling search bar special case
-                do {
-                    if let searchBar = textFieldRetain.textFieldSearchBar() {
-                        invocation = searchBar.keyboardToolbar.previousBarButton.invocation
-                        sender = searchBar
-                    }
-                }
-
-                if isAcceptAsFirstResponder {
-                    invocation?.invoke(from: sender)
-                }
-            }
-        }
-    }
-    
-    /**	nextAction. */
-    @objc internal func nextAction (_ barButton: IQBarButtonItem) {
-        
-        //If user wants to play input Click sound.
-        if shouldPlayInputClicks == true {
-            //Play Input Click Sound.
-            UIDevice.current.playInputClick()
-        }
-        
-        if canGoNext == true {
-            
-            if let textFieldRetain = _textFieldView {
-                let isAcceptAsFirstResponder = goNext()
-                
-                var invocation = barButton.invocation
-                var sender = textFieldRetain
-
-                //Handling search bar special case
-                do {
-                    if let searchBar = textFieldRetain.textFieldSearchBar() {
-                        invocation = searchBar.keyboardToolbar.nextBarButton.invocation
-                        sender = searchBar
-                    }
-                }
 
-                if isAcceptAsFirstResponder {
-                    invocation?.invoke(from: sender)
-                }
-            }
-        }
-    }
-    
-    /**	doneAction. Resigning current textField. */
-    @objc internal func doneAction (_ barButton: IQBarButtonItem) {
-        
-        //If user wants to play input Click sound.
-        if shouldPlayInputClicks == true {
-            //Play Input Click Sound.
-            UIDevice.current.playInputClick()
-        }
-        
-        if let textFieldRetain = _textFieldView {
-            //Resign textFieldView.
-            let isResignedFirstResponder = resignFirstResponder()
-            
-            var invocation = barButton.invocation
-            var sender = textFieldRetain
-
-            //Handling search bar special case
-            do {
-                if let searchBar = textFieldRetain.textFieldSearchBar() {
-                    invocation = searchBar.keyboardToolbar.doneBarButton.invocation
-                    sender = searchBar
-                }
-            }
-
-            if isResignedFirstResponder {
-                invocation?.invoke(from: sender)
-            }
-        }
-    }
-    
-    /** Resigning on tap gesture.   (Enhancement ID: #14)*/
-    @objc internal func tapRecognized(_ gesture: UITapGestureRecognizer) {
-        
-        if gesture.state == .ended {
-
-            //Resigning currently responder textField.
-            resignFirstResponder()
-        }
-    }
-    
-    /** Note: returning YES is guaranteed to allow simultaneous recognition. returning NO is not guaranteed to prevent simultaneous recognition, as the other gesture's delegate may return YES. */
-    @objc public func gestureRecognizer(_ gestureRecognizer: UIGestureRecognizer, shouldRecognizeSimultaneouslyWith otherGestureRecognizer: UIGestureRecognizer) -> Bool {
-        return false
-    }
-    
-    /** To not detect touch events in a subclass of UIControl, these may have added their own selector for specific work */
-    @objc public func gestureRecognizer(_ gestureRecognizer: UIGestureRecognizer, shouldReceive touch: UITouch) -> Bool {
-        //  Should not recognize gesture if the clicked view is either UIControl or UINavigationBar(<Back button etc...)    (Bug ID: #145)
-        
-        for ignoreClass in touchResignedGestureIgnoreClasses {
-            
-            if touch.view?.isKind(of: ignoreClass) == true {
-                return false
-            }
+        //Resigning first responder
+        guard textFieldRetain.resignFirstResponder() else {
+            showLog("Refuses to resign first responder: \(textFieldRetain)")
+            //  If it refuses then becoming it as first responder again.    (Bug ID: #96)
+            //If it refuses to resign then becoming it first responder again for getting notifications callback.
+            textFieldRetain.becomeFirstResponder()
+            return false
         }
-
         return true
     }
-    
-    ///-----------------------
-    /// MARK: UISound handling
-    ///-----------------------
+
+    // MARK: UISound handling
 
     /**
     If YES, then it plays inputClick sound on next/previous/done click.
     */
     @objc public var shouldPlayInputClicks = true
 
-    ///---------------------------
-    /// MARK: UIAnimation handling
-    ///---------------------------
+    // MARK: UIAnimation handling
 
     /**
     If YES, then calls 'setNeedsLayout' and 'layoutIfNeeded' on any frame update of to viewController's view.
     */
     @objc public var layoutIfNeededOnUpdate = false
 
-    ///------------------------------------
-    /// MARK: Class Level disabling methods
-    ///------------------------------------
-    
+    // MARK: Class Level disabling methods
+
     /**
      Disable distance handling within the scope of disabled distance handling viewControllers classes. Within this scope, 'enabled' property is ignored. Class should be kind of UIViewController.
      */
     @objc public var disabledDistanceHandlingClasses  = [UIViewController.Type]()
-    
+
     /**
      Enable distance handling within the scope of enabled distance handling viewControllers classes. Within this scope, 'enabled' property is ignored. Class should be kind of UIViewController. If same Class is added in disabledDistanceHandlingClasses list, then enabledDistanceHandlingClasses will be ignored.
      */
     @objc public var enabledDistanceHandlingClasses  = [UIViewController.Type]()
-    
+
     /**
      Disable automatic toolbar creation within the scope of disabled toolbar viewControllers classes. Within this scope, 'enableAutoToolbar' property is ignored. Class should be kind of UIViewController.
      */
     @objc public var disabledToolbarClasses  = [UIViewController.Type]()
-    
+
     /**
      Enable automatic toolbar creation within the scope of enabled toolbar viewControllers classes. Within this scope, 'enableAutoToolbar' property is ignored. Class should be kind of UIViewController. If same Class is added in disabledToolbarClasses list, then enabledToolbarClasses will be ignore.
      */
@@ -733,136 +258,68 @@ Codeless drop-in universal library allows to prevent issues of keyboard sliding
      Allowed subclasses of UIView to add all inner textField, this will allow to navigate between textField contains in different superview. Class should be kind of UIView.
      */
     @objc public var toolbarPreviousNextAllowedClasses  = [UIView.Type]()
-    
+
     /**
      Disabled classes to ignore 'shouldResignOnTouchOutside' property, Class should be kind of UIViewController.
      */
     @objc public var disabledTouchResignedClasses  = [UIViewController.Type]()
-    
+
     /**
      Enabled classes to forcefully enable 'shouldResignOnTouchOutsite' property. Class should be kind of UIViewController. If same Class is added in disabledTouchResignedClasses list, then enabledTouchResignedClasses will be ignored.
      */
     @objc public var enabledTouchResignedClasses  = [UIViewController.Type]()
-    
+
     /**
      if shouldResignOnTouchOutside is enabled then you can customise the behaviour to not recognise gesture touches on some specific view subclasses. Class should be kind of UIView. Default is [UIControl, UINavigationBar]
      */
     @objc public var touchResignedGestureIgnoreClasses  = [UIView.Type]()
 
-    ///----------------------------------
-    /// MARK: Third Party Library support
+    // MARK: Third Party Library support
     /// Add TextField/TextView Notifications customised Notifications. For example while using YYTextView https://github.com/ibireme/YYText
-    ///----------------------------------
-    
+
     /**
     Add/Remove customised Notification for third party customised TextField/TextView. Please be aware that the Notification object must be idential to UITextField/UITextView Notification objects and customised TextField/TextView support must be idential to UITextField/UITextView.
     @param didBeginEditingNotificationName This should be identical to UITextViewTextDidBeginEditingNotification
     @param didEndEditingNotificationName This should be identical to UITextViewTextDidEndEditingNotification
     */
-    
+
     @objc public func registerTextFieldViewClass(_ aClass: UIView.Type, didBeginEditingNotificationName: String, didEndEditingNotificationName: String) {
 
         NotificationCenter.default.addObserver(self, selector: #selector(self.textFieldViewDidBeginEditing(_:)), name: Notification.Name(rawValue: didBeginEditingNotificationName), object: nil)
         NotificationCenter.default.addObserver(self, selector: #selector(self.textFieldViewDidEndEditing(_:)), name: Notification.Name(rawValue: didEndEditingNotificationName), object: nil)
     }
-    
+
     @objc public func unregisterTextFieldViewClass(_ aClass: UIView.Type, didBeginEditingNotificationName: String, didEndEditingNotificationName: String) {
-        
+
         NotificationCenter.default.removeObserver(self, name: Notification.Name(rawValue: didBeginEditingNotificationName), object: nil)
         NotificationCenter.default.removeObserver(self, name: Notification.Name(rawValue: didEndEditingNotificationName), object: nil)
     }
-    
-    /**************************************************************************************/
-    ///------------------------
-    /// MARK: Private variables
-    ///------------------------
-
-    /*******************************************/
-
-    /** To save UITextField/UITextView object voa textField/textView notifications. */
-    private weak var    _textFieldView: UIView?
-    
-    /** To save rootViewController.view.frame.origin. */
-    private var         _topViewBeginOrigin = IQKeyboardManager.kIQCGPointInvalid
-
-    /** To overcome with popGestureRecognizer issue Bug ID: #1361 */
-    private weak var    _rootViewControllerWhilePopGestureRecognizerActive: UIViewController?
-    private var         _topViewBeginOriginWhilePopGestureRecognizerActive = IQKeyboardManager.kIQCGPointInvalid
-
-    /** To save rootViewController */
-    private weak var    _rootViewController: UIViewController?
-    
-    /*******************************************/
-
-    /** Variable to save lastScrollView that was scrolled. */
-    private weak var    _lastScrollView: UIScrollView?
-    
-    /** LastScrollView's initial contentOffset. */
-    private var         _startingContentOffset = CGPoint.zero
-    
-    /** LastScrollView's initial scrollIndicatorInsets. */
-    private var         _startingScrollIndicatorInsets = UIEdgeInsets()
-    
-    /** LastScrollView's initial contentInsets. */
-    private var         _startingContentInsets = UIEdgeInsets()
-    
-    /*******************************************/
-
-    /** To save keyboardWillShowNotification. Needed for enable keyboard functionality. */
-    private var         _kbShowNotification: Notification?
-    
-    /** To save keyboard rame. */
-    private var         _kbFrame = CGRect.zero
-    
-    /** To save keyboard animation duration. */
-    private var         _animationDuration: TimeInterval = 0.25
-    
-    /** To mimic the keyboard animation */
-    #if swift(>=4.2)
-    private var         _animationCurve: UIView.AnimationOptions = .curveEaseOut
-    #else
-    private var         _animationCurve: UIViewAnimationOptions = .curveEaseOut
-    #endif
 
-    /*******************************************/
-
-    /** Boolean to maintain keyboard is showing or it is hide. To solve rootViewController.view.frame calculations. */
-    private var         _privateIsKeyboardShowing = false
-
-    private var         _privateMovedDistance: CGFloat = 0.0 {
-        didSet {
-            movedDistanceChanged?(_privateMovedDistance)
-        }
+    /**************************************************************************************/
+    internal struct WeakObjectContainer {
+        weak var object: AnyObject?
     }
-    
-    /** To use with keyboardDistanceFromTextField. */
-    private var         _privateKeyboardDistanceFromTextField: CGFloat = 10.0
-    
-    /** To know if we have any pending request to adjust view position. */
-    private var         _privateHasPendingAdjustRequest = false
 
     /**************************************************************************************/
-    
-    ///--------------------------------------
-    /// MARK: Initialization/Deinitialization
-    ///--------------------------------------
-    
+
+    // MARK: Initialization/Deinitialization
+
     /*  Singleton Object Initialization. */
     override init() {
-        
+
         super.init()
 
         self.registerAllNotifications()
 
         //Creating gesture for @shouldResignOnTouchOutside. (Enhancement ID: #14)
         resignFirstResponderGesture.isEnabled = shouldResignOnTouchOutside
-        
+
         //Loading IQToolbar, IQTitleBarButtonItem, IQBarButtonItem to fix first time keyboard appearance delay (Bug ID: #550)
         //If you experience exception breakpoint issue at below line then try these solutions https://stackoverflow.com/questions/27375640/all-exception-break-point-is-stopping-for-no-reason-on-simulator
         let textField = UITextField()
         textField.addDoneOnKeyboardWithTarget(nil, action: #selector(self.doneAction(_:)))
         textField.addPreviousNextDoneOnKeyboardWithTarget(nil, previousAction: #selector(self.previousAction(_:)), nextAction: #selector(self.nextAction(_:)), doneAction: #selector(self.doneAction(_:)))
-        
+
         disabledDistanceHandlingClasses.append(UITableViewController.self)
         disabledDistanceHandlingClasses.append(UIAlertController.self)
         disabledToolbarClasses.append(UIAlertController.self)
@@ -873,39 +330,27 @@ Codeless drop-in universal library allows to prevent issues of keyboard sliding
         touchResignedGestureIgnoreClasses.append(UIControl.self)
         touchResignedGestureIgnoreClasses.append(UINavigationBar.self)
     }
-    
-    /** Override +load method to enable KeyboardManager when class loader load IQKeyboardManager. Enabling when app starts (No need to write any code) */
-    /** It doesn't work from Swift 1.2 */
-//    override public class func load() {
-//        super.load()
-//        
-//        //Enabling IQKeyboardManager.
-//        IQKeyboardManager.shared.enable = true
-//    }
-    
+
     deinit {
         //  Disable the keyboard manager.
         enable = false
-
-        //Removing notification observers on dealloc.
-        NotificationCenter.default.removeObserver(self)
     }
-    
+
     /** Getting keyWindow. */
-    private func keyWindow() -> UIWindow? {
-        
-        if let keyWindow = _textFieldView?.window {
+    internal func keyWindow() -> UIWindow? {
+
+        if let keyWindow = textFieldView?.window {
             return keyWindow
         } else {
-            
+
             struct Static {
                 /** @abstract   Save keyWindow object for reuse.
                 @discussion Sometimes [[UIApplication sharedApplication] keyWindow] is returning nil between the app.   */
                 static weak var keyWindow: UIWindow?
             }
 
-            var originalKeyWindow : UIWindow? = nil
-            
+            var originalKeyWindow: UIWindow?
+
             #if swift(>=5.1)
             if #available(iOS 13, *) {
                 originalKeyWindow = UIApplication.shared.connectedScenes
@@ -919,8 +364,6 @@ Codeless drop-in universal library allows to prevent issues of keyboard sliding
             originalKeyWindow = UIApplication.shared.keyWindow
             #endif
 
-            
-            
             //If original key window is not nil and the cached keywindow is also not original keywindow then changing keywindow.
             if let originalKeyWindow = originalKeyWindow {
                 Static.keyWindow = originalKeyWindow
@@ -931,1372 +374,51 @@ Codeless drop-in universal library allows to prevent issues of keyboard sliding
         }
     }
 
-    ///-----------------------
-    /// MARK: Helper Functions
-    ///-----------------------
-    
-    private func optimizedAdjustPosition() {
-        if _privateHasPendingAdjustRequest == false {
-            _privateHasPendingAdjustRequest = true
-            OperationQueue.main.addOperation {
-                self.adjustPosition()
-                self._privateHasPendingAdjustRequest = false
-            }
-        }
-    }
-
-    /* Adjusting RootViewController's frame according to interface orientation. */
-    private func adjustPosition() {
-        
-        //  We are unable to get textField object while keyboard showing on WKWebView's textField.  (Bug ID: #11)
-        if _privateHasPendingAdjustRequest == true,
-            let textFieldView = _textFieldView,
-            let rootController = textFieldView.parentContainerViewController(),
-            let window = keyWindow(),
-            let textFieldViewRectInWindow = textFieldView.superview?.convert(textFieldView.frame, to: window),
-            let textFieldViewRectInRootSuperview = textFieldView.superview?.convert(textFieldView.frame, to: rootController.view?.superview) {
-            let startTime = CACurrentMediaTime()
-            showLog("****** \(#function) started ******", indentation: 1)
-            
-            //  Getting RootViewOrigin.
-            var rootViewOrigin = rootController.view.frame.origin
-            
-            //Maintain keyboardDistanceFromTextField
-            var specialKeyboardDistanceFromTextField = textFieldView.keyboardDistanceFromTextField
-            
-            if let searchBar = textFieldView.textFieldSearchBar() {
-                
-                specialKeyboardDistanceFromTextField = searchBar.keyboardDistanceFromTextField
-            }
-            
-            let newKeyboardDistanceFromTextField = (specialKeyboardDistanceFromTextField == kIQUseDefaultKeyboardDistance) ? keyboardDistanceFromTextField : specialKeyboardDistanceFromTextField
-
-            var kbSize = _kbFrame.size
-
-            do {
-                var kbFrame = _kbFrame
-
-                kbFrame.origin.y -= newKeyboardDistanceFromTextField
-                kbFrame.size.height += newKeyboardDistanceFromTextField
-
-                //Calculating actual keyboard covered size respect to window, keyboard frame may be different when hardware keyboard is attached (Bug ID: #469) (Bug ID: #381) (Bug ID: #1506)
-                let intersectRect = kbFrame.intersection(window.frame)
-                
-                if intersectRect.isNull {
-                    kbSize = CGSize(width: kbFrame.size.width, height: 0)
-                } else {
-                    kbSize = intersectRect.size
-                }
-            }
-
-            let statusBarHeight : CGFloat
-            
-            #if swift(>=5.1)
-            if #available(iOS 13, *) {
-                statusBarHeight = window.windowScene?.statusBarManager?.statusBarFrame.height ?? 0
-            } else {
-                statusBarHeight = UIApplication.shared.statusBarFrame.height
-            }
-            #else
-            statusBarHeight = UIApplication.shared.statusBarFrame.height
-            #endif
-
-            let navigationBarAreaHeight: CGFloat = statusBarHeight + ( rootController.navigationController?.navigationBar.frame.height ?? 0)
-            let layoutAreaHeight: CGFloat = rootController.view.layoutMargins.bottom
-
-            let topLayoutGuide: CGFloat = max(navigationBarAreaHeight, layoutAreaHeight) + 5
-            let bottomLayoutGuide: CGFloat = (textFieldView is UIScrollView && textFieldView.responds(to: #selector(getter: UITextView.isEditable))) ? 0 : rootController.view.layoutMargins.bottom  //Validation of textView for case where there is a tab bar at the bottom or running on iPhone X and textView is at the bottom.
-
-            //  Move positive = textField is hidden.
-            //  Move negative = textField is showing.
-            //  Calculating move position.
-            var move: CGFloat = min(textFieldViewRectInRootSuperview.minY-(topLayoutGuide), textFieldViewRectInWindow.maxY-(window.frame.height-kbSize.height)+bottomLayoutGuide)
-            
-            showLog("Need to move: \(move)")
-            
-            var superScrollView: UIScrollView?
-            var superView = textFieldView.superviewOfClassType(UIScrollView.self) as? UIScrollView
-            
-            //Getting UIScrollView whose scrolling is enabled.    //  (Bug ID: #285)
-            while let view = superView {
-                
-                if view.isScrollEnabled && view.shouldIgnoreScrollingAdjustment == false {
-                    superScrollView = view
-                    break
-                } else {
-                    //  Getting it's superScrollView.   //  (Enhancement ID: #21, #24)
-                    superView = view.superviewOfClassType(UIScrollView.self) as? UIScrollView
-                }
-            }
-            
-            //If there was a lastScrollView.    //  (Bug ID: #34)
-            if let lastScrollView = _lastScrollView {
-                //If we can't find current superScrollView, then setting lastScrollView to it's original form.
-                if superScrollView == nil {
-                    
-                    if lastScrollView.contentInset != self._startingContentInsets {
-                        showLog("Restoring contentInset to: \(_startingContentInsets)")
-                        UIView.animate(withDuration: _animationDuration, delay: 0, options: _animationCurve.union(.beginFromCurrentState), animations: { () -> Void in
-                            
-                            lastScrollView.contentInset = self._startingContentInsets
-                            lastScrollView.scrollIndicatorInsets = self._startingScrollIndicatorInsets
-                        })
-                    }
-                    
-                    if lastScrollView.shouldRestoreScrollViewContentOffset == true && lastScrollView.contentOffset.equalTo(_startingContentOffset) == false {
-                        showLog("Restoring contentOffset to: \(_startingContentOffset)")
-                        
-                        var animatedContentOffset = false   //  (Bug ID: #1365, #1508, #1541)
-
-                        if #available(iOS 9, *) {
-                            animatedContentOffset = textFieldView.superviewOfClassType(UIStackView.self, belowView: lastScrollView) != nil
-                        }
-
-                        if animatedContentOffset {
-                            lastScrollView.setContentOffset(_startingContentOffset, animated: UIView.areAnimationsEnabled)
-                        } else {
-                            lastScrollView.contentOffset = _startingContentOffset
-                        }
-                    }
-                    
-                    _startingContentInsets = UIEdgeInsets()
-                    _startingScrollIndicatorInsets = UIEdgeInsets()
-                    _startingContentOffset = CGPoint.zero
-                    _lastScrollView = nil
-                } else if superScrollView != lastScrollView {     //If both scrollView's are different, then reset lastScrollView to it's original frame and setting current scrollView as last scrollView.
-                    
-                    if lastScrollView.contentInset != self._startingContentInsets {
-                        showLog("Restoring contentInset to: \(_startingContentInsets)")
-                        UIView.animate(withDuration: _animationDuration, delay: 0, options: _animationCurve.union(.beginFromCurrentState), animations: { () -> Void in
-                            
-                            lastScrollView.contentInset = self._startingContentInsets
-                            lastScrollView.scrollIndicatorInsets = self._startingScrollIndicatorInsets
-                        })
-                    }
-                    
-                    if lastScrollView.shouldRestoreScrollViewContentOffset == true && lastScrollView.contentOffset.equalTo(_startingContentOffset) == false {
-                        showLog("Restoring contentOffset to: \(_startingContentOffset)")
-                        
-                        var animatedContentOffset = false   //  (Bug ID: #1365, #1508, #1541)
-                        
-                        if #available(iOS 9, *) {
-                            animatedContentOffset = textFieldView.superviewOfClassType(UIStackView.self, belowView: lastScrollView) != nil
-                        }
-                        
-                        if animatedContentOffset {
-                            lastScrollView.setContentOffset(_startingContentOffset, animated: UIView.areAnimationsEnabled)
-                        } else {
-                            lastScrollView.contentOffset = _startingContentOffset
-                        }
-                    }
-                    
-                    _lastScrollView = superScrollView
-                    if let scrollView = superScrollView {
-                        _startingContentInsets = scrollView.contentInset
-                        _startingContentOffset = scrollView.contentOffset
-
-                        #if swift(>=5.1)
-                        if #available(iOS 11.1, *) {
-                            _startingScrollIndicatorInsets = scrollView.verticalScrollIndicatorInsets
-                        } else {
-                            _startingScrollIndicatorInsets = scrollView.scrollIndicatorInsets
-                        }
-                        #else
-                        _startingScrollIndicatorInsets = scrollView.scrollIndicatorInsets
-                        #endif
-                    }
-                    
-                    showLog("Saving ScrollView New contentInset: \(_startingContentInsets) and contentOffset: \(_startingContentOffset)")
-                }
-                //Else the case where superScrollView == lastScrollView means we are on same scrollView after switching to different textField. So doing nothing, going ahead
-            } else if let unwrappedSuperScrollView = superScrollView {    //If there was no lastScrollView and we found a current scrollView. then setting it as lastScrollView.
-                _lastScrollView = unwrappedSuperScrollView
-                _startingContentInsets = unwrappedSuperScrollView.contentInset
-                _startingContentOffset = unwrappedSuperScrollView.contentOffset
-
-                #if swift(>=5.1)
-                if #available(iOS 11.1, *) {
-                    _startingScrollIndicatorInsets = unwrappedSuperScrollView.verticalScrollIndicatorInsets
-                } else {
-                    _startingScrollIndicatorInsets = unwrappedSuperScrollView.scrollIndicatorInsets
-                }
-                #else
-                _startingScrollIndicatorInsets = unwrappedSuperScrollView.scrollIndicatorInsets
-                #endif
-
-                showLog("Saving ScrollView contentInset: \(_startingContentInsets) and contentOffset: \(_startingContentOffset)")
-            }
-            
-            //  Special case for ScrollView.
-            //  If we found lastScrollView then setting it's contentOffset to show textField.
-            if let lastScrollView = _lastScrollView {
-                //Saving
-                var lastView = textFieldView
-                var superScrollView = _lastScrollView
-                
-                while let scrollView = superScrollView {
-                    
-                    var shouldContinue = false
-                    
-                    if move > 0 {
-                        shouldContinue =  move > (-scrollView.contentOffset.y - scrollView.contentInset.top)
-
-                    } else if let tableView = scrollView.superviewOfClassType(UITableView.self) as? UITableView {
-
-                        shouldContinue = scrollView.contentOffset.y > 0
-                        
-                        if shouldContinue == true, let tableCell = textFieldView.superviewOfClassType(UITableViewCell.self) as? UITableViewCell, let indexPath = tableView.indexPath(for: tableCell), let previousIndexPath = tableView.previousIndexPath(of: indexPath) {
-                            
-                            let previousCellRect = tableView.rectForRow(at: previousIndexPath)
-                            if previousCellRect.isEmpty == false {
-                                let previousCellRectInRootSuperview = tableView.convert(previousCellRect, to: rootController.view.superview)
-                                
-                                move = min(0, previousCellRectInRootSuperview.maxY - topLayoutGuide)
-                            }
-                        }
-                    } else if let collectionView = scrollView.superviewOfClassType(UICollectionView.self) as? UICollectionView {
-                        
-                        shouldContinue = scrollView.contentOffset.y > 0
-                        
-                        if shouldContinue == true, let collectionCell = textFieldView.superviewOfClassType(UICollectionViewCell.self) as? UICollectionViewCell, let indexPath = collectionView.indexPath(for: collectionCell), let previousIndexPath = collectionView.previousIndexPath(of: indexPath), let attributes = collectionView.layoutAttributesForItem(at: previousIndexPath) {
-
-                            let previousCellRect = attributes.frame
-                            if previousCellRect.isEmpty == false {
-                                let previousCellRectInRootSuperview = collectionView.convert(previousCellRect, to: rootController.view.superview)
-                                
-                                move = min(0, previousCellRectInRootSuperview.maxY - topLayoutGuide)
-                            }
-                        }
-                    } else {
-                        
-                        shouldContinue = textFieldViewRectInRootSuperview.origin.y < topLayoutGuide
-
-                        if shouldContinue {
-                            move = min(0, textFieldViewRectInRootSuperview.origin.y - topLayoutGuide)
-                        }
-                    }
-                    
-                    //Looping in upper hierarchy until we don't found any scrollView in it's upper hirarchy till UIWindow object.
-                    if shouldContinue {
-                        
-                        var tempScrollView = scrollView.superviewOfClassType(UIScrollView.self) as? UIScrollView
-                        var nextScrollView: UIScrollView?
-                        while let view = tempScrollView {
-                            
-                            if view.isScrollEnabled && view.shouldIgnoreScrollingAdjustment == false {
-                                nextScrollView = view
-                                break
-                            } else {
-                                tempScrollView = view.superviewOfClassType(UIScrollView.self) as? UIScrollView
-                            }
-                        }
-                        
-                        //Getting lastViewRect.
-                        if let lastViewRect = lastView.superview?.convert(lastView.frame, to: scrollView) {
-                            
-                            //Calculating the expected Y offset from move and scrollView's contentOffset.
-                            var shouldOffsetY = scrollView.contentOffset.y - min(scrollView.contentOffset.y, -move)
-                            
-                            //Rearranging the expected Y offset according to the view.
-                            shouldOffsetY = min(shouldOffsetY, lastViewRect.origin.y)
-                            
-                            //[_textFieldView isKindOfClass:[UITextView class]] If is a UITextView type
-                            //nextScrollView == nil    If processing scrollView is last scrollView in upper hierarchy (there is no other scrollView upper hierrchy.)
-                            //[_textFieldView isKindOfClass:[UITextView class]] If is a UITextView type
-                            //shouldOffsetY >= 0     shouldOffsetY must be greater than in order to keep distance from navigationBar (Bug ID: #92)
-                            if (textFieldView is UIScrollView && textFieldView.responds(to: #selector(getter: UITextView.isEditable))) &&
-                                nextScrollView == nil &&
-                                shouldOffsetY >= 0 {
-                                
-                                //  Converting Rectangle according to window bounds.
-                                if let currentTextFieldViewRect = textFieldView.superview?.convert(textFieldView.frame, to: window) {
-                                    
-                                    //Calculating expected fix distance which needs to be managed from navigation bar
-                                    let expectedFixDistance = currentTextFieldViewRect.minY - topLayoutGuide
-                                    
-                                    //Now if expectedOffsetY (superScrollView.contentOffset.y + expectedFixDistance) is lower than current shouldOffsetY, which means we're in a position where navigationBar up and hide, then reducing shouldOffsetY with expectedOffsetY (superScrollView.contentOffset.y + expectedFixDistance)
-                                    shouldOffsetY = min(shouldOffsetY, scrollView.contentOffset.y + expectedFixDistance)
-                                    
-                                    //Setting move to 0 because now we don't want to move any view anymore (All will be managed by our contentInset logic.
-                                    move = 0
-                                } else {
-                                    //Subtracting the Y offset from the move variable, because we are going to change scrollView's contentOffset.y to shouldOffsetY.
-                                    move -= (shouldOffsetY-scrollView.contentOffset.y)
-                                }
-                            } else {
-                                //Subtracting the Y offset from the move variable, because we are going to change scrollView's contentOffset.y to shouldOffsetY.
-                                move -= (shouldOffsetY-scrollView.contentOffset.y)
-                            }
-                            
-                            let newContentOffset = CGPoint(x: scrollView.contentOffset.x, y: shouldOffsetY)
-                            
-                            if scrollView.contentOffset.equalTo(newContentOffset) == false {
-
-                                showLog("old contentOffset: \(scrollView.contentOffset) new contentOffset: \(newContentOffset)")
-                                self.showLog("Remaining Move: \(move)")
-
-                                //Getting problem while using `setContentOffset:animated:`, So I used animation API.
-                                UIView.animate(withDuration: _animationDuration, delay: 0, options: _animationCurve.union(.beginFromCurrentState), animations: { () -> Void in
-                                    
-                                    var animatedContentOffset = false   //  (Bug ID: #1365, #1508, #1541)
-                                    
-                                    if #available(iOS 9, *) {
-                                        animatedContentOffset = textFieldView.superviewOfClassType(UIStackView.self, belowView: scrollView) != nil
-                                    }
-
-                                    if animatedContentOffset {
-                                        scrollView.setContentOffset(newContentOffset, animated: UIView.areAnimationsEnabled)
-                                    } else {
-                                        scrollView.contentOffset = newContentOffset
-                                    }
-                                }) { _ in
-                                    
-                                    if scrollView is UITableView || scrollView is UICollectionView {
-                                        //This will update the next/previous states
-                                        self.addToolbarIfRequired()
-                                    }
-                                }
-                            }
-                        }
-                        
-                        //  Getting next lastView & superScrollView.
-                        lastView = scrollView
-                        superScrollView = nextScrollView
-                    } else {
-                        move = 0
-                        break
-                    }
-                }
-                
-                //Updating contentInset
-                if let lastScrollViewRect = lastScrollView.superview?.convert(lastScrollView.frame, to: window),
-                    lastScrollView.shouldIgnoreContentInsetAdjustment == false {
-                    
-                    var bottomInset: CGFloat = (kbSize.height)-(window.frame.height-lastScrollViewRect.maxY)
-                    var bottomScrollIndicatorInset = bottomInset - newKeyboardDistanceFromTextField
-
-                    // Update the insets so that the scroll vew doesn't shift incorrectly when the offset is near the bottom of the scroll view.
-                    bottomInset = max(_startingContentInsets.bottom, bottomInset)
-                    bottomScrollIndicatorInset = max(_startingScrollIndicatorInsets.bottom, bottomScrollIndicatorInset)
-
-                    #if swift(>=4.0)
-                    if #available(iOS 11, *) {
-                        bottomInset -= lastScrollView.safeAreaInsets.bottom
-                        bottomScrollIndicatorInset -= lastScrollView.safeAreaInsets.bottom
-                    }
-                    #endif
-
-                    var movedInsets = lastScrollView.contentInset
-                    movedInsets.bottom = bottomInset
-
-                    if lastScrollView.contentInset != movedInsets {
-                        showLog("old ContentInset: \(lastScrollView.contentInset) new ContentInset: \(movedInsets)")
-
-                        UIView.animate(withDuration: _animationDuration, delay: 0, options: _animationCurve.union(.beginFromCurrentState), animations: { () -> Void in
-                            lastScrollView.contentInset = movedInsets
-                            
-                            var newScrollIndicatorInset : UIEdgeInsets
-                            
-                            #if swift(>=5.1)
-                            if #available(iOS 11.1, *) {
-                                newScrollIndicatorInset = lastScrollView.verticalScrollIndicatorInsets
-                            } else {
-                                newScrollIndicatorInset = lastScrollView.scrollIndicatorInsets
-                            }
-                            #else
-                            newScrollIndicatorInset = lastScrollView.scrollIndicatorInsets
-                            #endif
-
-                            newScrollIndicatorInset.bottom = bottomScrollIndicatorInset
-                            lastScrollView.scrollIndicatorInsets = newScrollIndicatorInset
-                        })
-                    }
-                }
-            }
-            //Going ahead. No else if.
-            
-            //Special case for UITextView(Readjusting textView.contentInset when textView hight is too big to fit on screen)
-            //_lastScrollView       If not having inside any scrollView, (now contentInset manages the full screen textView.
-            //[_textFieldView isKindOfClass:[UITextView class]] If is a UITextView type
-            if let textView = textFieldView as? UIScrollView, textView.isScrollEnabled, textFieldView.responds(to: #selector(getter: UITextView.isEditable)) {
-                
-//                CGRect rootSuperViewFrameInWindow = [_rootViewController.view.superview convertRect:_rootViewController.view.superview.bounds toView:keyWindow];
-//
-//                CGFloat keyboardOverlapping = CGRectGetMaxY(rootSuperViewFrameInWindow) - keyboardYPosition;
-//
-//                CGFloat textViewHeight = MIN(CGRectGetHeight(_textFieldView.frame), (CGRectGetHeight(rootSuperViewFrameInWindow)-topLayoutGuide-keyboardOverlapping));
-
-                let keyboardYPosition = window.frame.height - (kbSize.height-newKeyboardDistanceFromTextField)
-                var rootSuperViewFrameInWindow = window.frame
-                if let rootSuperview = rootController.view.superview {
-                    rootSuperViewFrameInWindow = rootSuperview.convert(rootSuperview.bounds, to: window)
-                }
-                
-                let keyboardOverlapping = rootSuperViewFrameInWindow.maxY - keyboardYPosition
-                
-                let textViewHeight = min(textView.frame.height, rootSuperViewFrameInWindow.height-topLayoutGuide-keyboardOverlapping)
-                
-                if textView.frame.size.height-textView.contentInset.bottom>textViewHeight {
-                    //_isTextViewContentInsetChanged,  If frame is not change by library in past, then saving user textView properties  (Bug ID: #92)
-                    if self.isTextViewContentInsetChanged == false {
-                        self.startingTextViewContentInsets = textView.contentInset
-                        
-                        #if swift(>=5.1)
-                        if #available(iOS 11.1, *) {
-                            self.startingTextViewScrollIndicatorInsets = textView.verticalScrollIndicatorInsets
-                        } else {
-                            self.startingTextViewScrollIndicatorInsets = textView.scrollIndicatorInsets
-                        }
-                        #else
-                        self.startingTextViewScrollIndicatorInsets = textView.scrollIndicatorInsets
-                        #endif
-                    }
-
-                    self.isTextViewContentInsetChanged = true
-
-                    var newContentInset = textView.contentInset
-                    newContentInset.bottom = textView.frame.size.height-textViewHeight
-
-                    #if swift(>=4.0)
-                    if #available(iOS 11, *) {
-                        newContentInset.bottom -= textView.safeAreaInsets.bottom
-                    }
-                    #endif
-
-                    if textView.contentInset != newContentInset {
-                        self.showLog("\(textFieldView) Old UITextView.contentInset: \(textView.contentInset) New UITextView.contentInset: \(newContentInset)")
-
-                        UIView.animate(withDuration: _animationDuration, delay: 0, options: _animationCurve.union(.beginFromCurrentState), animations: { () -> Void in
-                            
-                            textView.contentInset = newContentInset
-                            textView.scrollIndicatorInsets = newContentInset
-                        }, completion: { (_) -> Void in })
-                    }
-                }
-            }
-                
-            //  +Positive or zero.
-            if move >= 0 {
-                
-                rootViewOrigin.y = max(rootViewOrigin.y - move, min(0, -(kbSize.height-newKeyboardDistanceFromTextField)))
-
-                if rootController.view.frame.origin.equalTo(rootViewOrigin) == false {
-                    showLog("Moving Upward")
-                    
-                    UIView.animate(withDuration: _animationDuration, delay: 0, options: _animationCurve.union(.beginFromCurrentState), animations: { () -> Void in
-                        
-                        var rect = rootController.view.frame
-                        rect.origin = rootViewOrigin
-                        rootController.view.frame = rect
-                        
-                        //Animating content if needed (Bug ID: #204)
-                        if self.layoutIfNeededOnUpdate == true {
-                            //Animating content (Bug ID: #160)
-                            rootController.view.setNeedsLayout()
-                            rootController.view.layoutIfNeeded()
-                        }
-                        
-                        self.showLog("Set \(rootController) origin to: \(rootViewOrigin)")
-                    })
-                }
-                
-                _privateMovedDistance = (_topViewBeginOrigin.y-rootViewOrigin.y)
-            } else {  //  -Negative
-                let disturbDistance: CGFloat = rootViewOrigin.y-_topViewBeginOrigin.y
-                
-                //  disturbDistance Negative = frame disturbed.
-                //  disturbDistance positive = frame not disturbed.
-                if disturbDistance <= 0 {
-                    
-                    rootViewOrigin.y -= max(move, disturbDistance)
-                    
-                    if rootController.view.frame.origin.equalTo(rootViewOrigin) == false {
-                        showLog("Moving Downward")
-                        //  Setting adjusted rootViewRect
-                        //  Setting adjusted rootViewRect
-                        
-                        UIView.animate(withDuration: _animationDuration, delay: 0, options: _animationCurve.union(.beginFromCurrentState), animations: { () -> Void in
-                            
-                            var rect = rootController.view.frame
-                            rect.origin = rootViewOrigin
-                            rootController.view.frame = rect
-                            
-                            //Animating content if needed (Bug ID: #204)
-                            if self.layoutIfNeededOnUpdate == true {
-                                //Animating content (Bug ID: #160)
-                                rootController.view.setNeedsLayout()
-                                rootController.view.layoutIfNeeded()
-                            }
-                            
-                            self.showLog("Set \(rootController) origin to: \(rootViewOrigin)")
-                        })
-                    }
-                    
-                    _privateMovedDistance = (_topViewBeginOrigin.y-rootViewOrigin.y)
-                }
-            }
-        
-            let elapsedTime = CACurrentMediaTime() - startTime
-            showLog("****** \(#function) ended: \(elapsedTime) seconds ******", indentation: -1)
-        }
-    }
-
-    private func restorePosition() {
-        
-        _privateHasPendingAdjustRequest = false
-        
-        //  Setting rootViewController frame to it's original position. //  (Bug ID: #18)
-        if _topViewBeginOrigin.equalTo(IQKeyboardManager.kIQCGPointInvalid) == false {
-            
-            if let rootViewController = _rootViewController {
-                
-                if rootViewController.view.frame.origin.equalTo(self._topViewBeginOrigin) == false {
-                    //Used UIViewAnimationOptionBeginFromCurrentState to minimize strange animations.
-                    UIView.animate(withDuration: _animationDuration, delay: 0, options: _animationCurve.union(.beginFromCurrentState), animations: { () -> Void in
-                        
-                        self.showLog("Restoring \(rootViewController) origin to: \(self._topViewBeginOrigin)")
-                        
-                        //  Setting it's new frame
-                        var rect = rootViewController.view.frame
-                        rect.origin = self._topViewBeginOrigin
-                        rootViewController.view.frame = rect
-                        
-                        //Animating content if needed (Bug ID: #204)
-                        if self.layoutIfNeededOnUpdate == true {
-                            //Animating content (Bug ID: #160)
-                            rootViewController.view.setNeedsLayout()
-                            rootViewController.view.layoutIfNeeded()
-                        }
-                    })
-                }
-                
-                self._privateMovedDistance = 0
-                
-                if rootViewController.navigationController?.interactivePopGestureRecognizer?.state == .began {
-                    self._rootViewControllerWhilePopGestureRecognizerActive = rootViewController
-                    self._topViewBeginOriginWhilePopGestureRecognizerActive = self._topViewBeginOrigin
-                }
-                
-                _rootViewController = nil
-            }
-        }
-    }
+    // MARK: Public Methods
 
-    ///---------------------
-    /// MARK: Public Methods
-    ///---------------------
-    
     /*  Refreshes textField/textView position if any external changes is explicitly made by user.   */
     @objc public func reloadLayoutIfNeeded() {
 
-        if privateIsEnabled() == true {
-            if _privateIsKeyboardShowing == true,
-                _topViewBeginOrigin.equalTo(IQKeyboardManager.kIQCGPointInvalid) == false,
-                let textFieldView = _textFieldView,
-                textFieldView.isAlertViewTextField() == false {
-                optimizedAdjustPosition()
-            }
-        }
-    }
-
-    ///-------------------------------
-    /// MARK: UIKeyboard Notifications
-    ///-------------------------------
-
-    /*  UIKeyboardWillShowNotification. */
-    @objc internal func keyboardWillShow(_ notification: Notification?) {
-        
-        _kbShowNotification = notification
-
-        //  Boolean to know keyboard is showing/hiding
-        _privateIsKeyboardShowing = true
-        
-        let oldKBFrame = _kbFrame
-
-        if let info = notification?.userInfo {
-            
-            #if swift(>=4.2)
-            let curveUserInfoKey    = UIResponder.keyboardAnimationCurveUserInfoKey
-            let durationUserInfoKey = UIResponder.keyboardAnimationDurationUserInfoKey
-            let frameEndUserInfoKey = UIResponder.keyboardFrameEndUserInfoKey
-            #else
-            let curveUserInfoKey    = UIKeyboardAnimationCurveUserInfoKey
-            let durationUserInfoKey = UIKeyboardAnimationDurationUserInfoKey
-            let frameEndUserInfoKey = UIKeyboardFrameEndUserInfoKey
-            #endif
-
-            //  Getting keyboard animation.
-            if let curve = info[curveUserInfoKey] as? UInt {
-                _animationCurve = .init(rawValue: curve)
-            } else {
-                _animationCurve = .curveEaseOut
-            }
-            
-            //  Getting keyboard animation duration
-            if let duration = info[durationUserInfoKey] as? TimeInterval {
-                
-                //Saving animation duration
-                if duration != 0.0 {
-                    _animationDuration = duration
-                }
-            } else {
-                _animationDuration = 0.25
-            }
-            
-            //  Getting UIKeyboardSize.
-            if let kbFrame = info[frameEndUserInfoKey] as? CGRect {
-                
-                _kbFrame = kbFrame
-                showLog("UIKeyboard Frame: \(_kbFrame)")
-            }
-        }
-
-        if privateIsEnabled() == false {
-            restorePosition()
-            _topViewBeginOrigin = IQKeyboardManager.kIQCGPointInvalid
-            return
-        }
-        
-        let startTime = CACurrentMediaTime()
-        showLog("****** \(#function) started ******", indentation: 1)
-
-        //  (Bug ID: #5)
-        if let textFieldView = _textFieldView, _topViewBeginOrigin.equalTo(IQKeyboardManager.kIQCGPointInvalid) == true {
-            
-            //  keyboard is not showing(At the beginning only). We should save rootViewRect.
-            _rootViewController = textFieldView.parentContainerViewController()
-            if let controller = _rootViewController {
-                
-                if _rootViewControllerWhilePopGestureRecognizerActive == controller {
-                    _topViewBeginOrigin = _topViewBeginOriginWhilePopGestureRecognizerActive
-                } else {
-                    _topViewBeginOrigin = controller.view.frame.origin
-                }
-
-                _rootViewControllerWhilePopGestureRecognizerActive = nil
-                _topViewBeginOriginWhilePopGestureRecognizerActive = IQKeyboardManager.kIQCGPointInvalid
-                
-                self.showLog("Saving \(controller) beginning origin: \(self._topViewBeginOrigin)")
-            }
-        }
-
-        //If last restored keyboard size is different(any orientation accure), then refresh. otherwise not.
-        if _kbFrame.equalTo(oldKBFrame) == false {
-            
-            //If _textFieldView is inside UITableViewController then let UITableViewController to handle it (Bug ID: #37) (Bug ID: #76) See note:- https://developer.apple.com/library/ios/documentation/StringsTextFonts/Conceptual/TextAndWebiPhoneOS/KeyboardManagement/KeyboardManagement.html If it is UIAlertView textField then do not affect anything (Bug ID: #70).
-            
-            if _privateIsKeyboardShowing == true,
-                let textFieldView = _textFieldView,
-                textFieldView.isAlertViewTextField() == false {
-                
-                //  keyboard is already showing. adjust position.
-                optimizedAdjustPosition()
-            }
-        }
-        
-        let elapsedTime = CACurrentMediaTime() - startTime
-        showLog("****** \(#function) ended: \(elapsedTime) seconds ******", indentation: -1)
-    }
-
-    /*  UIKeyboardDidShowNotification. */
-    @objc internal func keyboardDidShow(_ notification: Notification?) {
-        
-        if privateIsEnabled() == false {
-            return
-        }
-        
-        let startTime = CACurrentMediaTime()
-        showLog("****** \(#function) started ******", indentation: 1)
-        
-        if let textFieldView = _textFieldView,
-            let parentController = textFieldView.parentContainerViewController(), (parentController.modalPresentationStyle == UIModalPresentationStyle.formSheet || parentController.modalPresentationStyle == UIModalPresentationStyle.pageSheet),
-            textFieldView.isAlertViewTextField() == false {
-            
-            self.optimizedAdjustPosition()
-        }
-        
-        let elapsedTime = CACurrentMediaTime() - startTime
-        showLog("****** \(#function) ended: \(elapsedTime) seconds ******", indentation: -1)
-    }
-
-    /*  UIKeyboardWillHideNotification. So setting rootViewController to it's default frame. */
-    @objc internal func keyboardWillHide(_ notification: Notification?) {
-        
-        //If it's not a fake notification generated by [self setEnable:NO].
-        if notification != nil {
-            _kbShowNotification = nil
-        }
-        
-        //  Boolean to know keyboard is showing/hiding
-        _privateIsKeyboardShowing = false
-        
-        if let info = notification?.userInfo {
-            
-            #if swift(>=4.2)
-            let durationUserInfoKey = UIResponder.keyboardAnimationDurationUserInfoKey
-            #else
-            let durationUserInfoKey = UIKeyboardAnimationDurationUserInfoKey
-            #endif
-
-            //  Getting keyboard animation duration
-            if let duration =  info[durationUserInfoKey] as? TimeInterval {
-                if duration != 0 {
-                    //  Setitng keyboard animation duration
-                    _animationDuration = duration
-                }
-            }
-        }
-        
-        //If not enabled then do nothing.
-        if privateIsEnabled() == false {
-            return
+        guard privateIsEnabled(),
+            keyboardShowing,
+            topViewBeginOrigin.equalTo(IQKeyboardManager.kIQCGPointInvalid) == false, let textFieldView = textFieldView,
+            textFieldView.isAlertViewTextField() == false else {
+                return
         }
-        
-        let startTime = CACurrentMediaTime()
-        showLog("****** \(#function) started ******", indentation: 1)
-
-        //Commented due to #56. Added all the conditions below to handle WKWebView's textFields.    (Bug ID: #56)
-        //  We are unable to get textField object while keyboard showing on WKWebView's textField.  (Bug ID: #11)
-        //    if (_textFieldView == nil)   return
-
-        //Restoring the contentOffset of the lastScrollView
-        if let lastScrollView = _lastScrollView {
-            
-            UIView.animate(withDuration: _animationDuration, delay: 0, options: _animationCurve.union(.beginFromCurrentState), animations: { () -> Void in
-                
-                if lastScrollView.contentInset != self._startingContentInsets {
-                    self.showLog("Restoring contentInset to: \(self._startingContentInsets)")
-                    lastScrollView.contentInset = self._startingContentInsets
-                    lastScrollView.scrollIndicatorInsets = self._startingScrollIndicatorInsets
-                }
-                
-                if lastScrollView.shouldRestoreScrollViewContentOffset == true && lastScrollView.contentOffset.equalTo(self._startingContentOffset) == false {
-                    self.showLog("Restoring contentOffset to: \(self._startingContentOffset)")
-                    
-                    var animatedContentOffset = false   //  (Bug ID: #1365, #1508, #1541)
-                    
-                    if #available(iOS 9, *) {
-                        animatedContentOffset = self._textFieldView?.superviewOfClassType(UIStackView.self, belowView: lastScrollView) != nil
-                    }
-                    
-                    if animatedContentOffset {
-                        lastScrollView.setContentOffset(self._startingContentOffset, animated: UIView.areAnimationsEnabled)
-                    } else {
-                        lastScrollView.contentOffset = self._startingContentOffset
-                    }
-                }
-                
-                // TODO: restore scrollView state
-                // This is temporary solution. Have to implement the save and restore scrollView state
-                var superScrollView: UIScrollView? = lastScrollView
-                
-                while let scrollView = superScrollView {
-                    
-                    let contentSize = CGSize(width: max(scrollView.contentSize.width, scrollView.frame.width), height: max(scrollView.contentSize.height, scrollView.frame.height))
-                    
-                    let minimumY = contentSize.height - scrollView.frame.height
-                    
-                    if minimumY < scrollView.contentOffset.y {
-                        
-                        let newContentOffset = CGPoint(x: scrollView.contentOffset.x, y: minimumY)
-                        if scrollView.contentOffset.equalTo(newContentOffset) == false {
-                            
-                            var animatedContentOffset = false   //  (Bug ID: #1365, #1508, #1541)
-                            
-                            if #available(iOS 9, *) {
-                                animatedContentOffset = self._textFieldView?.superviewOfClassType(UIStackView.self, belowView: scrollView) != nil
-                            }
-                            
-                            if animatedContentOffset {
-                                scrollView.setContentOffset(newContentOffset, animated: UIView.areAnimationsEnabled)
-                            } else {
-                                scrollView.contentOffset = newContentOffset
-                            }
-                            
-                            self.showLog("Restoring contentOffset to: \(self._startingContentOffset)")
-                        }
-                    }
-                    
-                    superScrollView = scrollView.superviewOfClassType(UIScrollView.self) as? UIScrollView
-                }
-            })
-        }
-        
-        restorePosition()
-        
-        //Reset all values
-        _lastScrollView = nil
-        _kbFrame = CGRect.zero
-        _startingContentInsets = UIEdgeInsets()
-        _startingScrollIndicatorInsets = UIEdgeInsets()
-        _startingContentOffset = CGPoint.zero
-        //    topViewBeginRect = CGRectZero    //Commented due to #82
-
-        let elapsedTime = CACurrentMediaTime() - startTime
-        showLog("****** \(#function) ended: \(elapsedTime) seconds ******", indentation: -1)
+        optimizedAdjustPosition()
     }
+}
 
-    @objc internal func keyboardDidHide(_ notification: Notification) {
-
-        let startTime = CACurrentMediaTime()
-        showLog("****** \(#function) started ******", indentation: 1)
-        
-        _topViewBeginOrigin = IQKeyboardManager.kIQCGPointInvalid
-        
-        _kbFrame = CGRect.zero
+@available(iOSApplicationExtension, unavailable)
+extension IQKeyboardManager: UIGestureRecognizerDelegate {
 
-        let elapsedTime = CACurrentMediaTime() - startTime
-        showLog("****** \(#function) ended: \(elapsedTime) seconds ******", indentation: -1)
-    }
-    
-    ///-------------------------------------------
-    /// MARK: UITextField/UITextView Notifications
-    ///-------------------------------------------
-
-    /**  UITextFieldTextDidBeginEditingNotification, UITextViewTextDidBeginEditingNotification. Fetching UITextFieldView object. */
-    @objc internal func textFieldViewDidBeginEditing(_ notification: Notification) {
-
-        let startTime = CACurrentMediaTime()
-        showLog("****** \(#function) started ******", indentation: 1)
-
-        //  Getting object
-        _textFieldView = notification.object as? UIView
-        
-        if overrideKeyboardAppearance == true {
-            if let textInput = _textFieldView as? UITextInput {
-                if textInput.keyboardAppearance != keyboardAppearance {
-                    //Setting textField keyboard appearance and reloading inputViews.
-                    if let textFieldView = _textFieldView as? UITextField {
-                        textFieldView.keyboardAppearance = keyboardAppearance
-                    } else if  let textFieldView = _textFieldView as? UITextView {
-                        textFieldView.keyboardAppearance = keyboardAppearance
-                    }
-                    _textFieldView?.reloadInputViews()
-                }
-            }
-        }
-        
-        //If autoToolbar enable, then add toolbar on all the UITextField/UITextView's if required.
-        if privateIsEnableAutoToolbar() == true {
-
-            //UITextView special case. Keyboard Notification is firing before textView notification so we need to resign it first and then again set it as first responder to add toolbar on it.
-            if let textView = _textFieldView as? UIScrollView, textView.responds(to: #selector(getter: UITextView.isEditable)),
-                textView.inputAccessoryView == nil {
-                
-                UIView.animate(withDuration: 0.00001, delay: 0, options: _animationCurve.union(.beginFromCurrentState), animations: { () -> Void in
-
-                    self.addToolbarIfRequired()
-                    
-                    }, completion: { (_) -> Void in
-
-                        //On textView toolbar didn't appear on first time, so forcing textView to reload it's inputViews.
-                        textView.reloadInputViews()
-                })
-            } else {
-                //Adding toolbar
-                addToolbarIfRequired()
-            }
-        } else {
-            removeToolbarIfRequired()
-        }
+    /** Resigning on tap gesture.   (Enhancement ID: #14)*/
+    @objc internal func tapRecognized(_ gesture: UITapGestureRecognizer) {
 
-        resignFirstResponderGesture.isEnabled = privateShouldResignOnTouchOutside()
-        _textFieldView?.window?.addGestureRecognizer(resignFirstResponderGesture)    //   (Enhancement ID: #14)
+        if gesture.state == .ended {
 
-        if privateIsEnabled() == false {
-            restorePosition()
-            _topViewBeginOrigin = IQKeyboardManager.kIQCGPointInvalid
-        } else {
-            if _topViewBeginOrigin.equalTo(IQKeyboardManager.kIQCGPointInvalid) == true {    //  (Bug ID: #5)
-                
-                _rootViewController = _textFieldView?.parentContainerViewController()
-
-                if let controller = _rootViewController {
-                    
-                    if _rootViewControllerWhilePopGestureRecognizerActive == controller {
-                        _topViewBeginOrigin = _topViewBeginOriginWhilePopGestureRecognizerActive
-                    } else {
-                        _topViewBeginOrigin = controller.view.frame.origin
-                    }
-                    
-                    _rootViewControllerWhilePopGestureRecognizerActive = nil
-                    _topViewBeginOriginWhilePopGestureRecognizerActive = IQKeyboardManager.kIQCGPointInvalid
-
-                    self.showLog("Saving \(controller) beginning origin: \(self._topViewBeginOrigin)")
-                }
-            }
-            
-            //If _textFieldView is inside ignored responder then do nothing. (Bug ID: #37, #74, #76)
-            //See notes:- https://developer.apple.com/library/ios/documentation/StringsTextFonts/Conceptual/TextAndWebiPhoneOS/KeyboardManagement/KeyboardManagement.html If it is UIAlertView textField then do not affect anything (Bug ID: #70).
-            if _privateIsKeyboardShowing == true,
-                let textFieldView = _textFieldView,
-                textFieldView.isAlertViewTextField() == false {
-                
-                //  keyboard is already showing. adjust position.
-                optimizedAdjustPosition()
-            }
+            //Resigning currently responder textField.
+            resignFirstResponder()
         }
-
-        let elapsedTime = CACurrentMediaTime() - startTime
-        showLog("****** \(#function) ended: \(elapsedTime) seconds ******", indentation: -1)
     }
-    
-    /**  UITextFieldTextDidEndEditingNotification, UITextViewTextDidEndEditingNotification. Removing fetched object. */
-    @objc internal func textFieldViewDidEndEditing(_ notification: Notification) {
-        
-        let startTime = CACurrentMediaTime()
-        showLog("****** \(#function) started ******", indentation: 1)
-
-        //Removing gesture recognizer   (Enhancement ID: #14)
-        _textFieldView?.window?.removeGestureRecognizer(resignFirstResponderGesture)
-        
-        // We check if there's a change in original frame or not.
-        
-        if let textView = _textFieldView as? UIScrollView, textView.responds(to: #selector(getter: UITextView.isEditable)) {
-
-            if isTextViewContentInsetChanged == true {
-                self.isTextViewContentInsetChanged = false
-
-                if textView.contentInset != self.startingTextViewContentInsets {
-                    self.showLog("Restoring textView.contentInset to: \(self.startingTextViewContentInsets)")
-                    
-                    UIView.animate(withDuration: _animationDuration, delay: 0, options: _animationCurve.union(.beginFromCurrentState), animations: { () -> Void in
-                        
-                        //Setting textField to it's initial contentInset
-                        textView.contentInset = self.startingTextViewContentInsets
-                        textView.scrollIndicatorInsets = self.startingTextViewScrollIndicatorInsets
-                        
-                    }, completion: { (_) -> Void in })
-                }
-            }
-        }
-        
-        //Setting object to nil
-        _textFieldView = nil
 
-        let elapsedTime = CACurrentMediaTime() - startTime
-        showLog("****** \(#function) ended: \(elapsedTime) seconds ******", indentation: -1)
+    /** Note: returning YES is guaranteed to allow simultaneous recognition. returning NO is not guaranteed to prevent simultaneous recognition, as the other gesture's delegate may return YES. */
+    @objc public func gestureRecognizer(_ gestureRecognizer: UIGestureRecognizer, shouldRecognizeSimultaneouslyWith otherGestureRecognizer: UIGestureRecognizer) -> Bool {
+        return false
     }
 
-    ///---------------------------------------
-    /// MARK: UIStatusBar Notification methods
-    ///---------------------------------------
-    
-    /**  UIApplicationWillChangeStatusBarOrientationNotification. Need to set the textView to it's original position. If any frame changes made. (Bug ID: #92)*/
-    @objc internal func willChangeStatusBarOrientation(_ notification: Notification) {
-
-        let currentStatusBarOrientation : UIInterfaceOrientation
-        #if swift(>=5.1)
-        if #available(iOS 13, *) {
-            currentStatusBarOrientation = keyWindow()?.windowScene?.interfaceOrientation ?? UIInterfaceOrientation.unknown
-        } else {
-            currentStatusBarOrientation = UIApplication.shared.statusBarOrientation
-        }
-        #else
-        currentStatusBarOrientation = UIApplication.shared.statusBarOrientation
-        #endif
-
-        #if swift(>=4.2)
-        let statusBarUserInfoKey    = UIApplication.statusBarOrientationUserInfoKey
-        #else
-        let statusBarUserInfoKey    = UIApplicationStatusBarOrientationUserInfoKey
-        #endif
-
-        guard let statusBarOrientation = notification.userInfo?[statusBarUserInfoKey] as? Int, currentStatusBarOrientation.rawValue != statusBarOrientation else {
-            return
-        }
-        
-        let startTime = CACurrentMediaTime()
-        showLog("****** \(#function) started ******", indentation: 1)
-        
-        //If textViewContentInsetChanged is saved then restore it.
-        if let textView = _textFieldView as? UITextView, textView.responds(to: #selector(getter: UITextView.isEditable)) {
-            
-            if isTextViewContentInsetChanged == true {
-
-                self.isTextViewContentInsetChanged = false
-
-                if textView.contentInset != self.startingTextViewContentInsets {
-                    UIView.animate(withDuration: _animationDuration, delay: 0, options: _animationCurve.union(.beginFromCurrentState), animations: { () -> Void in
-                        
-                        self.showLog("Restoring textView.contentInset to: \(self.startingTextViewContentInsets)")
-                        
-                        //Setting textField to it's initial contentInset
-                        textView.contentInset = self.startingTextViewContentInsets
-                        textView.scrollIndicatorInsets = self.startingTextViewScrollIndicatorInsets
-                        
-                    }, completion: { (_) -> Void in })
-                }
-            }
-        }
-
-        restorePosition()
+    /** To not detect touch events in a subclass of UIControl, these may have added their own selector for specific work */
+    @objc public func gestureRecognizer(_ gestureRecognizer: UIGestureRecognizer, shouldReceive touch: UITouch) -> Bool {
+        //  Should not recognize gesture if the clicked view is either UIControl or UINavigationBar(<Back button etc...)    (Bug ID: #145)
 
-        let elapsedTime = CACurrentMediaTime() - startTime
-        showLog("****** \(#function) ended: \(elapsedTime) seconds ******", indentation: -1)
-    }
-    
-    ///------------------
-    /// MARK: AutoToolbar
-    ///------------------
-    
-    /**	Get all UITextField/UITextView siblings of textFieldView. */
-    private func responderViews() -> [UIView]? {
-        
-        var superConsideredView: UIView?
-
-        //If find any consider responderView in it's upper hierarchy then will get deepResponderView.
-        for disabledClass in toolbarPreviousNextAllowedClasses {
-            
-            superConsideredView = _textFieldView?.superviewOfClassType(disabledClass)
-            
-            if superConsideredView != nil {
-                break
-            }
-        }
-    
-    //If there is a superConsideredView in view's hierarchy, then fetching all it's subview that responds. No sorting for superConsideredView, it's by subView position.    (Enhancement ID: #22)
-        if let view = superConsideredView {
-            return view.deepResponderViews()
-        } else {  //Otherwise fetching all the siblings
-            
-            if let textFields = _textFieldView?.responderSiblings() {
-                
-                //Sorting textFields according to behaviour
-                switch toolbarManageBehaviour {
-                    //If autoToolbar behaviour is bySubviews, then returning it.
-                case IQAutoToolbarManageBehaviour.bySubviews:   return textFields
-                    
-                    //If autoToolbar behaviour is by tag, then sorting it according to tag property.
-                case IQAutoToolbarManageBehaviour.byTag:    return textFields.sortedArrayByTag()
-                    
-                    //If autoToolbar behaviour is by tag, then sorting it according to tag property.
-                case IQAutoToolbarManageBehaviour.byPosition:    return textFields.sortedArrayByPosition()
-                }
-            } else {
-                return nil
-            }
-        }
-    }
-    
-    /** Add toolbar if it is required to add on textFields and it's siblings. */
-    private func addToolbarIfRequired() {
-        
-        let startTime = CACurrentMediaTime()
-        showLog("****** \(#function) started ******", indentation: 1)
-
-        //	Getting all the sibling textFields.
-        if let siblings = responderViews(), !siblings.isEmpty {
-            
-            showLog("Found \(siblings.count) responder sibling(s)")
-            
-            if let textField = _textFieldView {
-                //Either there is no inputAccessoryView or if accessoryView is not appropriate for current situation(There is Previous/Next/Done toolbar).
-                //setInputAccessoryView: check   (Bug ID: #307)
-                if textField.responds(to: #selector(setter: UITextField.inputAccessoryView)) {
-                    
-                    if textField.inputAccessoryView == nil ||
-                        textField.inputAccessoryView?.tag == IQKeyboardManager.kIQPreviousNextButtonToolbarTag ||
-                        textField.inputAccessoryView?.tag == IQKeyboardManager.kIQDoneButtonToolbarTag {
-                        
-                        let rightConfiguration: IQBarButtonItemConfiguration
-                        
-                        if let doneBarButtonItemImage = toolbarDoneBarButtonItemImage {
-                            rightConfiguration = IQBarButtonItemConfiguration(image: doneBarButtonItemImage, action: #selector(self.doneAction(_:)))
-                        } else if let doneBarButtonItemText = toolbarDoneBarButtonItemText {
-                            rightConfiguration = IQBarButtonItemConfiguration(title: doneBarButtonItemText, action: #selector(self.doneAction(_:)))
-                        } else {
-                            rightConfiguration = IQBarButtonItemConfiguration(barButtonSystemItem: .done, action: #selector(self.doneAction(_:)))
-                        }
-                        rightConfiguration.accessibilityLabel = toolbarDoneBarButtonItemAccessibilityLabel ?? "Done"
-                        
-                        //	If only one object is found, then adding only Done button.
-                        if (siblings.count <= 1 && previousNextDisplayMode == .default) || previousNextDisplayMode == .alwaysHide {
-                            
-                            textField.addKeyboardToolbarWithTarget(target: self, titleText: (shouldShowToolbarPlaceholder ? textField.drawingToolbarPlaceholder: nil), rightBarButtonConfiguration: rightConfiguration, previousBarButtonConfiguration: nil, nextBarButtonConfiguration: nil)
-
-                            textField.inputAccessoryView?.tag = IQKeyboardManager.kIQDoneButtonToolbarTag //  (Bug ID: #78)
-                            
-                        } else if previousNextDisplayMode == .default || previousNextDisplayMode == .alwaysShow {
-                            
-                            let prevConfiguration: IQBarButtonItemConfiguration
-                            
-                            if let doneBarButtonItemImage = toolbarPreviousBarButtonItemImage {
-                                prevConfiguration = IQBarButtonItemConfiguration(image: doneBarButtonItemImage, action: #selector(self.previousAction(_:)))
-                            } else if let doneBarButtonItemText = toolbarPreviousBarButtonItemText {
-                                prevConfiguration = IQBarButtonItemConfiguration(title: doneBarButtonItemText, action: #selector(self.previousAction(_:)))
-                            } else {
-                                prevConfiguration = IQBarButtonItemConfiguration(image: (UIImage.keyboardPreviousImage() ?? UIImage()), action: #selector(self.previousAction(_:)))
-                            }
-                            prevConfiguration.accessibilityLabel = toolbarPreviousBarButtonItemAccessibilityLabel ?? "Previous"
-
-                            let nextConfiguration: IQBarButtonItemConfiguration
-                            
-                            if let doneBarButtonItemImage = toolbarNextBarButtonItemImage {
-                                nextConfiguration = IQBarButtonItemConfiguration(image: doneBarButtonItemImage, action: #selector(self.nextAction(_:)))
-                            } else if let doneBarButtonItemText = toolbarNextBarButtonItemText {
-                                nextConfiguration = IQBarButtonItemConfiguration(title: doneBarButtonItemText, action: #selector(self.nextAction(_:)))
-                            } else {
-                                nextConfiguration = IQBarButtonItemConfiguration(image: (UIImage.keyboardNextImage() ?? UIImage()), action: #selector(self.nextAction(_:)))
-                            }
-                            nextConfiguration.accessibilityLabel = toolbarNextBarButtonItemAccessibilityLabel ?? "Next"
-
-                            textField.addKeyboardToolbarWithTarget(target: self, titleText: (shouldShowToolbarPlaceholder ? textField.drawingToolbarPlaceholder: nil), rightBarButtonConfiguration: rightConfiguration, previousBarButtonConfiguration: prevConfiguration, nextBarButtonConfiguration: nextConfiguration)
-
-                            textField.inputAccessoryView?.tag = IQKeyboardManager.kIQPreviousNextButtonToolbarTag //  (Bug ID: #78)
-                        }
-
-                        let toolbar = textField.keyboardToolbar
-
-                        //Setting toolbar tintColor //  (Enhancement ID: #30)
-                        if shouldToolbarUsesTextFieldTintColor {
-                            toolbar.tintColor = textField.tintColor
-                        } else if let tintColor = toolbarTintColor {
-                            toolbar.tintColor = tintColor
-                        } else {
-                            toolbar.tintColor = nil
-                        }
-
-                        //  Setting toolbar to keyboard.
-                        if let textFieldView = textField as? UITextInput {
-                            
-                            //Bar style according to keyboard appearance
-                            switch textFieldView.keyboardAppearance {
-                                
-                            case .dark?:
-                                toolbar.barStyle = .black
-                                toolbar.barTintColor = nil
-                            default:
-                                toolbar.barStyle = .default
-                                toolbar.barTintColor = toolbarBarTintColor
-                            }
-                        }
-
-                        //Setting toolbar title font.   //  (Enhancement ID: #30)
-                        if shouldShowToolbarPlaceholder == true &&
-                            textField.shouldHideToolbarPlaceholder == false {
-                            
-                            //Updating placeholder font to toolbar.     //(Bug ID: #148, #272)
-                            if toolbar.titleBarButton.title == nil ||
-                                toolbar.titleBarButton.title != textField.drawingToolbarPlaceholder {
-                                toolbar.titleBarButton.title = textField.drawingToolbarPlaceholder
-                            }
-                            
-                            //Setting toolbar title font.   //  (Enhancement ID: #30)
-                            if let font = placeholderFont {
-                                toolbar.titleBarButton.titleFont = font
-                            }
-
-                            //Setting toolbar title color.   //  (Enhancement ID: #880)
-                            if let color = placeholderColor {
-                                toolbar.titleBarButton.titleColor = color
-                            }
-                            
-                            //Setting toolbar button title color.   //  (Enhancement ID: #880)
-                            if let color = placeholderButtonColor {
-                                toolbar.titleBarButton.selectableTitleColor = color
-                            }
-
-                        } else {
-                            
-                            toolbar.titleBarButton.title = nil
-                        }
-                        
-                        //In case of UITableView (Special), the next/previous buttons has to be refreshed everytime.    (Bug ID: #56)
-                        //	If firstTextField, then previous should not be enabled.
-                        if siblings.first == textField {
-                            if siblings.count == 1 {
-                                textField.keyboardToolbar.previousBarButton.isEnabled = false
-                                textField.keyboardToolbar.nextBarButton.isEnabled = false
-                            } else {
-                                textField.keyboardToolbar.previousBarButton.isEnabled = false
-                                textField.keyboardToolbar.nextBarButton.isEnabled = true
-                            }
-                        } else if siblings.last  == textField {   //	If lastTextField then next should not be enaled.
-                            textField.keyboardToolbar.previousBarButton.isEnabled = true
-                            textField.keyboardToolbar.nextBarButton.isEnabled = false
-                        } else {
-                            textField.keyboardToolbar.previousBarButton.isEnabled = true
-                            textField.keyboardToolbar.nextBarButton.isEnabled = true
-                        }
-                    }
-                }
-            }
-        }
+        for ignoreClass in touchResignedGestureIgnoreClasses {
 
-        let elapsedTime = CACurrentMediaTime() - startTime
-        showLog("****** \(#function) ended: \(elapsedTime) seconds ******", indentation: -1)
-    }
-    
-    /** Remove any toolbar if it is IQToolbar. */
-    private func removeToolbarIfRequired() {    //  (Bug ID: #18)
-        
-        let startTime = CACurrentMediaTime()
-        showLog("****** \(#function) started ******", indentation: 1)
-
-        //	Getting all the sibling textFields.
-        if let siblings = responderViews() {
-            
-            showLog("Found \(siblings.count) responder sibling(s)")
-
-            for view in siblings {
-                
-                if let toolbar = view.inputAccessoryView as? IQToolbar {
-
-                    //setInputAccessoryView: check   (Bug ID: #307)
-                    if view.responds(to: #selector(setter: UITextField.inputAccessoryView)) &&
-                        (toolbar.tag == IQKeyboardManager.kIQDoneButtonToolbarTag || toolbar.tag == IQKeyboardManager.kIQPreviousNextButtonToolbarTag) {
-                        
-                        if let textField = view as? UITextField {
-                            textField.inputAccessoryView = nil
-                        } else if let textView = view as? UITextView {
-                            textView.inputAccessoryView = nil
-                        }
-
-                        view.reloadInputViews()
-                    }
-                }
+            if touch.view?.isKind(of: ignoreClass) ?? false {
+                return false
             }
         }
 
-        let elapsedTime = CACurrentMediaTime() - startTime
-        showLog("****** \(#function) ended: \(elapsedTime) seconds ******", indentation: -1)
-    }
-    
-    /**	reloadInputViews to reload toolbar buttons enable/disable state on the fly Enhancement ID #434. */
-    @objc public func reloadInputViews() {
-        
-        //If enabled then adding toolbar.
-        if privateIsEnableAutoToolbar() == true {
-            self.addToolbarIfRequired()
-        } else {
-            self.removeToolbarIfRequired()
-        }
-    }
-    
-    ///------------------------------------
-    /// MARK: Debugging & Developer options
-    ///------------------------------------
-    
-    @objc public var enableDebugging = false
-
-    /**
-     @warning Use below methods to completely enable/disable notifications registered by library internally. Please keep in mind that library is totally dependent on NSNotification of UITextField, UITextField, Keyboard etc. If you do unregisterAllNotifications then library will not work at all. You should only use below methods if you want to completedly disable all library functions. You should use below methods at your own risk.
-     */
-    @objc public func registerAllNotifications() {
-
-        #if swift(>=4.2)
-        let UIKeyboardWillShow  = UIResponder.keyboardWillShowNotification
-        let UIKeyboardDidShow   = UIResponder.keyboardDidShowNotification
-        let UIKeyboardWillHide  = UIResponder.keyboardWillHideNotification
-        let UIKeyboardDidHide   = UIResponder.keyboardDidHideNotification
-        
-        let UITextFieldTextDidBeginEditing  = UITextField.textDidBeginEditingNotification
-        let UITextFieldTextDidEndEditing    = UITextField.textDidEndEditingNotification
-        
-        let UITextViewTextDidBeginEditing   = UITextView.textDidBeginEditingNotification
-        let UITextViewTextDidEndEditing     = UITextView.textDidEndEditingNotification
-        
-        let UIApplicationWillChangeStatusBarOrientation = UIApplication.willChangeStatusBarOrientationNotification
-        #else
-        let UIKeyboardWillShow  = Notification.Name.UIKeyboardWillShow
-        let UIKeyboardDidShow   = Notification.Name.UIKeyboardDidShow
-        let UIKeyboardWillHide  = Notification.Name.UIKeyboardWillHide
-        let UIKeyboardDidHide   = Notification.Name.UIKeyboardDidHide
-        
-        let UITextFieldTextDidBeginEditing  = Notification.Name.UITextFieldTextDidBeginEditing
-        let UITextFieldTextDidEndEditing    = Notification.Name.UITextFieldTextDidEndEditing
-        
-        let UITextViewTextDidBeginEditing   = Notification.Name.UITextViewTextDidBeginEditing
-        let UITextViewTextDidEndEditing     = Notification.Name.UITextViewTextDidEndEditing
-        
-        let UIApplicationWillChangeStatusBarOrientation = Notification.Name.UIApplicationWillChangeStatusBarOrientation
-        #endif
-
-        //  Registering for keyboard notification.
-        NotificationCenter.default.addObserver(self, selector: #selector(self.keyboardWillShow(_:)), name: UIKeyboardWillShow, object: nil)
-        NotificationCenter.default.addObserver(self, selector: #selector(self.keyboardDidShow(_:)), name: UIKeyboardDidShow, object: nil)
-        NotificationCenter.default.addObserver(self, selector: #selector(self.keyboardWillHide(_:)), name: UIKeyboardWillHide, object: nil)
-        NotificationCenter.default.addObserver(self, selector: #selector(self.keyboardDidHide(_:)), name: UIKeyboardDidHide, object: nil)
-        
-        //  Registering for UITextField notification.
-        registerTextFieldViewClass(UITextField.self, didBeginEditingNotificationName: UITextFieldTextDidBeginEditing.rawValue, didEndEditingNotificationName: UITextFieldTextDidEndEditing.rawValue)
-        
-        //  Registering for UITextView notification.
-        registerTextFieldViewClass(UITextView.self, didBeginEditingNotificationName: UITextViewTextDidBeginEditing.rawValue, didEndEditingNotificationName: UITextViewTextDidEndEditing.rawValue)
-        
-        //  Registering for orientation changes notification
-        NotificationCenter.default.addObserver(self, selector: #selector(self.willChangeStatusBarOrientation(_:)), name: UIApplicationWillChangeStatusBarOrientation, object: UIApplication.shared)
-    }
-
-    @objc public func unregisterAllNotifications() {
-        
-        #if swift(>=4.2)
-        let UIKeyboardWillShow  = UIResponder.keyboardWillShowNotification
-        let UIKeyboardDidShow   = UIResponder.keyboardDidShowNotification
-        let UIKeyboardWillHide  = UIResponder.keyboardWillHideNotification
-        let UIKeyboardDidHide   = UIResponder.keyboardDidHideNotification
-        
-        let UITextFieldTextDidBeginEditing  = UITextField.textDidBeginEditingNotification
-        let UITextFieldTextDidEndEditing    = UITextField.textDidEndEditingNotification
-        
-        let UITextViewTextDidBeginEditing   = UITextView.textDidBeginEditingNotification
-        let UITextViewTextDidEndEditing     = UITextView.textDidEndEditingNotification
-        
-        let UIApplicationWillChangeStatusBarOrientation = UIApplication.willChangeStatusBarOrientationNotification
-        #else
-        let UIKeyboardWillShow  = Notification.Name.UIKeyboardWillShow
-        let UIKeyboardDidShow   = Notification.Name.UIKeyboardDidShow
-        let UIKeyboardWillHide  = Notification.Name.UIKeyboardWillHide
-        let UIKeyboardDidHide   = Notification.Name.UIKeyboardDidHide
-        
-        let UITextFieldTextDidBeginEditing  = Notification.Name.UITextFieldTextDidBeginEditing
-        let UITextFieldTextDidEndEditing    = Notification.Name.UITextFieldTextDidEndEditing
-        
-        let UITextViewTextDidBeginEditing   = Notification.Name.UITextViewTextDidBeginEditing
-        let UITextViewTextDidEndEditing     = Notification.Name.UITextViewTextDidEndEditing
-        
-        let UIApplicationWillChangeStatusBarOrientation = Notification.Name.UIApplicationWillChangeStatusBarOrientation
-        #endif
-
-        //  Unregistering for keyboard notification.
-        NotificationCenter.default.removeObserver(self, name: UIKeyboardWillShow, object: nil)
-        NotificationCenter.default.removeObserver(self, name: UIKeyboardDidShow, object: nil)
-        NotificationCenter.default.removeObserver(self, name: UIKeyboardWillHide, object: nil)
-        NotificationCenter.default.removeObserver(self, name: UIKeyboardDidHide, object: nil)
-
-        //  Unregistering for UITextField notification.
-        unregisterTextFieldViewClass(UITextField.self, didBeginEditingNotificationName: UITextFieldTextDidBeginEditing.rawValue, didEndEditingNotificationName: UITextFieldTextDidEndEditing.rawValue)
-        
-        //  Unregistering for UITextView notification.
-        unregisterTextFieldViewClass(UITextView.self, didBeginEditingNotificationName: UITextViewTextDidBeginEditing.rawValue, didEndEditingNotificationName: UITextViewTextDidEndEditing.rawValue)
-        
-        //  Unregistering for orientation changes notification
-        NotificationCenter.default.removeObserver(self, name: UIApplicationWillChangeStatusBarOrientation, object: UIApplication.shared)
+        return true
     }
 
-    private func showLog(_ logString: String, indentation: Int = 0) {
-        
-        struct Static {
-            static var indentation = 0
-        }
-
-        if indentation < 0 {
-            Static.indentation = max(0, Static.indentation + indentation)
-        }
-
-        if enableDebugging {
-
-            var preLog = "IQKeyboardManager"
-
-            for _ in 0 ... Static.indentation {
-                preLog += "|\t"
-            }
-            print(preLog + logString)
-        }
-
-        if indentation > 0 {
-            Static.indentation += indentation
-        }
-    }
 }
diff --git a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQKeyboardReturnKeyHandler.swift b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQKeyboardReturnKeyHandler.swift
index f0ee16e2..8f43f78d 100644
--- a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQKeyboardReturnKeyHandler.swift
+++ b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQKeyboardReturnKeyHandler.swift
@@ -1,7 +1,7 @@
 //
 //  IQKeyboardReturnKeyHandler.swift
 // https://github.com/hackiftekhar/IQKeyboardManager
-// Copyright (c) 2013-16 Iftekhar Qurashi.
+// Copyright (c) 2013-20 Iftekhar Qurashi.
 //
 // Permission is hereby granted, free of charge, to any person obtaining a copy
 // of this software and associated documentation files (the "Software"), to deal
@@ -21,16 +21,17 @@
 // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 // THE SOFTWARE.
 
-import Foundation
+// import Foundation - UIKit contains Foundation
 import UIKit
 
-private class IQTextFieldViewInfoModal: NSObject {
+@available(iOSApplicationExtension, unavailable)
+private final class IQTextFieldViewInfoModal: NSObject {
 
     fileprivate weak var textFieldDelegate: UITextFieldDelegate?
     fileprivate weak var textViewDelegate: UITextViewDelegate?
     fileprivate weak var textFieldView: UIView?
     fileprivate var originalReturnKeyType = UIReturnKeyType.default
-    
+
     init(textFieldView: UIView?, textFieldDelegate: UITextFieldDelegate?, textViewDelegate: UITextViewDelegate?, originalReturnKeyType: UIReturnKeyType = .default) {
         self.textFieldView = textFieldView
         self.textFieldDelegate = textFieldDelegate
@@ -42,57 +43,54 @@ private class IQTextFieldViewInfoModal: NSObject {
 /**
 Manages the return key to work like next/done in a view hierarchy.
 */
-public class IQKeyboardReturnKeyHandler: NSObject, UITextFieldDelegate, UITextViewDelegate {
+@available(iOSApplicationExtension, unavailable)
+public final class IQKeyboardReturnKeyHandler: NSObject {
+
+    // MARK: Settings
 
-    ///---------------
-    /// MARK: Settings
-    ///---------------
-    
     /**
     Delegate of textField/textView.
     */
     @objc public weak var delegate: (UITextFieldDelegate & UITextViewDelegate)?
-    
+
     /**
     Set the last textfield return key type. Default is UIReturnKeyDefault.
     */
     @objc public var lastTextFieldReturnKeyType: UIReturnKeyType = UIReturnKeyType.default {
-        
+
         didSet {
-            
+
             for modal in textFieldInfoCache {
-                
+
                 if let view = modal.textFieldView {
                     updateReturnKeyTypeOnTextField(view)
                 }
             }
         }
     }
-    
-    ///--------------------------------------
-    /// MARK: Initialization/Deinitialization
-    ///--------------------------------------
+
+    // MARK: Initialization/Deinitialization
 
     @objc public override init() {
         super.init()
     }
-    
+
     /**
     Add all the textFields available in UIViewController's view.
     */
     @objc public init(controller: UIViewController) {
         super.init()
-        
+
         addResponderFromView(controller.view)
     }
 
     deinit {
-        
+
         for modal in textFieldInfoCache {
-            
+
             if let textField = modal.textFieldView as? UITextField {
                 textField.returnKeyType = modal.originalReturnKeyType
-                
+
                 textField.delegate = modal.textFieldDelegate
 
             } else if let textView = modal.textFieldView as? UITextView {
@@ -102,22 +100,18 @@ public class IQKeyboardReturnKeyHandler: NSObject, UITextFieldDelegate, UITextVi
                 textView.delegate = modal.textViewDelegate
             }
         }
-        
+
         textFieldInfoCache.removeAll()
     }
 
-    ///------------------------
-    /// MARK: Private variables
-    ///------------------------
+    // MARK: Private variables
     private var textFieldInfoCache          =   [IQTextFieldViewInfoModal]()
-    
-    ///------------------------
-    /// MARK: Private Functions
-    ///------------------------
+
+    // MARK: Private Functions
     private func textFieldViewCachedInfo(_ textField: UIView) -> IQTextFieldViewInfoModal? {
-        
+
         for modal in textFieldInfoCache {
-            
+
             if let view = modal.textFieldView {
 
                 if view == textField {
@@ -125,32 +119,32 @@ public class IQKeyboardReturnKeyHandler: NSObject, UITextFieldDelegate, UITextVi
                 }
             }
         }
-        
+
         return nil
     }
 
     private func updateReturnKeyTypeOnTextField(_ view: UIView) {
         var superConsideredView: UIView?
-        
+
         //If find any consider responderView in it's upper hierarchy then will get deepResponderView. (Bug ID: #347)
         for disabledClass in IQKeyboardManager.shared.toolbarPreviousNextAllowedClasses {
-            
+
             superConsideredView = view.superviewOfClassType(disabledClass)
-            
+
             if superConsideredView != nil {
                 break
             }
         }
 
         var textFields = [UIView]()
-        
+
         //If there is a tableView in view's hierarchy, then fetching all it's subview that responds.
         if let unwrappedTableView = superConsideredView {     //   (Enhancement ID: #22)
             textFields = unwrappedTableView.deepResponderViews()
         } else {  //Otherwise fetching all the siblings
-            
+
             textFields = view.responderSiblings()
-            
+
             //Sorting textFields according to behaviour
             switch IQKeyboardManager.shared.toolbarManageBehaviour {
                 //If needs to sort it by tag
@@ -160,24 +154,22 @@ public class IQKeyboardReturnKeyHandler: NSObject, UITextFieldDelegate, UITextVi
             default:    break
             }
         }
-        
+
         if let lastView = textFields.last {
-            
+
             if let textField = view as? UITextField {
-                
+
                 //If it's the last textField in responder view, else next
                 textField.returnKeyType = (view == lastView)    ?   lastTextFieldReturnKeyType: UIReturnKeyType.next
             } else if let textView = view as? UITextView {
-                
+
                 //If it's the last textField in responder view, else next
                 textView.returnKeyType = (view == lastView)    ?   lastTextFieldReturnKeyType: UIReturnKeyType.next
             }
         }
     }
 
-    ///----------------------------------------------
-    /// MARK: Registering/Unregistering textFieldView
-    ///----------------------------------------------
+    // MARK: Registering/Unregistering textFieldView
 
     /**
     Should pass UITextField/UITextView intance. Assign textFieldView delegate to self, change it's returnKeyType.
@@ -185,34 +177,34 @@ public class IQKeyboardReturnKeyHandler: NSObject, UITextFieldDelegate, UITextVi
     @param view UITextField/UITextView object to register.
     */
     @objc public func addTextFieldView(_ view: UIView) {
-        
+
         let modal = IQTextFieldViewInfoModal(textFieldView: view, textFieldDelegate: nil, textViewDelegate: nil)
-        
+
         if let textField = view as? UITextField {
-            
+
             modal.originalReturnKeyType = textField.returnKeyType
             modal.textFieldDelegate = textField.delegate
             textField.delegate = self
-            
+
         } else if let textView = view as? UITextView {
 
             modal.originalReturnKeyType = textView.returnKeyType
             modal.textViewDelegate = textView.delegate
             textView.delegate = self
         }
-        
+
         textFieldInfoCache.append(modal)
     }
-    
+
     /**
     Should pass UITextField/UITextView intance. Restore it's textFieldView delegate and it's returnKeyType.
     
     @param view UITextField/UITextView object to unregister.
     */
     @objc public func removeTextFieldView(_ view: UIView) {
-        
+
         if let modal = textFieldViewCachedInfo(view) {
-            
+
             if let textField = view as? UITextField {
 
                 textField.returnKeyType = modal.originalReturnKeyType
@@ -222,67 +214,67 @@ public class IQKeyboardReturnKeyHandler: NSObject, UITextFieldDelegate, UITextVi
                 textView.returnKeyType = modal.originalReturnKeyType
                 textView.delegate = modal.textViewDelegate
             }
-            
+
             if let index = textFieldInfoCache.firstIndex(where: { $0.textFieldView == view}) {
 
                 textFieldInfoCache.remove(at: index)
             }
         }
     }
-    
+
     /**
     Add all the UITextField/UITextView responderView's.
     
     @param view UIView object to register all it's responder subviews.
     */
     @objc public func addResponderFromView(_ view: UIView) {
-        
+
         let textFields = view.deepResponderViews()
-        
+
         for textField in textFields {
-            
+
             addTextFieldView(textField)
         }
     }
-    
+
     /**
     Remove all the UITextField/UITextView responderView's.
     
     @param view UIView object to unregister all it's responder subviews.
     */
     @objc public func removeResponderFromView(_ view: UIView) {
-        
+
         let textFields = view.deepResponderViews()
-        
+
         for textField in textFields {
-            
+
             removeTextFieldView(textField)
         }
     }
-    
+
     @discardableResult private func goToNextResponderOrResign(_ view: UIView) -> Bool {
-        
+
         var superConsideredView: UIView?
-        
+
         //If find any consider responderView in it's upper hierarchy then will get deepResponderView. (Bug ID: #347)
         for disabledClass in IQKeyboardManager.shared.toolbarPreviousNextAllowedClasses {
-            
+
             superConsideredView = view.superviewOfClassType(disabledClass)
-            
+
             if superConsideredView != nil {
                 break
             }
         }
-        
+
         var textFields = [UIView]()
-        
+
         //If there is a tableView in view's hierarchy, then fetching all it's subview that responds.
         if let unwrappedTableView = superConsideredView {     //   (Enhancement ID: #22)
             textFields = unwrappedTableView.deepResponderViews()
         } else {  //Otherwise fetching all the siblings
-            
+
             textFields = view.responderSiblings()
-            
+
             //Sorting textFields according to behaviour
             switch IQKeyboardManager.shared.toolbarManageBehaviour {
                 //If needs to sort it by tag
@@ -298,12 +290,12 @@ public class IQKeyboardReturnKeyHandler: NSObject, UITextFieldDelegate, UITextVi
         if let index = textFields.firstIndex(of: view) {
             //If it is not last textField. then it's next object becomeFirstResponder.
             if index < (textFields.count - 1) {
-                
+
                 let nextTextField = textFields[index+1]
                 nextTextField.becomeFirstResponder()
                 return false
             } else {
-                
+
                 view.resignFirstResponder()
                 return true
             }
@@ -311,120 +303,104 @@ public class IQKeyboardReturnKeyHandler: NSObject, UITextFieldDelegate, UITextVi
             return true
         }
     }
+}
+
+// MARK: UITextFieldDelegate
+@available(iOSApplicationExtension, unavailable)
+extension IQKeyboardReturnKeyHandler: UITextFieldDelegate {
 
-    ///---------------------------------------
-    /// MARK: UITextField/UITextView delegates
-    ///---------------------------------------
-    
     @objc public func textFieldShouldBeginEditing(_ textField: UITextField) -> Bool {
-        
+
         if delegate == nil {
-            
+
             if let unwrapDelegate = textFieldViewCachedInfo(textField)?.textFieldDelegate {
                 if unwrapDelegate.responds(to: #selector(UITextFieldDelegate.textFieldShouldBeginEditing(_:))) {
-                    return unwrapDelegate.textFieldShouldBeginEditing?(textField) == true
+                    return unwrapDelegate.textFieldShouldBeginEditing?(textField) ?? false
                 }
             }
         }
-        
+
         return true
     }
-    
+
     @objc public func textFieldShouldEndEditing(_ textField: UITextField) -> Bool {
-        
+
         if delegate == nil {
-            
+
             if let unwrapDelegate = textFieldViewCachedInfo(textField)?.textFieldDelegate {
                 if unwrapDelegate.responds(to: #selector(UITextFieldDelegate.textFieldShouldEndEditing(_:))) {
-                    return unwrapDelegate.textFieldShouldEndEditing?(textField) == true
+                    return unwrapDelegate.textFieldShouldEndEditing?(textField) ?? false
                 }
             }
         }
-        
+
         return true
     }
-    
+
     @objc public func textFieldDidBeginEditing(_ textField: UITextField) {
         updateReturnKeyTypeOnTextField(textField)
-        
+
         var aDelegate: UITextFieldDelegate? = delegate
-        
+
         if aDelegate == nil {
-            
+
             if let modal = textFieldViewCachedInfo(textField) {
                 aDelegate = modal.textFieldDelegate
             }
         }
-        
+
         aDelegate?.textFieldDidBeginEditing?(textField)
     }
-    
+
     @objc public func textFieldDidEndEditing(_ textField: UITextField) {
-        
+
         var aDelegate: UITextFieldDelegate? = delegate
-        
+
         if aDelegate == nil {
-            
+
             if let modal = textFieldViewCachedInfo(textField) {
                 aDelegate = modal.textFieldDelegate
             }
         }
-        
+
         aDelegate?.textFieldDidEndEditing?(textField)
     }
-    
-    #if swift(>=4.2)
+
     @available(iOS 10.0, *)
     @objc public func textFieldDidEndEditing(_ textField: UITextField, reason: UITextField.DidEndEditingReason) {
-        
-        var aDelegate: UITextFieldDelegate? = delegate
-        
-        if aDelegate == nil {
-            
-            if let modal = textFieldViewCachedInfo(textField) {
-                aDelegate = modal.textFieldDelegate
-            }
-        }
-        
-        aDelegate?.textFieldDidEndEditing?(textField, reason: reason)
-    }
-    #else
-    @available(iOS 10.0, *)
-    @objc public func textFieldDidEndEditing(_ textField: UITextField, reason: UITextFieldDidEndEditingReason) {
 
         var aDelegate: UITextFieldDelegate? = delegate
-    
+
         if aDelegate == nil {
-    
+
             if let modal = textFieldViewCachedInfo(textField) {
                 aDelegate = modal.textFieldDelegate
             }
         }
-    
+
         aDelegate?.textFieldDidEndEditing?(textField, reason: reason)
     }
-    #endif
 
     @objc public func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String) -> Bool {
-        
+
         if delegate == nil {
-            
+
             if let unwrapDelegate = textFieldViewCachedInfo(textField)?.textFieldDelegate {
                 if unwrapDelegate.responds(to: #selector(UITextFieldDelegate.textField(_:shouldChangeCharactersIn:replacementString:))) {
-                    return unwrapDelegate.textField?(textField, shouldChangeCharactersIn: range, replacementString: string) == true
+                    return unwrapDelegate.textField?(textField, shouldChangeCharactersIn: range, replacementString: string) ?? false
                 }
             }
         }
         return true
     }
-    
+
     @objc public func textFieldShouldClear(_ textField: UITextField) -> Bool {
-        
+
         if delegate == nil {
-            
+
             if let unwrapDelegate = textFieldViewCachedInfo(textField)?.textFieldDelegate {
                 if unwrapDelegate.responds(to: #selector(UITextFieldDelegate.textFieldShouldClear(_:))) {
-                    return unwrapDelegate.textFieldShouldClear?(textField) == true
+                    return unwrapDelegate.textFieldShouldClear?(textField) ?? false
                 }
             }
         }
@@ -433,188 +409,193 @@ public class IQKeyboardReturnKeyHandler: NSObject, UITextFieldDelegate, UITextVi
     }
 
     @objc public func textFieldShouldReturn(_ textField: UITextField) -> Bool {
-        
+
         var shouldReturn = true
 
         if delegate == nil {
-            
+
             if let unwrapDelegate = textFieldViewCachedInfo(textField)?.textFieldDelegate {
                 if unwrapDelegate.responds(to: #selector(UITextFieldDelegate.textFieldShouldReturn(_:))) {
-                    shouldReturn = unwrapDelegate.textFieldShouldReturn?(textField) == true
+                    shouldReturn = unwrapDelegate.textFieldShouldReturn?(textField) ?? false
                 }
             }
         }
 
-        if shouldReturn == true {
+        if shouldReturn {
             goToNextResponderOrResign(textField)
             return true
         } else {
             return goToNextResponderOrResign(textField)
         }
     }
+}
+
+// MARK: UITextViewDelegate
+@available(iOSApplicationExtension, unavailable)
+extension IQKeyboardReturnKeyHandler: UITextViewDelegate {
 
     @objc public func textViewShouldBeginEditing(_ textView: UITextView) -> Bool {
-        
+
         if delegate == nil {
-            
+
             if let unwrapDelegate = textFieldViewCachedInfo(textView)?.textViewDelegate {
                 if unwrapDelegate.responds(to: #selector(UITextViewDelegate.textViewShouldBeginEditing(_:))) {
-                    return unwrapDelegate.textViewShouldBeginEditing?(textView) == true
+                    return unwrapDelegate.textViewShouldBeginEditing?(textView) ?? false
                 }
             }
         }
-        
+
         return true
     }
-    
+
     @objc public func textViewShouldEndEditing(_ textView: UITextView) -> Bool {
-        
+
         if delegate == nil {
-            
+
             if let unwrapDelegate = textFieldViewCachedInfo(textView)?.textViewDelegate {
                 if unwrapDelegate.responds(to: #selector(UITextViewDelegate.textViewShouldEndEditing(_:))) {
-                    return unwrapDelegate.textViewShouldEndEditing?(textView) == true
+                    return unwrapDelegate.textViewShouldEndEditing?(textView) ?? false
                 }
             }
         }
-        
+
         return true
     }
-    
+
     @objc public func textViewDidBeginEditing(_ textView: UITextView) {
         updateReturnKeyTypeOnTextField(textView)
-        
+
         var aDelegate: UITextViewDelegate? = delegate
-        
+
         if aDelegate == nil {
-            
+
             if let modal = textFieldViewCachedInfo(textView) {
                 aDelegate = modal.textViewDelegate
             }
         }
-        
+
         aDelegate?.textViewDidBeginEditing?(textView)
     }
-    
+
     @objc public func textViewDidEndEditing(_ textView: UITextView) {
-        
+
         var aDelegate: UITextViewDelegate? = delegate
-        
+
         if aDelegate == nil {
-            
+
             if let modal = textFieldViewCachedInfo(textView) {
                 aDelegate = modal.textViewDelegate
             }
         }
-        
+
         aDelegate?.textViewDidEndEditing?(textView)
     }
-    
+
     @objc public func textView(_ textView: UITextView, shouldChangeTextIn range: NSRange, replacementText text: String) -> Bool {
-        
+
         var shouldReturn = true
-        
+
         if delegate == nil {
-            
+
             if let unwrapDelegate = textFieldViewCachedInfo(textView)?.textViewDelegate {
                 if unwrapDelegate.responds(to: #selector(UITextViewDelegate.textView(_:shouldChangeTextIn:replacementText:))) {
-                    shouldReturn = (unwrapDelegate.textView?(textView, shouldChangeTextIn: range, replacementText: text)) == true
+                    shouldReturn = (unwrapDelegate.textView?(textView, shouldChangeTextIn: range, replacementText: text)) ?? false
                 }
             }
         }
-        
-        if shouldReturn == true && text == "\n" {
+
+        if shouldReturn, text == "\n" {
             shouldReturn = goToNextResponderOrResign(textView)
         }
-        
+
         return shouldReturn
     }
-    
+
     @objc public func textViewDidChange(_ textView: UITextView) {
-        
+
         var aDelegate: UITextViewDelegate? = delegate
-        
+
         if aDelegate == nil {
-            
+
             if let modal = textFieldViewCachedInfo(textView) {
                 aDelegate = modal.textViewDelegate
             }
         }
-        
+
         aDelegate?.textViewDidChange?(textView)
     }
-    
+
     @objc public func textViewDidChangeSelection(_ textView: UITextView) {
-        
+
         var aDelegate: UITextViewDelegate? = delegate
-        
+
         if aDelegate == nil {
-            
+
             if let modal = textFieldViewCachedInfo(textView) {
                 aDelegate = modal.textViewDelegate
             }
         }
-        
+
         aDelegate?.textViewDidChangeSelection?(textView)
     }
-    
+
     @available(iOS 10.0, *)
     @objc public func textView(_ aTextView: UITextView, shouldInteractWith URL: URL, in characterRange: NSRange, interaction: UITextItemInteraction) -> Bool {
-        
+
         if delegate == nil {
-            
+
             if let unwrapDelegate = textFieldViewCachedInfo(aTextView)?.textViewDelegate {
                 if unwrapDelegate.responds(to: #selector(textView as (UITextView, URL, NSRange, UITextItemInteraction) -> Bool)) {
-                    return unwrapDelegate.textView?(aTextView, shouldInteractWith: URL, in: characterRange, interaction: interaction) == true
+                    return unwrapDelegate.textView?(aTextView, shouldInteractWith: URL, in: characterRange, interaction: interaction) ?? false
                 }
             }
         }
-        
+
         return true
     }
-    
+
     @available(iOS 10.0, *)
     @objc public func textView(_ aTextView: UITextView, shouldInteractWith textAttachment: NSTextAttachment, in characterRange: NSRange, interaction: UITextItemInteraction) -> Bool {
-        
+
         if delegate == nil {
-            
+
             if let unwrapDelegate = textFieldViewCachedInfo(aTextView)?.textViewDelegate {
                 if unwrapDelegate.responds(to: #selector(textView as (UITextView, NSTextAttachment, NSRange, UITextItemInteraction) -> Bool)) {
-                    return unwrapDelegate.textView?(aTextView, shouldInteractWith: textAttachment, in: characterRange, interaction: interaction) == true
+                    return unwrapDelegate.textView?(aTextView, shouldInteractWith: textAttachment, in: characterRange, interaction: interaction) ?? false
                 }
             }
         }
-        
+
         return true
     }
-    
+
     @available(iOS, deprecated: 10.0)
     @objc public func textView(_ aTextView: UITextView, shouldInteractWith URL: URL, in characterRange: NSRange) -> Bool {
-        
+
         if delegate == nil {
-            
+
             if let unwrapDelegate = textFieldViewCachedInfo(aTextView)?.textViewDelegate {
                 if unwrapDelegate.responds(to: #selector(textView as (UITextView, URL, NSRange) -> Bool)) {
-                    return unwrapDelegate.textView?(aTextView, shouldInteractWith: URL, in: characterRange) == true
+                    return unwrapDelegate.textView?(aTextView, shouldInteractWith: URL, in: characterRange) ?? false
                 }
             }
         }
-        
+
         return true
     }
-    
+
     @available(iOS, deprecated: 10.0)
     @objc public func textView(_ aTextView: UITextView, shouldInteractWith textAttachment: NSTextAttachment, in characterRange: NSRange) -> Bool {
-        
+
         if delegate == nil {
-            
+
             if let unwrapDelegate = textFieldViewCachedInfo(aTextView)?.textViewDelegate {
                 if unwrapDelegate.responds(to: #selector(textView as (UITextView, NSTextAttachment, NSRange) -> Bool)) {
-                    return unwrapDelegate.textView?(aTextView, shouldInteractWith: textAttachment, in: characterRange) == true
+                    return unwrapDelegate.textView?(aTextView, shouldInteractWith: textAttachment, in: characterRange) ?? false
                 }
             }
         }
-        
+
         return true
     }
 }
diff --git a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQTextView/IQTextView.swift b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQTextView/IQTextView.swift
index 4be2b17d..d0c97e82 100644
--- a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQTextView/IQTextView.swift
+++ b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQTextView/IQTextView.swift
@@ -1,7 +1,7 @@
 //
 //  IQTextView.swift
 // https://github.com/hackiftekhar/IQKeyboardManager
-// Copyright (c) 2013-16 Iftekhar Qurashi.
+// Copyright (c) 2013-20 Iftekhar Qurashi.
 //
 // Permission is hereby granted, free of charge, to any person obtaining a copy
 // of this software and associated documentation files (the "Software"), to deal
@@ -24,64 +24,43 @@
 import UIKit
 
 /** @abstract UITextView with placeholder support   */
+@available(iOSApplicationExtension, unavailable)
 open class IQTextView: UITextView {
-    
+
     @objc required public init?(coder aDecoder: NSCoder) {
         super.init(coder: aDecoder)
-        
-        #if swift(>=4.2)
-        let UITextViewTextDidChange = UITextView.textDidChangeNotification
-        #else
-        let UITextViewTextDidChange = Notification.Name.UITextViewTextDidChange
-        #endif
-
-        NotificationCenter.default.addObserver(self, selector: #selector(self.refreshPlaceholder), name: UITextViewTextDidChange, object: self)
+        NotificationCenter.default.addObserver(self, selector: #selector(self.refreshPlaceholder), name: UITextView.textDidChangeNotification, object: self)
     }
-    
+
     @objc override public init(frame: CGRect, textContainer: NSTextContainer?) {
         super.init(frame: frame, textContainer: textContainer)
-
-        #if swift(>=4.2)
-        let notificationName = UITextView.textDidChangeNotification
-        #else
-        let notificationName = Notification.Name.UITextViewTextDidChange
-        #endif
-
-        NotificationCenter.default.addObserver(self, selector: #selector(self.refreshPlaceholder), name: notificationName, object: self)
+        NotificationCenter.default.addObserver(self, selector: #selector(self.refreshPlaceholder), name: UITextView.textDidChangeNotification, object: self)
     }
-    
+
     @objc override open func awakeFromNib() {
         super.awakeFromNib()
-        
-        #if swift(>=4.2)
-        let UITextViewTextDidChange = UITextView.textDidChangeNotification
-        #else
-        let UITextViewTextDidChange = Notification.Name.UITextViewTextDidChange
-        #endif
-
-        NotificationCenter.default.addObserver(self, selector: #selector(self.refreshPlaceholder), name: UITextViewTextDidChange, object: self)
+        NotificationCenter.default.addObserver(self, selector: #selector(self.refreshPlaceholder), name: UITextView.textDidChangeNotification, object: self)
     }
-    
+
     deinit {
         IQ_PlaceholderLabel.removeFromSuperview()
-        NotificationCenter.default.removeObserver(self)
     }
 
     private var placeholderInsets: UIEdgeInsets {
         return UIEdgeInsets(top: self.textContainerInset.top, left: self.textContainerInset.left + self.textContainer.lineFragmentPadding, bottom: self.textContainerInset.bottom, right: self.textContainerInset.right + self.textContainer.lineFragmentPadding)
     }
-    
+
     private var placeholderExpectedFrame: CGRect {
         let placeholderInsets = self.placeholderInsets
         let maxWidth = self.frame.width-placeholderInsets.left-placeholderInsets.right
         let expectedSize = IQ_PlaceholderLabel.sizeThatFits(CGSize(width: maxWidth, height: self.frame.height-placeholderInsets.top-placeholderInsets.bottom))
-        
+
         return CGRect(x: placeholderInsets.left, y: placeholderInsets.top, width: maxWidth, height: expectedSize.height)
     }
 
     lazy var IQ_PlaceholderLabel: UILabel = {
         let label = UILabel()
-        
+
         label.autoresizingMask = [.flexibleWidth, .flexibleHeight]
         label.lineBreakMode = .byWordWrapping
         label.numberOfLines = 0
@@ -95,29 +74,29 @@ open class IQTextView: UITextView {
         #endif
         label.alpha = 0
         self.addSubview(label)
-        
+
         return label
     }()
-    
+
     /** @abstract To set textView's placeholder text color. */
     @IBInspectable open var placeholderTextColor: UIColor? {
-        
+
         get {
             return IQ_PlaceholderLabel.textColor
         }
-        
+
         set {
             IQ_PlaceholderLabel.textColor = newValue
         }
     }
-    
+
     /** @abstract To set textView's placeholder text. Default is nil.    */
     @IBInspectable open var placeholder: String? {
-        
+
         get {
             return IQ_PlaceholderLabel.text
         }
-        
+
         set {
             IQ_PlaceholderLabel.text = newValue
             refreshPlaceholder()
@@ -135,40 +114,40 @@ open class IQTextView: UITextView {
             refreshPlaceholder()
         }
     }
-    
+
     @objc override open func layoutSubviews() {
         super.layoutSubviews()
-        
+
         IQ_PlaceholderLabel.frame = placeholderExpectedFrame
     }
-    
+
     @objc internal func refreshPlaceholder() {
-        
+
         if !text.isEmpty || !attributedText.string.isEmpty {
             IQ_PlaceholderLabel.alpha = 0
         } else {
             IQ_PlaceholderLabel.alpha = 1
         }
     }
-    
+
     @objc override open var text: String! {
-        
+
         didSet {
             refreshPlaceholder()
         }
     }
-    
+
     open override var attributedText: NSAttributedString! {
-        
+
         didSet {
             refreshPlaceholder()
         }
     }
-    
+
     @objc override open var font: UIFont? {
-        
+
         didSet {
-            
+
             if let unwrappedFont = font {
                 IQ_PlaceholderLabel.font = unwrappedFont
             } else {
@@ -176,7 +155,7 @@ open class IQTextView: UITextView {
             }
         }
     }
-    
+
     @objc override open var textAlignment: NSTextAlignment {
         didSet {
             IQ_PlaceholderLabel.textAlignment = textAlignment
@@ -184,47 +163,26 @@ open class IQTextView: UITextView {
     }
 
     @objc override weak open var delegate: UITextViewDelegate? {
-        
+
         get {
             refreshPlaceholder()
             return super.delegate
         }
-        
+
         set {
             super.delegate = newValue
         }
     }
-    
+
     @objc override open var intrinsicContentSize: CGSize {
         guard !hasText else {
             return super.intrinsicContentSize
         }
-        
+
         var newSize = super.intrinsicContentSize
         let placeholderInsets = self.placeholderInsets
         newSize.height = placeholderExpectedFrame.height + placeholderInsets.top + placeholderInsets.bottom
-        
+
         return newSize
     }
 }
-
-//#if swift(>=5.1)
-//import SwiftUI
-//
-//struct IQTextViewSwiftUI: UIViewRepresentable {
-//    func makeUIView(context: Context) -> IQTextView {
-//        IQTextView(frame: .zero)
-//    }
-//
-//    func updateUIView(_ view: IQTextView, context: Context) {
-//    }
-//}
-//
-//struct IQTextViewSwiftUI_Preview: PreviewProvider {
-//    static var previews: some View {
-//        IQTextViewSwiftUI()
-//    }
-//}
-//
-//#endif
-//
diff --git a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQToolbar/IQBarButtonItem.swift b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQToolbar/IQBarButtonItem.swift
index 7e84dadc..326bf620 100644
--- a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQToolbar/IQBarButtonItem.swift
+++ b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQToolbar/IQBarButtonItem.swift
@@ -1,7 +1,7 @@
 //
 //  IQBarButtonItem.swift
 // https://github.com/hackiftekhar/IQKeyboardManager
-// Copyright (c) 2013-16 Iftekhar Qurashi.
+// Copyright (c) 2013-20 Iftekhar Qurashi.
 //
 // Permission is hereby granted, free of charge, to any person obtaining a copy
 // of this software and associated documentation files (the "Software"), to deal
@@ -21,9 +21,10 @@
 // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 // THE SOFTWARE.
 
+// import Foundation - UIKit contains Foundation
 import UIKit
-import Foundation
 
+@available(iOSApplicationExtension, unavailable)
 open class IQBarButtonItem: UIBarButtonItem {
 
     private static var _classInitialize: Void = classInitialize()
@@ -42,11 +43,7 @@ open class IQBarButtonItem: UIBarButtonItem {
 
         let  appearanceProxy = self.appearance()
 
-        #if swift(>=4.2)
         let states: [UIControl.State]
-        #else
-        let states: [UIControlState]
-        #endif
 
         states = [.normal, .highlighted, .disabled, .selected, .application, .reserved]
 
@@ -57,47 +54,23 @@ open class IQBarButtonItem: UIBarButtonItem {
             appearanceProxy.setBackgroundImage(nil, for: state, style: .plain, barMetrics: .default)
             appearanceProxy.setBackButtonBackgroundImage(nil, for: state, barMetrics: .default)
         }
-        
+
         appearanceProxy.setTitlePositionAdjustment(UIOffset(), for: .default)
         appearanceProxy.setBackgroundVerticalPositionAdjustment(0, for: .default)
         appearanceProxy.setBackButtonBackgroundVerticalPositionAdjustment(0, for: .default)
     }
-    
+
     @objc override open var tintColor: UIColor? {
         didSet {
 
-            #if swift(>=4.2)
             var textAttributes = [NSAttributedString.Key: Any]()
-            let foregroundColorKey = NSAttributedString.Key.foregroundColor
-            #elseif swift(>=4)
-            var textAttributes = [NSAttributedStringKey: Any]()
-            let foregroundColorKey = NSAttributedStringKey.foregroundColor
-            #else
-            var textAttributes = [String: Any]()
-            let foregroundColorKey = NSForegroundColorAttributeName
-            #endif
-
-            textAttributes[foregroundColorKey] = tintColor
-
-            #if swift(>=4)
-
-                if let attributes = titleTextAttributes(for: .normal) {
-                    
-                    for (key, value) in attributes {
-                        #if swift(>=4.2)
-                        textAttributes[key] = value
-                        #else
-                        textAttributes[NSAttributedStringKey.init(key)] = value
-                        #endif
-                    }
-                }
-
-            #else
+            textAttributes[.foregroundColor] = tintColor
 
-                if let attributes = titleTextAttributes(for: .normal) {
-                    textAttributes = attributes
+            if let attributes = titleTextAttributes(for: .normal) {
+                for (key, value) in attributes {
+                    textAttributes[key] = value
                 }
-            #endif
+            }
 
             setTitleTextAttributes(textAttributes, for: .normal)
         }
@@ -107,7 +80,7 @@ open class IQBarButtonItem: UIBarButtonItem {
      Boolean to know if it's a system item or custom item, we are having a limitation that we cannot override a designated initializer, so we are manually setting this property once in initialization
      */
     @objc internal var isSystemItem = false
-    
+
     /**
      Additional target & action to do get callback action. Note that setting custom target & selector doesn't affect native functionality, this is just an additional target to get a callback.
      
@@ -121,12 +94,12 @@ open class IQBarButtonItem: UIBarButtonItem {
             invocation = nil
         }
     }
-    
+
     /**
      Customized Invocation to be called when button is pressed. invocation is internally created using setTarget:action: method.
      */
     @objc open var invocation: IQInvocation?
-    
+
     deinit {
         target = nil
         invocation = nil
diff --git a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQToolbar/IQInvocation.swift b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQToolbar/IQInvocation.swift
index e75a0977..f43cd6e7 100644
--- a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQToolbar/IQInvocation.swift
+++ b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQToolbar/IQInvocation.swift
@@ -1,7 +1,7 @@
 //
 //  IQInvocation.swift
 // https://github.com/hackiftekhar/IQKeyboardManager
-// Copyright (c) 2013-16 Iftekhar Qurashi.
+// Copyright (c) 2013-20 Iftekhar Qurashi.
 //
 // Permission is hereby granted, free of charge, to any person obtaining a copy
 // of this software and associated documentation files (the "Software"), to deal
@@ -23,15 +23,16 @@
 
 import UIKit
 
-@objc public class IQInvocation: NSObject {
+@available(iOSApplicationExtension, unavailable)
+@objc public final class IQInvocation: NSObject {
     @objc public weak var target: AnyObject?
     @objc public var action: Selector
-    
+
     @objc public init(_ target: AnyObject, _ action: Selector) {
         self.target = target
         self.action = action
     }
-    
+
     @objc public func invoke(from: Any) {
         if let target = target {
             UIApplication.shared.sendAction(action, to: target, from: from, for: UIEvent())
diff --git a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQToolbar/IQPreviousNextView.swift b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQToolbar/IQPreviousNextView.swift
index ad446e97..f7a1b867 100644
--- a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQToolbar/IQPreviousNextView.swift
+++ b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQToolbar/IQPreviousNextView.swift
@@ -1,7 +1,7 @@
 //
 // IQPreviousNextView.swift
 // https://github.com/hackiftekhar/IQKeyboardManager
-// Copyright (c) 2013-16 Iftekhar Qurashi.
+// Copyright (c) 2013-20 Iftekhar Qurashi.
 //
 // Permission is hereby granted, free of charge, to any person obtaining a copy
 // of this software and associated documentation files (the "Software"), to deal
@@ -23,27 +23,7 @@
 
 import UIKit
 
+@available(iOSApplicationExtension, unavailable)
 @objc public class IQPreviousNextView: UIView {
 
 }
-
-//#if swift(>=5.1)
-//import SwiftUI
-//
-//struct IQPreviousNextViewSwiftUI: UIViewRepresentable {
-//    func makeUIView(context: Context) -> IQPreviousNextView {
-//        IQPreviousNextView(frame: .zero)
-//    }
-//
-//    func updateUIView(_ view: IQPreviousNextView, context: Context) {
-//    }
-//}
-//
-//struct IQTextViewSwiftUI_Preview: PreviewProvider {
-//    static var previews: some View {
-//        IQPreviousNextViewSwiftUI()
-//    }
-//}
-//
-//#endif
-
diff --git a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQToolbar/IQTitleBarButtonItem.swift b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQToolbar/IQTitleBarButtonItem.swift
index ab40a2e8..2c3c526b 100644
--- a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQToolbar/IQTitleBarButtonItem.swift
+++ b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQToolbar/IQTitleBarButtonItem.swift
@@ -1,7 +1,7 @@
 //
 //  IQTitleBarButtonItem.swift
 // https://github.com/hackiftekhar/IQKeyboardManager
-// Copyright (c) 2013-16 Iftekhar Qurashi.
+// Copyright (c) 2013-20 Iftekhar Qurashi.
 //
 // Permission is hereby granted, free of charge, to any person obtaining a copy
 // of this software and associated documentation files (the "Software"), to deal
@@ -21,13 +21,13 @@
 // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 // THE SOFTWARE.
 
-import Foundation
 import UIKit
 
+@available(iOSApplicationExtension, unavailable)
 open class IQTitleBarButtonItem: IQBarButtonItem {
-   
+
     @objc open var titleFont: UIFont? {
-    
+
         didSet {
             if let unwrappedFont = titleFont {
                 titleButton?.titleLabel?.font = unwrappedFont
@@ -42,14 +42,14 @@ open class IQTitleBarButtonItem: IQBarButtonItem {
                 titleButton?.setTitle(title, for: .normal)
         }
     }
-    
+
     /**
      titleColor to be used for displaying button text when displaying title (disabled state).
      */
     @objc open var titleColor: UIColor? {
 
         didSet {
-            
+
             if let color = titleColor {
                 titleButton?.setTitleColor(color, for: .disabled)
             } else {
@@ -57,14 +57,14 @@ open class IQTitleBarButtonItem: IQBarButtonItem {
             }
         }
     }
-    
+
     /**
      selectableTitleColor to be used for displaying button text when button is enabled.
      */
     @objc open var selectableTitleColor: UIColor? {
-        
+
         didSet {
-            
+
             if let color = selectableTitleColor {
                 titleButton?.setTitleColor(color, for: .normal)
             } else {
@@ -83,7 +83,7 @@ open class IQTitleBarButtonItem: IQBarButtonItem {
     @objc override open var invocation: IQInvocation? {
 
         didSet {
-            
+
             if let target = invocation?.target, let action = invocation?.action {
                 self.isEnabled = true
                 titleButton?.isEnabled = true
@@ -102,14 +102,14 @@ open class IQTitleBarButtonItem: IQBarButtonItem {
     override init() {
         super.init()
     }
-    
+
     @objc public convenience init(title: String?) {
 
         self.init(title: nil, style: .plain, target: nil, action: nil)
-        
+
         _titleView = UIView()
         _titleView?.backgroundColor = UIColor.clear
-        
+
         titleButton = UIButton(type: .system)
         titleButton?.isEnabled = false
         titleButton?.titleLabel?.numberOfLines = 3
@@ -125,28 +125,18 @@ open class IQTitleBarButtonItem: IQBarButtonItem {
         titleFont = UIFont.systemFont(ofSize: 13.0)
         titleButton?.titleLabel?.font = self.titleFont
         _titleView?.addSubview(titleButton!)
-        
+
         if #available(iOS 11, *) {
-            
-            var layoutDefaultLowPriority: UILayoutPriority
-            var layoutDefaultHighPriority: UILayoutPriority
-
-            #if swift(>=4.0)
-                let layoutPriorityLowValue = UILayoutPriority.defaultLow.rawValue-1
-                let layoutPriorityHighValue = UILayoutPriority.defaultHigh.rawValue-1
-                layoutDefaultLowPriority = UILayoutPriority(rawValue: layoutPriorityLowValue)
-                layoutDefaultHighPriority = UILayoutPriority(rawValue: layoutPriorityHighValue)
-            #else
-                layoutDefaultLowPriority = UILayoutPriorityDefaultLow-1
-                layoutDefaultHighPriority = UILayoutPriorityDefaultHigh-1
-            #endif
-            
+
+            let layoutDefaultLowPriority = UILayoutPriority(rawValue: UILayoutPriority.defaultLow.rawValue-1)
+            let layoutDefaultHighPriority = UILayoutPriority(rawValue: UILayoutPriority.defaultHigh.rawValue-1)
+
             _titleView?.translatesAutoresizingMaskIntoConstraints = false
             _titleView?.setContentHuggingPriority(layoutDefaultLowPriority, for: .vertical)
             _titleView?.setContentHuggingPriority(layoutDefaultLowPriority, for: .horizontal)
             _titleView?.setContentCompressionResistancePriority(layoutDefaultHighPriority, for: .vertical)
             _titleView?.setContentCompressionResistancePriority(layoutDefaultHighPriority, for: .horizontal)
-            
+
             titleButton?.translatesAutoresizingMaskIntoConstraints = false
             titleButton?.setContentHuggingPriority(layoutDefaultLowPriority, for: .vertical)
             titleButton?.setContentHuggingPriority(layoutDefaultLowPriority, for: .horizontal)
@@ -157,7 +147,7 @@ open class IQTitleBarButtonItem: IQBarButtonItem {
             let bottom = NSLayoutConstraint.init(item: titleButton!, attribute: .bottom, relatedBy: .equal, toItem: _titleView, attribute: .bottom, multiplier: 1, constant: 0)
             let leading = NSLayoutConstraint.init(item: titleButton!, attribute: .leading, relatedBy: .equal, toItem: _titleView, attribute: .leading, multiplier: 1, constant: 0)
             let trailing = NSLayoutConstraint.init(item: titleButton!, attribute: .trailing, relatedBy: .equal, toItem: _titleView, attribute: .trailing, multiplier: 1, constant: 0)
-            
+
             _titleView?.addConstraints([top, bottom, leading, trailing])
         } else {
             _titleView?.autoresizingMask = [.flexibleWidth, .flexibleHeight]
@@ -170,7 +160,7 @@ open class IQTitleBarButtonItem: IQBarButtonItem {
     @objc required public init?(coder aDecoder: NSCoder) {
         super.init(coder: aDecoder)
     }
-    
+
     deinit {
         customView = nil
         titleButton?.removeTarget(nil, action: nil, for: .touchUpInside)
diff --git a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQToolbar/IQToolbar.swift b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQToolbar/IQToolbar.swift
index d9f19ce7..ce5128fe 100644
--- a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQToolbar/IQToolbar.swift
+++ b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQToolbar/IQToolbar.swift
@@ -1,7 +1,7 @@
 //
 //  IQToolbar.swift
 // https://github.com/hackiftekhar/IQKeyboardManager
-// Copyright (c) 2013-16 Iftekhar Qurashi.
+// Copyright (c) 2013-20 Iftekhar Qurashi.
 //
 // Permission is hereby granted, free of charge, to any person obtaining a copy
 // of this software and associated documentation files (the "Software"), to deal
@@ -24,16 +24,17 @@
 import UIKit
 
 /** @abstract   IQToolbar for IQKeyboardManager.    */
+@available(iOSApplicationExtension, unavailable)
 open class IQToolbar: UIToolbar, UIInputViewAudioFeedback {
 
     private static var _classInitialize: Void = classInitialize()
-    
+
     private class func classInitialize() {
-        
+
         let  appearanceProxy = self.appearance()
 
         appearanceProxy.barTintColor = nil
-        
+
         let positions: [UIBarPosition] = [.any, .bottom, .top, .topAttached]
 
         for position in positions {
@@ -45,7 +46,7 @@ open class IQToolbar: UIToolbar, UIInputViewAudioFeedback {
         //Background color
         appearanceProxy.backgroundColor = nil
     }
-    
+
     /**
      Previous bar button of toolbar.
      */
@@ -57,12 +58,12 @@ open class IQToolbar: UIToolbar, UIInputViewAudioFeedback {
             }
             return privatePreviousBarButton!
         }
-        
+
         set (newValue) {
             privatePreviousBarButton = newValue
         }
     }
-    
+
     /**
      Next bar button of toolbar.
      */
@@ -74,12 +75,12 @@ open class IQToolbar: UIToolbar, UIInputViewAudioFeedback {
             }
             return privateNextBarButton!
         }
-        
+
         set (newValue) {
             privateNextBarButton = newValue
         }
     }
-    
+
     /**
      Title bar button of toolbar.
      */
@@ -92,12 +93,12 @@ open class IQToolbar: UIToolbar, UIInputViewAudioFeedback {
             }
             return privateTitleBarButton!
         }
-        
+
         set (newValue) {
             privateTitleBarButton = newValue
         }
     }
-    
+
     /**
      Done bar button of toolbar.
      */
@@ -109,7 +110,7 @@ open class IQToolbar: UIToolbar, UIInputViewAudioFeedback {
             }
             return privateDoneBarButton!
         }
-        
+
         set (newValue) {
             privateDoneBarButton = newValue
         }
@@ -131,10 +132,10 @@ open class IQToolbar: UIToolbar, UIInputViewAudioFeedback {
             } else {
                 privateFixedSpaceBarButton!.width = 20
             }
-            
+
             return privateFixedSpaceBarButton!
         }
-        
+
         set (newValue) {
             privateFixedSpaceBarButton = newValue
         }
@@ -143,13 +144,13 @@ open class IQToolbar: UIToolbar, UIInputViewAudioFeedback {
     override init(frame: CGRect) {
         _ = IQToolbar._classInitialize
         super.init(frame: frame)
-        
+
         sizeToFit()
-        
+
         autoresizingMask = .flexibleWidth
         self.isTranslucent = true
     }
-    
+
     @objc required public init?(coder aDecoder: NSCoder) {
         _ = IQToolbar._classInitialize
         super.init(coder: aDecoder)
@@ -167,7 +168,7 @@ open class IQToolbar: UIToolbar, UIInputViewAudioFeedback {
     }
 
     @objc override open var tintColor: UIColor! {
-        
+
         didSet {
             if let unwrappedItems = items {
                 for item in unwrappedItems {
@@ -176,7 +177,7 @@ open class IQToolbar: UIToolbar, UIInputViewAudioFeedback {
             }
         }
     }
-    
+
     @objc override open func layoutSubviews() {
 
         super.layoutSubviews()
@@ -187,7 +188,7 @@ open class IQToolbar: UIToolbar, UIInputViewAudioFeedback {
             var leftRect = CGRect.null
             var rightRect = CGRect.null
             var isTitleBarButtonFound = false
-            
+
             let sortedSubviews = self.subviews.sorted(by: { (view1: UIView, view2: UIView) -> Bool in
                 if view1.frame.minX != view2.frame.minX {
                     return view1.frame.minX < view2.frame.minX
@@ -195,67 +196,67 @@ open class IQToolbar: UIToolbar, UIInputViewAudioFeedback {
                     return view1.frame.minY < view2.frame.minY
                 }
             })
-            
+
             for barButtonItemView in sortedSubviews {
-                
-                if isTitleBarButtonFound == true {
+
+                if isTitleBarButtonFound {
                     rightRect = barButtonItemView.frame
                     break
                 } else if barButtonItemView === customTitleView {
                     isTitleBarButtonFound = true
                     //If it's UIToolbarButton or UIToolbarTextButton (which actually UIBarButtonItem)
-                } else if barButtonItemView.isKind(of: UIControl.self) == true {
+                } else if barButtonItemView.isKind(of: UIControl.self) {
                     leftRect = barButtonItemView.frame
                 }
             }
-            
+
             let titleMargin: CGFloat = 16
 
             let maxWidth: CGFloat = self.frame.width - titleMargin*2 - (leftRect.isNull ? 0 : leftRect.maxX) - (rightRect.isNull ? 0 : self.frame.width - rightRect.minX)
             let maxHeight = self.frame.height
-            
+
             let sizeThatFits = customTitleView.sizeThatFits(CGSize(width: maxWidth, height: maxHeight))
-            
+
             var titleRect: CGRect
-            
-            if sizeThatFits.width > 0 && sizeThatFits.height > 0 {
+
+            if sizeThatFits.width > 0, sizeThatFits.height > 0 {
                 let width = min(sizeThatFits.width, maxWidth)
                 let height = min(sizeThatFits.height, maxHeight)
-                
+
                 var xPosition: CGFloat
 
-                if leftRect.isNull == false {
+                if !leftRect.isNull {
                     xPosition = titleMargin + leftRect.maxX + ((maxWidth - width)/2)
                 } else {
                     xPosition = titleMargin
                 }
-                
+
                 let yPosition = (maxHeight - height)/2
-                
+
                 titleRect = CGRect(x: xPosition, y: yPosition, width: width, height: height)
             } else {
-                
+
                 var xPosition: CGFloat
-                
-                if leftRect.isNull == false {
+
+                if !leftRect.isNull {
                     xPosition = titleMargin + leftRect.maxX
                 } else {
                     xPosition = titleMargin
                 }
 
                 let width: CGFloat = self.frame.width - titleMargin*2 - (leftRect.isNull ? 0 : leftRect.maxX) - (rightRect.isNull ? 0 : self.frame.width - rightRect.minX)
-                
+
                 titleRect = CGRect(x: xPosition, y: 0, width: width, height: maxHeight)
             }
-            
+
             customTitleView.frame = titleRect
         }
     }
-    
+
     @objc open var enableInputClicksWhenVisible: Bool {
         return true
     }
-    
+
     deinit {
 
         items = nil
diff --git a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQToolbar/IQUIView+IQKeyboardToolbar.swift b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQToolbar/IQUIView+IQKeyboardToolbar.swift
index fde687f8..a3b5e81d 100644
--- a/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQToolbar/IQUIView+IQKeyboardToolbar.swift
+++ b/OpenBook/Pods/IQKeyboardManagerSwift/IQKeyboardManagerSwift/IQToolbar/IQUIView+IQKeyboardToolbar.swift
@@ -1,7 +1,7 @@
 //
 //  IQUIView+IQKeyboardToolbar.swift
 // https://github.com/hackiftekhar/IQKeyboardManager
-// Copyright (c) 2013-16 Iftekhar Qurashi.
+// Copyright (c) 2013-20 Iftekhar Qurashi.
 //
 // Permission is hereby granted, free of charge, to any person obtaining a copy
 // of this software and associated documentation files (the "Software"), to deal
@@ -23,17 +23,12 @@
 
 import UIKit
 
-private var kIQShouldHideToolbarPlaceholder = "kIQShouldHideToolbarPlaceholder"
-private var kIQToolbarPlaceholder           = "kIQToolbarPlaceholder"
-
-private var kIQKeyboardToolbar              = "kIQKeyboardToolbar"
-
 /**
  IQBarButtonItemConfiguration for creating toolbar with bar button items
  */
-@objc public class IQBarButtonItemConfiguration: NSObject {
-    
-    #if swift(>=4.2)
+@available(iOSApplicationExtension, unavailable)
+@objc public final class IQBarButtonItemConfiguration: NSObject {
+
     @objc public init(barButtonSystemItem: UIBarButtonItem.SystemItem, action: Selector) {
         self.barButtonSystemItem = barButtonSystemItem
         self.image = nil
@@ -41,15 +36,6 @@ private var kIQKeyboardToolbar              = "kIQKeyboardToolbar"
         self.action = action
         super.init()
     }
-    #else
-    @objc public init(barButtonSystemItem: UIBarButtonSystemItem, action: Selector) {
-        self.barButtonSystemItem = barButtonSystemItem
-        self.image = nil
-        self.title = nil
-        self.action = action
-    super.init()
-    }
-    #endif
 
     @objc public init(image: UIImage, action: Selector) {
         self.barButtonSystemItem = nil
@@ -58,7 +44,7 @@ private var kIQKeyboardToolbar              = "kIQKeyboardToolbar"
         self.action = action
         super.init()
     }
-    
+
     @objc public init(title: String, action: Selector) {
         self.barButtonSystemItem = nil
         self.image = nil
@@ -66,128 +52,119 @@ private var kIQKeyboardToolbar              = "kIQKeyboardToolbar"
         self.action = action
         super.init()
     }
-    
-    #if swift(>=4.2)
+
     public let barButtonSystemItem: UIBarButtonItem.SystemItem?    //System Item to be used to instantiate bar button.
-    #else
-    public let barButtonSystemItem: UIBarButtonSystemItem?    //System Item to be used to instantiate bar button.
-    #endif
-    
+
     @objc public let image: UIImage?    //Image to show on bar button item if it's not a system item.
-    
+
     @objc public let title: String?     //Title to show on bar button item if it's not a system item.
-    
+
     @objc public let action: Selector?  //action for bar button item. Usually 'doneAction:(IQBarButtonItem*)item'.
 }
 
 /**
  UIImage category methods to get next/prev images
  */
+// swiftlint:disable nesting
+// swiftlint:disable line_length
+@available(iOSApplicationExtension, unavailable)
 @objc public extension UIImage {
-    
-    @objc static func keyboardLeftImage() -> UIImage? {
-        
+
+    static func keyboardLeftImage() -> UIImage? {
+
         struct Static {
             static var keyboardLeftImage: UIImage?
         }
 
         if Static.keyboardLeftImage == nil {
-            
+
             let base64Data = "iVBORw0KGgoAAAANSUhEUgAAACQAAAA/CAYAAACIEWrAAAAAAXNSR0IArs4c6QAABtFJREFUaAXFmV1oHFUUx++d3SSbj/0k6Uc2u7Ob7QeVSqBSP7AUm1JpS0tb+6nFYhELxfahDxVU9KmgD0UU7ENRLLRQodRqNbVJY5IGXwRBEPHBh2x2ZpPQaDC7W2qSzc5c/3ebDTN3d5Pd7Gw6L3PPOcM5vzn33I+5Q8gTvJqbm52RYPAdIEg5DFuusdz3dq/X7XA6ewiVTvrcnvBkMvE9GNgTAQoGg16pztFLKX02mwhKOrwe99rJZPL2sgO1tbX5aiWpDzDPGHuFEvq01+2ZpEZltdutra3NjpranxC0Q4zFCLsVVZRjdtFQLTmycuUKZq/pA8zGvBiM3IiqynHoM8sCFGoJrSIO1o9u2SDCIDPXAXMCeo3bqg4UCARaJYkMEELXiTCEkauAOQm9nrPNj/+cwso7aiZQS6VBdFMeDDLz1ZAaM8Hw2FXLUHj1apnaawYIpWHxJRkjl5GZ09Az0VYVIFmWw6iXAWRGFgMynV2KxpWzhWD4s5Z3GeaZNXZGeTflwzDyGWDOFIPhQJZmqN3vX0clG7qJtHLnpktnFwFz3qQrIFgGJK+WN+D1+jGaVolxGNM/jsbVd0V9IdkSoEggsJFJlE96K8Qgus4uDMfVD0R9MbniGgr7/R1YsXkB58FgEH04HFdKhuGQFWUIo2kTZaQXQ9snvjGG9nsY2h+J+sXkJQO1BwKbMYv0YNX2ikF0ws4Pq8pFUV+KvCSgkD/0PCaMbnSTWwyCzJwDzKeivlS5bCBsOV/EsL6LAE5jEMYvSs4C5pJRX267LKBwILAVw/oOgjQZAz1mYaejinrZqF9Ku+QdY0SWOzkMaqbRGAgwOjJzKqqqXxj1S22jDBa/wsHgDqxNtwFTb3w6C0PYyWFVvWrUV9JetMsibfIuRuktkDuMgQCjYRdzYnhEvW7UV9peEKg9GNyDOeYmYOpMgRjLYD9zHDA3THoLhKIzdSgQ2k+p9A1imGEImUXNHEM3WQ7D36dghlAzhyRKeFfU8IcMV1rTtSOxePy2QWdpMw8oEggdwxp0DVFE2wy66SBg+LCv2mUa9mFZfhORrmA0mWCwz5zWdW0/uolPiFW95msIMGckQr8EjAkSo2mKMH0vMtNTVZI559lMtAdC5zCSPhEDAuaRppG9yqg6INqqJVNk5m1k5nMxAGAYYLYro8qywXAGiWYyvYSxUREIXUdtdnIKelM9ic9ZLWeXDnxdRmppdnMeEAMgUTex0XoN+lnRVg05C8Qd828pW5FvKUwD3w0pylE8lq4GhNHnPBBX+v3+tjpbTT+lZK3xId5GprqQqUNozog2K2UTEHfMDwdqJBtOKsh6MRAmxru6Ql+Jkdi0aLNKzgPijvnxia2e9WFhfUoMhC1qb1rP7BsZGZkSbVbI8xOj0Vnsn9gDMjO9DcH/MOp5G925o1aydeFko0G0WSEXBOKOh8bH/57OpDuxbPwuBsKM0Omw195taWkxbWXF55YiFwXizsbGxibSWqYTFf2b6ByZ2uqsb+jmZ82irRK5YA2JDkOekEdykXuA2CzaMP5+YanUzujkZDLfVr6mJCDu1ufzubxOZzeq6AUxDGrtVz1FXo4lYgnRVq5cMhB3zLvH1dD4I2poS14gdOuMru3A6Ps3z1aGYsEaEv1MTEw8fDQzvRP6QdGG4bep1mbv52fRebYyFGUBcb/j4+OPpmbTuzFz4yzIfCHdHQ6cK/IzabOldKlsIO4ao++/tK7tQe3cE0OhOzcSh+N+9mxaNJYgl1VDBfzVtcsyvtnobtGG+euvWV3rjMfjY6JtIXlJGTI4nMH/iQPI1A8GXbaJN13Pz6j5gi3aFpIrBeK+01E1dhAL77d5gShd47DZB/mZdZ6tiKLSLjO6tUeCoes4qjlsVPI2uk/RCNumKMqwaBNlKzKU85nBr4JXkamvc4rcHW8t87NrvjPN6YrdrQTiMTTU1OtY+67lBaQk+9+Dn2Xn2QwKq4G4a21IVd5Apq4Y4jxuUuonNvv97Jl2nnHukSJ6K9Q0EpQvYwZ/S3SGmhrPMH27qqp/ijbTV6porFTGT90u/NxdgXnKtEtATTXZKD3scTb1JFKpcWOcqgLxQIC643F7fNi6PGcMjHYjZvUjrkZPb/Jh8kHOVnUgHiiRTHQjUy5kyrx1obSBSuSI1+Xqm0ylsjP6sgBxKGTqHn6D1yNTpq0LslSPXxNH3c6mAXTfqJUTI4+76IXT3AvY5L1f4MFUhrBdy5ahHAAy1e91uzD46Es53dydYv7qWnYgHhxQgx6XexZQ2+dgZojGDuCf2p0nAsQhEqnkzz63awpz0hacve+LjqjZA7H/AWSbJ/TPf3CuAAAAAElFTkSuQmCC"
-            
+
             if let data = Data(base64Encoded: base64Data, options: .ignoreUnknownCharacters) {
                 Static.keyboardLeftImage = UIImage(data: data, scale: 3)
             }
-            
+
             //Support for RTL languages like Arabic, Persia etc... (Bug ID: #448)
-            if #available(iOS 9, *) {
-                Static.keyboardLeftImage = Static.keyboardLeftImage?.imageFlippedForRightToLeftLayoutDirection()
-            }
+            Static.keyboardLeftImage = Static.keyboardLeftImage?.imageFlippedForRightToLeftLayoutDirection()
         }
-        
+
         return Static.keyboardLeftImage
     }
-    
-    @objc static func keyboardRightImage() -> UIImage? {
-        
+
+    static func keyboardRightImage() -> UIImage? {
+
         struct Static {
             static var keyboardRightImage: UIImage?
         }
-        
+
         if Static.keyboardRightImage == nil {
-            
+
             let base64Data = "iVBORw0KGgoAAAANSUhEUgAAACQAAAA/CAYAAACIEWrAAAAAAXNSR0IArs4c6QAABu5JREFUaAXFmXtsFEUcx2f3rj0Kvd29k9LHtXfXqyjGV2J8EF/hIQgp4VnahPgIxviH0ZgYNSbGmBg1McaYGGOM+o8k+EINMQjIo6UoBAVEEBGQXnvbS1ttw91epUDbu/E7lb3bm22Pu97uOQnszO+3ne/nvjM7sw9CMsXRFAi83jhnTnUmVPqacEXSGfIHPhMEoYUSejpJyKJIJNJfehxCRIiWwZktDIYBCESY56BCZ319ve9/AQr5/c8CY7VRXBDIXJfo6Kyrq2swxktRZ0NWFgoEPocza3lBDF9P6rKwsGegp4fP2dVmQzYWjkTaCCVf8iKADIou0un3+0N8zq42A2JlvEvt2QBHPv2vmfkfFvrLiNAZqq+fm4naV9OBmEISTj0MpzaZ5AShXhAd+xrr6q435SwO6Je9sVsRc+ojDNdjxiCrw8GBcUoXq6p6is9Z1TY6pPeZglOPQ/1DPaAfAVnjFMQODN/Neszqo2OqDmNa/DuPJM/G+nSn8RxYOgux9Upl5a748PBfxpwV9SmBWOexhLbdIyserEvzs8QEYSYRxFZJUfZommbpip4TaAJKi+/0SnIlEYS7jVBwqQJutXkkqT2WSPQZc8XUrwo0AZXQdntkaQYg7jWKYU4hJrZJlXKnNqxFjbnp1vMCmoDStL2KJDsBdT8n5hJFoRXAP8Q0TeVyBTfzBmI9xxNah1eRU9j7FnJKLrTbZLf7QDyRiHC5gpoFAbGe4cJ+TPRRTPTFRiU4V45/rV5FOYRzuo25QuoFA7HOsST8qCjyBcyhpUYxAJVRSloVSToMp7qMuXzr0wJincc17SCc0uDUMqMYg8JEb/W65aNYNs4Zc/nUpw3EOodTh+DUEFb15QDBKpAuTiJi8ZSl4wA/m47mUSkKiPUPwcNeWR6ghDRzUA60W+DUSTh1Og+WiVOKBmK9YBIfVRQlCqdW8FC4J16nyPJpgOe1IVsCxKAgeAxOReDUyiwoTCik13olz9lYIn6SnZurWAbERODUcY+idMGpVYBK30mwOm5d1sCpMMBPlAzoCtRvsiSdEdmDAweF/Go4pcKpX6eCstQhXQRr0O9w6hTWqTWIpTXYUMKpVXCqD079op9vPKZPNgatqGP4/pAl9wlRENnTTFqHQaG9wiN5/oZTR3it9Il8woo2nDrjUeRjcGod+nPqfTIoYDVjnToPp37W4+xoKxATgFN/ym7lCKZ4C6xJQ7EcqJZjsx7BOQdZmxXbgZhIPBE/h9uTn1BdD4gyFssUYQmgkoDaz2IlAWJCEAxLlcpBDFULoMpZLFOERdgXBWxF+4z7TyZvYy1YH1wginQvoNLrlC6XIvT5rDHVEzYeRYdINhrXJ10LK7yapPSbUgI58AC6CQAbdAj9SCntpmOjC9X+/kipgJxN/uBmALTqEOkjpecujY8t6uvv72WxUgBNvO6B1iSve8jxkdHLSwYGBgZ1QLuByuHMFoit1AUzR3psNJl8ADDnMzF7HXLhveXXuB9qNgqyOubMkXFCl0aj0Rifs8WhIAnOcPjJVsA8yAsC5xAZTixTYzHNnLPBIbwsrcA68y0u7Qd4QThzIDFyYflQLDbM5/S2pQ5VV1fPcjkc27BLLdAF9CMej/YPXxxpHhoa+kePTXa0DKiqqqpylqtiO0TuMwvRDlzaKwYHB0fMueyIJUBer1eSKmbuwJzJekPCpODM7tFUclVfX9/FbOnJW0UDhTwembil79H9XWYJujOlCmuiJHrJnJs8UhQQXhd7MF92YYe+ne8eE3hbWI20IH6Zz+Vqm3bcXCcbcz6f7xo8M7Nd2wSDgdoKGHaXWBAM639aDtXU1FS5nGV78Pe3sE6MBc58BRi2gY4Z4/nWCwZin6/EctdeCNxoEqHkC8A8hPi4KZdnoCCgQCBQi/nSjnkzj+8fzmwGzKOIJ/lcIe285xD7XOUgwj48QZhgUpR8AphHioVh4HkBsc9U7HMV3LnO9Gsp/bhb7dmIOF71FV+uOmSNtbUBwVnWgb2pkZejNPVBWFWfRBx3oNaUnEDssxTuxdvhTMAkl6LvhXvVp03xIgNTDhnmzLXss9RkMHg+f6erN2I5DPstkzrEPkOJoqMdw1TH/+AUpW91q5EX+LhVbRNQoDZwA54t2aVdYxahbwDmJXPcukgWUFNDw01UxHZAyBxeArv2q7i0X+HjVrfTQI0+3634wrMHMLPNIvRlwLxmjlsfmQDCCnwb3iTtxpzx8hK4tF/Epf0mH7er7Qw1NNyBzndh11Z4kVSKPtfdq77Nx+1sO7GiVeCNpBN3e9mFpp4BzLvZQftbExhNfv89mD87IOfGJollhjwV7o28b798DoWgLzgfD3bnAfdEjtNsT/0LGvgrBSkuN9gAAAAASUVORK5CYII="
-            
+
             if let data = Data(base64Encoded: base64Data, options: .ignoreUnknownCharacters) {
                 Static.keyboardRightImage = UIImage(data: data, scale: 3)
             }
 
             //Support for RTL languages like Arabic, Persia etc... (Bug ID: #448)
-            if #available(iOS 9, *) {
-                Static.keyboardRightImage = Static.keyboardRightImage?.imageFlippedForRightToLeftLayoutDirection()
-            }
+            Static.keyboardRightImage = Static.keyboardRightImage?.imageFlippedForRightToLeftLayoutDirection()
         }
-        
+
         return Static.keyboardRightImage
     }
-    
-    @objc static func keyboardUpImage() -> UIImage? {
-        
+
+    static func keyboardUpImage() -> UIImage? {
+
         struct Static {
             static var keyboardUpImage: UIImage?
         }
-        
+
         if Static.keyboardUpImage == nil {
-            
+
             let base64Data = "iVBORw0KGgoAAAANSUhEUgAAAD8AAAAkCAYAAAA+TuKHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNS40LjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgpMwidZAAAGmklEQVRoBd1ZWWwbRRie2bVz27s2adPGxzqxqAQCIRA3CDVJGxpKaEtRoSAVISQQggdeQIIHeIAHkOCBFyQeKlARhaYHvUJa0ksVoIgKUKFqKWqdeG2nR1Lsdeo0h73D54iku7NO6ySOk3alyPN//+zM/81/7MyEkDl66j2eJXWK8vocTT82rTgXk/t8vqBNEI9QSp9zOeVkPJnomgs7ik5eUZQ6OxGOEEq9WcKUksdlWbqU0LRfi70ARSXv8Xi8dkE8CsJ+I1FK6BNYgCgW4A8jPtvtopFHqNeWCLbDIF6fkxQjK91O1z9IgRM59bMAFoV8YEFgka1EyBJfMhkH5L9ACFstS9IpRMDJyfoVEp918sGamoVCme0QyN3GG87wAKcTOBYA4hrJKf+VSCb+nsBnqYHVnr2ntra2mpWWH0BVu52fhRH2XSZDmsA/xensokC21Pv9T3J4wcWrq17gob1er7tEhMcJuYsfGoS3hdTweuBpxaM0iCJph8fLuX7DJMPWnI2GOzi8YOKseD4gB+RSQezMRRx5vRPEn88Sz7IIx8KHgT3FCBniWJUyke6o8/uXc3jBxIKTd7vdTsFJfkSo38NbCY/vPRsOPwt81KgLqeoBXc+sBjZsxLF4ZfgM7goqSqMRL1S7oOSrq6sdLodjH0rYfbyByPEOePwZ4CO8Liv3RCL70Wctr8+mA2NkT53P91iu92aCFYx8TU1NpbOi8gfs2R7iDYLxnXqYPg3c5Fm+Xygcbs/omXXATZGBBagQqNAe9Psf4d+ZiVwQ8qjqFVVl5dmi9ShvDEL90IieXtVDevic5ruOyYiAXYiA9YSxsZow0YnSKkKFjoAn8OAENsPGjKs9qnp5iSDuBXFLXsLjR4fSIy29vb2DU7UThW4d8n0zxjXtRVAYNaJnlocikWNTHZPvP1PPl2LLujM3cfbzwJXUyukQzxrZraptRCcbEDm60Wh4S0IE7McByVJQjf3yac+EfEm9ouxAcWu2TsS6koOplr6+vstWXf5IKBrejBR4ybIAlLpE1JE6j8eyh8h/dEKmS95e7w9sy57G+MkQ6sdYMrmiv79/gNdNR0YEbGKUvIIFQMRffRBtbkG0HQj6fHdcRafWmg55Gzy+BR5vtUzF2O96kjSH4nHNopsB0B0Ob6SEvcYvAPYS1UwQDyqLFcu5IZ/pTMUkjxfEoD/wLVY9+z02PXDL8RE9s0y9qMZNigIJcU37TZblfj7aUAMqURLXuqqq9sQHBi5NZbqpkBfh8a9BPLtDMz3wyImh9GhTLBab0uSmQfIQcNQ95pJkDVG3wtgdC1KFA+HaSodjdzKZ/Neou1Y7X/JC0K98BeIvWAdjp+jwUKN6/nyfVVd4JK4lunDrkwJhc6Gl1GGjwhqnLO3UNC2Rz8z5kKfw+EYQf5EfEKF+Wh+kDd0XYxd43WzKiIBfEAEjiIAm0zyUSFiU1XJF+feJy5evW3euR57C41+A+MumSbICY2dGmd6gnlPPWXRFABABP7llCXsA2mCcDjVAJoK4qryycsfAwEDSqOPb1yQPj38O4q/yL4F4aCiTXhqNRmMWXREBFMGjslOywUbToQeyyy4IrVVO53bUgEk/uZOSr/MHPsOd0hs8F4R6mI2ONKi9vRFeNxdyIqkddknOMhA2nyuy+wAqtEol8rbEYCLnZisneXj8UxB/00KGkUiGsqU90WiPRTeHACLgoNsp4eBDHzaagRS4RbCzle6ysq3xVIq/LiMW8ti5fYRVfMs4yFibsdgI05eqqhqy6OYBEE9qnSiCLhRB7tRHFzDR1oIasBU1wHTAMpHHjcmHIP4OzwXf8XMkk24IR6NneN18klEE97mc0gJwuN9oF+SFNlF8vNJR1YYacGVcN0Eet6XvY6Pw3rhi/Bc5fiEzShp7eiOnx7H5/IsI6EAELEIE3Gu0EymwyCbQZocktWEfMHa3MEa+zqe8KwjCB8bO/7f70kxvVGPqyRy6eQshAtpdsuTDN/9us5F0MQ4zTS5BaIsPDQ3jO+5/G+fjj82dIDF2CZeKjd3R6J8W3Y0BYFca+JJQssFqLuvSUqlmESHSiZywGzsgx+OZNFnWE4scN+I3WJshAnYjAm5FBNxptp16y+y2hICLEtOVMXJcI0xvDveGi/ofU7NxBZN0XIpuIIy0mUZkZNNZVf1kDAt6lZagEhjGnxbweh8wdbw5hOwdxHbwY/j9BpTM9xi4MGzFvZhpk3Bz8J5gkb19ym7cJr5w/wEmUjzJqoNVhwAAAABJRU5ErkJggg=="
-            
+
             if let data = Data(base64Encoded: base64Data, options: .ignoreUnknownCharacters) {
                 Static.keyboardUpImage = UIImage(data: data, scale: 3)
             }
 
             //Support for RTL languages like Arabic, Persia etc... (Bug ID: #448)
-            if #available(iOS 9, *) {
-                Static.keyboardUpImage = Static.keyboardUpImage?.imageFlippedForRightToLeftLayoutDirection()
-            }
+            Static.keyboardUpImage = Static.keyboardUpImage?.imageFlippedForRightToLeftLayoutDirection()
         }
-        
+
         return Static.keyboardUpImage
     }
-    
-    @objc static func keyboardDownImage() -> UIImage? {
-        
+
+    static func keyboardDownImage() -> UIImage? {
+
         struct Static {
             static var keyboardDownImage: UIImage?
         }
-        
+
         if Static.keyboardDownImage == nil {
 
             let base64Data = "iVBORw0KGgoAAAANSUhEUgAAAD8AAAAkCAYAAAA+TuKHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNS40LjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgpMwidZAAAGp0lEQVRoBd1ZCWhcRRiemff25WrydmOtuXbfZlMo4lEpKkppm6TpZUovC4UqKlQoUhURqQcUBcWDIkhVUCuI9SpJa+2h0VZjUawUEUUUirLNXqmxSnc32WaT7O4bv0nd5R1bc+2maR8s7z9m5v+/+f/5Z94sIf89jW73Yp/bfUuWvwLfDp/H8zhwObLYmCCaPJ6FjLJPCWNHNU1bkFVeQW/Zp2l7KWUvNmlaB3DJAhvz1ntvI5R1EUpnUUKdEifHGuvr519BwKUmj/cDYNtwARNd5/NoH4GWKIhzlFKXCSzn/xCut/jD4V9N8suPYYj4ewC+2e46f55Rwp/geExKSmdzJn2l1WrXmuSXF8MQ8XfyAeeEn9KTyV3MHwq9RTh50IqLEjJHUkh3Y13dPKvuMuApIr6bUHKP1VeE+Y8MIa09Z8/+JQlltD/+Q7VaFcW6X2VsjFmbRRnbUFFZeai/v/+cUTeDaYqIv4GlfL/NR879I3qmORwOnxG6UfCCiMbjJ51VagKdlgs+91BaKVO6oVJVD8bj8WhOPkMJn1t7jTL6gNU9pHpgKJ1q7u3tjWR1OfBCEOuPf+9Sq4YwAW3ZBqNvSqsYpeuc5WUHYolE3KSbQYzP430FwB+yuoSCFtKHaXP4z3DIqDOBFwpkwHfVThXLgrYaG6IGOAmT1pZVVHw8MDDQb9TNBLrJre0E8EdtvnAeSRPeHOwN9lh1NvCiASbgG5fqRLDJEmMHsSU6GFuDGrAfNWDAqLuUNE5uL6A2bbf5wPkZrmdaAuGw36aDIC940TAajx1HBijIgEWmjpRWS4ytrnKq+1EDEibdJWAa3dqzjLGnrKaxxvt4OtXS09v7u1WX5S8KXjRABnQ7VbUCEV+Y7SDeWAJX4dfuLCnZFzt//rxRN500jqo74NvTVptY42fTnLcGI5FTVp2R/1/womEsHj/mwgxg27vd2BH8bCrLq0rKyjoTicSgUTcdNIrbkwD+nM2WOJ3qmaVI9d9sOotgTPCiPTLgi+oqdTbOAbea+lM6xyHLK8pnVXSiCCZNuiIyjZr2GArSS1YTOKie45n0UqT6L1ZdPn5c4EVHHIS6sA3WYLZvNg6E9L9GZmwZzgEdqAFDRl0xaET8EQB/2To21ngsQ0kbIv6zVXcxftzgxQDIgM+qVbUeGbDAPCCtxbfxUhdjHdGhoWGzrnAcIr4NwHflGbGf6PqyQCj0Yx7dRUUTAi9GwQQccapOL7bBm4yjIiPqSElpC5VYRzKZLPgE4M5hK0rt67CDZDM9A+k0XxmIhE6apONgJgxejBmLxw65VHUu/LjRaANeNZQpyhJZUToGBwdHjLqp0Ij4FgB/0wocaxw7DV8F4CcmM/6kwMMQRwYcrFad87DvXW8yTKlbkZVFSmlJB3bBlEk3CQYRvxfA3wbw0Vun7BAAPqjrmfaecPjbrGyib2sKTbS/LG5F4NhGe0d+fDiTuSMSiUx6F8Bn6V343N6TB3gSyb/aHwx22+2OX2KazfF3y7VMnw4FcUvCP8lJcgRtVph0yEu8pTnRBAiv270JwN+1AscQw5zr66YKXLgyVfBijBQc2YQ0PCIY4wPH2yQPERNTYpSPRSPid0qUvY/+1mU5QjJ8PVL96FhjjEdfCPDCzggyAKnPP7cZpWQFlsZ+yPGdMPaDiK/F6fEjbKeypXVK5/pGfyTYZZFPmi0UeOHAcCZI1+Oa6JjVG0SwHbcrnZDn7sytbQSPiLdLTBJXy+Z2nKcR8U09odDhfP0mKyskeBIggaERPb0WGfC1zSFK1gDcXsitER1t6m3wrkTEbRmC5ZTRCd+MiB+wjTlFwVSrfV7zdXV15aWy0oWKvNjWgJMOfyiAIklwYXLhwfd4G/47OAxnTMVRAKec3u0PB8SkFfyxFpSCGMBHTkpWHPsU2bEEKe8xDUrJdfhKnItzgiiEXKvXWhijR9CuzNgOwHWc1+87HQ5+aJQXki4KeOGgOOFJDkdnqeJowSGlweg00vsGHJAa1UpnTJKIAF5u1AM4R8S3APgeo7zQdFHS3uikz+VSSWXVlwBo+hoUbUR0ITfVHQEcEd+K4rbbOE4xaJPhYhg4HY3GcYG4HFB/so5vBT6q53TbdAAXtooe+SzghoaGakWSu2FwflZmfWMffxjAX7XKi8VPG3gBoKam5uoKpeQEDjBz7YD4dpwUd9rlxZMUPe2Nrvf19f2dTKdasap7jHIsiR3TDdxsfxq5xtpazad5g02al+Na6plpND0zTHk8Hp+4iLyU3vwLp0orLWXqrZQAAAAASUVORK5CYII="
-            
+
             if let data = Data(base64Encoded: base64Data, options: .ignoreUnknownCharacters) {
                 Static.keyboardDownImage = UIImage(data: data, scale: 3)
             }
 
             //Support for RTL languages like Arabic, Persia etc... (Bug ID: #448)
-            if #available(iOS 9, *) {
-                Static.keyboardDownImage = Static.keyboardDownImage?.imageFlippedForRightToLeftLayoutDirection()
-            }
+            Static.keyboardDownImage = Static.keyboardDownImage?.imageFlippedForRightToLeftLayoutDirection()
         }
-        
+
         return Static.keyboardDownImage
     }
-    
-    @objc static func keyboardPreviousImage() -> UIImage? {
-        
+
+    static func keyboardPreviousImage() -> UIImage? {
+
         if #available(iOS 10, *) {
             return keyboardUpImage()
         } else {
             return keyboardLeftImage()
         }
     }
-    
-    @objc static func keyboardNextImage() -> UIImage? {
-        
+
+    static func keyboardNextImage() -> UIImage? {
+
         if #available(iOS 10, *) {
             return keyboardDownImage()
         } else {
@@ -199,73 +176,64 @@ private var kIQKeyboardToolbar              = "kIQKeyboardToolbar"
 /**
 UIView category methods to add IQToolbar on UIKeyboard.
 */
+@available(iOSApplicationExtension, unavailable)
 @objc public extension UIView {
-    
-    ///--------------
-    /// MARK: Toolbar
-    ///--------------
-    
+
+    private struct AssociatedKeys {
+        static var keyboardToolbar = "keyboardToolbar"
+        static var shouldHideToolbarPlaceholder = "shouldHideToolbarPlaceholder"
+        static var toolbarPlaceholder = "toolbarPlaceholder"
+    }
+
+    // MARK: Toolbar
+
     /**
      IQToolbar references for better customization control.
      */
-    @objc var keyboardToolbar: IQToolbar {
+    var keyboardToolbar: IQToolbar {
         var toolbar = inputAccessoryView as? IQToolbar
-        
+
         if toolbar == nil {
-            toolbar = objc_getAssociatedObject(self, &kIQKeyboardToolbar) as? IQToolbar
+            toolbar = objc_getAssociatedObject(self, &AssociatedKeys.keyboardToolbar) as? IQToolbar
         }
-        
+
         if let unwrappedToolbar = toolbar {
-            
             return unwrappedToolbar
-            
         } else {
-            
+
             let frame = CGRect(origin: .zero, size: .init(width: UIScreen.main.bounds.width, height: 44))
             let newToolbar = IQToolbar(frame: frame)
-            
-            objc_setAssociatedObject(self, &kIQKeyboardToolbar, newToolbar, objc_AssociationPolicy.OBJC_ASSOCIATION_RETAIN_NONATOMIC)
-            
+
+            objc_setAssociatedObject(self, &AssociatedKeys.keyboardToolbar, newToolbar, .OBJC_ASSOCIATION_RETAIN_NONATOMIC)
+
             return newToolbar
         }
     }
-    
-    ///--------------------
-    /// MARK: Toolbar title
-    ///--------------------
-    
+
+    // MARK: Toolbar title
+
     /**
     If `shouldHideToolbarPlaceholder` is YES, then title will not be added to the toolbar. Default to NO.
     */
-    @objc var shouldHideToolbarPlaceholder: Bool {
+    var shouldHideToolbarPlaceholder: Bool {
         get {
-            let aValue = objc_getAssociatedObject(self, &kIQShouldHideToolbarPlaceholder) as Any?
-            
-            if let unwrapedValue = aValue as? Bool {
-                return unwrapedValue
-            } else {
-                return false
-            }
+            return objc_getAssociatedObject(self, &AssociatedKeys.shouldHideToolbarPlaceholder) as? Bool ?? false
         }
         set(newValue) {
-            objc_setAssociatedObject(self, &kIQShouldHideToolbarPlaceholder, newValue, objc_AssociationPolicy.OBJC_ASSOCIATION_RETAIN_NONATOMIC)
-            
+            objc_setAssociatedObject(self, &AssociatedKeys.shouldHideToolbarPlaceholder, newValue, .OBJC_ASSOCIATION_RETAIN_NONATOMIC)
             self.keyboardToolbar.titleBarButton.title = self.drawingToolbarPlaceholder
         }
     }
-    
+
     /**
      `toolbarPlaceholder` to override default `placeholder` text when drawing text on toolbar.
      */
-    @objc var toolbarPlaceholder: String? {
+    var toolbarPlaceholder: String? {
         get {
-            let aValue = objc_getAssociatedObject(self, &kIQToolbarPlaceholder) as? String
-            
-            return aValue
+            return objc_getAssociatedObject(self, &AssociatedKeys.toolbarPlaceholder) as? String
         }
         set(newValue) {
-            objc_setAssociatedObject(self, &kIQToolbarPlaceholder, newValue, objc_AssociationPolicy.OBJC_ASSOCIATION_RETAIN_NONATOMIC)
-            
+            objc_setAssociatedObject(self, &AssociatedKeys.toolbarPlaceholder, newValue, .OBJC_ASSOCIATION_RETAIN_NONATOMIC)
             self.keyboardToolbar.titleBarButton.title = self.drawingToolbarPlaceholder
         }
     }
@@ -273,14 +241,14 @@ UIView category methods to add IQToolbar on UIKeyboard.
     /**
      `drawingToolbarPlaceholder` will be actual text used to draw on toolbar. This would either `placeholder` or `toolbarPlaceholder`.
      */
-    @objc var drawingToolbarPlaceholder: String? {
+    var drawingToolbarPlaceholder: String? {
 
         if self.shouldHideToolbarPlaceholder {
             return nil
         } else if self.toolbarPlaceholder?.isEmpty == false {
             return self.toolbarPlaceholder
         } else if self.responds(to: #selector(getter: UITextField.placeholder)) {
-            
+
             if let textField = self as? UITextField {
                 return textField.placeholder
             } else if let textView = self as? IQTextView {
@@ -293,40 +261,37 @@ UIView category methods to add IQToolbar on UIKeyboard.
         }
     }
 
-    ///---------------------
-    /// MARK: Private helper
-    ///---------------------
-    
+    // MARK: Private helper
+
+    // swiftlint:disable nesting
     private static func flexibleBarButtonItem () -> IQBarButtonItem {
-        
+
         struct Static {
-            
+
             static let nilButton = IQBarButtonItem(barButtonSystemItem: .flexibleSpace, target: nil, action: nil)
         }
-        
+
         Static.nilButton.isSystemItem = true
         return Static.nilButton
     }
 
-    ///-------------
-    /// MARK: Common
-    ///-------------
+    // MARK: Common
+
+    func addKeyboardToolbarWithTarget(target: AnyObject?, titleText: String?, rightBarButtonConfiguration: IQBarButtonItemConfiguration?, previousBarButtonConfiguration: IQBarButtonItemConfiguration? = nil, nextBarButtonConfiguration: IQBarButtonItemConfiguration? = nil) {
 
-    @objc func addKeyboardToolbarWithTarget(target: AnyObject?, titleText: String?, rightBarButtonConfiguration: IQBarButtonItemConfiguration?, previousBarButtonConfiguration: IQBarButtonItemConfiguration? = nil, nextBarButtonConfiguration: IQBarButtonItemConfiguration? = nil) {
-        
         //If can't set InputAccessoryView. Then return
         if self.responds(to: #selector(setter: UITextField.inputAccessoryView)) {
-            
+
             //  Creating a toolBar for phoneNumber keyboard
             let toolbar = self.keyboardToolbar
-            
+
             var items: [IQBarButtonItem] = []
-            
+
             if let prevConfig = previousBarButtonConfiguration {
 
                 var prev = toolbar.previousBarButton
 
-                if prevConfig.barButtonSystemItem == nil && prev.isSystemItem == false {
+                if prevConfig.barButtonSystemItem == nil, !prev.isSystemItem {
                     prev.title = prevConfig.title
                     prev.accessibilityLabel = prevConfig.accessibilityLabel
                     prev.image = prevConfig.image
@@ -341,7 +306,7 @@ UIView category methods to add IQToolbar on UIKeyboard.
                     } else {
                         prev = IQBarButtonItem(title: prevConfig.title, style: .plain, target: target, action: prevConfig.action)
                     }
-                    
+
                     prev.invocation = toolbar.previousBarButton.invocation
                     prev.accessibilityLabel = prevConfig.accessibilityLabel
                     prev.isEnabled = toolbar.previousBarButton.isEnabled
@@ -351,17 +316,17 @@ UIView category methods to add IQToolbar on UIKeyboard.
 
                 items.append(prev)
             }
-            
-            if previousBarButtonConfiguration != nil && nextBarButtonConfiguration != nil {
-                
+
+            if previousBarButtonConfiguration != nil, nextBarButtonConfiguration != nil {
+
                 items.append(toolbar.fixedSpaceBarButton)
             }
 
             if let nextConfig = nextBarButtonConfiguration {
-                
+
                 var next = toolbar.nextBarButton
 
-                if nextConfig.barButtonSystemItem == nil && next.isSystemItem == false {
+                if nextConfig.barButtonSystemItem == nil, !next.isSystemItem {
                     next.title = nextConfig.title
                     next.accessibilityLabel = nextConfig.accessibilityLabel
                     next.image = nextConfig.image
@@ -376,7 +341,7 @@ UIView category methods to add IQToolbar on UIKeyboard.
                     } else {
                         next = IQBarButtonItem(title: nextConfig.title, style: .plain, target: target, action: nextConfig.action)
                     }
-                    
+
                     next.invocation = toolbar.nextBarButton.invocation
                     next.accessibilityLabel = nextConfig.accessibilityLabel
                     next.isEnabled = toolbar.nextBarButton.isEnabled
@@ -386,30 +351,30 @@ UIView category methods to add IQToolbar on UIKeyboard.
 
                 items.append(next)
             }
-            
+
             //Title bar button item
             do {
                 //Flexible space
                 items.append(UIView.flexibleBarButtonItem())
-                
+
                 //Title button
                 toolbar.titleBarButton.title = titleText
-                
+
                 if #available(iOS 11, *) {} else {
                     toolbar.titleBarButton.customView?.frame = CGRect.zero
                 }
-                
+
                 items.append(toolbar.titleBarButton)
-                
+
                 //Flexible space
                 items.append(UIView.flexibleBarButtonItem())
             }
-            
+
             if let rightConfig = rightBarButtonConfiguration {
-                
+
                 var done = toolbar.doneBarButton
 
-                if rightConfig.barButtonSystemItem == nil && done.isSystemItem == false {
+                if rightConfig.barButtonSystemItem == nil, !done.isSystemItem {
                     done.title = rightConfig.title
                     done.accessibilityLabel = rightConfig.accessibilityLabel
                     done.image = rightConfig.image
@@ -424,20 +389,20 @@ UIView category methods to add IQToolbar on UIKeyboard.
                     } else {
                         done = IQBarButtonItem(title: rightConfig.title, style: .plain, target: target, action: rightConfig.action)
                     }
-                    
+
                     done.invocation = toolbar.doneBarButton.invocation
                     done.accessibilityLabel = rightConfig.accessibilityLabel
                     done.isEnabled = toolbar.doneBarButton.isEnabled
                     done.tag = toolbar.doneBarButton.tag
                     toolbar.doneBarButton = done
                 }
-                
+
                 items.append(done)
             }
-            
+
             //  Adding button to toolBar.
             toolbar.items = items
-            
+
             if let textInput = self as? UITextInput {
                 switch textInput.keyboardAppearance {
                 case .dark?:
@@ -455,133 +420,127 @@ UIView category methods to add IQToolbar on UIKeyboard.
             }
         }
     }
-    
-    ///------------
-    /// MARK: Right
-    ///------------
 
-    @objc func addDoneOnKeyboardWithTarget(_ target: AnyObject?, action: Selector, shouldShowPlaceholder: Bool = false) {
-        
+    // MARK: Right
+
+    func addDoneOnKeyboardWithTarget(_ target: AnyObject?, action: Selector, shouldShowPlaceholder: Bool = false) {
+
         addDoneOnKeyboardWithTarget(target, action: action, titleText: (shouldShowPlaceholder ? self.drawingToolbarPlaceholder: nil))
     }
 
-    @objc func addDoneOnKeyboardWithTarget(_ target: AnyObject?, action: Selector, titleText: String?) {
-        
+    func addDoneOnKeyboardWithTarget(_ target: AnyObject?, action: Selector, titleText: String?) {
+
         let rightConfiguration = IQBarButtonItemConfiguration(barButtonSystemItem: .done, action: action)
-        
+
         addKeyboardToolbarWithTarget(target: target, titleText: titleText, rightBarButtonConfiguration: rightConfiguration)
     }
 
-    @objc func addRightButtonOnKeyboardWithImage(_ image: UIImage, target: AnyObject?, action: Selector, shouldShowPlaceholder: Bool = false) {
-        
+    func addRightButtonOnKeyboardWithImage(_ image: UIImage, target: AnyObject?, action: Selector, shouldShowPlaceholder: Bool = false) {
+
         addRightButtonOnKeyboardWithImage(image, target: target, action: action, titleText: (shouldShowPlaceholder ? self.drawingToolbarPlaceholder: nil))
     }
-    
-    @objc func addRightButtonOnKeyboardWithImage(_ image: UIImage, target: AnyObject?, action: Selector, titleText: String?) {
-        
+
+    func addRightButtonOnKeyboardWithImage(_ image: UIImage, target: AnyObject?, action: Selector, titleText: String?) {
+
         let rightConfiguration = IQBarButtonItemConfiguration(image: image, action: action)
-        
+
         addKeyboardToolbarWithTarget(target: target, titleText: titleText, rightBarButtonConfiguration: rightConfiguration)
     }
 
-    @objc func addRightButtonOnKeyboardWithText(_ text: String, target: AnyObject?, action: Selector, shouldShowPlaceholder: Bool = false) {
-        
+    func addRightButtonOnKeyboardWithText(_ text: String, target: AnyObject?, action: Selector, shouldShowPlaceholder: Bool = false) {
+
         addRightButtonOnKeyboardWithText(text, target: target, action: action, titleText: (shouldShowPlaceholder ? self.drawingToolbarPlaceholder: nil))
     }
-    
-    @objc func addRightButtonOnKeyboardWithText(_ text: String, target: AnyObject?, action: Selector, titleText: String?) {
-        
+
+    func addRightButtonOnKeyboardWithText(_ text: String, target: AnyObject?, action: Selector, titleText: String?) {
+
         let rightConfiguration = IQBarButtonItemConfiguration(title: text, action: action)
-        
+
         addKeyboardToolbarWithTarget(target: target, titleText: titleText, rightBarButtonConfiguration: rightConfiguration)
     }
 
-    ///-----------------
-    /// MARK: Right/Left
-    ///-----------------
+    // MARK: Right/Left
+
+    func addCancelDoneOnKeyboardWithTarget(_ target: AnyObject?, cancelAction: Selector, doneAction: Selector, shouldShowPlaceholder: Bool = false) {
 
-    @objc func addCancelDoneOnKeyboardWithTarget(_ target: AnyObject?, cancelAction: Selector, doneAction: Selector, shouldShowPlaceholder: Bool = false) {
-        
         addCancelDoneOnKeyboardWithTarget(target, cancelAction: cancelAction, doneAction: doneAction, titleText: (shouldShowPlaceholder ? self.drawingToolbarPlaceholder: nil))
     }
 
-    @objc func addRightLeftOnKeyboardWithTarget(_ target: AnyObject?, leftButtonTitle: String, rightButtonTitle: String, leftButtonAction: Selector, rightButtonAction: Selector, shouldShowPlaceholder: Bool = false) {
-        
+    func addRightLeftOnKeyboardWithTarget(_ target: AnyObject?, leftButtonTitle: String, rightButtonTitle: String, leftButtonAction: Selector, rightButtonAction: Selector, shouldShowPlaceholder: Bool = false) {
+
         addRightLeftOnKeyboardWithTarget(target, leftButtonTitle: leftButtonTitle, rightButtonTitle: rightButtonTitle, leftButtonAction: leftButtonAction, rightButtonAction: rightButtonAction, titleText: (shouldShowPlaceholder ? self.drawingToolbarPlaceholder: nil))
     }
-    
-    @objc func addRightLeftOnKeyboardWithTarget(_ target: AnyObject?, leftButtonImage: UIImage, rightButtonImage: UIImage, leftButtonAction: Selector, rightButtonAction: Selector, shouldShowPlaceholder: Bool = false) {
-        
+
+    func addRightLeftOnKeyboardWithTarget(_ target: AnyObject?, leftButtonImage: UIImage, rightButtonImage: UIImage, leftButtonAction: Selector, rightButtonAction: Selector, shouldShowPlaceholder: Bool = false) {
+
         addRightLeftOnKeyboardWithTarget(target, leftButtonImage: leftButtonImage, rightButtonImage: rightButtonImage, leftButtonAction: leftButtonAction, rightButtonAction: rightButtonAction, titleText: (shouldShowPlaceholder ? self.drawingToolbarPlaceholder: nil))
     }
-    
-    @objc func addCancelDoneOnKeyboardWithTarget(_ target: AnyObject?, cancelAction: Selector, doneAction: Selector, titleText: String?) {
-        
+
+    func addCancelDoneOnKeyboardWithTarget(_ target: AnyObject?, cancelAction: Selector, doneAction: Selector, titleText: String?) {
+
         let leftConfiguration = IQBarButtonItemConfiguration(barButtonSystemItem: .cancel, action: cancelAction)
         let rightConfiguration = IQBarButtonItemConfiguration(barButtonSystemItem: .done, action: doneAction)
-        
+
         addKeyboardToolbarWithTarget(target: target, titleText: titleText, rightBarButtonConfiguration: rightConfiguration, previousBarButtonConfiguration: leftConfiguration)
     }
-    
-    @objc func addRightLeftOnKeyboardWithTarget(_ target: AnyObject?, leftButtonTitle: String, rightButtonTitle: String, leftButtonAction: Selector, rightButtonAction: Selector, titleText: String?) {
-        
+
+    func addRightLeftOnKeyboardWithTarget(_ target: AnyObject?, leftButtonTitle: String, rightButtonTitle: String, leftButtonAction: Selector, rightButtonAction: Selector, titleText: String?) {
+
         let leftConfiguration = IQBarButtonItemConfiguration(title: leftButtonTitle, action: leftButtonAction)
         let rightConfiguration = IQBarButtonItemConfiguration(title: rightButtonTitle, action: rightButtonAction)
-        
+
         addKeyboardToolbarWithTarget(target: target, titleText: titleText, rightBarButtonConfiguration: rightConfiguration, previousBarButtonConfiguration: leftConfiguration)
     }
-    
-    @objc func addRightLeftOnKeyboardWithTarget(_ target: AnyObject?, leftButtonImage: UIImage, rightButtonImage: UIImage, leftButtonAction: Selector, rightButtonAction: Selector, titleText: String?) {
-        
+
+    func addRightLeftOnKeyboardWithTarget(_ target: AnyObject?, leftButtonImage: UIImage, rightButtonImage: UIImage, leftButtonAction: Selector, rightButtonAction: Selector, titleText: String?) {
+
         let leftConfiguration = IQBarButtonItemConfiguration(image: leftButtonImage, action: leftButtonAction)
         let rightConfiguration = IQBarButtonItemConfiguration(image: rightButtonImage, action: rightButtonAction)
-        
+
         addKeyboardToolbarWithTarget(target: target, titleText: titleText, rightBarButtonConfiguration: rightConfiguration, previousBarButtonConfiguration: leftConfiguration)
     }
-    
-    ///--------------------------
-    /// MARK: Previous/Next/Right
-    ///--------------------------
 
-    @objc func addPreviousNextDoneOnKeyboardWithTarget (_ target: AnyObject?, previousAction: Selector, nextAction: Selector, doneAction: Selector, shouldShowPlaceholder: Bool = false) {
+    // MARK: Previous/Next/Right
+
+    func addPreviousNextDoneOnKeyboardWithTarget (_ target: AnyObject?, previousAction: Selector, nextAction: Selector, doneAction: Selector, shouldShowPlaceholder: Bool = false) {
 
         addPreviousNextDoneOnKeyboardWithTarget(target, previousAction: previousAction, nextAction: nextAction, doneAction: doneAction, titleText: (shouldShowPlaceholder ? self.drawingToolbarPlaceholder: nil))
     }
 
-    @objc func addPreviousNextRightOnKeyboardWithTarget(_ target: AnyObject?, rightButtonImage: UIImage, previousAction: Selector, nextAction: Selector, rightButtonAction: Selector, shouldShowPlaceholder: Bool = false) {
-        
+    func addPreviousNextRightOnKeyboardWithTarget(_ target: AnyObject?, rightButtonImage: UIImage, previousAction: Selector, nextAction: Selector, rightButtonAction: Selector, shouldShowPlaceholder: Bool = false) {
+
         addPreviousNextRightOnKeyboardWithTarget(target, rightButtonImage: rightButtonImage, previousAction: previousAction, nextAction: nextAction, rightButtonAction: rightButtonAction, titleText: (shouldShowPlaceholder ? self.drawingToolbarPlaceholder: nil))
     }
-    
-    @objc func addPreviousNextRightOnKeyboardWithTarget(_ target: AnyObject?, rightButtonTitle: String, previousAction: Selector, nextAction: Selector, rightButtonAction: Selector, shouldShowPlaceholder: Bool = false) {
-        
+
+    func addPreviousNextRightOnKeyboardWithTarget(_ target: AnyObject?, rightButtonTitle: String, previousAction: Selector, nextAction: Selector, rightButtonAction: Selector, shouldShowPlaceholder: Bool = false) {
+
         addPreviousNextRightOnKeyboardWithTarget(target, rightButtonTitle: rightButtonTitle, previousAction: previousAction, nextAction: nextAction, rightButtonAction: rightButtonAction, titleText: (shouldShowPlaceholder ? self.drawingToolbarPlaceholder: nil))
     }
-    
-    @objc func addPreviousNextDoneOnKeyboardWithTarget (_ target: AnyObject?, previousAction: Selector, nextAction: Selector, doneAction: Selector, titleText: String?) {
-        
+
+    func addPreviousNextDoneOnKeyboardWithTarget (_ target: AnyObject?, previousAction: Selector, nextAction: Selector, doneAction: Selector, titleText: String?) {
+
         let rightConfiguration = IQBarButtonItemConfiguration(barButtonSystemItem: .done, action: doneAction)
         let nextConfiguration = IQBarButtonItemConfiguration(image: UIImage.keyboardNextImage() ?? UIImage(), action: nextAction)
         let prevConfiguration = IQBarButtonItemConfiguration(image: UIImage.keyboardPreviousImage() ?? UIImage(), action: previousAction)
 
         addKeyboardToolbarWithTarget(target: target, titleText: titleText, rightBarButtonConfiguration: rightConfiguration, previousBarButtonConfiguration: prevConfiguration, nextBarButtonConfiguration: nextConfiguration)
     }
-    
-    @objc func addPreviousNextRightOnKeyboardWithTarget(_ target: AnyObject?, rightButtonImage: UIImage, previousAction: Selector, nextAction: Selector, rightButtonAction: Selector, titleText: String?) {
-        
+
+    func addPreviousNextRightOnKeyboardWithTarget(_ target: AnyObject?, rightButtonImage: UIImage, previousAction: Selector, nextAction: Selector, rightButtonAction: Selector, titleText: String?) {
+
         let rightConfiguration = IQBarButtonItemConfiguration(image: rightButtonImage, action: rightButtonAction)
         let nextConfiguration = IQBarButtonItemConfiguration(image: UIImage.keyboardNextImage() ?? UIImage(), action: nextAction)
         let prevConfiguration = IQBarButtonItemConfiguration(image: UIImage.keyboardPreviousImage() ?? UIImage(), action: previousAction)
-        
+
         addKeyboardToolbarWithTarget(target: target, titleText: titleText, rightBarButtonConfiguration: rightConfiguration, previousBarButtonConfiguration: prevConfiguration, nextBarButtonConfiguration: nextConfiguration)
     }
-    
-    @objc func addPreviousNextRightOnKeyboardWithTarget(_ target: AnyObject?, rightButtonTitle: String, previousAction: Selector, nextAction: Selector, rightButtonAction: Selector, titleText: String?) {
-        
+
+    func addPreviousNextRightOnKeyboardWithTarget(_ target: AnyObject?, rightButtonTitle: String, previousAction: Selector, nextAction: Selector, rightButtonAction: Selector, titleText: String?) {
+
         let rightConfiguration = IQBarButtonItemConfiguration(title: rightButtonTitle, action: rightButtonAction)
         let nextConfiguration = IQBarButtonItemConfiguration(image: UIImage.keyboardNextImage() ?? UIImage(), action: nextAction)
         let prevConfiguration = IQBarButtonItemConfiguration(image: UIImage.keyboardPreviousImage() ?? UIImage(), action: previousAction)
-        
+
         addKeyboardToolbarWithTarget(target: target, titleText: titleText, rightBarButtonConfiguration: rightConfiguration, previousBarButtonConfiguration: prevConfiguration, nextBarButtonConfiguration: nextConfiguration)
     }
 }
diff --git a/OpenBook/Pods/Manifest.lock b/OpenBook/Pods/Manifest.lock
index 29b058d0..d4ce084a 100644
--- a/OpenBook/Pods/Manifest.lock
+++ b/OpenBook/Pods/Manifest.lock
@@ -1,125 +1,132 @@
 PODS:
-  - Alamofire (5.4.3)
+  - Alamofire (5.4.4)
   - AlamofireNetworkActivityLogger (3.4.0):
     - Alamofire (~> 5.4.0)
   - CleverTap-iOS-SDK (3.10.0):
     - SDWebImage (~> 5.1)
-  - Firebase/Analytics (8.7.0):
+  - Firebase/Analytics (8.9.1):
     - Firebase/Core
-  - Firebase/Core (8.7.0):
+  - Firebase/Core (8.9.1):
     - Firebase/CoreOnly
-    - FirebaseAnalytics (~> 8.7.0)
-  - Firebase/CoreOnly (8.7.0):
-    - FirebaseCore (= 8.7.0)
-  - Firebase/Crashlytics (8.7.0):
+    - FirebaseAnalytics (~> 8.9.1)
+  - Firebase/CoreOnly (8.9.1):
+    - FirebaseCore (= 8.9.1)
+  - Firebase/Crashlytics (8.9.1):
     - Firebase/CoreOnly
-    - FirebaseCrashlytics (~> 8.7.0)
-  - Firebase/Messaging (8.7.0):
+    - FirebaseCrashlytics (~> 8.9.0)
+  - Firebase/Messaging (8.9.1):
     - Firebase/CoreOnly
-    - FirebaseMessaging (~> 8.7.0)
-  - FirebaseAnalytics (8.7.0):
-    - FirebaseAnalytics/AdIdSupport (= 8.7.0)
+    - FirebaseMessaging (~> 8.9.0)
+  - FirebaseAnalytics (8.9.1):
+    - FirebaseAnalytics/AdIdSupport (= 8.9.1)
     - FirebaseCore (~> 8.0)
     - FirebaseInstallations (~> 8.0)
-    - GoogleUtilities/AppDelegateSwizzler (~> 7.4)
-    - GoogleUtilities/MethodSwizzler (~> 7.4)
-    - GoogleUtilities/Network (~> 7.4)
-    - "GoogleUtilities/NSData+zlib (~> 7.4)"
+    - GoogleUtilities/AppDelegateSwizzler (~> 7.6)
+    - GoogleUtilities/MethodSwizzler (~> 7.6)
+    - GoogleUtilities/Network (~> 7.6)
+    - "GoogleUtilities/NSData+zlib (~> 7.6)"
     - nanopb (~> 2.30908.0)
-  - FirebaseAnalytics/AdIdSupport (8.7.0):
+  - FirebaseAnalytics/AdIdSupport (8.9.1):
     - FirebaseCore (~> 8.0)
     - FirebaseInstallations (~> 8.0)
-    - GoogleAppMeasurement (= 8.7.0)
-    - GoogleUtilities/AppDelegateSwizzler (~> 7.4)
-    - GoogleUtilities/MethodSwizzler (~> 7.4)
-    - GoogleUtilities/Network (~> 7.4)
-    - "GoogleUtilities/NSData+zlib (~> 7.4)"
+    - GoogleAppMeasurement (= 8.9.1)
+    - GoogleUtilities/AppDelegateSwizzler (~> 7.6)
+    - GoogleUtilities/MethodSwizzler (~> 7.6)
+    - GoogleUtilities/Network (~> 7.6)
+    - "GoogleUtilities/NSData+zlib (~> 7.6)"
     - nanopb (~> 2.30908.0)
-  - FirebaseCore (8.7.0):
+  - FirebaseCore (8.9.1):
     - FirebaseCoreDiagnostics (~> 8.0)
-    - GoogleUtilities/Environment (~> 7.4)
-    - GoogleUtilities/Logger (~> 7.4)
-  - FirebaseCoreDiagnostics (8.7.0):
-    - GoogleDataTransport (~> 9.0)
-    - GoogleUtilities/Environment (~> 7.4)
-    - GoogleUtilities/Logger (~> 7.4)
+    - GoogleUtilities/Environment (~> 7.6)
+    - GoogleUtilities/Logger (~> 7.6)
+  - FirebaseCoreDiagnostics (8.9.0):
+    - GoogleDataTransport (~> 9.1)
+    - GoogleUtilities/Environment (~> 7.6)
+    - GoogleUtilities/Logger (~> 7.6)
     - nanopb (~> 2.30908.0)
-  - FirebaseCrashlytics (8.7.0):
+  - FirebaseCrashlytics (8.9.0):
     - FirebaseCore (~> 8.0)
     - FirebaseInstallations (~> 8.0)
-    - GoogleDataTransport (~> 9.0)
-    - GoogleUtilities/Environment (~> 7.4)
+    - GoogleDataTransport (~> 9.1)
+    - GoogleUtilities/Environment (~> 7.6)
     - nanopb (~> 2.30908.0)
     - PromisesObjC (< 3.0, >= 1.2)
-  - FirebaseInstallations (8.7.0):
+  - FirebaseInstallations (8.9.0):
     - FirebaseCore (~> 8.0)
-    - GoogleUtilities/Environment (~> 7.4)
-    - GoogleUtilities/UserDefaults (~> 7.4)
+    - GoogleUtilities/Environment (~> 7.6)
+    - GoogleUtilities/UserDefaults (~> 7.6)
     - PromisesObjC (< 3.0, >= 1.2)
-  - FirebaseMessaging (8.7.0):
+  - FirebaseMessaging (8.9.0):
     - FirebaseCore (~> 8.0)
     - FirebaseInstallations (~> 8.0)
-    - GoogleDataTransport (~> 9.0)
-    - GoogleUtilities/AppDelegateSwizzler (~> 7.4)
-    - GoogleUtilities/Environment (~> 7.4)
-    - GoogleUtilities/Reachability (~> 7.4)
-    - GoogleUtilities/UserDefaults (~> 7.4)
+    - GoogleDataTransport (~> 9.1)
+    - GoogleUtilities/AppDelegateSwizzler (~> 7.6)
+    - GoogleUtilities/Environment (~> 7.6)
+    - GoogleUtilities/Reachability (~> 7.6)
+    - GoogleUtilities/UserDefaults (~> 7.6)
     - nanopb (~> 2.30908.0)
-  - FloatingPanel (2.4.0)
-  - GoogleAppMeasurement (8.7.0):
-    - GoogleAppMeasurement/AdIdSupport (= 8.7.0)
-    - GoogleUtilities/AppDelegateSwizzler (~> 7.4)
-    - GoogleUtilities/MethodSwizzler (~> 7.4)
-    - GoogleUtilities/Network (~> 7.4)
-    - "GoogleUtilities/NSData+zlib (~> 7.4)"
+  - FloatingPanel (2.5.0)
+  - GoogleAppMeasurement (8.9.1):
+    - GoogleAppMeasurement/AdIdSupport (= 8.9.1)
+    - GoogleUtilities/AppDelegateSwizzler (~> 7.6)
+    - GoogleUtilities/MethodSwizzler (~> 7.6)
+    - GoogleUtilities/Network (~> 7.6)
+    - "GoogleUtilities/NSData+zlib (~> 7.6)"
     - nanopb (~> 2.30908.0)
-  - GoogleAppMeasurement/AdIdSupport (8.7.0):
-    - GoogleUtilities/AppDelegateSwizzler (~> 7.4)
-    - GoogleUtilities/MethodSwizzler (~> 7.4)
-    - GoogleUtilities/Network (~> 7.4)
-    - "GoogleUtilities/NSData+zlib (~> 7.4)"
+  - GoogleAppMeasurement/AdIdSupport (8.9.1):
+    - GoogleAppMeasurement/WithoutAdIdSupport (= 8.9.1)
+    - GoogleUtilities/AppDelegateSwizzler (~> 7.6)
+    - GoogleUtilities/MethodSwizzler (~> 7.6)
+    - GoogleUtilities/Network (~> 7.6)
+    - "GoogleUtilities/NSData+zlib (~> 7.6)"
     - nanopb (~> 2.30908.0)
-  - GoogleDataTransport (9.1.0):
+  - GoogleAppMeasurement/WithoutAdIdSupport (8.9.1):
+    - GoogleUtilities/AppDelegateSwizzler (~> 7.6)
+    - GoogleUtilities/MethodSwizzler (~> 7.6)
+    - GoogleUtilities/Network (~> 7.6)
+    - "GoogleUtilities/NSData+zlib (~> 7.6)"
+    - nanopb (~> 2.30908.0)
+  - GoogleDataTransport (9.1.2):
     - GoogleUtilities/Environment (~> 7.2)
     - nanopb (~> 2.30908.0)
     - PromisesObjC (< 3.0, >= 1.2)
-  - GoogleUtilities/AppDelegateSwizzler (7.5.2):
+  - GoogleUtilities/AppDelegateSwizzler (7.6.0):
     - GoogleUtilities/Environment
     - GoogleUtilities/Logger
     - GoogleUtilities/Network
-  - GoogleUtilities/Environment (7.5.2):
+  - GoogleUtilities/Environment (7.6.0):
     - PromisesObjC (< 3.0, >= 1.2)
-  - GoogleUtilities/Logger (7.5.2):
+  - GoogleUtilities/Logger (7.6.0):
     - GoogleUtilities/Environment
-  - GoogleUtilities/MethodSwizzler (7.5.2):
+  - GoogleUtilities/MethodSwizzler (7.6.0):
     - GoogleUtilities/Logger
-  - GoogleUtilities/Network (7.5.2):
+  - GoogleUtilities/Network (7.6.0):
     - GoogleUtilities/Logger
     - "GoogleUtilities/NSData+zlib"
     - GoogleUtilities/Reachability
-  - "GoogleUtilities/NSData+zlib (7.5.2)"
-  - GoogleUtilities/Reachability (7.5.2):
+  - "GoogleUtilities/NSData+zlib (7.6.0)"
+  - GoogleUtilities/Reachability (7.6.0):
     - GoogleUtilities/Logger
-  - GoogleUtilities/UserDefaults (7.5.2):
+  - GoogleUtilities/UserDefaults (7.6.0):
     - GoogleUtilities/Logger
-  - IQKeyboardManagerSwift (6.5.6)
+  - IQKeyboardManagerSwift (6.5.9)
   - nanopb (2.30908.0):
     - nanopb/decode (= 2.30908.0)
     - nanopb/encode (= 2.30908.0)
   - nanopb/decode (2.30908.0)
   - nanopb/encode (2.30908.0)
   - OTPFieldView (1.0.1)
-  - Parchment (3.0.1)
+  - Parchment (3.1.0)
   - PromisesObjC (2.0.0)
   - ScrollingFollowView (1.1.1)
-  - SDWebImage (5.11.1):
-    - SDWebImage/Core (= 5.11.1)
-  - SDWebImage/Core (5.11.1)
-  - SwiftLint (0.43.1)
-  - SwiftMessages (9.0.3):
-    - SwiftMessages/App (= 9.0.3)
-  - SwiftMessages/App (9.0.3)
-  - UserExperior (5.0.6)
+  - SDWebImage (5.12.1):
+    - SDWebImage/Core (= 5.12.1)
+  - SDWebImage/Core (5.12.1)
+  - SwiftLint (0.45.0)
+  - SwiftMessages (9.0.5):
+    - SwiftMessages/App (= 9.0.5)
+  - SwiftMessages/App (9.0.5)
+  - UserExperior (5.0.9)
   - XLPagerTabStrip (9.0.0)
   - youtube-ios-player-helper (1.0.3)
 
@@ -172,30 +179,30 @@ SPEC REPOS:
     - youtube-ios-player-helper
 
 SPEC CHECKSUMS:
-  Alamofire: e447a2774a40c996748296fa2c55112fdbbc42f9
+  Alamofire: f3b09a368f1582ab751b3fff5460276e0d2cf5c9
   AlamofireNetworkActivityLogger: 162ab8aee00e6267a4304d7cc134e13ccfe3bcc5
   CleverTap-iOS-SDK: 1e38a25eee5bdb3e525c5c8497504bc64b7d695d
-  Firebase: bc9325d5ee2041524bac78a5213d0e530c651309
-  FirebaseAnalytics: 52768800c2add1d84b751420cb4caaf8195f2c41
-  FirebaseCore: f4804c1d3f4bbbefc88904d15653038f2c99ddf7
-  FirebaseCoreDiagnostics: b63732f581a1c6a453ec7241f9ab60b3a5bd3450
-  FirebaseCrashlytics: 6fac03d1eef054833b71c929c93ab95c12989728
-  FirebaseInstallations: ede6fb72bb6337914e5888b399271259d0c4910c
-  FirebaseMessaging: 93227dd71d7888e200baef65043f81acb2b6596e
-  FloatingPanel: fa60183672ed86313b9e241e34465e82211260e8
-  GoogleAppMeasurement: 2be61ce546ad074dbe4dd545f222ac6033bb1d9e
-  GoogleDataTransport: 85fd18ff3019bb85d3f2c551d04c481dedf71fc9
-  GoogleUtilities: 8de2a97a17e15b6b98e38e8770e2d129a57c0040
-  IQKeyboardManagerSwift: c7df9d2deb356c04522f5c4b7b6e4ce4d8ed94fe
+  Firebase: fb5114cd2bf96e2ff7bcb01d0d9a156cf5fd2f07
+  FirebaseAnalytics: 4ab446ce08a3fe52e8a4303dd997cf26276bf968
+  FirebaseCore: c5aab092d9c4b8efea894946166b04c9d9ef0e68
+  FirebaseCoreDiagnostics: 5daa63f1c1409d981a2d5007daa100b36eac6a34
+  FirebaseCrashlytics: 40efbd81157dae307ec95612fa1328347284d2c2
+  FirebaseInstallations: caa7c8e0d3e2345b8829d2fa9ca1b4dfbf2fcc85
+  FirebaseMessaging: 82c4a48638f53f7b184f3cc9f6cd2cbe533ab316
+  FloatingPanel: ddb1c8cbbacd164cfee651c449febe867a28e2cb
+  GoogleAppMeasurement: 837649ad3987936c232f6717c5680216f6243d24
+  GoogleDataTransport: 629c20a4d363167143f30ea78320d5a7eb8bd940
+  GoogleUtilities: 684ee790a24f73ebb2d1d966e9711c203f2a4237
+  IQKeyboardManagerSwift: 6e839c575c4aa1078d58a596e41244e77abe918f
   nanopb: a0ba3315591a9ae0a16a309ee504766e90db0c96
   OTPFieldView: 700a752fe62c41d1c4914c78aa500fb30d97c255
-  Parchment: 466a1cfb6151780db8acb4bbedc2d9c6bfa1e2ff
+  Parchment: 6250722ed0456d68f6bae03118eda722a28486f3
   PromisesObjC: 68159ce6952d93e17b2dfe273b8c40907db5ba58
   ScrollingFollowView: 135102baad0e35fb34b2a2eaeabcb60c4d0955c8
-  SDWebImage: a7f831e1a65eb5e285e3fb046a23fcfbf08e696d
-  SwiftLint: 99f82d07b837b942dd563c668de129a03fc3fb52
-  SwiftMessages: 077f19126c24033fe24042237ecc20261adb46e4
-  UserExperior: 2543964022f3fc7688452ef635029b8164093da9
+  SDWebImage: 4dc3e42d9ec0c1028b960a33ac6b637bb432207b
+  SwiftLint: e5c7f1fba68eccfc51509d5b2ce1699f5502e0c7
+  SwiftMessages: 9cca50659fa22bb523b4dd2a958d4442e843a354
+  UserExperior: 22bb6da09c1aac07e88ebc61ee3f4c90bd7d21bd
   XLPagerTabStrip: 61c57fd61f611ee5f01ff1495ad6fbee8bf496c5
   youtube-ios-player-helper: 0185c57db23c80d63d6ca11251d110abb8a4ca61
 
diff --git a/OpenBook/Pods/Parchment/Parchment/Classes/PageViewController.swift b/OpenBook/Pods/Parchment/Parchment/Classes/PageViewController.swift
index 626a19df..d5d3d76b 100644
--- a/OpenBook/Pods/Parchment/Parchment/Classes/PageViewController.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Classes/PageViewController.swift
@@ -4,415 +4,423 @@ import UIKit
 /// using `UIScrollView`. It provides detailed delegate methods, which
 /// is the main issue with `UIPageViewController`.
 public final class PageViewController: UIViewController {
+    // MARK: Public Properties
 
-  // MARK: Public Properties
-  
-  public weak var dataSource: PageViewControllerDataSource?
-  public weak var delegate: PageViewControllerDelegate?
-  
-  public override var shouldAutomaticallyForwardAppearanceMethods: Bool {
-    return false
-  }
-  
-  /// The view controller before the selected view controller.
-  public var beforeViewController: UIViewController? {
-    return manager.previousViewController
-  }
-  
-  /// The currently selected view controller. Can be `nil` if no view
-  /// controller is selected.
-  public var selectedViewController: UIViewController? {
-    return manager.selectedViewController
-  }
-  
-  /// The view controller after the selected view controller.
-  private var afterViewController: UIViewController? {
-    return manager.nextViewController
-  }
-  
-  /// The underlying scroll view where the page view controllers are
-  /// added. Changing the properties on this scroll view might cause
-  /// undefined behaviour.
-  public private(set) lazy var scrollView: UIScrollView = {
-    let scrollView = UIScrollView()
-    scrollView.isPagingEnabled = true
-    scrollView.autoresizingMask = [
-      .flexibleTopMargin,
-      .flexibleRightMargin,
-      .flexibleBottomMargin,
-      .flexibleLeftMargin
-    ]
-    scrollView.scrollsToTop = false
-    scrollView.bounces = true
-    scrollView.translatesAutoresizingMaskIntoConstraints = true
-    scrollView.showsHorizontalScrollIndicator = false
-    scrollView.showsVerticalScrollIndicator = false
-    return scrollView
-  }()
-  
-  public var options: PagingOptions {
-    didSet {
-      switch options.contentNavigationOrientation {
-      case .vertical:
-        scrollView.alwaysBounceHorizontal = false
-        scrollView.alwaysBounceVertical = true
-      case .horizontal:
-        scrollView.alwaysBounceHorizontal = true
-        scrollView.alwaysBounceVertical = false
-      }
-    }
-  }
-  
-  // MARK: Private Properties
-  
-  private let manager = PageViewManager()
-  
-  /// The size of a single page.
-  private var pageSize: CGFloat {
-    switch options.contentNavigationOrientation {
-    case .vertical:
-      return view.bounds.height
-    case .horizontal:
-      return view.bounds.width
-    }
-  }
-  
-  /// The size of all the pages in the scroll view.
-  private var contentSize: CGSize {
-    switch options.contentNavigationOrientation {
-    case .horizontal:
-      return CGSize(
-        width: CGFloat(manager.state.count) * view.bounds.width,
-        height: view.bounds.height)
-    case .vertical:
-      return CGSize(
-        width: view.bounds.width,
-        height: CGFloat(manager.state.count) * view.bounds.height)
-    }
-  }
-  
-  /// The content offset of the scroll view, adjusted for the current
-  /// navigation orientation.
-  private var contentOffset: CGFloat {
-    get {
-      switch options.contentNavigationOrientation {
-      case .horizontal:
-        return scrollView.contentOffset.x
-      case .vertical:
-        return scrollView.contentOffset.y
-      }
-    }
-    set {
-      scrollView.contentOffset = point(newValue)
-    }
-  }
-  
-  private var isRightToLeft: Bool {
-    switch options.contentNavigationOrientation {
-    case .vertical:
-      return false
-    case .horizontal:
-      if #available(iOS 9.0, *),
-        UIView.userInterfaceLayoutDirection(for: view.semanticContentAttribute) == .rightToLeft {
-        return true
-      } else if UIApplication.shared.userInterfaceLayoutDirection == .rightToLeft {
-        return true
-      } else {
+    public weak var dataSource: PageViewControllerDataSource?
+    public weak var delegate: PageViewControllerDelegate?
+
+    public override var shouldAutomaticallyForwardAppearanceMethods: Bool {
         return false
-      }
-    }
-  }
-
-  public init(options: PagingOptions = PagingOptions()) {
-    self.options = options
-    super.init(nibName: nil, bundle: nil)
-    manager.delegate = self
-    manager.dataSource = self
-  }
-  
-  public required init?(coder: NSCoder) {
-    self.options = PagingOptions()
-    super.init(coder: coder)
-    manager.delegate = self
-    manager.dataSource = self
-  }
-  
-  override public func viewDidLoad() {
-    super.viewDidLoad()
-    view.addSubview(scrollView)
-    scrollView.delegate = self
-    
-    if #available(iOS 11.0, *) {
-      scrollView.contentInsetAdjustmentBehavior = .never
-    }
-  }
-  
-  public override func viewWillAppear(_ animated: Bool) {
-    super.viewWillAppear(animated)
-    manager.viewWillAppear(animated)
-  }
-  
-  public override func viewDidAppear(_ animated: Bool) {
-    super.viewDidAppear(animated)
-    manager.viewDidAppear(animated)
-  }
-  
-  public override func viewWillDisappear(_ animated: Bool) {
-    super.viewWillDisappear(animated)
-    manager.viewWillDisappear(animated)
-  }
-  
-  public override func viewDidDisappear(_ animated: Bool) {
-    super.viewDidDisappear(animated)
-    manager.viewDidDisappear(animated)
-  }
-  
-  public override func willTransition(to newCollection: UITraitCollection, with coordinator: UIViewControllerTransitionCoordinator) {
-    super.willTransition(to: newCollection, with: coordinator)
-    coordinator.animate(alongsideTransition: { _ in
-      self.manager.viewWillTransitionSize()
-    })
-  }
-  
-  // MARK: Public Methods
-  
-  public func selectViewController(_ viewController: UIViewController, direction: PageViewDirection, animated: Bool = true) {
-    manager.select(viewController: viewController, direction: direction, animated: animated)
-  }
-  
-  public func selectNext(animated: Bool) {
-    manager.selectNext(animated: animated)
-  }
-
-  public func selectPrevious(animated: Bool) {
-    manager.selectPrevious(animated: animated)
-  }
-  
-  public func removeAll() {
-    manager.removeAll()
-  }
-  
-  // MARK: Private Methods
-  
-  private func setContentOffset(_ value: CGFloat, animated: Bool) {
-    scrollView.setContentOffset(point(value), animated: animated)
-  }
-  
-  private func point(_ value: CGFloat) -> CGPoint {
-    switch options.contentNavigationOrientation {
-    case .horizontal:
-      return CGPoint(x: value, y: 0)
-    case .vertical:
-      return CGPoint(x: 0, y: value)
-    }
-  }
+    }
+
+    /// The view controller before the selected view controller.
+    public var beforeViewController: UIViewController? {
+        return manager.previousViewController
+    }
+
+    /// The currently selected view controller. Can be `nil` if no view
+    /// controller is selected.
+    public var selectedViewController: UIViewController? {
+        return manager.selectedViewController
+    }
+
+    /// The view controller after the selected view controller.
+    private var afterViewController: UIViewController? {
+        return manager.nextViewController
+    }
+
+    /// The underlying scroll view where the page view controllers are
+    /// added. Changing the properties on this scroll view might cause
+    /// undefined behaviour.
+    public private(set) lazy var scrollView: UIScrollView = {
+        let scrollView = UIScrollView()
+        scrollView.isPagingEnabled = true
+        scrollView.autoresizingMask = [
+            .flexibleTopMargin,
+            .flexibleRightMargin,
+            .flexibleBottomMargin,
+            .flexibleLeftMargin,
+        ]
+        scrollView.scrollsToTop = false
+        scrollView.bounces = true
+        scrollView.translatesAutoresizingMaskIntoConstraints = true
+        scrollView.showsHorizontalScrollIndicator = false
+        scrollView.showsVerticalScrollIndicator = false
+        return scrollView
+    }()
+
+    public var options: PagingOptions {
+        didSet {
+            switch options.contentNavigationOrientation {
+            case .vertical:
+                scrollView.alwaysBounceHorizontal = false
+                scrollView.alwaysBounceVertical = true
+            case .horizontal:
+                scrollView.alwaysBounceHorizontal = true
+                scrollView.alwaysBounceVertical = false
+            }
+        }
+    }
+
+    // MARK: Private Properties
+
+    private let manager = PageViewManager()
+
+    /// The size of a single page.
+    private var pageSize: CGFloat {
+        switch options.contentNavigationOrientation {
+        case .vertical:
+            return view.bounds.height
+        case .horizontal:
+            return view.bounds.width
+        }
+    }
+
+    /// The size of all the pages in the scroll view.
+    private var contentSize: CGSize {
+        switch options.contentNavigationOrientation {
+        case .horizontal:
+            return CGSize(
+                width: CGFloat(manager.state.count) * view.bounds.width,
+                height: view.bounds.height
+            )
+        case .vertical:
+            return CGSize(
+                width: view.bounds.width,
+                height: CGFloat(manager.state.count) * view.bounds.height
+            )
+        }
+    }
+
+    /// The content offset of the scroll view, adjusted for the current
+    /// navigation orientation.
+    private var contentOffset: CGFloat {
+        get {
+            switch options.contentNavigationOrientation {
+            case .horizontal:
+                return scrollView.contentOffset.x
+            case .vertical:
+                return scrollView.contentOffset.y
+            }
+        }
+        set {
+            scrollView.contentOffset = point(newValue)
+        }
+    }
+
+    private var isRightToLeft: Bool {
+        switch options.contentNavigationOrientation {
+        case .vertical:
+            return false
+        case .horizontal:
+            if #available(iOS 9.0, *),
+                UIView.userInterfaceLayoutDirection(for: view.semanticContentAttribute) == .rightToLeft {
+                return true
+            } else {
+                return false
+            }
+        }
+    }
+
+    public init(options: PagingOptions = PagingOptions()) {
+        self.options = options
+        super.init(nibName: nil, bundle: nil)
+        manager.delegate = self
+        manager.dataSource = self
+    }
+
+    public required init?(coder: NSCoder) {
+        options = PagingOptions()
+        super.init(coder: coder)
+        manager.delegate = self
+        manager.dataSource = self
+    }
+
+    public override func viewDidLoad() {
+        super.viewDidLoad()
+        view.addSubview(scrollView)
+        scrollView.delegate = self
+
+        if #available(iOS 11.0, *) {
+            scrollView.contentInsetAdjustmentBehavior = .never
+        }
+    }
+
+    public override func viewWillAppear(_ animated: Bool) {
+        super.viewWillAppear(animated)
+        manager.viewWillAppear(animated)
+    }
+
+    public override func viewDidAppear(_ animated: Bool) {
+        super.viewDidAppear(animated)
+        manager.viewDidAppear(animated)
+    }
+
+    public override func viewWillDisappear(_ animated: Bool) {
+        super.viewWillDisappear(animated)
+        manager.viewWillDisappear(animated)
+    }
+
+    public override func viewDidDisappear(_ animated: Bool) {
+        super.viewDidDisappear(animated)
+        manager.viewDidDisappear(animated)
+    }
+
+    public override func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {
+        super.viewWillTransition(to: size, with: coordinator)
+        print("viewWillTransition: ", size)
+        coordinator.animate(alongsideTransition: { _ in
+            self.manager.viewWillTransitionSize()
+        })
+    }
+
+    // MARK: Public Methods
+
+    public func selectViewController(_ viewController: UIViewController, direction: PageViewDirection, animated: Bool = true) {
+        manager.select(viewController: viewController, direction: direction, animated: animated)
+    }
+
+    public func selectNext(animated: Bool) {
+        manager.selectNext(animated: animated)
+    }
+
+    public func selectPrevious(animated: Bool) {
+        manager.selectPrevious(animated: animated)
+    }
+
+    public func removeAll() {
+        manager.removeAll()
+    }
+
+    // MARK: Private Methods
+
+    private func setContentOffset(_ value: CGFloat, animated: Bool) {
+        scrollView.setContentOffset(point(value), animated: animated)
+    }
+
+    private func point(_ value: CGFloat) -> CGPoint {
+        switch options.contentNavigationOrientation {
+        case .horizontal:
+            return CGPoint(x: value, y: 0)
+        case .vertical:
+            return CGPoint(x: 0, y: value)
+        }
+    }
 }
 
 // MARK: - UIScrollViewDelegate
 
 extension PageViewController: UIScrollViewDelegate {
-  public func scrollViewWillBeginDragging(_ scrollView: UIScrollView) {
-    manager.willBeginDragging()
-  }
-  
-  public func scrollViewWillEndDragging(_ scrollView: UIScrollView, withVelocity velocity: CGPoint, targetContentOffset: UnsafeMutablePointer<CGPoint>) {
-    manager.willEndDragging()
-  }
-  
-  public func scrollViewDidScroll(_ scrollView: UIScrollView) {
-    let distance = pageSize
-    var progress: CGFloat
-    
-    if isRightToLeft {
-      switch manager.state {
-      case .last, .empty, .single:
-        progress = -(contentOffset / distance)
-      case .center, .first:
-        progress = -((contentOffset - distance) / distance)
-      }
-    } else {
-      switch manager.state {
-      case .first, .empty, .single:
-        progress = contentOffset / distance
-      case .center, .last:
-        progress = (contentOffset - distance) / distance
-      }
-    }
-    
-    manager.didScroll(progress: progress)
-  }
+    public func scrollViewWillBeginDragging(_: UIScrollView) {
+        manager.willBeginDragging()
+    }
+
+    public func scrollViewWillEndDragging(_: UIScrollView, withVelocity _: CGPoint, targetContentOffset _: UnsafeMutablePointer<CGPoint>) {
+        manager.willEndDragging()
+    }
+
+    public func scrollViewDidScroll(_: UIScrollView) {
+        let distance = pageSize
+        var progress: CGFloat
+
+        if isRightToLeft {
+            switch manager.state {
+            case .last, .empty, .single:
+                progress = -(contentOffset / distance)
+            case .center, .first:
+                progress = -((contentOffset - distance) / distance)
+            }
+        } else {
+            switch manager.state {
+            case .first, .empty, .single:
+                progress = contentOffset / distance
+            case .center, .last:
+                progress = (contentOffset - distance) / distance
+            }
+        }
+
+        manager.didScroll(progress: progress)
+    }
 }
 
 // MARK: - PageViewManagerDataSource
 
 extension PageViewController: PageViewManagerDataSource {
-  func viewControllerAfter(_ viewController: UIViewController) -> UIViewController? {
-    return dataSource?.pageViewController(self, viewControllerAfterViewController: viewController)
-  }
-  
-  func viewControllerBefore(_ viewController: UIViewController) -> UIViewController? {
-    return dataSource?.pageViewController(self, viewControllerBeforeViewController: viewController)
-  }
+    func viewControllerAfter(_ viewController: UIViewController) -> UIViewController? {
+        return dataSource?.pageViewController(self, viewControllerAfterViewController: viewController)
+    }
+
+    func viewControllerBefore(_ viewController: UIViewController) -> UIViewController? {
+        return dataSource?.pageViewController(self, viewControllerBeforeViewController: viewController)
+    }
 }
 
 // MARK: - PageViewManagerDelegate
 
 extension PageViewController: PageViewManagerDelegate {
-  func scrollForward() {
-    if isRightToLeft {
-      switch manager.state {
-      case .first, .center:
-        setContentOffset(.zero, animated: true)
-      case .single, .empty, .last:
-        break
-      }
-    } else {
-      switch manager.state {
-      case .first:
-        setContentOffset(pageSize, animated: true)
-      case .center:
-        setContentOffset(pageSize * 2, animated: true)
-      case .single, .empty, .last:
-        break
-      }
-    }
-  }
-  
-  func scrollReverse() {
-    if isRightToLeft {
-      switch manager.state {
-      case .last:
-        setContentOffset(pageSize, animated: true)
-      case .center:
-        setContentOffset(pageSize * 2, animated: true)
-      case .single, .empty, .first:
-        break
-      }
-    } else {
-      switch manager.state {
-      case .last, .center:
-        scrollView.setContentOffset(.zero, animated: true)
-      case .single, .empty, .first:
-        break
-      }
-    }
-  }
-  
-  public override func viewWillLayoutSubviews() {
-    super.viewWillLayoutSubviews()
-    scrollView.frame = view.bounds
-  }
-
-  func layoutViews(for viewControllers: [UIViewController], keepContentOffset: Bool) {
-    let viewControllers = isRightToLeft ? viewControllers.reversed() : viewControllers
-
-    // Need to trigger a layout here to ensure that the scroll view
-    // bounds is updated before we use its frame for calculations.
-    view.layoutIfNeeded()
-
-    for (index, viewController) in viewControllers.enumerated() {
-      switch options.contentNavigationOrientation {
-      case .horizontal:
-        viewController.view.frame = CGRect(
-          x: CGFloat(index) * scrollView.bounds.width,
-          y: 0,
-          width: scrollView.bounds.width,
-          height: scrollView.bounds.height)
-      case .vertical:
-        viewController.view.frame = CGRect(
-          x: 0,
-          y: CGFloat(index) * scrollView.bounds.height,
-          width: scrollView.bounds.width,
-          height: scrollView.bounds.height)
-      }
-    }
-    
-    // When updating the content offset we need to account for the
-    // current content offset as well. This ensures that the selected
-    // page is fully centered when swiping so fast that you get the
-    // bounce effect in the scroll view.
-    var diff: CGFloat = 0
-    if keepContentOffset {
-      if contentOffset > pageSize * 2 {
-        diff = contentOffset - pageSize * 2
-      } else if contentOffset > pageSize && contentOffset < pageSize * 2 {
-        diff = contentOffset - pageSize
-      } else if contentOffset < pageSize && contentOffset < 0 {
-        diff = contentOffset
-      }
-    }
-    
-    // Need to set content size before updating content offset. If not
-    // the views will be misplaced when overshooting.
-    scrollView.contentSize = contentSize
-    
-    if isRightToLeft {
-      switch manager.state {
-      case .first, .center:
-        contentOffset = pageSize + diff
-      case .single, .empty, .last:
-        contentOffset = diff
-      }
-    } else {
-      switch manager.state {
-      case .first, .single, .empty:
-        contentOffset = diff
-      case .last, .center:
-        contentOffset = pageSize + diff
-      }
-    }
-  }
-  
-  func addViewController(_ viewController: UIViewController) {
-    viewController.willMove(toParent: self)
-    addChild(viewController)
-    scrollView.addSubview(viewController.view)
-    viewController.didMove(toParent: self)
-  }
-  
-  func removeViewController(_ viewController: UIViewController) {
-    viewController.willMove(toParent: nil)
-    viewController.removeFromParent()
-    viewController.view.removeFromSuperview()
-    viewController.didMove(toParent: nil)
-  }
-  
-  func beginAppearanceTransition(isAppearing: Bool, viewController: UIViewController, animated: Bool) {
-    viewController.beginAppearanceTransition(isAppearing, animated: animated)
-  }
-  
-  func endAppearanceTransition(viewController: UIViewController) {
-    viewController.endAppearanceTransition()
-  }
-  
-  func willScroll(
-    from selectedViewController: UIViewController,
-    to destinationViewController: UIViewController) {
-    delegate?.pageViewController(
-      self,
-      willStartScrollingFrom: selectedViewController,
-      destinationViewController: destinationViewController)
-  }
-  
-  func didFinishScrolling(
-    from selectedViewController: UIViewController,
-    to destinationViewController: UIViewController,
-    transitionSuccessful: Bool) {
-    delegate?.pageViewController(
-      self,
-      didFinishScrollingFrom: selectedViewController,
-      destinationViewController: destinationViewController,
-      transitionSuccessful: transitionSuccessful)
-  }
-  
-  func isScrolling(
-    from selectedViewController: UIViewController,
-    to destinationViewController: UIViewController?,
-    progress: CGFloat) {
-    delegate?.pageViewController(
-      self,
-      isScrollingFrom: selectedViewController,
-      destinationViewController: destinationViewController,
-      progress: progress)
-  }
+    func scrollForward() {
+        if isRightToLeft {
+            switch manager.state {
+            case .first, .center:
+                setContentOffset(.zero, animated: true)
+            case .single, .empty, .last:
+                break
+            }
+        } else {
+            switch manager.state {
+            case .first:
+                setContentOffset(pageSize, animated: true)
+            case .center:
+                setContentOffset(pageSize * 2, animated: true)
+            case .single, .empty, .last:
+                break
+            }
+        }
+    }
+
+    func scrollReverse() {
+        if isRightToLeft {
+            switch manager.state {
+            case .last:
+                setContentOffset(pageSize, animated: true)
+            case .center:
+                setContentOffset(pageSize * 2, animated: true)
+            case .single, .empty, .first:
+                break
+            }
+        } else {
+            switch manager.state {
+            case .last, .center:
+                scrollView.setContentOffset(.zero, animated: true)
+            case .single, .empty, .first:
+                break
+            }
+        }
+    }
+
+    public override func viewWillLayoutSubviews() {
+        super.viewWillLayoutSubviews()
+        scrollView.frame = view.bounds
+    }
+
+    func layoutViews(for viewControllers: [UIViewController], keepContentOffset: Bool) {
+        let viewControllers = isRightToLeft ? viewControllers.reversed() : viewControllers
+
+        // Need to trigger a layout here to ensure that the scroll view
+        // bounds is updated before we use its frame for calculations.
+        view.layoutIfNeeded()
+
+        for (index, viewController) in viewControllers.enumerated() {
+            switch options.contentNavigationOrientation {
+            case .horizontal:
+                viewController.view.frame = CGRect(
+                    x: CGFloat(index) * scrollView.bounds.width,
+                    y: 0,
+                    width: scrollView.bounds.width,
+                    height: scrollView.bounds.height
+                )
+            case .vertical:
+                viewController.view.frame = CGRect(
+                    x: 0,
+                    y: CGFloat(index) * scrollView.bounds.height,
+                    width: scrollView.bounds.width,
+                    height: scrollView.bounds.height
+                )
+            }
+        }
+
+        // When updating the content offset we need to account for the
+        // current content offset as well. This ensures that the selected
+        // page is fully centered when swiping so fast that you get the
+        // bounce effect in the scroll view.
+        var diff: CGFloat = 0
+        if keepContentOffset {
+            if contentOffset > pageSize * 2 {
+                diff = contentOffset - pageSize * 2
+            } else if contentOffset > pageSize, contentOffset < pageSize * 2 {
+                diff = contentOffset - pageSize
+            } else if contentOffset < pageSize, contentOffset < 0 {
+                diff = contentOffset
+            }
+        }
+
+        // Need to set content size before updating content offset. If not
+        // the views will be misplaced when overshooting.
+        scrollView.contentSize = contentSize
+
+        if isRightToLeft {
+            switch manager.state {
+            case .first, .center:
+                contentOffset = pageSize + diff
+            case .single, .empty, .last:
+                contentOffset = diff
+            }
+        } else {
+            switch manager.state {
+            case .first, .single, .empty:
+                contentOffset = diff
+            case .last, .center:
+                contentOffset = pageSize + diff
+            }
+        }
+    }
+
+    func addViewController(_ viewController: UIViewController) {
+        viewController.willMove(toParent: self)
+        addChild(viewController)
+        scrollView.addSubview(viewController.view)
+        viewController.didMove(toParent: self)
+    }
+
+    func removeViewController(_ viewController: UIViewController) {
+        viewController.willMove(toParent: nil)
+        viewController.removeFromParent()
+        viewController.view.removeFromSuperview()
+        viewController.didMove(toParent: nil)
+    }
+
+    func beginAppearanceTransition(isAppearing: Bool, viewController: UIViewController, animated: Bool) {
+        viewController.beginAppearanceTransition(isAppearing, animated: animated)
+    }
+
+    func endAppearanceTransition(viewController: UIViewController) {
+        viewController.endAppearanceTransition()
+    }
+
+    func willScroll(
+        from selectedViewController: UIViewController,
+        to destinationViewController: UIViewController
+    ) {
+        delegate?.pageViewController(
+            self,
+            willStartScrollingFrom: selectedViewController,
+            destinationViewController: destinationViewController
+        )
+    }
+
+    func didFinishScrolling(
+        from selectedViewController: UIViewController,
+        to destinationViewController: UIViewController,
+        transitionSuccessful: Bool
+    ) {
+        delegate?.pageViewController(
+            self,
+            didFinishScrollingFrom: selectedViewController,
+            destinationViewController: destinationViewController,
+            transitionSuccessful: transitionSuccessful
+        )
+    }
+
+    func isScrolling(
+        from selectedViewController: UIViewController,
+        to destinationViewController: UIViewController?,
+        progress: CGFloat
+    ) {
+        delegate?.pageViewController(
+            self,
+            isScrollingFrom: selectedViewController,
+            destinationViewController: destinationViewController,
+            progress: progress
+        )
+    }
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Classes/PageViewManager.swift b/OpenBook/Pods/Parchment/Parchment/Classes/PageViewManager.swift
index 0549719f..f93b30c7 100644
--- a/OpenBook/Pods/Parchment/Parchment/Classes/PageViewManager.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Classes/PageViewManager.swift
@@ -1,629 +1,642 @@
 import UIKit
 
 final class PageViewManager {
-  weak var dataSource: PageViewManagerDataSource?
-  weak var delegate: PageViewManagerDelegate?
-  
-  private(set) weak var previousViewController: UIViewController?
-  private(set) weak var selectedViewController: UIViewController?
-  private(set) weak var nextViewController: UIViewController?
-  
-  var state: PageViewState {
-    if previousViewController == nil && nextViewController == nil && selectedViewController == nil {
-      return .empty
-    } else if previousViewController == nil && nextViewController == nil {
-      return .single
-    } else if nextViewController == nil {
-      return .last
-    } else if previousViewController == nil {
-      return .first
-    } else {
-      return .center
-    }
-  }
-  
-  // MARK: - Private Properties
-  
-  private enum AppearanceState {
-    case appearing(animated: Bool)
-    case disappearing(animated: Bool)
-    case disappeared
-    case appeared
-  }
-  
-  private var appearanceState: AppearanceState = .disappeared
-  private var didReload: Bool = false
-  private var didSelect: Bool = false
-  private var initialDirection: PageViewDirection = .none
-  
-  // MARK: - Public Methods
-  
-  func select(
-    viewController: UIViewController,
-    direction: PageViewDirection = .none,
-    animated: Bool = false) {
-    if state == .empty || animated == false {
-      selectViewController(viewController, animated: animated)
-      return
-    } else {
-      resetState()
-      didSelect = true
-      
-      switch direction {
-      case .forward, .none:
-        if let nextViewController = nextViewController {
-          delegate?.removeViewController(nextViewController)
-        }
-        delegate?.addViewController(viewController)
-        nextViewController = viewController
-        layoutsViews()
-        delegate?.scrollForward()
-      case .reverse:
-        if let previousViewController = previousViewController {
-          delegate?.removeViewController(previousViewController)
+    weak var dataSource: PageViewManagerDataSource?
+    weak var delegate: PageViewManagerDelegate?
+
+    private(set) weak var previousViewController: UIViewController?
+    private(set) weak var selectedViewController: UIViewController?
+    private(set) weak var nextViewController: UIViewController?
+
+    var state: PageViewState {
+        if previousViewController == nil, nextViewController == nil, selectedViewController == nil {
+            return .empty
+        } else if previousViewController == nil, nextViewController == nil {
+            return .single
+        } else if nextViewController == nil {
+            return .last
+        } else if previousViewController == nil {
+            return .first
+        } else {
+            return .center
         }
-        delegate?.addViewController(viewController)
-        previousViewController = viewController
-        layoutsViews()
-        delegate?.scrollReverse()
-      }
-    }
-  }
-  
-  func selectNext(animated: Bool) {
-    if animated {
-      resetState()
-      delegate?.scrollForward()
-    } else if let nextViewController = nextViewController,
-      let selectedViewController = selectedViewController {
-      
-      beginAppearanceTransition(false, for: selectedViewController, animated: animated)
-      beginAppearanceTransition(true, for: nextViewController, animated: animated)
-      
-      let newNextViewController = dataSource?.viewControllerAfter(nextViewController)
-      
-      if let previousViewController = previousViewController {
-        delegate?.removeViewController(previousViewController)
-      }
-      
-      if let newNextViewController = newNextViewController {
-        delegate?.addViewController(newNextViewController)
-      }
-      
-      self.previousViewController = selectedViewController
-      self.selectedViewController = nextViewController
-      self.nextViewController = newNextViewController
-      
-      layoutsViews()
-      
-      endAppearanceTransition(for: selectedViewController)
-      endAppearanceTransition(for: nextViewController)
-    }
-  }
-  
-  func selectPrevious(animated: Bool) {
-    if animated {
-      resetState()
-      delegate?.scrollReverse()
-    } else if let previousViewController = previousViewController,
-      let selectedViewController = selectedViewController {
-      
-      beginAppearanceTransition(false, for: selectedViewController, animated: animated)
-      beginAppearanceTransition(true, for: previousViewController, animated: animated)
-      
-      let newPreviousViewController = dataSource?.viewControllerBefore(previousViewController)
-      
-      if let nextViewController = nextViewController {
-        delegate?.removeViewController(nextViewController)
-      }
-      
-      if let newPreviousViewController = newPreviousViewController {
-        delegate?.addViewController(newPreviousViewController)
-      }
-      
-      self.previousViewController = newPreviousViewController
-      self.selectedViewController = previousViewController
-      self.nextViewController = selectedViewController
-      
-      layoutsViews()
-      
-      endAppearanceTransition(for: selectedViewController)
-      endAppearanceTransition(for: previousViewController)
-    }
-  }
-  
-  func removeAll() {
-    let oldSelectedViewController = selectedViewController
-    
-    if let selectedViewController = oldSelectedViewController {
-      beginAppearanceTransition(false, for: selectedViewController, animated: false)
-      delegate?.removeViewController(selectedViewController)
     }
-    if let previousViewController = previousViewController {
-      delegate?.removeViewController(previousViewController)
-    }
-    if let nextViewController = nextViewController {
-      delegate?.removeViewController(nextViewController)
-    }
-    previousViewController = nil
-    selectedViewController = nil
-    nextViewController = nil
-    layoutsViews()
-    
-    if let oldSelectedViewController = oldSelectedViewController {
-      endAppearanceTransition(for: oldSelectedViewController)
-    }
-  }
-  
-  func viewWillAppear(_ animated: Bool) {
-    appearanceState = .appearing(animated: animated)
-    if let selectedViewController = selectedViewController {
-      delegate?.beginAppearanceTransition(
-        isAppearing: true,
-        viewController: selectedViewController,
-        animated: animated)
-    }
-    
-    switch state {
-    case .center, .first, .last, .single:
-      layoutsViews()
-    case .empty:
-      break
-    }
-  }
-  
-  func viewDidAppear(_ animated: Bool) {
-    appearanceState = .appeared
-    if let selectedViewController = selectedViewController {
-      delegate?.endAppearanceTransition(viewController: selectedViewController)
-    }
-  }
-  
-  func viewWillDisappear(_ animated: Bool) {
-    appearanceState = .disappearing(animated: animated)
-    if let selectedViewController = selectedViewController {
-      delegate?.beginAppearanceTransition(
-      isAppearing: false,
-      viewController: selectedViewController,
-      animated: animated)
-    }
-  }
-  
-  func viewDidDisappear(_ animated: Bool) {
-    appearanceState = .disappeared
-    if let selectedViewController = selectedViewController {
-      delegate?.endAppearanceTransition(viewController: selectedViewController)
+
+    // MARK: - Private Properties
+
+    private enum AppearanceState {
+        case appearing(animated: Bool)
+        case disappearing(animated: Bool)
+        case disappeared
+        case appeared
     }
-  }
-  
-  func willBeginDragging() {
-    resetState()
-  }
-  
-  func willEndDragging() {
-    resetState()
-  }
-  
-  func viewWillTransitionSize() {
-    layoutsViews(keepContentOffset: false)
-  }
-  
-  func didScroll(progress: CGFloat) {
-    let currentDirection = PageViewDirection(progress: progress)
-    
-    // MARK: Begin scrolling
-    
-    if initialDirection == .none {
-      switch currentDirection {
-      case .forward:
-        initialDirection = .forward
-        onScroll(progress: progress)
-        willScrollForward()
-      case .reverse:
-        initialDirection = .reverse
-        onScroll(progress: progress)
-        willScrollReverse()
-      case .none:
-        onScroll(progress: progress)
-      }
-    } else {
-      // Check if the transition changed direction in the middle of
-      // the transactions.
-      if didReload == false {
-        switch (currentDirection, initialDirection) {
-        case (.reverse, .forward):
-          initialDirection = .reverse
-          cancelScrollForward()
-          onScroll(progress: progress)
-          willScrollReverse()
-        case (.forward, .reverse):
-          initialDirection = .forward
-          cancelScrollReverse()
-          onScroll(progress: progress)
-          willScrollForward()
-        default:
-          onScroll(progress: progress)
+
+    private var appearanceState: AppearanceState = .disappeared
+    private var didReload: Bool = false
+    private var didSelect: Bool = false
+    private var initialDirection: PageViewDirection = .none
+
+    // MARK: - Public Methods
+
+    func select(
+        viewController: UIViewController,
+        direction: PageViewDirection = .none,
+        animated: Bool = false
+    ) {
+        if state == .empty || animated == false {
+            selectViewController(viewController, animated: animated)
+            return
+        } else {
+            resetState()
+            didSelect = true
+
+            switch direction {
+            case .forward, .none:
+                if let nextViewController = nextViewController {
+                    delegate?.removeViewController(nextViewController)
+                }
+                delegate?.addViewController(viewController)
+                nextViewController = viewController
+                layoutsViews()
+                delegate?.scrollForward()
+            case .reverse:
+                if let previousViewController = previousViewController {
+                    delegate?.removeViewController(previousViewController)
+                }
+                delegate?.addViewController(viewController)
+                previousViewController = viewController
+                layoutsViews()
+                delegate?.scrollReverse()
+            }
         }
-      } else {
-        onScroll(progress: progress)
-      }
-    }
-    
-    // MARK: Finished scrolling
-    
-    if didReload == false {
-      if progress >= 1 {
-        didReload = true
-        didScrollForward()
-      } else if progress <= -1 {
-        didReload = true
-        didScrollReverse()
-      } else if progress == 0 {
-        switch initialDirection {
-        case .forward:
-          didReload = true
-          cancelScrollForward()
-        case .reverse:
-          didReload = true
-          cancelScrollReverse()
-        case .none:
-          break
-        }
-      }
-    }
-  }
-  
-  // MARK: - Private Methods
-
-  private func selectViewController(_ viewController: UIViewController, animated: Bool) {
-    let oldSelectedViewController = selectedViewController
-    let newPreviousViewController = dataSource?.viewControllerBefore(viewController)
-    let newNextViewController = dataSource?.viewControllerAfter(viewController)
-    
-    if let oldSelectedViewController = oldSelectedViewController {
-      beginAppearanceTransition(false, for: oldSelectedViewController, animated: animated)
-    }
-    
-    if viewController !== selectedViewController {
-      beginAppearanceTransition(true, for: viewController, animated: animated)
-    }
-    
-    if let oldPreviosViewController = previousViewController {
-      if oldPreviosViewController !== viewController &&
-        oldPreviosViewController !== newPreviousViewController &&
-        oldPreviosViewController !== newNextViewController {
-        delegate?.removeViewController(oldPreviosViewController)
-      }
-    }
-    
-    if let oldSelectedViewController = selectedViewController {
-      if oldSelectedViewController !== newPreviousViewController &&
-        oldSelectedViewController !== newNextViewController {
-        delegate?.removeViewController(oldSelectedViewController)
-      }
-    }
-    
-    if let oldNextViewController = nextViewController {
-      if oldNextViewController !== viewController &&
-        oldNextViewController !== newPreviousViewController &&
-        oldNextViewController !== newNextViewController {
-        delegate?.removeViewController(oldNextViewController)
-      }
-    }
-    
-    if let newPreviousViewController = newPreviousViewController {
-      if newPreviousViewController !== selectedViewController &&
-        newPreviousViewController !== previousViewController &&
-        newPreviousViewController !== nextViewController {
-        delegate?.addViewController(newPreviousViewController)
-      }
     }
-    
-    if viewController !== nextViewController &&
-      viewController !== previousViewController {
-      delegate?.addViewController(viewController)
-    }
-    
-    if let newNextViewController = newNextViewController {
-      if newNextViewController !== selectedViewController &&
-        newNextViewController !== previousViewController &&
-        newNextViewController !== nextViewController {
-        delegate?.addViewController(newNextViewController)
-      }
-    }
-    
-    previousViewController = newPreviousViewController
-    selectedViewController = viewController
-    nextViewController = newNextViewController
-    
-    layoutsViews()
-    
-    if let oldSelectedViewController = oldSelectedViewController {
-      endAppearanceTransition(for: oldSelectedViewController)
+
+    func selectNext(animated: Bool) {
+        if animated {
+            resetState()
+            delegate?.scrollForward()
+        } else if let nextViewController = nextViewController,
+            let selectedViewController = selectedViewController {
+            beginAppearanceTransition(false, for: selectedViewController, animated: animated)
+            beginAppearanceTransition(true, for: nextViewController, animated: animated)
+
+            let newNextViewController = dataSource?.viewControllerAfter(nextViewController)
+
+            if let previousViewController = previousViewController {
+                delegate?.removeViewController(previousViewController)
+            }
+
+            if let newNextViewController = newNextViewController {
+                delegate?.addViewController(newNextViewController)
+            }
+
+            previousViewController = selectedViewController
+            self.selectedViewController = nextViewController
+            self.nextViewController = newNextViewController
+
+            layoutsViews()
+
+            endAppearanceTransition(for: selectedViewController)
+            endAppearanceTransition(for: nextViewController)
+        }
     }
-    
-    if viewController !== oldSelectedViewController {
-      endAppearanceTransition(for: viewController)
+
+    func selectPrevious(animated: Bool) {
+        if animated {
+            resetState()
+            delegate?.scrollReverse()
+        } else if let previousViewController = previousViewController,
+            let selectedViewController = selectedViewController {
+            beginAppearanceTransition(false, for: selectedViewController, animated: animated)
+            beginAppearanceTransition(true, for: previousViewController, animated: animated)
+
+            let newPreviousViewController = dataSource?.viewControllerBefore(previousViewController)
+
+            if let nextViewController = nextViewController {
+                delegate?.removeViewController(nextViewController)
+            }
+
+            if let newPreviousViewController = newPreviousViewController {
+                delegate?.addViewController(newPreviousViewController)
+            }
+
+            self.previousViewController = newPreviousViewController
+            self.selectedViewController = previousViewController
+            nextViewController = selectedViewController
+
+            layoutsViews()
+
+            endAppearanceTransition(for: selectedViewController)
+            endAppearanceTransition(for: previousViewController)
+        }
     }
-  }
-  
-  private func resetState() {
-    if didReload {
-      initialDirection = .none
+
+    func removeAll() {
+        let oldSelectedViewController = selectedViewController
+
+        if let selectedViewController = oldSelectedViewController {
+            beginAppearanceTransition(false, for: selectedViewController, animated: false)
+            delegate?.removeViewController(selectedViewController)
+        }
+        if let previousViewController = previousViewController {
+            delegate?.removeViewController(previousViewController)
+        }
+        if let nextViewController = nextViewController {
+            delegate?.removeViewController(nextViewController)
+        }
+        previousViewController = nil
+        selectedViewController = nil
+        nextViewController = nil
+        layoutsViews()
+
+        if let oldSelectedViewController = oldSelectedViewController {
+            endAppearanceTransition(for: oldSelectedViewController)
+        }
     }
-    didReload = false
-  }
-  
-  private func onScroll(progress: CGFloat) {
-    // This means we are overshooting, so we need to continue
-    // reporting the old view controllers.
-    if didReload {
-      switch initialDirection {
-      case .forward:
-        if let previousViewController = previousViewController,
-          let selectedViewController = selectedViewController {
-          delegate?.isScrolling(
-            from: previousViewController,
-            to: selectedViewController,
-            progress: progress)
-        }
-      case .reverse:
-        if let nextViewController = nextViewController,
-          let selectedViewController = selectedViewController {
-          delegate?.isScrolling(
-            from: nextViewController,
-            to: selectedViewController,
-            progress: progress)
-        }
-      case .none:
-        break
-      }
-    } else {
-      // Report progress as normally
-      switch initialDirection {
-      case .forward:
+
+    func viewWillAppear(_ animated: Bool) {
+        appearanceState = .appearing(animated: animated)
         if let selectedViewController = selectedViewController {
-          delegate?.isScrolling(
-            from: selectedViewController,
-            to: nextViewController,
-            progress: progress)
+            delegate?.beginAppearanceTransition(
+                isAppearing: true,
+                viewController: selectedViewController,
+                animated: animated
+            )
+        }
+
+        switch state {
+        case .center, .first, .last, .single:
+            layoutsViews()
+        case .empty:
+            break
         }
-      case .reverse:
+    }
+
+    func viewDidAppear(_: Bool) {
+        appearanceState = .appeared
         if let selectedViewController = selectedViewController {
-          delegate?.isScrolling(
-            from: selectedViewController,
-            to: previousViewController,
-            progress: progress)
-        }
-      case .none:
-        break
-      }
+            delegate?.endAppearanceTransition(viewController: selectedViewController)
+        }
     }
-  }
-  
-  private func cancelScrollForward() {
-    guard let selectedViewController = selectedViewController else { return }
-    let oldNextViewController = nextViewController
-    
-    if let nextViewController = oldNextViewController {
-      beginAppearanceTransition(true, for: selectedViewController, animated: true)
-      beginAppearanceTransition(false, for: nextViewController, animated: true)
+
+    func viewWillDisappear(_ animated: Bool) {
+        appearanceState = .disappearing(animated: animated)
+        if let selectedViewController = selectedViewController {
+            delegate?.beginAppearanceTransition(
+                isAppearing: false,
+                viewController: selectedViewController,
+                animated: animated
+            )
+        }
     }
-    
-    if didSelect {
-      let newNextViewController = dataSource?.viewControllerAfter(selectedViewController)
-      if let oldNextViewController = oldNextViewController {
-        delegate?.removeViewController(oldNextViewController)
-      }
-      if let newNextViewController = newNextViewController {
-        delegate?.addViewController(newNextViewController)
-      }
-      nextViewController = newNextViewController
-      didSelect = false
-      layoutsViews()
+
+    func viewDidDisappear(_: Bool) {
+        appearanceState = .disappeared
+        if let selectedViewController = selectedViewController {
+            delegate?.endAppearanceTransition(viewController: selectedViewController)
+        }
     }
-    
-    if let oldNextViewController = oldNextViewController {
-      endAppearanceTransition(for: selectedViewController)
-      endAppearanceTransition(for: oldNextViewController)
-      delegate?.didFinishScrolling(
-        from: selectedViewController,
-        to: oldNextViewController,
-        transitionSuccessful: false)
+
+    func willBeginDragging() {
+        resetState()
     }
-  }
-  
-  private func cancelScrollReverse() {
-    guard let selectedViewController = selectedViewController else { return }
-    let oldPreviousViewController = previousViewController
-    
-    if let previousViewController = oldPreviousViewController {
-      beginAppearanceTransition(true, for: selectedViewController, animated: true)
-      beginAppearanceTransition(false, for: previousViewController, animated: true)
+
+    func willEndDragging() {
+        resetState()
     }
-    
-    if didSelect {
-      let newPreviousViewController = dataSource?.viewControllerBefore(selectedViewController)
-      if let oldPreviousViewController = oldPreviousViewController {
-        delegate?.removeViewController(oldPreviousViewController)
-      }
-      if let newPreviousViewController = newPreviousViewController {
-        delegate?.addViewController(newPreviousViewController)
-      }
-      previousViewController = newPreviousViewController
-      didSelect = false
-      layoutsViews()
+
+    func viewWillTransitionSize() {
+        layoutsViews(keepContentOffset: false)
     }
-    
-    if let oldPreviousViewController = oldPreviousViewController {
-      endAppearanceTransition(for: selectedViewController)
-      endAppearanceTransition(for: oldPreviousViewController)
-      delegate?.didFinishScrolling(
-        from: selectedViewController,
-        to: oldPreviousViewController,
-        transitionSuccessful: false)
+
+    func didScroll(progress: CGFloat) {
+        let currentDirection = PageViewDirection(progress: progress)
+
+        // MARK: Begin scrolling
+
+        if initialDirection == .none {
+            switch currentDirection {
+            case .forward:
+                initialDirection = .forward
+                onScroll(progress: progress)
+                willScrollForward()
+            case .reverse:
+                initialDirection = .reverse
+                onScroll(progress: progress)
+                willScrollReverse()
+            case .none:
+                onScroll(progress: progress)
+            }
+        } else {
+            // Check if the transition changed direction in the middle of
+            // the transactions.
+            if didReload == false {
+                switch (currentDirection, initialDirection) {
+                case (.reverse, .forward):
+                    initialDirection = .reverse
+                    cancelScrollForward()
+                    onScroll(progress: progress)
+                    willScrollReverse()
+                case (.forward, .reverse):
+                    initialDirection = .forward
+                    cancelScrollReverse()
+                    onScroll(progress: progress)
+                    willScrollForward()
+                default:
+                    onScroll(progress: progress)
+                }
+            } else {
+                onScroll(progress: progress)
+            }
+        }
+
+        // MARK: Finished scrolling
+
+        if didReload == false {
+            if progress >= 1 {
+                didReload = true
+                didScrollForward()
+            } else if progress <= -1 {
+                didReload = true
+                didScrollReverse()
+            } else if progress == 0 {
+                switch initialDirection {
+                case .forward:
+                    didReload = true
+                    cancelScrollForward()
+                case .reverse:
+                    didReload = true
+                    cancelScrollReverse()
+                case .none:
+                    break
+                }
+            }
+        }
     }
-  }
-  
-  private func willScrollForward() {
-    if let selectedViewController = selectedViewController,
-      let nextViewController = nextViewController {
-      delegate?.willScroll(from: selectedViewController, to: nextViewController)
-      beginAppearanceTransition(true, for: nextViewController, animated: true)
-      beginAppearanceTransition(false, for: selectedViewController, animated: true)
+
+    // MARK: - Private Methods
+
+    private func selectViewController(_ viewController: UIViewController, animated: Bool) {
+        let oldSelectedViewController = selectedViewController
+        let newPreviousViewController = dataSource?.viewControllerBefore(viewController)
+        let newNextViewController = dataSource?.viewControllerAfter(viewController)
+
+        if let oldSelectedViewController = oldSelectedViewController {
+            beginAppearanceTransition(false, for: oldSelectedViewController, animated: animated)
+        }
+
+        if viewController !== selectedViewController {
+            beginAppearanceTransition(true, for: viewController, animated: animated)
+        }
+
+        if let oldPreviosViewController = previousViewController {
+            if oldPreviosViewController !== viewController,
+                oldPreviosViewController !== newPreviousViewController,
+                oldPreviosViewController !== newNextViewController {
+                delegate?.removeViewController(oldPreviosViewController)
+            }
+        }
+
+        if let oldSelectedViewController = selectedViewController {
+            if oldSelectedViewController !== newPreviousViewController,
+                oldSelectedViewController !== newNextViewController {
+                delegate?.removeViewController(oldSelectedViewController)
+            }
+        }
+
+        if let oldNextViewController = nextViewController {
+            if oldNextViewController !== viewController,
+                oldNextViewController !== newPreviousViewController,
+                oldNextViewController !== newNextViewController {
+                delegate?.removeViewController(oldNextViewController)
+            }
+        }
+
+        if let newPreviousViewController = newPreviousViewController {
+            if newPreviousViewController !== selectedViewController,
+                newPreviousViewController !== previousViewController,
+                newPreviousViewController !== nextViewController {
+                delegate?.addViewController(newPreviousViewController)
+            }
+        }
+
+        if viewController !== nextViewController,
+            viewController !== previousViewController {
+            delegate?.addViewController(viewController)
+        }
+
+        if let newNextViewController = newNextViewController {
+            if newNextViewController !== selectedViewController,
+                newNextViewController !== previousViewController,
+                newNextViewController !== nextViewController {
+                delegate?.addViewController(newNextViewController)
+            }
+        }
+
+        previousViewController = newPreviousViewController
+        selectedViewController = viewController
+        nextViewController = newNextViewController
+
+        layoutsViews()
+
+        if let oldSelectedViewController = oldSelectedViewController {
+            endAppearanceTransition(for: oldSelectedViewController)
+        }
+
+        if viewController !== oldSelectedViewController {
+            endAppearanceTransition(for: viewController)
+        }
     }
-  }
-  
-  private func willScrollReverse() {
-    if let selectedViewController = selectedViewController,
-      let previousViewController = previousViewController {
-      delegate?.willScroll(from: selectedViewController, to: previousViewController)
-      beginAppearanceTransition(true, for: previousViewController, animated: true)
-      beginAppearanceTransition(false, for: selectedViewController, animated: true)
+
+    private func resetState() {
+        if didReload {
+            initialDirection = .none
+        }
+        didReload = false
     }
-  }
-  
-  private func didScrollForward() {
-    guard
-      let oldSelectedViewController = selectedViewController,
-      let oldNextViewController = nextViewController else { return }
-    
-    delegate?.didFinishScrolling(
-      from: oldSelectedViewController,
-      to: oldNextViewController,
-      transitionSuccessful: true)
-    
-    let newNextViewController = dataSource?.viewControllerAfter(oldNextViewController)
-    
-    if let oldPreviousViewController = previousViewController {
-      if oldPreviousViewController !== newNextViewController {
-        delegate?.removeViewController(oldPreviousViewController)
-      }
+
+    private func onScroll(progress: CGFloat) {
+        // This means we are overshooting, so we need to continue
+        // reporting the old view controllers.
+        if didReload {
+            switch initialDirection {
+            case .forward:
+                if let previousViewController = previousViewController,
+                    let selectedViewController = selectedViewController {
+                    delegate?.isScrolling(
+                        from: previousViewController,
+                        to: selectedViewController,
+                        progress: progress
+                    )
+                }
+            case .reverse:
+                if let nextViewController = nextViewController,
+                    let selectedViewController = selectedViewController {
+                    delegate?.isScrolling(
+                        from: nextViewController,
+                        to: selectedViewController,
+                        progress: progress
+                    )
+                }
+            case .none:
+                break
+            }
+        } else {
+            // Report progress as normally
+            switch initialDirection {
+            case .forward:
+                if let selectedViewController = selectedViewController {
+                    delegate?.isScrolling(
+                        from: selectedViewController,
+                        to: nextViewController,
+                        progress: progress
+                    )
+                }
+            case .reverse:
+                if let selectedViewController = selectedViewController {
+                    delegate?.isScrolling(
+                        from: selectedViewController,
+                        to: previousViewController,
+                        progress: progress
+                    )
+                }
+            case .none:
+                break
+            }
+        }
     }
-    
-    if let newNextViewController = newNextViewController {
-      if newNextViewController !== previousViewController {
-        delegate?.addViewController(newNextViewController)
-      }
+
+    private func cancelScrollForward() {
+        guard let selectedViewController = selectedViewController else { return }
+        let oldNextViewController = nextViewController
+
+        if let nextViewController = oldNextViewController {
+            beginAppearanceTransition(true, for: selectedViewController, animated: true)
+            beginAppearanceTransition(false, for: nextViewController, animated: true)
+        }
+
+        if didSelect {
+            let newNextViewController = dataSource?.viewControllerAfter(selectedViewController)
+            if let oldNextViewController = oldNextViewController {
+                delegate?.removeViewController(oldNextViewController)
+            }
+            if let newNextViewController = newNextViewController {
+                delegate?.addViewController(newNextViewController)
+            }
+            nextViewController = newNextViewController
+            didSelect = false
+            layoutsViews()
+        }
+
+        if let oldNextViewController = oldNextViewController {
+            endAppearanceTransition(for: selectedViewController)
+            endAppearanceTransition(for: oldNextViewController)
+            delegate?.didFinishScrolling(
+                from: selectedViewController,
+                to: oldNextViewController,
+                transitionSuccessful: false
+            )
+        }
     }
-    
-    if didSelect {
-      let newPreviousViewController = dataSource?.viewControllerBefore(oldNextViewController)
-      if let oldSelectedViewController = selectedViewController {
-        delegate?.removeViewController(oldSelectedViewController)
-      }
-      if let newPreviousViewController = newPreviousViewController {
-        delegate?.addViewController(newPreviousViewController)
-      }
-      previousViewController = newPreviousViewController
-      didSelect = false
-    } else {
-      previousViewController = oldSelectedViewController
+
+    private func cancelScrollReverse() {
+        guard let selectedViewController = selectedViewController else { return }
+        let oldPreviousViewController = previousViewController
+
+        if let previousViewController = oldPreviousViewController {
+            beginAppearanceTransition(true, for: selectedViewController, animated: true)
+            beginAppearanceTransition(false, for: previousViewController, animated: true)
+        }
+
+        if didSelect {
+            let newPreviousViewController = dataSource?.viewControllerBefore(selectedViewController)
+            if let oldPreviousViewController = oldPreviousViewController {
+                delegate?.removeViewController(oldPreviousViewController)
+            }
+            if let newPreviousViewController = newPreviousViewController {
+                delegate?.addViewController(newPreviousViewController)
+            }
+            previousViewController = newPreviousViewController
+            didSelect = false
+            layoutsViews()
+        }
+
+        if let oldPreviousViewController = oldPreviousViewController {
+            endAppearanceTransition(for: selectedViewController)
+            endAppearanceTransition(for: oldPreviousViewController)
+            delegate?.didFinishScrolling(
+                from: selectedViewController,
+                to: oldPreviousViewController,
+                transitionSuccessful: false
+            )
+        }
     }
-    
-    selectedViewController = oldNextViewController
-    nextViewController = newNextViewController
-        
-    layoutsViews()
-    
-    endAppearanceTransition(for: oldSelectedViewController)
-    endAppearanceTransition(for: oldNextViewController)
-  }
-  
-  private func didScrollReverse() {
-    guard
-      let oldSelectedViewController = selectedViewController,
-      let oldPreviousViewController = previousViewController else { return }
-    
-    delegate?.didFinishScrolling(
-      from: oldSelectedViewController,
-      to: oldPreviousViewController,
-      transitionSuccessful: true)
-    
-    let newPreviousViewController = dataSource?.viewControllerBefore(oldPreviousViewController)
-    
-    if let oldNextViewController = nextViewController {
-      if oldNextViewController !== newPreviousViewController {
-        delegate?.removeViewController(oldNextViewController)
-      }
+
+    private func willScrollForward() {
+        if let selectedViewController = selectedViewController,
+            let nextViewController = nextViewController {
+            delegate?.willScroll(from: selectedViewController, to: nextViewController)
+            beginAppearanceTransition(true, for: nextViewController, animated: true)
+            beginAppearanceTransition(false, for: selectedViewController, animated: true)
+        }
     }
-    
-    if let newPreviousViewController = newPreviousViewController {
-      if newPreviousViewController !== nextViewController {
-        delegate?.addViewController(newPreviousViewController)
-      }
+
+    private func willScrollReverse() {
+        if let selectedViewController = selectedViewController,
+            let previousViewController = previousViewController {
+            delegate?.willScroll(from: selectedViewController, to: previousViewController)
+            beginAppearanceTransition(true, for: previousViewController, animated: true)
+            beginAppearanceTransition(false, for: selectedViewController, animated: true)
+        }
     }
-    
-    if didSelect {
-      let newNextViewController = dataSource?.viewControllerAfter(oldPreviousViewController)
-      if let oldSelectedViewController = selectedViewController {
-        delegate?.removeViewController(oldSelectedViewController)
-      }
-      if let newNextViewController = newNextViewController {
-        delegate?.addViewController(newNextViewController)
-      }
-      nextViewController = newNextViewController
-      didSelect = false
-    } else {
-      nextViewController = oldSelectedViewController
+
+    private func didScrollForward() {
+        guard
+            let oldSelectedViewController = selectedViewController,
+            let oldNextViewController = nextViewController else { return }
+
+        delegate?.didFinishScrolling(
+            from: oldSelectedViewController,
+            to: oldNextViewController,
+            transitionSuccessful: true
+        )
+
+        let newNextViewController = dataSource?.viewControllerAfter(oldNextViewController)
+
+        if let oldPreviousViewController = previousViewController {
+            if oldPreviousViewController !== newNextViewController {
+                delegate?.removeViewController(oldPreviousViewController)
+            }
+        }
+
+        if let newNextViewController = newNextViewController {
+            if newNextViewController !== previousViewController {
+                delegate?.addViewController(newNextViewController)
+            }
+        }
+
+        if didSelect {
+            let newPreviousViewController = dataSource?.viewControllerBefore(oldNextViewController)
+            if let oldSelectedViewController = selectedViewController {
+                delegate?.removeViewController(oldSelectedViewController)
+            }
+            if let newPreviousViewController = newPreviousViewController {
+                delegate?.addViewController(newPreviousViewController)
+            }
+            previousViewController = newPreviousViewController
+            didSelect = false
+        } else {
+            previousViewController = oldSelectedViewController
+        }
+
+        selectedViewController = oldNextViewController
+        nextViewController = newNextViewController
+
+        layoutsViews()
+
+        endAppearanceTransition(for: oldSelectedViewController)
+        endAppearanceTransition(for: oldNextViewController)
     }
-    
-    previousViewController = newPreviousViewController
-    selectedViewController = oldPreviousViewController
-    
-    layoutsViews()
-    
-    endAppearanceTransition(for: oldSelectedViewController)
-    endAppearanceTransition(for: oldPreviousViewController)
-  }
-  
-  private func layoutsViews(keepContentOffset: Bool = true) {
-    var viewControllers: [UIViewController] = []
-    
-    if let previousViewController = previousViewController {
-      viewControllers.append(previousViewController)
+
+    private func didScrollReverse() {
+        guard
+            let oldSelectedViewController = selectedViewController,
+            let oldPreviousViewController = previousViewController else { return }
+
+        delegate?.didFinishScrolling(
+            from: oldSelectedViewController,
+            to: oldPreviousViewController,
+            transitionSuccessful: true
+        )
+
+        let newPreviousViewController = dataSource?.viewControllerBefore(oldPreviousViewController)
+
+        if let oldNextViewController = nextViewController {
+            if oldNextViewController !== newPreviousViewController {
+                delegate?.removeViewController(oldNextViewController)
+            }
+        }
+
+        if let newPreviousViewController = newPreviousViewController {
+            if newPreviousViewController !== nextViewController {
+                delegate?.addViewController(newPreviousViewController)
+            }
+        }
+
+        if didSelect {
+            let newNextViewController = dataSource?.viewControllerAfter(oldPreviousViewController)
+            if let oldSelectedViewController = selectedViewController {
+                delegate?.removeViewController(oldSelectedViewController)
+            }
+            if let newNextViewController = newNextViewController {
+                delegate?.addViewController(newNextViewController)
+            }
+            nextViewController = newNextViewController
+            didSelect = false
+        } else {
+            nextViewController = oldSelectedViewController
+        }
+
+        previousViewController = newPreviousViewController
+        selectedViewController = oldPreviousViewController
+
+        layoutsViews()
+
+        endAppearanceTransition(for: oldSelectedViewController)
+        endAppearanceTransition(for: oldPreviousViewController)
     }
-    if let selectedViewController = selectedViewController {
-      viewControllers.append(selectedViewController)
+
+    private func layoutsViews(keepContentOffset: Bool = true) {
+        var viewControllers: [UIViewController] = []
+
+        if let previousViewController = previousViewController {
+            viewControllers.append(previousViewController)
+        }
+        if let selectedViewController = selectedViewController {
+            viewControllers.append(selectedViewController)
+        }
+        if let nextViewController = nextViewController {
+            viewControllers.append(nextViewController)
+        }
+
+        delegate?.layoutViews(for: viewControllers, keepContentOffset: keepContentOffset)
     }
-    if let nextViewController = nextViewController {
-      viewControllers.append(nextViewController)
+
+    private func beginAppearanceTransition(
+        _ isAppearing: Bool,
+        for viewController: UIViewController,
+        animated: Bool
+    ) {
+        switch appearanceState {
+        case .appeared:
+            delegate?.beginAppearanceTransition(
+                isAppearing: isAppearing,
+                viewController: viewController,
+                animated: animated
+            )
+        case let .appearing(animated):
+            // Override the given animated flag with the animated flag of
+            // the parent views appearance transition.
+            delegate?.beginAppearanceTransition(
+                isAppearing: isAppearing,
+                viewController: viewController,
+                animated: animated
+            )
+        case let .disappearing(animated):
+            // When the parent view is about to disappear we always set
+            // isAppearing to false.
+            delegate?.beginAppearanceTransition(
+                isAppearing: false,
+                viewController: viewController,
+                animated: animated
+            )
+        default:
+            break
+        }
     }
-    
-    delegate?.layoutViews(for: viewControllers, keepContentOffset: keepContentOffset)
-  }
-  
-  private func beginAppearanceTransition(
-    _ isAppearing: Bool,
-    for viewController: UIViewController,
-    animated: Bool) {
-    switch appearanceState {
-    case .appeared:
-      delegate?.beginAppearanceTransition(
-        isAppearing: isAppearing,
-        viewController: viewController,
-        animated: animated)
-    case let .appearing(animated):
-      // Override the given animated flag with the animated flag of
-      // the parent views appearance transition.
-      delegate?.beginAppearanceTransition(
-        isAppearing: isAppearing,
-        viewController: viewController,
-        animated: animated)
-    case let .disappearing(animated):
-      // When the parent view is about to disappear we always set
-      // isAppearing to false.
-      delegate?.beginAppearanceTransition(
-        isAppearing: false,
-        viewController: viewController,
-        animated: animated)
-    default:
-      break
+
+    private func endAppearanceTransition(for viewController: UIViewController) {
+        guard case .appeared = appearanceState else { return }
+        delegate?.endAppearanceTransition(viewController: viewController)
     }
-  }
-  
-  private func endAppearanceTransition(for viewController: UIViewController) {
-    guard case .appeared = appearanceState else { return }
-    delegate?.endAppearanceTransition(viewController: viewController)
-  }
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Classes/PagingBorderLayoutAttributes.swift b/OpenBook/Pods/Parchment/Parchment/Classes/PagingBorderLayoutAttributes.swift
index 1cf36455..57f5aad1 100644
--- a/OpenBook/Pods/Parchment/Parchment/Classes/PagingBorderLayoutAttributes.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Classes/PagingBorderLayoutAttributes.swift
@@ -1,49 +1,47 @@
 import UIKit
 
 open class PagingBorderLayoutAttributes: UICollectionViewLayoutAttributes {
-  
-  open var backgroundColor: UIColor?
-  open var insets: UIEdgeInsets = UIEdgeInsets()
-  
-  override open func copy(with zone: NSZone? = nil) -> Any {
-    let copy = super.copy(with: zone) as! PagingBorderLayoutAttributes
-    copy.backgroundColor = backgroundColor
-    copy.insets = insets
-    return copy
-  }
-  
-  override open func isEqual(_ object: Any?) -> Bool {
-    if let rhs = object as? PagingBorderLayoutAttributes {
-      if backgroundColor != rhs.backgroundColor || insets != rhs.insets {
-        return false
-      }
-      return super.isEqual(object)
-    } else {
-      return false
+    open var backgroundColor: UIColor?
+    open var insets: UIEdgeInsets = UIEdgeInsets()
+
+    open override func copy(with zone: NSZone? = nil) -> Any {
+        let copy = super.copy(with: zone) as! PagingBorderLayoutAttributes
+        copy.backgroundColor = backgroundColor
+        copy.insets = insets
+        return copy
+    }
+
+    open override func isEqual(_ object: Any?) -> Bool {
+        if let rhs = object as? PagingBorderLayoutAttributes {
+            if backgroundColor != rhs.backgroundColor || insets != rhs.insets {
+                return false
+            }
+            return super.isEqual(object)
+        } else {
+            return false
+        }
+    }
+
+    func configure(_ options: PagingOptions, safeAreaInsets _: UIEdgeInsets = .zero) {
+        if case let .visible(height, index, borderInsets) = options.borderOptions {
+            insets = borderInsets
+            backgroundColor = options.borderColor
+
+            switch options.menuPosition {
+            case .top:
+                frame.origin.y = options.menuHeight - height
+            case .bottom:
+                frame.origin.y = 0
+            }
+
+            frame.size.height = height
+            zIndex = index
+        }
     }
-  }
-  
-  func configure(_ options: PagingOptions, safeAreaInsets: UIEdgeInsets = .zero) {
-    if case let .visible(height, index, borderInsets) = options.borderOptions {
-      insets = borderInsets
-      backgroundColor = options.borderColor
-        
-      switch options.menuPosition {
-      case .top:
-        frame.origin.y = options.menuHeight - height
-      case .bottom:
-        frame.origin.y = 0
-      }
 
-      frame.size.height = height
-      zIndex = index
+    func update(contentSize: CGSize, bounds: CGRect, safeAreaInsets: UIEdgeInsets) {
+        let width = max(bounds.width, contentSize.width)
+        frame.size.width = width - insets.horizontal - safeAreaInsets.horizontal
+        frame.origin.x = insets.left + safeAreaInsets.left
     }
-  }
-  
-  func update(contentSize: CGSize, bounds: CGRect, safeAreaInsets: UIEdgeInsets) {
-    let width = max(bounds.width, contentSize.width)
-    frame.size.width = width - insets.horizontal - safeAreaInsets.horizontal
-    frame.origin.x = insets.left + safeAreaInsets.left
-  }
-  
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Classes/PagingBorderView.swift b/OpenBook/Pods/Parchment/Parchment/Classes/PagingBorderView.swift
index f03ead7b..0df3601a 100644
--- a/OpenBook/Pods/Parchment/Parchment/Classes/PagingBorderView.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Classes/PagingBorderView.swift
@@ -5,12 +5,10 @@ import UIKit
 /// type if you need further customization; just override the
 /// `borderClass` property in `PagingViewController`.
 open class PagingBorderView: UICollectionReusableView {
-  
-  override open func apply(_ layoutAttributes: UICollectionViewLayoutAttributes) {
-    super.apply(layoutAttributes)
-    if let attributes = layoutAttributes as? PagingBorderLayoutAttributes {
-      backgroundColor = attributes.backgroundColor
+    open override func apply(_ layoutAttributes: UICollectionViewLayoutAttributes) {
+        super.apply(layoutAttributes)
+        if let attributes = layoutAttributes as? PagingBorderLayoutAttributes {
+            backgroundColor = attributes.backgroundColor
+        }
     }
-  }
-  
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Classes/PagingCell.swift b/OpenBook/Pods/Parchment/Parchment/Classes/PagingCell.swift
index 78b22d3d..27b8c316 100644
--- a/OpenBook/Pods/Parchment/Parchment/Classes/PagingCell.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Classes/PagingCell.swift
@@ -4,18 +4,18 @@ import UIKit
 /// items. When creating your own custom cells, you need to subclass
 /// this type instead of `UICollectionViewCell` directly.
 open class PagingCell: UICollectionViewCell {
-  /// Called by the `PagingViewControllerDataSource` to customize the
-  /// cell with an instance conforming to `PagingItem`. You have to
-  /// override this method when creating your own subclass – the
-  /// default implementation will crash.
-  ///
-  /// - Parameter pagingItem: The `PagingItem` that is provided by the
-  /// data source.
-  /// - Parameter selected: A boolean to indicate whether the cell is
-  /// currently selected.
-  /// - Parameter options: The `PagingOptions` used to customize the
-  /// look and feel of the `PagingViewController.
-  open func setPagingItem(_ pagingItem: PagingItem, selected: Bool, options: PagingOptions) {
-    fatalError("setPagingItem: not implemented")
-  }
+    /// Called by the `PagingViewControllerDataSource` to customize the
+    /// cell with an instance conforming to `PagingItem`. You have to
+    /// override this method when creating your own subclass – the
+    /// default implementation will crash.
+    ///
+    /// - Parameter pagingItem: The `PagingItem` that is provided by the
+    /// data source.
+    /// - Parameter selected: A boolean to indicate whether the cell is
+    /// currently selected.
+    /// - Parameter options: The `PagingOptions` used to customize the
+    /// look and feel of the `PagingViewController.
+    open func setPagingItem(_: PagingItem, selected _: Bool, options _: PagingOptions) {
+        fatalError("setPagingItem: not implemented")
+    }
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Classes/PagingCellLayoutAttributes.swift b/OpenBook/Pods/Parchment/Parchment/Classes/PagingCellLayoutAttributes.swift
index 9bc5f041..4db57035 100644
--- a/OpenBook/Pods/Parchment/Parchment/Classes/PagingCellLayoutAttributes.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Classes/PagingCellLayoutAttributes.swift
@@ -3,24 +3,22 @@ import UIKit
 /// A custom `UICollectionViewLayoutAttributes` subclass that adds a
 /// `progress` property indicating how far the user has scrolled.
 open class PagingCellLayoutAttributes: UICollectionViewLayoutAttributes {
-  
-  open var progress: CGFloat = 0.0
-  
-  override open func copy(with zone: NSZone? = nil) -> Any {
-    let copy = super.copy(with: zone) as! PagingCellLayoutAttributes
-    copy.progress = progress
-    return copy
-  }
-  
-  override open func isEqual(_ object: Any?) -> Bool {
-    if let rhs = object as? PagingCellLayoutAttributes {
-      if progress != rhs.progress {
-        return false
-      }
-      return super.isEqual(object)
-    } else {
-      return false
+    open var progress: CGFloat = 0.0
+
+    open override func copy(with zone: NSZone? = nil) -> Any {
+        let copy = super.copy(with: zone) as! PagingCellLayoutAttributes
+        copy.progress = progress
+        return copy
     }
-  }
 
+    open override func isEqual(_ object: Any?) -> Bool {
+        if let rhs = object as? PagingCellLayoutAttributes {
+            if progress != rhs.progress {
+                return false
+            }
+            return super.isEqual(object)
+        } else {
+            return false
+        }
+    }
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Classes/PagingCollectionViewLayout.swift b/OpenBook/Pods/Parchment/Parchment/Classes/PagingCollectionViewLayout.swift
index 396af013..b4e820d7 100644
--- a/OpenBook/Pods/Parchment/Parchment/Classes/PagingCollectionViewLayout.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Classes/PagingCollectionViewLayout.swift
@@ -16,532 +16,541 @@ import UIKit
 /// updating the `indicatorLayoutAttributes` and
 /// `borderLayoutAttributes` properties.
 open class PagingCollectionViewLayout: UICollectionViewLayout, PagingLayout {
-  
-  // MARK: Public Properties
-  
-  /// An instance that stores all the customization that is applied
-  /// to the `PagingViewController`.
-  public var options = PagingOptions() {
-    didSet {
-      optionsChanged(oldValue: oldValue)
-    }
-  }
-  
-  /// The current state of the menu items. Indicates whether an item
-  /// is currently selected or is scrolling to another item. Can be
-  /// used to get the distance and progress of any ongoing transition.
-  public var state: PagingState = .empty
-  
-  /// The `PagingItem`'s that are currently visible in the collection
-  /// view. The items in this array are not necessarily the same as
-  /// the `visibleCells` property on `UICollectionView`.
-  public var visibleItems = PagingItems(items: [])
-  
-  /// A dictionary containing all the layout attributes for a given
-  /// `IndexPath`. This will be generated in the `prepare()` call when
-  /// the layout is invalidated with the correct invalidation context.
-  public private(set) var layoutAttributes: [IndexPath: PagingCellLayoutAttributes] = [:]
-  
-  /// The layout attributes for the selected item indicator. This is
-  /// updated whenever the layout is invalidated.
-  public private(set) var indicatorLayoutAttributes: PagingIndicatorLayoutAttributes?
-  
-  /// The layout attributes for the bottom border view. This is
-  /// updated whenever the layout is invalidated.
-  public private(set) var borderLayoutAttributes: PagingBorderLayoutAttributes?
-  
-  /// The `InvalidatedState` is used to represent what to invalidate
-  /// in a collection view layout based on the invalidation context.
-  public var invalidationState: InvalidationState = .everything
-  
-  open override var collectionViewContentSize: CGSize {
-    return contentSize
-  }
-  
-  override open class var layoutAttributesClass: AnyClass {
-    return PagingCellLayoutAttributes.self
-  }
-  
-  open override var flipsHorizontallyInOppositeLayoutDirection: Bool {
-      return true
-  }
-  
-  // MARK: Initializers
-  
-  public override required init() {
-    super.init()
-    configure()
-  }
-  
-  public required init?(coder: NSCoder) {
-    super.init(coder: coder)
-    configure()
-  }
-  
-  // MARK: Internal Properties
-  
-  internal var sizeCache: PagingSizeCache?
-  
-  // MARK: Private Properties
-  
-  private var view: UICollectionView {
-    return collectionView!
-  }
-  
-  private var range: Range<Int> {
-    return 0..<view.numberOfItems(inSection: 0)
-  }
-  
-  private var adjustedMenuInsets: UIEdgeInsets {
-    return UIEdgeInsets(
-      top: options.menuInsets.top,
-      left: options.menuInsets.left + safeAreaInsets.left,
-      bottom: options.menuInsets.bottom,
-      right: options.menuInsets.right + safeAreaInsets.right)
-  }
-  
-  private var safeAreaInsets: UIEdgeInsets {
-    if options.includeSafeAreaInsets, #available(iOS 11.0, *) {
-      return view.safeAreaInsets
-    } else {
-      return .zero
-    }
-  }
-  
-  /// Cache used to store the preferred item size for each self-sizing
-  /// cell. PagingItem identifier is used as the key.
-  private var preferredSizeCache: [Int: CGFloat] = [:]
-  
-  private(set) var contentInsets: UIEdgeInsets = .zero
-  private var contentSize: CGSize = .zero
-  private let PagingIndicatorKind = "PagingIndicatorKind"
-  private let PagingBorderKind = "PagingBorderKind"
-  
-  // MARK: Public Methods
-  
-  open override func prepare() {
-    super.prepare()
-    
-    switch invalidationState {
-    case .everything:
-      layoutAttributes = [:]
-      borderLayoutAttributes = nil
-      indicatorLayoutAttributes = nil
-      createLayoutAttributes()
-      createDecorationLayoutAttributes()
-    case .sizes:
-      layoutAttributes = [:]
-      createLayoutAttributes()
-    case .nothing:
-      break
-    }
-    
-    updateBorderLayoutAttributes()
-    updateIndicatorLayoutAttributes()
-    
-    invalidationState = .nothing
-  }
-  
-  open override func invalidateLayout() {
-    super.invalidateLayout()
-    invalidationState = .everything
-  }
-  
-  override open func invalidateLayout(with context: UICollectionViewLayoutInvalidationContext) {
-    super.invalidateLayout(with: context)
-    invalidationState = invalidationState + InvalidationState(context)
-  }
-  
-  override open func invalidationContext(forPreferredLayoutAttributes preferredAttributes: UICollectionViewLayoutAttributes, withOriginalAttributes originalAttributes: UICollectionViewLayoutAttributes) -> UICollectionViewLayoutInvalidationContext {
-    let context = PagingInvalidationContext()
-    context.invalidateSizes = true
-    return context
-  }
-  
-  override open func shouldInvalidateLayout(forPreferredLayoutAttributes preferredAttributes: UICollectionViewLayoutAttributes, withOriginalAttributes originalAttributes: UICollectionViewLayoutAttributes) -> Bool {
-    switch options.menuItemSize {
-    // Invalidate the layout and update the layout attributes with the
-    // preferred width for each cell. The preferred size is based on
-    // the layout constraints in each cell.
-    case .selfSizing where originalAttributes is PagingCellLayoutAttributes:
-      if preferredAttributes.frame.width != originalAttributes.frame.width {
-        let pagingItem = visibleItems.pagingItem(for: originalAttributes.indexPath)
-        preferredSizeCache[pagingItem.identifier] = preferredAttributes.frame.width
+    // MARK: Public Properties
+
+    /// An instance that stores all the customization that is applied
+    /// to the `PagingViewController`.
+    public var options = PagingOptions() {
+        didSet {
+            optionsChanged(oldValue: oldValue)
+        }
+    }
+
+    /// The current state of the menu items. Indicates whether an item
+    /// is currently selected or is scrolling to another item. Can be
+    /// used to get the distance and progress of any ongoing transition.
+    public var state: PagingState = .empty
+
+    /// The `PagingItem`'s that are currently visible in the collection
+    /// view. The items in this array are not necessarily the same as
+    /// the `visibleCells` property on `UICollectionView`.
+    public var visibleItems = PagingItems(items: [])
+
+    /// A dictionary containing all the layout attributes for a given
+    /// `IndexPath`. This will be generated in the `prepare()` call when
+    /// the layout is invalidated with the correct invalidation context.
+    public private(set) var layoutAttributes: [IndexPath: PagingCellLayoutAttributes] = [:]
+
+    /// The layout attributes for the selected item indicator. This is
+    /// updated whenever the layout is invalidated.
+    public private(set) var indicatorLayoutAttributes: PagingIndicatorLayoutAttributes?
+
+    /// The layout attributes for the bottom border view. This is
+    /// updated whenever the layout is invalidated.
+    public private(set) var borderLayoutAttributes: PagingBorderLayoutAttributes?
+
+    /// The `InvalidatedState` is used to represent what to invalidate
+    /// in a collection view layout based on the invalidation context.
+    public var invalidationState: InvalidationState = .everything
+
+    open override var collectionViewContentSize: CGSize {
+        return contentSize
+    }
+
+    open override class var layoutAttributesClass: AnyClass {
+        return PagingCellLayoutAttributes.self
+    }
+
+    open override var flipsHorizontallyInOppositeLayoutDirection: Bool {
         return true
-      }
-      return false
-    default:
-      return false
-    }
-  }
-  
-  override open func layoutAttributesForItem(at indexPath: IndexPath) -> UICollectionViewLayoutAttributes? {
-    guard let layoutAttributes = self.layoutAttributes[indexPath] else { return nil }
-    layoutAttributes.progress = progressForItem(at: layoutAttributes.indexPath)
-    return layoutAttributes
-  }
-  
-  open override func layoutAttributesForDecorationView(ofKind elementKind: String, at indexPath: IndexPath) -> UICollectionViewLayoutAttributes? {
-    switch (elementKind) {
-    case PagingIndicatorKind:
-      return indicatorLayoutAttributes
-    case PagingBorderKind:
-      return borderLayoutAttributes
-    default:
-      return super.layoutAttributesForDecorationView(ofKind: elementKind, at: indexPath)
-    }
-  }
-  
-  override open func layoutAttributesForElements(in rect: CGRect) -> [UICollectionViewLayoutAttributes]? {
-    var layoutAttributes: [UICollectionViewLayoutAttributes] = Array(self.layoutAttributes.values)
-    
-    for attributes in layoutAttributes {
-      if let pagingAttributes = attributes as? PagingCellLayoutAttributes {
-        pagingAttributes.progress = progressForItem(at: attributes.indexPath)
-      }
-    }
-    
-    let indicatorAttributes = layoutAttributesForDecorationView(
-      ofKind: PagingIndicatorKind,
-      at: IndexPath(item: 0, section: 0))
-    
-    let borderAttributes = layoutAttributesForDecorationView(
-      ofKind: PagingBorderKind,
-      at: IndexPath(item: 1, section: 0))
-    
-    if let indicatorAttributes = indicatorAttributes {
-      layoutAttributes.append(indicatorAttributes)
-    }
-    
-    if let borderAttributes = borderAttributes {
-      layoutAttributes.append(borderAttributes)
-    }
-    
-    return layoutAttributes
-  }
-
-  // MARK: Private Methods
-  
-  private func optionsChanged(oldValue: PagingOptions) {
-    var shouldInvalidateLayout: Bool = false
-    
-    if options.borderClass != oldValue.borderClass {
-      registerBorderClass()
-      shouldInvalidateLayout = true
-    }
-    
-    if options.indicatorClass != oldValue.indicatorClass {
-      registerIndicatorClass()
-      shouldInvalidateLayout = true
-    }
-    
-    if options.borderColor != oldValue.borderColor {
-      shouldInvalidateLayout = true
-    }
-    
-    if options.indicatorColor != oldValue.indicatorColor {
-      shouldInvalidateLayout = true
-    }
-    
-    if shouldInvalidateLayout {
-      invalidateLayout()
-    }
-  }
-  
-  private func configure() {
-    registerBorderClass()
-    registerIndicatorClass()
-  }
-  
-  private func registerIndicatorClass() {
-    register(options.indicatorClass, forDecorationViewOfKind: PagingIndicatorKind)
-  }
-  
-  private func registerBorderClass() {
-    register(options.borderClass, forDecorationViewOfKind: PagingBorderKind)
-  }
-  
-  private func createLayoutAttributes() {
-    guard let sizeCache = sizeCache else { return }
-    
-    var layoutAttributes: [IndexPath: PagingCellLayoutAttributes] = [:]
-    var previousFrame: CGRect = .zero
-    previousFrame.origin.x = adjustedMenuInsets.left - options.menuItemSpacing
-    
-    for index in 0..<self.view.numberOfItems(inSection: 0) {
-      
-      let indexPath = IndexPath(item: index, section: 0)
-      let attributes = PagingCellLayoutAttributes(forCellWith: indexPath)
-      let x = previousFrame.maxX + options.menuItemSpacing
-      let y = adjustedMenuInsets.top
-      let pagingItem = visibleItems.pagingItem(for: indexPath)
-      
-      if sizeCache.implementsSizeDelegate {
-        var width = sizeCache.itemSize(for: pagingItem)
-        let selectedWidth = sizeCache.itemWidthSelected(for: pagingItem)
-        
-        if let currentPagingItem = state.currentPagingItem, currentPagingItem.isEqual(to: pagingItem) {
-          width = tween(from: selectedWidth, to: width, progress: abs(state.progress))
-        } else if let upcomingPagingItem = state.upcomingPagingItem, upcomingPagingItem.isEqual(to: pagingItem) {
-          width = tween(from: width, to: selectedWidth, progress: abs(state.progress))
+    }
+
+    // MARK: Initializers
+
+    public required override init() {
+        super.init()
+        configure()
+    }
+
+    public required init?(coder: NSCoder) {
+        super.init(coder: coder)
+        configure()
+    }
+
+    // MARK: Internal Properties
+
+    internal var sizeCache: PagingSizeCache?
+
+    // MARK: Private Properties
+
+    private var view: UICollectionView {
+        return collectionView!
+    }
+
+    private var range: Range<Int> {
+        return 0 ..< view.numberOfItems(inSection: 0)
+    }
+
+    private var adjustedMenuInsets: UIEdgeInsets {
+        return UIEdgeInsets(
+            top: options.menuInsets.top,
+            left: options.menuInsets.left + safeAreaInsets.left,
+            bottom: options.menuInsets.bottom,
+            right: options.menuInsets.right + safeAreaInsets.right
+        )
+    }
+
+    private var safeAreaInsets: UIEdgeInsets {
+        if options.includeSafeAreaInsets, #available(iOS 11.0, *) {
+            return view.safeAreaInsets
+        } else {
+            return .zero
         }
-        
-        attributes.frame = CGRect(x: x, y: y, width: width, height: options.menuItemSize.height)
-      } else {
-        switch (options.menuItemSize) {
-        case let .fixed(width, height):
-          attributes.frame = CGRect(x: x, y: y, width: width, height: height)
-        case let .sizeToFit(minWidth, height):
-          attributes.frame = CGRect(x: x, y: y, width: minWidth, height: height)
-        case let .selfSizing(estimatedWidth, height):
-          if let actualWidth = preferredSizeCache[pagingItem.identifier] {
-            attributes.frame = CGRect(x: x, y: y, width: actualWidth, height: height)
-          } else {
-            attributes.frame = CGRect(x: x, y: y, width: estimatedWidth, height: height)
-          }
+    }
+
+    /// Cache used to store the preferred item size for each self-sizing
+    /// cell. PagingItem identifier is used as the key.
+    private var preferredSizeCache: [Int: CGFloat] = [:]
+
+    private(set) var contentInsets: UIEdgeInsets = .zero
+    private var contentSize: CGSize = .zero
+    private let PagingIndicatorKind = "PagingIndicatorKind"
+    private let PagingBorderKind = "PagingBorderKind"
+
+    // MARK: Public Methods
+
+    open override func prepare() {
+        super.prepare()
+
+        switch invalidationState {
+        case .everything:
+            layoutAttributes = [:]
+            borderLayoutAttributes = nil
+            indicatorLayoutAttributes = nil
+            createLayoutAttributes()
+            createDecorationLayoutAttributes()
+        case .sizes:
+            layoutAttributes = [:]
+            createLayoutAttributes()
+        case .nothing:
+            break
         }
-      }
-      
-      previousFrame = attributes.frame
-      layoutAttributes[indexPath] = attributes
-    }
-    
-    // When the menu items all can fit inside the bounds we need to
-    // reposition the items based on the current options
-    if previousFrame.maxX - adjustedMenuInsets.left < view.bounds.width {
-      
-      switch (options.menuItemSize) {
-      case let .sizeToFit(_, height) where sizeCache.implementsSizeDelegate == false:
-        let insets = adjustedMenuInsets.left + adjustedMenuInsets.right
-        let spacing = (options.menuItemSpacing * CGFloat(range.upperBound - 1))
-        let width = (view.bounds.width - insets - spacing) / CGFloat(range.upperBound)
-        previousFrame = .zero
+
+        updateBorderLayoutAttributes()
+        updateIndicatorLayoutAttributes()
+
+        invalidationState = .nothing
+    }
+
+    open override func invalidateLayout() {
+        super.invalidateLayout()
+        invalidationState = .everything
+    }
+
+    open override func invalidateLayout(with context: UICollectionViewLayoutInvalidationContext) {
+        super.invalidateLayout(with: context)
+        invalidationState = invalidationState + InvalidationState(context)
+    }
+
+    open override func invalidationContext(forPreferredLayoutAttributes _: UICollectionViewLayoutAttributes, withOriginalAttributes _: UICollectionViewLayoutAttributes) -> UICollectionViewLayoutInvalidationContext {
+        let context = PagingInvalidationContext()
+        context.invalidateSizes = true
+        return context
+    }
+
+    open override func shouldInvalidateLayout(forPreferredLayoutAttributes preferredAttributes: UICollectionViewLayoutAttributes, withOriginalAttributes originalAttributes: UICollectionViewLayoutAttributes) -> Bool {
+        switch options.menuItemSize {
+        // Invalidate the layout and update the layout attributes with the
+        // preferred width for each cell. The preferred size is based on
+        // the layout constraints in each cell.
+        case .selfSizing where originalAttributes is PagingCellLayoutAttributes:
+            if preferredAttributes.frame.width != originalAttributes.frame.width {
+                let pagingItem = visibleItems.pagingItem(for: originalAttributes.indexPath)
+                preferredSizeCache[pagingItem.identifier] = preferredAttributes.frame.width
+                return true
+            }
+            return false
+        default:
+            return false
+        }
+    }
+
+    open override func layoutAttributesForItem(at indexPath: IndexPath) -> UICollectionViewLayoutAttributes? {
+        guard let layoutAttributes = self.layoutAttributes[indexPath] else { return nil }
+        layoutAttributes.progress = progressForItem(at: layoutAttributes.indexPath)
+        return layoutAttributes
+    }
+
+    open override func layoutAttributesForDecorationView(ofKind elementKind: String, at indexPath: IndexPath) -> UICollectionViewLayoutAttributes? {
+        switch elementKind {
+        case PagingIndicatorKind:
+            return indicatorLayoutAttributes
+        case PagingBorderKind:
+            return borderLayoutAttributes
+        default:
+            return super.layoutAttributesForDecorationView(ofKind: elementKind, at: indexPath)
+        }
+    }
+
+    open override func layoutAttributesForElements(in _: CGRect) -> [UICollectionViewLayoutAttributes]? {
+        var layoutAttributes: [UICollectionViewLayoutAttributes] = Array(self.layoutAttributes.values)
+
+        for attributes in layoutAttributes {
+            if let pagingAttributes = attributes as? PagingCellLayoutAttributes {
+                pagingAttributes.progress = progressForItem(at: attributes.indexPath)
+            }
+        }
+
+        let indicatorAttributes = layoutAttributesForDecorationView(
+            ofKind: PagingIndicatorKind,
+            at: IndexPath(item: 0, section: 0)
+        )
+
+        let borderAttributes = layoutAttributesForDecorationView(
+            ofKind: PagingBorderKind,
+            at: IndexPath(item: 1, section: 0)
+        )
+
+        if let indicatorAttributes = indicatorAttributes {
+            layoutAttributes.append(indicatorAttributes)
+        }
+
+        if let borderAttributes = borderAttributes {
+            layoutAttributes.append(borderAttributes)
+        }
+
+        return layoutAttributes
+    }
+
+    // MARK: Private Methods
+
+    private func optionsChanged(oldValue: PagingOptions) {
+        var shouldInvalidateLayout: Bool = false
+
+        if options.borderClass != oldValue.borderClass {
+            registerBorderClass()
+            shouldInvalidateLayout = true
+        }
+
+        if options.indicatorClass != oldValue.indicatorClass {
+            registerIndicatorClass()
+            shouldInvalidateLayout = true
+        }
+
+        if options.borderColor != oldValue.borderColor {
+            shouldInvalidateLayout = true
+        }
+
+        if options.indicatorColor != oldValue.indicatorColor {
+            shouldInvalidateLayout = true
+        }
+
+        if shouldInvalidateLayout {
+            invalidateLayout()
+        }
+    }
+
+    private func configure() {
+        registerBorderClass()
+        registerIndicatorClass()
+    }
+
+    private func registerIndicatorClass() {
+        register(options.indicatorClass, forDecorationViewOfKind: PagingIndicatorKind)
+    }
+
+    private func registerBorderClass() {
+        register(options.borderClass, forDecorationViewOfKind: PagingBorderKind)
+    }
+
+    private func createLayoutAttributes() {
+        guard let sizeCache = sizeCache else { return }
+
+        var layoutAttributes: [IndexPath: PagingCellLayoutAttributes] = [:]
+        var previousFrame: CGRect = .zero
         previousFrame.origin.x = adjustedMenuInsets.left - options.menuItemSpacing
-        
-        for attributes in layoutAttributes.values.sorted(by: { $0.indexPath < $1.indexPath }) {
-          let x = previousFrame.maxX + options.menuItemSpacing
-          let y = adjustedMenuInsets.top
-          attributes.frame = CGRect(x: x, y: y, width: width, height: height)
-          previousFrame = attributes.frame
+
+        for index in 0 ..< view.numberOfItems(inSection: 0) {
+            let indexPath = IndexPath(item: index, section: 0)
+            let attributes = PagingCellLayoutAttributes(forCellWith: indexPath)
+            let x = previousFrame.maxX + options.menuItemSpacing
+            let y = adjustedMenuInsets.top
+            let pagingItem = visibleItems.pagingItem(for: indexPath)
+
+            if sizeCache.implementsSizeDelegate {
+                var width = sizeCache.itemSize(for: pagingItem)
+                let selectedWidth = sizeCache.itemWidthSelected(for: pagingItem)
+
+                if let currentPagingItem = state.currentPagingItem, currentPagingItem.isEqual(to: pagingItem) {
+                    width = tween(from: selectedWidth, to: width, progress: abs(state.progress))
+                } else if let upcomingPagingItem = state.upcomingPagingItem, upcomingPagingItem.isEqual(to: pagingItem) {
+                    width = tween(from: width, to: selectedWidth, progress: abs(state.progress))
+                }
+
+                attributes.frame = CGRect(x: x, y: y, width: width, height: options.menuItemSize.height)
+            } else {
+                switch options.menuItemSize {
+                case let .fixed(width, height):
+                    attributes.frame = CGRect(x: x, y: y, width: width, height: height)
+                case let .sizeToFit(minWidth, height):
+                    attributes.frame = CGRect(x: x, y: y, width: minWidth, height: height)
+                case let .selfSizing(estimatedWidth, height):
+                    if let actualWidth = preferredSizeCache[pagingItem.identifier] {
+                        attributes.frame = CGRect(x: x, y: y, width: actualWidth, height: height)
+                    } else {
+                        attributes.frame = CGRect(x: x, y: y, width: estimatedWidth, height: height)
+                    }
+                }
+            }
+
+            previousFrame = attributes.frame
+            layoutAttributes[indexPath] = attributes
+        }
+
+        // When the menu items all can fit inside the bounds we need to
+        // reposition the items based on the current options
+        if previousFrame.maxX - adjustedMenuInsets.left < view.bounds.width {
+            switch options.menuItemSize {
+            case let .sizeToFit(_, height) where sizeCache.implementsSizeDelegate == false:
+                let insets = adjustedMenuInsets.left + adjustedMenuInsets.right
+                let spacing = (options.menuItemSpacing * CGFloat(range.upperBound - 1))
+                let width = (view.bounds.width - insets - spacing) / CGFloat(range.upperBound)
+                previousFrame = .zero
+                previousFrame.origin.x = adjustedMenuInsets.left - options.menuItemSpacing
+
+                for attributes in layoutAttributes.values.sorted(by: { $0.indexPath < $1.indexPath }) {
+                    let x = previousFrame.maxX + options.menuItemSpacing
+                    let y = adjustedMenuInsets.top
+                    attributes.frame = CGRect(x: x, y: y, width: width, height: height)
+                    previousFrame = attributes.frame
+                }
+
+            // When using sizeToFit the content will always be as wide as
+            // the bounds so there is not possible to center the items. In
+            // all the other cases we want to center them if the menu
+            // alignment is set to .center
+            default:
+                if case .center = options.menuHorizontalAlignment {
+                    // Subtract the menu insets as they should not have an effect on
+                    // whether or not we should center the items.
+                    let offset = (view.bounds.width - previousFrame.maxX - adjustedMenuInsets.left) / 2
+                    for attributes in layoutAttributes.values {
+                        attributes.frame = attributes.frame.offsetBy(dx: offset, dy: 0)
+                    }
+                }
+            }
+        }
+
+        if case .center = options.selectedScrollPosition {
+            let attributes = layoutAttributes.values.sorted(by: { $0.indexPath < $1.indexPath })
+
+            if let first = attributes.first, let last = attributes.last {
+                let insetLeft = (view.bounds.width / 2) - (first.bounds.width / 2)
+                let insetRight = (view.bounds.width / 2) - (last.bounds.width / 2)
+
+                for attributes in layoutAttributes.values {
+                    attributes.frame = attributes.frame.offsetBy(dx: insetLeft, dy: 0)
+                }
+
+                contentInsets = UIEdgeInsets(
+                    top: 0,
+                    left: insetLeft + adjustedMenuInsets.left,
+                    bottom: 0,
+                    right: insetRight + adjustedMenuInsets.right
+                )
+
+                contentSize = CGSize(
+                    width: previousFrame.maxX + insetLeft + insetRight + adjustedMenuInsets.right,
+                    height: view.bounds.height
+                )
+            }
+
+        } else {
+            contentInsets = adjustedMenuInsets
+            contentSize = CGSize(
+                width: previousFrame.maxX + adjustedMenuInsets.right,
+                height: view.bounds.height
+            )
+        }
+
+        self.layoutAttributes = layoutAttributes
+    }
+
+    private func createDecorationLayoutAttributes() {
+        if case .visible = options.indicatorOptions {
+            indicatorLayoutAttributes = PagingIndicatorLayoutAttributes(
+                forDecorationViewOfKind: PagingIndicatorKind,
+                with: IndexPath(item: 0, section: 0)
+            )
+        }
+
+        if case .visible = options.borderOptions {
+            borderLayoutAttributes = PagingBorderLayoutAttributes(
+                forDecorationViewOfKind: PagingBorderKind,
+                with: IndexPath(item: 1, section: 0)
+            )
+        }
+    }
+
+    private func updateBorderLayoutAttributes() {
+        borderLayoutAttributes?.configure(options)
+        borderLayoutAttributes?.update(
+            contentSize: collectionViewContentSize,
+            bounds: collectionView?.bounds ?? .zero,
+            safeAreaInsets: safeAreaInsets
+        )
+    }
+
+    private func updateIndicatorLayoutAttributes() {
+        guard let currentPagingItem = state.currentPagingItem else { return }
+        indicatorLayoutAttributes?.configure(options)
+
+        let currentIndexPath = visibleItems.indexPath(for: currentPagingItem)
+        let upcomingIndexPath = upcomingIndexPathForIndexPath(currentIndexPath)
+
+        if let upcomingIndexPath = upcomingIndexPath {
+            let progress = abs(state.progress)
+            let to = PagingIndicatorMetric(
+                frame: indicatorFrameForIndex(upcomingIndexPath.item),
+                insets: indicatorInsetsForIndex(upcomingIndexPath.item),
+                spacing: indicatorSpacingForIndex(upcomingIndexPath.item)
+            )
+
+            if let currentIndexPath = currentIndexPath {
+                let from = PagingIndicatorMetric(
+                    frame: indicatorFrameForIndex(currentIndexPath.item),
+                    insets: indicatorInsetsForIndex(currentIndexPath.item),
+                    spacing: indicatorSpacingForIndex(currentIndexPath.item)
+                )
+
+                indicatorLayoutAttributes?.update(from: from, to: to, progress: progress)
+            } else if let from = indicatorMetricForFirstItem() {
+                indicatorLayoutAttributes?.update(from: from, to: to, progress: progress)
+            } else if let from = indicatorMetricForLastItem() {
+                indicatorLayoutAttributes?.update(from: from, to: to, progress: progress)
+            }
+        } else if let metric = indicatorMetricForFirstItem() {
+            indicatorLayoutAttributes?.update(to: metric)
+        } else if let metric = indicatorMetricForLastItem() {
+            indicatorLayoutAttributes?.update(to: metric)
+        }
+    }
+
+    private func indicatorMetricForFirstItem() -> PagingIndicatorMetric? {
+        guard let currentPagingItem = state.currentPagingItem else { return nil }
+        if let first = visibleItems.items.first {
+            if currentPagingItem.isBefore(item: first) {
+                return PagingIndicatorMetric(
+                    frame: indicatorFrameForIndex(-1),
+                    insets: indicatorInsetsForIndex(-1),
+                    spacing: indicatorSpacingForIndex(-1)
+                )
+            }
+        }
+        return nil
+    }
+
+    private func indicatorMetricForLastItem() -> PagingIndicatorMetric? {
+        guard let currentPagingItem = state.currentPagingItem else { return nil }
+        if let last = visibleItems.items.last {
+            if last.isBefore(item: currentPagingItem) {
+                return PagingIndicatorMetric(
+                    frame: indicatorFrameForIndex(visibleItems.items.count),
+                    insets: indicatorInsetsForIndex(visibleItems.items.count),
+                    spacing: indicatorSpacingForIndex(visibleItems.items.count)
+                )
+            }
+        }
+        return nil
+    }
+
+    private func progressForItem(at indexPath: IndexPath) -> CGFloat {
+        guard let currentPagingItem = state.currentPagingItem else { return 0 }
+
+        let currentIndexPath = visibleItems.indexPath(for: currentPagingItem)
+
+        if let currentIndexPath = currentIndexPath {
+            if indexPath.item == currentIndexPath.item {
+                return 1 - abs(state.progress)
+            }
         }
-        
-      // When using sizeToFit the content will always be as wide as
-      // the bounds so there is not possible to center the items. In
-      // all the other cases we want to center them if the menu
-      // alignment is set to .center
-      default:
-        if case .center = options.menuHorizontalAlignment {
-          
-          // Subtract the menu insets as they should not have an effect on
-          // whether or not we should center the items.
-          let offset = (view.bounds.width - previousFrame.maxX - adjustedMenuInsets.left) / 2
-          for attributes in layoutAttributes.values {
-            attributes.frame = attributes.frame.offsetBy(dx: offset, dy: 0)
-          }
+
+        if let upcomingIndexPath = upcomingIndexPathForIndexPath(currentIndexPath) {
+            if indexPath.item == upcomingIndexPath.item {
+                return abs(state.progress)
+            }
+        }
+
+        return 0
+    }
+
+    private func upcomingIndexPathForIndexPath(_ indexPath: IndexPath?) -> IndexPath? {
+        if let upcomingPagingItem = state.upcomingPagingItem, let upcomingIndexPath = visibleItems.indexPath(for: upcomingPagingItem) {
+            return upcomingIndexPath
+        } else if let indexPath = indexPath {
+            if indexPath.item == range.lowerBound {
+                return IndexPath(item: indexPath.item - 1, section: 0)
+            } else if indexPath.item == range.upperBound - 1 {
+                return IndexPath(item: indexPath.item + 1, section: 0)
+            }
         }
-      }
-    }
-    
-    if case .center = options.selectedScrollPosition {
-      let attributes = layoutAttributes.values.sorted(by: { $0.indexPath < $1.indexPath })
-      
-      if let first = attributes.first, let last = attributes.last {
-        let insetLeft = (view.bounds.width / 2) - (first.bounds.width / 2)
-        let insetRight = (view.bounds.width / 2) - (last.bounds.width / 2)
-        
-        for attributes in layoutAttributes.values {
-          attributes.frame = attributes.frame.offsetBy(dx: insetLeft, dy: 0)
+        return indexPath
+    }
+
+    private func indicatorSpacingForIndex(_: Int) -> UIEdgeInsets {
+        if case let .visible(_, _, insets, _) = options.indicatorOptions {
+            return insets
+        }
+        return UIEdgeInsets.zero
+    }
+
+    private func indicatorInsetsForIndex(_ index: Int) -> PagingIndicatorMetric.Inset {
+        if case let .visible(_, _, _, insets) = options.indicatorOptions {
+            if index == 0, range.upperBound == 1 {
+                return .both(insets.left, insets.right)
+            } else if index == range.lowerBound {
+                return .left(insets.left)
+            } else if index >= range.upperBound - 1 {
+                return .right(insets.right)
+            }
         }
-        
-        contentInsets = UIEdgeInsets(
-          top: 0,
-          left: insetLeft + adjustedMenuInsets.left,
-          bottom: 0,
-          right: insetRight + adjustedMenuInsets.right)
-        
-        contentSize = CGSize(
-          width: previousFrame.maxX + insetLeft + insetRight + adjustedMenuInsets.right,
-          height: view.bounds.height)
-      }
-      
-    } else {
-      contentInsets = adjustedMenuInsets
-      contentSize = CGSize(
-        width: previousFrame.maxX + adjustedMenuInsets.right,
-        height: view.bounds.height)
-    }
-    
-    
-    self.layoutAttributes = layoutAttributes
-  }
-  
-  private func createDecorationLayoutAttributes() {
-    if case .visible = options.indicatorOptions {
-      indicatorLayoutAttributes = PagingIndicatorLayoutAttributes(
-        forDecorationViewOfKind: PagingIndicatorKind,
-        with: IndexPath(item: 0, section: 0))
-    }
-    
-    if case .visible = options.borderOptions {
-      borderLayoutAttributes = PagingBorderLayoutAttributes(
-        forDecorationViewOfKind: PagingBorderKind,
-        with: IndexPath(item: 1, section: 0))
-    }
-  }
-  
-  private func updateBorderLayoutAttributes() {
-    borderLayoutAttributes?.configure(options)
-    borderLayoutAttributes?.update(
-      contentSize: collectionViewContentSize,
-      bounds: collectionView?.bounds ?? .zero,
-      safeAreaInsets: safeAreaInsets)
-  }
-  
-  private func updateIndicatorLayoutAttributes() {
-    guard let currentPagingItem = state.currentPagingItem else { return }
-    indicatorLayoutAttributes?.configure(options)
-    
-    let currentIndexPath = visibleItems.indexPath(for: currentPagingItem)
-    let upcomingIndexPath = upcomingIndexPathForIndexPath(currentIndexPath)
-    
-    if let upcomingIndexPath = upcomingIndexPath {
-      let progress = abs(state.progress)
-      let to = PagingIndicatorMetric(
-        frame: indicatorFrameForIndex(upcomingIndexPath.item),
-        insets: indicatorInsetsForIndex(upcomingIndexPath.item),
-        spacing: indicatorSpacingForIndex(upcomingIndexPath.item))
-      
-      if let currentIndexPath = currentIndexPath {
-        let from = PagingIndicatorMetric(
-          frame: indicatorFrameForIndex(currentIndexPath.item),
-          insets: indicatorInsetsForIndex(currentIndexPath.item),
-          spacing: indicatorSpacingForIndex(currentIndexPath.item))
-        
-        indicatorLayoutAttributes?.update(from: from, to: to, progress: progress)
-      } else if let from = indicatorMetricForFirstItem() {
-        indicatorLayoutAttributes?.update(from: from, to: to, progress: progress)
-      } else if let from = indicatorMetricForLastItem() {
-        indicatorLayoutAttributes?.update(from: from, to: to, progress: progress)
-      }
-    } else if let metric = indicatorMetricForFirstItem() {
-      indicatorLayoutAttributes?.update(to: metric)
-    } else if let metric = indicatorMetricForLastItem() {
-      indicatorLayoutAttributes?.update(to: metric)
-    }
-  }
-  
-  private func indicatorMetricForFirstItem() -> PagingIndicatorMetric? {
-    guard let currentPagingItem = state.currentPagingItem else { return nil }
-    if let first = visibleItems.items.first {
-      if currentPagingItem.isBefore(item: first) {
-        return PagingIndicatorMetric(
-          frame: indicatorFrameForIndex(-1),
-          insets: indicatorInsetsForIndex(-1),
-          spacing: indicatorSpacingForIndex(-1))
-      }
-    }
-    return nil
-  }
-  
-  private func indicatorMetricForLastItem() -> PagingIndicatorMetric? {
-    guard let currentPagingItem = state.currentPagingItem else { return nil }
-    if let last = visibleItems.items.last {
-      if last.isBefore(item: currentPagingItem) {
-        return PagingIndicatorMetric(
-          frame: indicatorFrameForIndex(visibleItems.items.count),
-          insets: indicatorInsetsForIndex(visibleItems.items.count),
-          spacing: indicatorSpacingForIndex(visibleItems.items.count))
-      }
-    }
-    return nil
-  }
-  
-  private func progressForItem(at indexPath: IndexPath) -> CGFloat {
-    guard let currentPagingItem = state.currentPagingItem else { return 0 }
-    
-    let currentIndexPath = visibleItems.indexPath(for: currentPagingItem)
-    
-    if let currentIndexPath = currentIndexPath {
-      if indexPath.item == currentIndexPath.item {
-        return 1 - abs(state.progress)
-      }
-    }
-    
-    if let upcomingIndexPath = upcomingIndexPathForIndexPath(currentIndexPath) {
-      if indexPath.item == upcomingIndexPath.item {
-        return abs(state.progress)
-      }
-    }
-    
-    return 0
-  }
-  
-  private func upcomingIndexPathForIndexPath(_ indexPath: IndexPath?) -> IndexPath? {
-    if let upcomingPagingItem = state.upcomingPagingItem, let upcomingIndexPath = visibleItems.indexPath(for: upcomingPagingItem) {
-      return upcomingIndexPath
-    } else if let indexPath = indexPath {
-      if indexPath.item == range.lowerBound {
-        return IndexPath(item: indexPath.item - 1, section: 0)
-      } else if indexPath.item == range.upperBound - 1 {
-        return IndexPath(item: indexPath.item + 1, section: 0)
-      }
-    }
-    return indexPath
-  }
-    
-  private func indicatorSpacingForIndex(_ index: Int) -> UIEdgeInsets {
-    if case let .visible(_, _, insets, _) = options.indicatorOptions {
-      return insets
-    }
-    return UIEdgeInsets.zero
-  }
-  
-  private func indicatorInsetsForIndex(_ index: Int) -> PagingIndicatorMetric.Inset {
-    if case let .visible(_, _, _, insets) = options.indicatorOptions {
-      if index == 0 && range.upperBound == 1 {
-        return .both(insets.left, insets.right)
-      } else if index == range.lowerBound {
-        return .left(insets.left)
-      } else if index >= range.upperBound - 1 {
-        return .right(insets.right)
-      }
-    }
-    return .none
-  }
-  
-  private func indicatorFrameForIndex(_ index: Int) -> CGRect {
-    if index < range.lowerBound {
-      let frame = frameForIndex(0)
-      return frame.offsetBy(dx: -frame.width, dy: 0)
-    } else if index > range.upperBound - 1 {
-      let frame = frameForIndex(visibleItems.items.count - 1)
-      return frame.offsetBy(dx: frame.width, dy: 0)
-    }
-    
-    return frameForIndex(index)
-  }
-  
-  private func frameForIndex(_ index: Int) -> CGRect {
-    guard
-      let sizeCache = sizeCache,
-      let attributes = layoutAttributes[IndexPath(item: index, section: 0)] else { return .zero }
-    
-    var frame = CGRect(
-      x: attributes.center.x - attributes.bounds.midX,
-      y: attributes.center.y - attributes.bounds.midY,
-      width: attributes.bounds.width,
-      height: attributes.bounds.height)
-    if sizeCache.implementsSizeDelegate {
-      let indexPath = IndexPath(item: index, section: 0)
-      let pagingItem = visibleItems.pagingItem(for: indexPath)
-
-      if let upcomingPagingItem = state.upcomingPagingItem, let currentPagingItem = state.currentPagingItem {
-        if upcomingPagingItem.isEqual(to: pagingItem) || currentPagingItem.isEqual(to: pagingItem)  {
-          frame.size.width = sizeCache.itemWidthSelected(for: pagingItem)
+        return .none
+    }
+
+    private func indicatorFrameForIndex(_ index: Int) -> CGRect {
+        if index < range.lowerBound {
+            let frame = frameForIndex(0)
+            return frame.offsetBy(dx: -frame.width, dy: 0)
+        } else if index > range.upperBound - 1 {
+            let frame = frameForIndex(visibleItems.items.count - 1)
+            return frame.offsetBy(dx: frame.width, dy: 0)
         }
-      }
+
+        return frameForIndex(index)
     }
 
-    return frame
-  }
+    private func frameForIndex(_ index: Int) -> CGRect {
+        guard
+            let sizeCache = sizeCache,
+            let attributes = layoutAttributes[IndexPath(item: index, section: 0)] else { return .zero }
+
+        var frame = CGRect(
+            x: attributes.center.x - attributes.bounds.midX,
+            y: attributes.center.y - attributes.bounds.midY,
+            width: attributes.bounds.width,
+            height: attributes.bounds.height
+        )
+        if sizeCache.implementsSizeDelegate {
+            let indexPath = IndexPath(item: index, section: 0)
+            let pagingItem = visibleItems.pagingItem(for: indexPath)
+
+            if let upcomingPagingItem = state.upcomingPagingItem, let currentPagingItem = state.currentPagingItem {
+                if upcomingPagingItem.isEqual(to: pagingItem) || currentPagingItem.isEqual(to: pagingItem) {
+                    frame.size.width = sizeCache.itemWidthSelected(for: pagingItem)
+                }
+            }
+        }
+
+        return frame
+    }
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Classes/PagingController.swift b/OpenBook/Pods/Parchment/Parchment/Classes/PagingController.swift
index 35e68e0c..df94319f 100644
--- a/OpenBook/Pods/Parchment/Parchment/Classes/PagingController.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Classes/PagingController.swift
@@ -1,679 +1,674 @@
 import UIKit
 
-protocol PagingControllerSizeDelegate: class {
-  func width(for: PagingItem, isSelected: Bool) -> CGFloat
+protocol PagingControllerSizeDelegate: AnyObject {
+    func width(for: PagingItem, isSelected: Bool) -> CGFloat
 }
 
 final class PagingController: NSObject {
-  
-  weak var dataSource: PagingMenuDataSource?
-  weak var sizeDelegate: PagingControllerSizeDelegate?
-  weak var delegate: PagingMenuDelegate?
-
-  weak var collectionView: CollectionView! {
-    didSet {
-      configureCollectionView()
-    }
-  }
-  
-  weak var collectionViewLayout: CollectionViewLayout! {
-    didSet {
-      configureCollectionViewLayout()
-    }
-  }
-  
-  var options: PagingOptions {
-    didSet {
-      optionsChanged(oldValue: oldValue)
-    }
-  }
-  
-  private(set) var state: PagingState {
-    didSet {
-      collectionViewLayout.state = state
-    }
-  }
-  
-  private(set) var visibleItems: PagingItems {
-    didSet {
-      collectionViewLayout.visibleItems = visibleItems
-    }
-  }
-  
-  private(set) var sizeCache: PagingSizeCache {
-    didSet {
-      collectionViewLayout.sizeCache = sizeCache
-    }
-  }
-  
-  private var swipeGestureRecognizerLeft: UISwipeGestureRecognizer?
-  private var swipeGestureRecognizerRight: UISwipeGestureRecognizer?
-  
-  init(options: PagingOptions) {
-    self.options = options
-    self.sizeCache = PagingSizeCache(options: options)
-    self.visibleItems = PagingItems(items: [])
-    self.state = .empty
-  }
-  
-  // MARK: Public
-  
-  func select(indexPath: IndexPath, animated: Bool) {
-    let pagingItem = visibleItems.pagingItem(for: indexPath)
-    select(pagingItem: pagingItem, animated: animated)
-  }
-  
-  func select(pagingItem: PagingItem, animated: Bool) {
-    if collectionView.superview == nil || collectionView.window == nil {
-      state = .selected(pagingItem: pagingItem)
-      return
-    }
-    
-    switch state {
-    case .empty:
-      state = .selected(pagingItem: pagingItem)
-      
-      reloadItems(around: pagingItem)
-      
-      delegate?.selectContent(
-        pagingItem: pagingItem,
-        direction: .none,
-        animated: false
-      )
-      
-      collectionView.selectItem(
-        at: visibleItems.indexPath(for: pagingItem),
-        animated: false,
-        scrollPosition: options.scrollPosition
-      )
-      
-    case .selected:
-      if let currentPagingItem = state.currentPagingItem {
-        if pagingItem.isEqual(to: currentPagingItem) == false {
-          
-          if animated {
-            appendItemsIfNeeded(upcomingPagingItem: pagingItem)
-            
-            let transition = calculateTransition(
-              from: currentPagingItem,
-              to: pagingItem
+    weak var dataSource: PagingMenuDataSource?
+    weak var sizeDelegate: PagingControllerSizeDelegate?
+    weak var delegate: PagingMenuDelegate?
+
+    weak var collectionView: CollectionView! {
+        didSet {
+            configureCollectionView()
+        }
+    }
+
+    weak var collectionViewLayout: CollectionViewLayout! {
+        didSet {
+            configureCollectionViewLayout()
+        }
+    }
+
+    var options: PagingOptions {
+        didSet {
+            optionsChanged(oldValue: oldValue)
+        }
+    }
+
+    private(set) var state: PagingState {
+        didSet {
+            collectionViewLayout.state = state
+        }
+    }
+
+    private(set) var visibleItems: PagingItems {
+        didSet {
+            collectionViewLayout.visibleItems = visibleItems
+        }
+    }
+
+    private(set) var sizeCache: PagingSizeCache {
+        didSet {
+            collectionViewLayout.sizeCache = sizeCache
+        }
+    }
+
+    private var swipeGestureRecognizerLeft: UISwipeGestureRecognizer?
+    private var swipeGestureRecognizerRight: UISwipeGestureRecognizer?
+
+    init(options: PagingOptions) {
+        self.options = options
+        sizeCache = PagingSizeCache(options: options)
+        visibleItems = PagingItems(items: [])
+        state = .empty
+    }
+
+    // MARK: Public
+
+    func select(indexPath: IndexPath, animated: Bool) {
+        let pagingItem = visibleItems.pagingItem(for: indexPath)
+        select(pagingItem: pagingItem, animated: animated)
+    }
+
+    func select(pagingItem: PagingItem, animated: Bool) {
+        if collectionView.superview == nil || collectionView.window == nil {
+            state = .selected(pagingItem: pagingItem)
+            return
+        }
+
+        switch state {
+        case .empty:
+            state = .selected(pagingItem: pagingItem)
+
+            reloadItems(around: pagingItem)
+
+            delegate?.selectContent(
+                pagingItem: pagingItem,
+                direction: .none,
+                animated: false
             )
-            
-            state = .scrolling(
-              pagingItem: currentPagingItem,
-              upcomingPagingItem: pagingItem,
-              progress: 0,
-              initialContentOffset: transition.contentOffset,
-              distance: transition.distance
+
+            collectionView.selectItem(
+                at: visibleItems.indexPath(for: pagingItem),
+                animated: false,
+                scrollPosition: options.scrollPosition
             )
-            
-            let direction = visibleItems.direction(
-              from: currentPagingItem,
-              to: pagingItem
+
+        case .selected:
+            if let currentPagingItem = state.currentPagingItem {
+                if pagingItem.isEqual(to: currentPagingItem) == false {
+                    if animated {
+                        appendItemsIfNeeded(upcomingPagingItem: pagingItem)
+
+                        let transition = calculateTransition(
+                            from: currentPagingItem,
+                            to: pagingItem
+                        )
+
+                        state = .scrolling(
+                            pagingItem: currentPagingItem,
+                            upcomingPagingItem: pagingItem,
+                            progress: 0,
+                            initialContentOffset: transition.contentOffset,
+                            distance: transition.distance
+                        )
+
+                        let direction = visibleItems.direction(
+                            from: currentPagingItem,
+                            to: pagingItem
+                        )
+
+                        delegate?.selectContent(
+                            pagingItem: pagingItem,
+                            direction: direction,
+                            animated: animated
+                        )
+                    } else {
+                        state = .selected(pagingItem: pagingItem)
+
+                        reloadItems(around: pagingItem)
+
+                        delegate?.selectContent(
+                            pagingItem: pagingItem,
+                            direction: .none,
+                            animated: false
+                        )
+
+                        collectionView.selectItem(
+                            at: visibleItems.indexPath(for: pagingItem),
+                            animated: false,
+                            scrollPosition: options.scrollPosition
+                        )
+                    }
+                }
+            }
+
+        default:
+            break
+        }
+    }
+
+    func contentScrolled(progress: CGFloat) {
+        switch state {
+        case let .selected(pagingItem):
+            var upcomingItem: PagingItem?
+
+            if progress > 0 {
+                upcomingItem = dataSource?.pagingItemAfter(pagingItem: pagingItem)
+            } else if progress < 0 {
+                upcomingItem = dataSource?.pagingItemBefore(pagingItem: pagingItem)
+            } else {
+                return
+            }
+
+            appendItemsIfNeeded(upcomingPagingItem: upcomingItem)
+            let transition = calculateTransition(from: pagingItem, to: upcomingItem)
+            updateScrollingState(
+                pagingItem: pagingItem,
+                upcomingPagingItem: upcomingItem,
+                initialContentOffset: transition.contentOffset,
+                distance: transition.distance,
+                progress: progress
             )
-            
-            delegate?.selectContent(
-              pagingItem: pagingItem,
-              direction: direction,
-              animated: animated
+
+        case let .scrolling(pagingItem, upcomingPagingItem, oldProgress, initialContentOffset, distance):
+            if oldProgress < 0, progress > 0 {
+                state = .selected(pagingItem: pagingItem)
+            } else if oldProgress > 0, progress < 0 {
+                state = .selected(pagingItem: pagingItem)
+            } else if progress == 0 {
+                state = .selected(pagingItem: pagingItem)
+            } else {
+                updateScrollingState(
+                    pagingItem: pagingItem,
+                    upcomingPagingItem: upcomingPagingItem,
+                    initialContentOffset: initialContentOffset,
+                    distance: distance,
+                    progress: progress
+                )
+            }
+
+        default:
+            break
+        }
+    }
+
+    func contentFinishedScrolling() {
+        guard case let .scrolling(pagingItem, upcomingPagingItem, _, _, _) = state else { return }
+
+        // If a transition finishes scrolling, but the upcoming paging
+        // item is nil it means that the user scrolled away from one of
+        // the items at the very edge. In this case, we don't want to
+        // fire a .finishScrolling event as this will select the current
+        // paging item, causing it to jump to that item even if it's
+        // scrolled out of view. We still need to fire an event that
+        // will reset the state to .selected.
+        if let upcomingPagingItem = upcomingPagingItem {
+            state = .selected(pagingItem: upcomingPagingItem)
+
+            // We only want to select the current paging item
+            // if the user is not scrolling the collection view.
+            if collectionView.isDragging == false {
+                reloadItems(around: upcomingPagingItem)
+                collectionView.selectItem(
+                    at: visibleItems.indexPath(for: upcomingPagingItem),
+                    animated: options.menuTransition == .animateAfter,
+                    scrollPosition: options.scrollPosition
+                )
+            }
+        } else {
+            state = .selected(pagingItem: pagingItem)
+        }
+    }
+
+    func transitionSize() {
+        switch state {
+        case let .scrolling(pagingItem, _, _, _, _):
+            sizeCache.clear()
+            state = .selected(pagingItem: pagingItem)
+            reloadItems(around: pagingItem)
+            collectionView.selectItem(
+                at: visibleItems.indexPath(for: pagingItem),
+                animated: options.menuTransition == .animateAfter,
+                scrollPosition: options.scrollPosition
             )
-          } else {
+
+        default:
+            if let pagingItem = state.currentPagingItem {
+                sizeCache.clear()
+                reloadItems(around: pagingItem)
+
+                collectionView.selectItem(
+                    at: visibleItems.indexPath(for: pagingItem),
+                    animated: options.menuTransition == .animateAfter,
+                    scrollPosition: options.scrollPosition
+                )
+            }
+        }
+    }
+
+    func removeAll() {
+        state = .empty
+        sizeCache.clear()
+        visibleItems = PagingItems(items: [])
+        collectionView.reloadData()
+        delegate?.removeContent()
+    }
+
+    func viewAppeared() {
+        switch state {
+        case let .selected(pagingItem), let .scrolling(_, pagingItem?, _, _, _):
             state = .selected(pagingItem: pagingItem)
-            
             reloadItems(around: pagingItem)
-            
+
             delegate?.selectContent(
-              pagingItem: pagingItem,
-              direction: .none,
-              animated: false
+                pagingItem: pagingItem,
+                direction: .none,
+                animated: false
             )
-            
+
             collectionView.selectItem(
-              at: visibleItems.indexPath(for: pagingItem),
-              animated: false,
-              scrollPosition: options.scrollPosition
+                at: visibleItems.indexPath(for: pagingItem),
+                animated: false,
+                scrollPosition: options.scrollPosition
             )
-          }
-        }
-      }
-      
-    default:
-      break
-    }
-  }
-  
-  func contentScrolled(progress: CGFloat) {
-    switch state {
-    case let .selected(pagingItem):
-      var upcomingItem: PagingItem?
-      
-      if progress > 0 {
-        upcomingItem = dataSource?.pagingItemAfter(pagingItem: pagingItem)
-      } else if progress < 0 {
-        upcomingItem = dataSource?.pagingItemBefore(pagingItem: pagingItem)
-      } else {
-        return
-      }
-      
-      appendItemsIfNeeded(upcomingPagingItem: upcomingItem)
-      let transition = calculateTransition(from: pagingItem, to: upcomingItem)
-      updateScrollingState(
-        pagingItem: pagingItem,
-        upcomingPagingItem: upcomingItem,
-        initialContentOffset: transition.contentOffset,
-        distance: transition.distance,
-        progress: progress
-      )
-      
-    case let .scrolling(pagingItem, upcomingPagingItem, oldProgress, initialContentOffset, distance):
-      if oldProgress < 0 && progress > 0 {
-        state = .selected(pagingItem: pagingItem)
-      } else if oldProgress > 0 && progress < 0 {
-        state = .selected(pagingItem: pagingItem)
-      } else if progress == 0 {
+
+        default:
+            break
+        }
+    }
+
+    func reloadData(around pagingItem: PagingItem) {
+        reloadMenu(around: pagingItem)
+
+        delegate?.removeContent()
+        delegate?.selectContent(
+            pagingItem: pagingItem,
+            direction: .none,
+            animated: false
+        )
+
+        // Reloading the data triggers the didFinishScrollingFrom delegate
+        // to be called which in turn means the wrong item will be selected.
+        // For now, we just fix this by selecting the correct item manually.
         state = .selected(pagingItem: pagingItem)
-      } else {
-        updateScrollingState(
-          pagingItem: pagingItem,
-          upcomingPagingItem: upcomingPagingItem,
-          initialContentOffset: initialContentOffset,
-          distance: distance,
-          progress: progress
+        collectionViewLayout.invalidateLayout()
+    }
+
+    func reloadMenu(around pagingItem: PagingItem) {
+        sizeCache.clear()
+
+        let toItems = generateItems(around: pagingItem)
+
+        visibleItems = PagingItems(
+            items: toItems,
+            hasItemsBefore: hasItemBefore(pagingItem: toItems.first),
+            hasItemsAfter: hasItemAfter(pagingItem: toItems.last)
         )
-      }
-      
-    default:
-      break
-    }
-  }
-  
-  func contentFinishedScrolling() {
-    guard case let .scrolling(pagingItem, upcomingPagingItem, _, _, _) = state else { return }
-    
-    // If a transition finishes scrolling, but the upcoming paging
-    // item is nil it means that the user scrolled away from one of
-    // the items at the very edge. In this case, we don't want to
-    // fire a .finishScrolling event as this will select the current
-    // paging item, causing it to jump to that item even if it's
-    // scrolled out of view. We still need to fire an event that
-    // will reset the state to .selected.
-    if let upcomingPagingItem = upcomingPagingItem {
-      state = .selected(pagingItem: upcomingPagingItem)
-      
-      // We only want to select the current paging item
-      // if the user is not scrolling the collection view.
-      if collectionView.isDragging == false {
-        reloadItems(around: upcomingPagingItem)
-        collectionView.selectItem(
-          at: visibleItems.indexPath(for: upcomingPagingItem),
-          animated: options.menuTransition == .animateAfter,
-          scrollPosition: options.scrollPosition
+
+        state = .selected(pagingItem: pagingItem)
+        collectionViewLayout.invalidateLayout()
+        collectionView.reloadData()
+        configureSizeCache(for: pagingItem)
+    }
+
+    func menuScrolled() {
+        // If we don't have any visible items there is no point in
+        // checking if we're near an edge. This seems to be empty quite
+        // often when scrolling very fast.
+        if collectionView.indexPathsForVisibleItems.isEmpty == true {
+            return
+        }
+
+        let contentInsets = collectionViewLayout.contentInsets
+
+        if collectionView.near(edge: .left, clearance: contentInsets.left) {
+            if let firstPagingItem = visibleItems.items.first {
+                if visibleItems.hasItemsBefore {
+                    reloadItems(around: firstPagingItem)
+                }
+            }
+        } else if collectionView.near(edge: .right, clearance: contentInsets.right) {
+            if let lastPagingItem = visibleItems.items.last {
+                if visibleItems.hasItemsAfter {
+                    reloadItems(around: lastPagingItem)
+                }
+            }
+        }
+    }
+
+    // MARK: Private
+
+    private func optionsChanged(oldValue: PagingOptions) {
+        if options.menuInteraction != oldValue.menuInteraction {
+            configureMenuInteraction()
+        }
+
+        sizeCache.options = options
+        collectionViewLayout.invalidateLayout()
+    }
+
+    private func configureCollectionViewLayout() {
+        collectionViewLayout.state = state
+        collectionViewLayout.visibleItems = visibleItems
+        collectionViewLayout.sizeCache = sizeCache
+    }
+
+    private func configureCollectionView() {
+        collectionView.showsHorizontalScrollIndicator = false
+        collectionView.dataSource = self
+
+        if #available(iOS 11.0, *) {
+            collectionView.contentInsetAdjustmentBehavior = .never
+        }
+
+        configureMenuInteraction()
+    }
+
+    private func configureMenuInteraction() {
+        if let swipeGestureRecognizerLeft = swipeGestureRecognizerLeft {
+            collectionView.removeGestureRecognizer(swipeGestureRecognizerLeft)
+        }
+
+        if let swipeGestureRecognizerRight = swipeGestureRecognizerRight {
+            collectionView.removeGestureRecognizer(swipeGestureRecognizerRight)
+        }
+
+        collectionView.isScrollEnabled = false
+        collectionView.alwaysBounceHorizontal = false
+
+        switch options.menuInteraction {
+        case .scrolling:
+            collectionView.isScrollEnabled = true
+            collectionView.alwaysBounceHorizontal = true
+        case .swipe:
+            setupGestureRecognizers()
+        case .none:
+            break
+        }
+    }
+
+    private func setupGestureRecognizers() {
+        let swipeGestureRecognizerLeft = UISwipeGestureRecognizer(
+            target: self,
+            action: #selector(handleSwipeGestureRecognizer)
         )
-      }
-    } else {
-      state = .selected(pagingItem: pagingItem)
-    }
-  }
-  
-  func transitionSize() {
-    switch state {
-    case let .scrolling(pagingItem, _, _, _, _):
-      sizeCache.clear()
-      state = .selected(pagingItem: pagingItem)
-      reloadItems(around: pagingItem)
-      collectionView.selectItem(
-        at: visibleItems.indexPath(for: pagingItem),
-        animated: options.menuTransition == .animateAfter,
-        scrollPosition: options.scrollPosition
-      )
-      
-    default:
-      if let pagingItem = state.currentPagingItem {
-        sizeCache.clear()
-        reloadItems(around: pagingItem)
-        
-        collectionView.selectItem(
-          at: visibleItems.indexPath(for: pagingItem),
-          animated: options.menuTransition == .animateAfter,
-          scrollPosition: options.scrollPosition
+        let swipeGestureRecognizerRight = UISwipeGestureRecognizer(
+            target: self,
+            action: #selector(handleSwipeGestureRecognizer)
         )
-      }
-    }
-  }
-  
-  func removeAll() {
-    state = .empty
-    sizeCache.clear()
-    visibleItems = PagingItems(items: [])
-    collectionView.reloadData()
-    delegate?.removeContent()
-  }
-  
-  func viewAppeared() {
-    switch state {
-    case let .selected(pagingItem), let .scrolling(_, pagingItem?, _, _, _):
-      state = .selected(pagingItem: pagingItem)
-      reloadItems(around: pagingItem)
-      
-      delegate?.selectContent(
-        pagingItem: pagingItem,
-        direction: .none,
-        animated: false
-      )
-      
-      collectionView.selectItem(
-        at: visibleItems.indexPath(for: pagingItem),
-        animated: false,
-        scrollPosition: options.scrollPosition
-      )
-      
-    default:
-      break
-    }
-  }
-  
-  func reloadData(around pagingItem: PagingItem) {
-    reloadMenu(around: pagingItem)
-    
-    delegate?.removeContent()
-    delegate?.selectContent(
-      pagingItem: pagingItem,
-      direction: .none,
-      animated: false
-    )
-    
-    // Reloading the data triggers the didFinishScrollingFrom delegate
-    // to be called which in turn means the wrong item will be selected.
-    // For now, we just fix this by selecting the correct item manually.
-    state = .selected(pagingItem: pagingItem)
-    collectionViewLayout.invalidateLayout()
-  }
-  
-  func reloadMenu(around pagingItem: PagingItem) {
-    sizeCache.clear()
-    
-    let toItems = generateItems(around: pagingItem)
-    
-    visibleItems = PagingItems(
-      items: toItems,
-      hasItemsBefore: hasItemBefore(pagingItem: toItems.first),
-      hasItemsAfter: hasItemAfter(pagingItem: toItems.last)
-    )
-    
-    state = .selected(pagingItem: pagingItem)
-    collectionViewLayout.invalidateLayout()
-    collectionView.reloadData()
-    configureSizeCache(for: pagingItem)
-  }
-  
-  func menuScrolled() {
-    // If we don't have any visible items there is no point in
-    // checking if we're near an edge. This seems to be empty quite
-    // often when scrolling very fast.
-    if collectionView.indexPathsForVisibleItems.isEmpty == true {
-      return
-    }
-    
-    let contentInsets = collectionViewLayout.contentInsets
-    
-    if collectionView.near(edge: .left, clearance: contentInsets.left) {
-      if let firstPagingItem = visibleItems.items.first {
-        if visibleItems.hasItemsBefore {
-          reloadItems(around: firstPagingItem)
-        }
-      }
-    } else if collectionView.near(edge: .right, clearance: contentInsets.right) {
-      if let lastPagingItem = visibleItems.items.last {
-        if visibleItems.hasItemsAfter {
-          reloadItems(around: lastPagingItem)
-        }
-      }
-    }
-  }
-  
-  // MARK: Private
-  
-  private func optionsChanged(oldValue: PagingOptions) {
-    if options.menuInteraction != oldValue.menuInteraction {
-      configureMenuInteraction()
-    }
-    
-    sizeCache.options = options
-    collectionViewLayout.invalidateLayout()
-  }
-  
-  private func configureCollectionViewLayout() {
-    collectionViewLayout.state = state
-    collectionViewLayout.visibleItems = visibleItems
-    collectionViewLayout.sizeCache = sizeCache
-  }
-  
-  private func configureCollectionView() {
-    collectionView.showsHorizontalScrollIndicator = false
-    collectionView.dataSource = self
-    
-    if #available(iOS 11.0, *) {
-      collectionView.contentInsetAdjustmentBehavior = .never
-    }
-    
-    configureMenuInteraction()
-  }
-  
-  private func configureMenuInteraction() {
-    if let swipeGestureRecognizerLeft = swipeGestureRecognizerLeft {
-      collectionView.removeGestureRecognizer(swipeGestureRecognizerLeft)
-    }
-    
-    if let swipeGestureRecognizerRight = swipeGestureRecognizerRight {
-      collectionView.removeGestureRecognizer(swipeGestureRecognizerRight)
-    }
-    
-    collectionView.isScrollEnabled = false
-    collectionView.alwaysBounceHorizontal = false
-    
-    switch (options.menuInteraction) {
-    case .scrolling:
-      collectionView.isScrollEnabled = true
-      collectionView.alwaysBounceHorizontal = true
-    case .swipe:
-      setupGestureRecognizers()
-    case .none:
-      break
-    }
-  }
-  
-  private func setupGestureRecognizers() {
-    let swipeGestureRecognizerLeft = UISwipeGestureRecognizer(
-      target: self,
-      action: #selector(handleSwipeGestureRecognizer)
-    )
-    let swipeGestureRecognizerRight = UISwipeGestureRecognizer(
-      target: self,
-      action: #selector(handleSwipeGestureRecognizer)
-    )
-    
-    swipeGestureRecognizerLeft.direction = .left
-    swipeGestureRecognizerRight.direction = .right
-    
-    collectionView.addGestureRecognizer(swipeGestureRecognizerLeft)
-    collectionView.addGestureRecognizer(swipeGestureRecognizerRight)
-    
-    self.swipeGestureRecognizerLeft = swipeGestureRecognizerLeft
-    self.swipeGestureRecognizerRight = swipeGestureRecognizerRight
-  }
-  
-  @objc private dynamic func handleSwipeGestureRecognizer(_ recognizer: UISwipeGestureRecognizer) {
-    guard let currentPagingItem = state.currentPagingItem else { return }
-    
-    var upcomingPagingItem: PagingItem? = nil
-    
-    if recognizer.direction.contains(.left) {
-      upcomingPagingItem = dataSource?.pagingItemAfter(pagingItem: currentPagingItem)
-    } else if recognizer.direction.contains(.right) {
-      upcomingPagingItem = dataSource?.pagingItemBefore(pagingItem: currentPagingItem)
-    }
-    
-    if let pagingItem = upcomingPagingItem {
-      select(pagingItem: pagingItem, animated: true)
-    }
-  }
-  
-  private func updateScrollingState(
-    pagingItem: PagingItem,
-    upcomingPagingItem: PagingItem?,
-    initialContentOffset: CGPoint,
-    distance: CGFloat,
-    progress: CGFloat
+
+        swipeGestureRecognizerLeft.direction = .left
+        swipeGestureRecognizerRight.direction = .right
+
+        collectionView.addGestureRecognizer(swipeGestureRecognizerLeft)
+        collectionView.addGestureRecognizer(swipeGestureRecognizerRight)
+
+        self.swipeGestureRecognizerLeft = swipeGestureRecognizerLeft
+        self.swipeGestureRecognizerRight = swipeGestureRecognizerRight
+    }
+
+    @objc private dynamic func handleSwipeGestureRecognizer(_ recognizer: UISwipeGestureRecognizer) {
+        guard let currentPagingItem = state.currentPagingItem else { return }
+
+        var upcomingPagingItem: PagingItem?
+
+        if recognizer.direction.contains(.left) {
+            upcomingPagingItem = dataSource?.pagingItemAfter(pagingItem: currentPagingItem)
+        } else if recognizer.direction.contains(.right) {
+            upcomingPagingItem = dataSource?.pagingItemBefore(pagingItem: currentPagingItem)
+        }
+
+        if let pagingItem = upcomingPagingItem {
+            select(pagingItem: pagingItem, animated: true)
+        }
+    }
+
+    private func updateScrollingState(
+        pagingItem: PagingItem,
+        upcomingPagingItem: PagingItem?,
+        initialContentOffset: CGPoint,
+        distance: CGFloat,
+        progress: CGFloat
     ) {
-    
-    state = .scrolling(
-      pagingItem: pagingItem,
-      upcomingPagingItem: upcomingPagingItem,
-      progress: progress,
-      initialContentOffset: initialContentOffset,
-      distance: distance
-    )
-    
-    if options.menuTransition == .scrollAlongside {
-      let invalidationContext = PagingInvalidationContext()
-      
-      // We don't want to update the content offset if there is no
-      // upcoming item to scroll to. We still need to invalidate the
-      // layout in order to update the layout attributes for the
-      // decoration views. We need to use setContentOffset with no
-      // animation in order to stop any ongoing scroll.
-      if upcomingPagingItem != nil {
-        if collectionView.contentSize.width >= collectionView.bounds.width && state.progress != 0 {
-          let contentOffset = CGPoint(
-            x: initialContentOffset.x + (distance * abs(progress)),
-            y: initialContentOffset.y
-          )
-          collectionView.setContentOffset(contentOffset, animated: false)
-        }
-        
-        if sizeCache.implementsSizeDelegate {
-          invalidationContext.invalidateSizes = true
-        }
-      }
-      
-      collectionViewLayout.invalidateLayout(with: invalidationContext)
-    }
-  }
-  
-  private func calculateTransition(
-    from pagingItem: PagingItem,
-    to upcomingPagingItem: PagingItem?
+        state = .scrolling(
+            pagingItem: pagingItem,
+            upcomingPagingItem: upcomingPagingItem,
+            progress: progress,
+            initialContentOffset: initialContentOffset,
+            distance: distance
+        )
+
+        if options.menuTransition == .scrollAlongside {
+            let invalidationContext = PagingInvalidationContext()
+
+            // We don't want to update the content offset if there is no
+            // upcoming item to scroll to. We still need to invalidate the
+            // layout in order to update the layout attributes for the
+            // decoration views. We need to use setContentOffset with no
+            // animation in order to stop any ongoing scroll.
+            if upcomingPagingItem != nil {
+                if collectionView.contentSize.width >= collectionView.bounds.width, state.progress != 0 {
+                    let contentOffset = CGPoint(
+                        x: initialContentOffset.x + (distance * abs(progress)),
+                        y: initialContentOffset.y
+                    )
+                    collectionView.setContentOffset(contentOffset, animated: false)
+                }
+
+                if sizeCache.implementsSizeDelegate {
+                    invalidationContext.invalidateSizes = true
+                }
+            }
+
+            collectionViewLayout.invalidateLayout(with: invalidationContext)
+        }
+    }
+
+    private func calculateTransition(
+        from pagingItem: PagingItem,
+        to upcomingPagingItem: PagingItem?
     ) -> PagingTransition {
-    guard let upcomingPagingItem = upcomingPagingItem else {
-      return PagingTransition(contentOffset: .zero, distance: 0)
-    }
-    
-    let distance = PagingDistance(
-      view: collectionView,
-      currentPagingItem: pagingItem,
-      upcomingPagingItem: upcomingPagingItem,
-      visibleItems: visibleItems,
-      sizeCache: sizeCache,
-      selectedScrollPosition: options.selectedScrollPosition,
-      layoutAttributes: collectionViewLayout.layoutAttributes,
-      navigationOrientation: options.contentNavigationOrientation
-    )
-    
-    return PagingTransition(
-      contentOffset: collectionView.contentOffset,
-      distance: distance?.calculate() ?? 0
-    )
-  }
-  
-  /// If the upcoming item is outside the currently visible
-  /// items we need to append the items that are around the
-  /// upcoming item so we can animate the transition.
-  private func appendItemsIfNeeded(upcomingPagingItem: PagingItem?) {
-    if let upcomingPagingItem = upcomingPagingItem {
-      if visibleItems.contains(upcomingPagingItem) == false {
-        reloadItems(around: upcomingPagingItem, keepExisting: true)
-      }
-    }
-  }
-  
-  private func reloadItems(around pagingItem: PagingItem, keepExisting: Bool = false) {
-    var toItems = generateItems(around: pagingItem)
-    
-    if keepExisting {
-      toItems = visibleItems.union(toItems)
-    }
-    
-    let oldLayoutAttributes = collectionViewLayout.layoutAttributes
-    let oldContentOffset = collectionView.contentOffset
-    let oldVisibleItems = visibleItems
-    
-    configureSizeCache(for: pagingItem)
-    
-    visibleItems = PagingItems(
-      items: toItems,
-      hasItemsBefore: hasItemBefore(pagingItem: toItems.first),
-      hasItemsAfter: hasItemAfter(pagingItem: toItems.last)
-    )
-    
-    collectionView.reloadData()
-    collectionViewLayout.prepare()
-    
-    // After reloading the data the content offset is going to be
-    // reset. We need to diff which items where added/removed and
-    // update the content offset so it looks it is the same as before
-    // reloading. This gives the perception of a smooth scroll.
-    let newLayoutAttributes = collectionViewLayout.layoutAttributes
-    
-    var offset: CGFloat = 0
-    let diff = PagingDiff(from: oldVisibleItems, to: visibleItems)
-    
-    for indexPath in diff.removed() {
-      offset += oldLayoutAttributes[indexPath]?.bounds.width ?? 0
-      offset += options.menuItemSpacing
-    }
-    
-    for indexPath in diff.added() {
-      offset -= newLayoutAttributes[indexPath]?.bounds.width ?? 0
-      offset -= options.menuItemSpacing
-    }
-    
-    collectionView.contentOffset = CGPoint(
-      x: oldContentOffset.x - offset,
-      y: oldContentOffset.y
-    )
-    
-    // We need to perform layout here, if not the collection view
-    // seems to get in a weird state.
-    collectionView.layoutIfNeeded()
-    
-    // The content offset and distance between items can change while a
-    // transition is in progress meaning the current transition will be
-    // wrong. For instance, when hitting the edge of the collection view
-    // while transitioning we need to reload all the paging items and
-    // update the transition data.
-    if case let .scrolling(pagingItem, upcomingPagingItem, progress, _, distance) = state {
-      let transition = calculateTransition(
-        from: pagingItem,
-        to: upcomingPagingItem
-      )
-      
-      let contentOffset = collectionView.contentOffset
-      let newContentOffset = CGPoint(
-        x: contentOffset.x - (distance - transition.distance),
-        y: contentOffset.y
-      )
-      
-      state = .scrolling(
-        pagingItem: pagingItem,
-        upcomingPagingItem: upcomingPagingItem,
-        progress: progress,
-        initialContentOffset: newContentOffset,
-        distance: distance
-      )
-    }
-  }
-  
-  private func generateItems(around pagingItem: PagingItem) -> [PagingItem] {
-    var items: [PagingItem] = [pagingItem]
-    var previousItem: PagingItem = pagingItem
-    var nextItem: PagingItem = pagingItem
-    let menuWidth = collectionView.bounds.width
-    
-    // Add as many items as we can before the current paging item to
-    // fill up the same width as the bounds.
-    var widthBefore: CGFloat = menuWidth
-    while widthBefore > 0 {
-      if let item = dataSource?.pagingItemBefore(pagingItem: previousItem) {
-        widthBefore -= itemWidth(for: item)
-        widthBefore -= options.menuItemSpacing
-        previousItem = item
-        items.insert(item, at: 0)
-      } else {
-        break
-      }
-    }
-    
-    // When filling up the items after the current item we need to
-    // include any remaining space left before the current item.
-    var widthAfter: CGFloat = menuWidth + widthBefore
-    while widthAfter > 0 {
-      if let item = dataSource?.pagingItemAfter(pagingItem: nextItem) {
-        widthAfter -= itemWidth(for: item)
-        widthAfter -= options.menuItemSpacing
-        nextItem = item
-        items.append(item)
-      } else {
-        break
-      }
-    }
-    
-    // Make sure we add even more items if there is any remaining
-    // space available after filling items items after the current.
-    var remainingWidth = widthAfter
-    while remainingWidth > 0 {
-      if let item = dataSource?.pagingItemBefore(pagingItem: previousItem) {
-        remainingWidth -= itemWidth(for: item)
-        remainingWidth -= options.menuItemSpacing
-        previousItem = item
-        items.insert(item, at: 0)
-      } else {
-        break
-      }
-    }
-    
-    return items
-  }
-  
-  private func itemWidth(for pagingItem: PagingItem) -> CGFloat {
-    guard let currentPagingItem = state.currentPagingItem else { return options.estimatedItemWidth }
-    
-    if currentPagingItem.isEqual(to: pagingItem) {
-      return sizeCache.itemWidthSelected(for: pagingItem)
-    } else {
-      return sizeCache.itemSize(for: pagingItem)
-    }
-  }
-  
-  private func configureSizeCache(for pagingItem: PagingItem) {
-    if sizeDelegate != nil {
-      sizeCache.implementsSizeDelegate = true
-      sizeCache.sizeForPagingItem = { [weak self] item, selected in
-        return self?.sizeDelegate?.width(for: item, isSelected: selected)
-      }
-    }
-  }
-  
-  private func hasItemBefore(pagingItem: PagingItem?) -> Bool {
-    guard let item = pagingItem else { return false }
-    return dataSource?.pagingItemBefore(pagingItem: item) != nil
-  }
-  
-  private func hasItemAfter(pagingItem: PagingItem?) -> Bool {
-    guard let item = pagingItem else { return false }
-    return dataSource?.pagingItemAfter(pagingItem: item) != nil
-  }
-  
+        guard let upcomingPagingItem = upcomingPagingItem else {
+            return PagingTransition(contentOffset: .zero, distance: 0)
+        }
+
+        let distance = PagingDistance(
+            view: collectionView,
+            currentPagingItem: pagingItem,
+            upcomingPagingItem: upcomingPagingItem,
+            visibleItems: visibleItems,
+            sizeCache: sizeCache,
+            selectedScrollPosition: options.selectedScrollPosition,
+            layoutAttributes: collectionViewLayout.layoutAttributes,
+            navigationOrientation: options.contentNavigationOrientation
+        )
+
+        return PagingTransition(
+            contentOffset: collectionView.contentOffset,
+            distance: distance?.calculate() ?? 0
+        )
+    }
+
+    /// If the upcoming item is outside the currently visible
+    /// items we need to append the items that are around the
+    /// upcoming item so we can animate the transition.
+    private func appendItemsIfNeeded(upcomingPagingItem: PagingItem?) {
+        if let upcomingPagingItem = upcomingPagingItem {
+            if visibleItems.contains(upcomingPagingItem) == false {
+                reloadItems(around: upcomingPagingItem, keepExisting: true)
+            }
+        }
+    }
+
+    private func reloadItems(around pagingItem: PagingItem, keepExisting: Bool = false) {
+        var toItems = generateItems(around: pagingItem)
+
+        if keepExisting {
+            toItems = visibleItems.union(toItems)
+        }
+
+        let oldLayoutAttributes = collectionViewLayout.layoutAttributes
+        let oldContentOffset = collectionView.contentOffset
+        let oldVisibleItems = visibleItems
+
+        configureSizeCache(for: pagingItem)
+
+        visibleItems = PagingItems(
+            items: toItems,
+            hasItemsBefore: hasItemBefore(pagingItem: toItems.first),
+            hasItemsAfter: hasItemAfter(pagingItem: toItems.last)
+        )
+
+        collectionView.reloadData()
+        collectionViewLayout.prepare()
+
+        // After reloading the data the content offset is going to be
+        // reset. We need to diff which items where added/removed and
+        // update the content offset so it looks it is the same as before
+        // reloading. This gives the perception of a smooth scroll.
+        let newLayoutAttributes = collectionViewLayout.layoutAttributes
+
+        var offset: CGFloat = 0
+        let diff = PagingDiff(from: oldVisibleItems, to: visibleItems)
+
+        for indexPath in diff.removed() {
+            offset += oldLayoutAttributes[indexPath]?.bounds.width ?? 0
+            offset += options.menuItemSpacing
+        }
+
+        for indexPath in diff.added() {
+            offset -= newLayoutAttributes[indexPath]?.bounds.width ?? 0
+            offset -= options.menuItemSpacing
+        }
+
+        collectionView.contentOffset = CGPoint(
+            x: oldContentOffset.x - offset,
+            y: oldContentOffset.y
+        )
+
+        // We need to perform layout here, if not the collection view
+        // seems to get in a weird state.
+        collectionView.layoutIfNeeded()
+
+        // The content offset and distance between items can change while a
+        // transition is in progress meaning the current transition will be
+        // wrong. For instance, when hitting the edge of the collection view
+        // while transitioning we need to reload all the paging items and
+        // update the transition data.
+        if case let .scrolling(pagingItem, upcomingPagingItem, progress, _, distance) = state {
+            let transition = calculateTransition(
+                from: pagingItem,
+                to: upcomingPagingItem
+            )
+
+            let contentOffset = collectionView.contentOffset
+            let newContentOffset = CGPoint(
+                x: contentOffset.x - (distance - transition.distance),
+                y: contentOffset.y
+            )
+
+            state = .scrolling(
+                pagingItem: pagingItem,
+                upcomingPagingItem: upcomingPagingItem,
+                progress: progress,
+                initialContentOffset: newContentOffset,
+                distance: distance
+            )
+        }
+    }
+
+    private func generateItems(around pagingItem: PagingItem) -> [PagingItem] {
+        var items: [PagingItem] = [pagingItem]
+        var previousItem: PagingItem = pagingItem
+        var nextItem: PagingItem = pagingItem
+        let menuWidth = collectionView.bounds.width
+
+        // Add as many items as we can before the current paging item to
+        // fill up the same width as the bounds.
+        var widthBefore: CGFloat = menuWidth
+        while widthBefore > 0 {
+            if let item = dataSource?.pagingItemBefore(pagingItem: previousItem) {
+                widthBefore -= itemWidth(for: item)
+                widthBefore -= options.menuItemSpacing
+                previousItem = item
+                items.insert(item, at: 0)
+            } else {
+                break
+            }
+        }
+
+        // When filling up the items after the current item we need to
+        // include any remaining space left before the current item.
+        var widthAfter: CGFloat = menuWidth + widthBefore
+        while widthAfter > 0 {
+            if let item = dataSource?.pagingItemAfter(pagingItem: nextItem) {
+                widthAfter -= itemWidth(for: item)
+                widthAfter -= options.menuItemSpacing
+                nextItem = item
+                items.append(item)
+            } else {
+                break
+            }
+        }
+
+        // Make sure we add even more items if there is any remaining
+        // space available after filling items items after the current.
+        var remainingWidth = widthAfter
+        while remainingWidth > 0 {
+            if let item = dataSource?.pagingItemBefore(pagingItem: previousItem) {
+                remainingWidth -= itemWidth(for: item)
+                remainingWidth -= options.menuItemSpacing
+                previousItem = item
+                items.insert(item, at: 0)
+            } else {
+                break
+            }
+        }
+
+        return items
+    }
+
+    private func itemWidth(for pagingItem: PagingItem) -> CGFloat {
+        guard let currentPagingItem = state.currentPagingItem else { return options.estimatedItemWidth }
+
+        if currentPagingItem.isEqual(to: pagingItem) {
+            return sizeCache.itemWidthSelected(for: pagingItem)
+        } else {
+            return sizeCache.itemSize(for: pagingItem)
+        }
+    }
+
+    private func configureSizeCache(for _: PagingItem) {
+        if sizeDelegate != nil {
+            sizeCache.implementsSizeDelegate = true
+            sizeCache.sizeForPagingItem = { [weak self] item, selected in
+                self?.sizeDelegate?.width(for: item, isSelected: selected)
+            }
+        }
+    }
+
+    private func hasItemBefore(pagingItem: PagingItem?) -> Bool {
+        guard let item = pagingItem else { return false }
+        return dataSource?.pagingItemBefore(pagingItem: item) != nil
+    }
+
+    private func hasItemAfter(pagingItem: PagingItem?) -> Bool {
+        guard let item = pagingItem else { return false }
+        return dataSource?.pagingItemAfter(pagingItem: item) != nil
+    }
 }
 
 extension PagingController: UICollectionViewDataSource {
-  
-  // MARK: UICollectionViewDataSource
-  
-  func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
-    let pagingItem = visibleItems.items[indexPath.item]
-    let cell = collectionView.dequeueReusableCell(
-      withReuseIdentifier: String(describing: type(of: pagingItem)),
-      for: indexPath) as! PagingCell
-    var selected: Bool = false
-    if let currentPagingItem = state.currentPagingItem {
-      selected = currentPagingItem.isEqual(to: pagingItem)
-    }
-    cell.setPagingItem(pagingItem, selected: selected, options: options)
-    return cell
-  }
-  
-  func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
-    return visibleItems.items.count
-  }
-  
+    // MARK: UICollectionViewDataSource
+
+    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
+        let pagingItem = visibleItems.items[indexPath.item]
+        let cell = collectionView.dequeueReusableCell(
+            withReuseIdentifier: String(describing: type(of: pagingItem)),
+            for: indexPath
+        ) as! PagingCell
+        var selected: Bool = false
+        if let currentPagingItem = state.currentPagingItem {
+            selected = currentPagingItem.isEqual(to: pagingItem)
+        }
+        cell.setPagingItem(pagingItem, selected: selected, options: options)
+        return cell
+    }
+
+    func collectionView(_: UICollectionView, numberOfItemsInSection _: Int) -> Int {
+        return visibleItems.items.count
+    }
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Classes/PagingFiniteDataSource.swift b/OpenBook/Pods/Parchment/Parchment/Classes/PagingFiniteDataSource.swift
index c2093293..a8d74d24 100644
--- a/OpenBook/Pods/Parchment/Parchment/Classes/PagingFiniteDataSource.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Classes/PagingFiniteDataSource.swift
@@ -2,34 +2,33 @@ import Foundation
 import UIKit
 
 class PagingFiniteDataSource: PagingViewControllerInfiniteDataSource {
-  
-  var items: [PagingItem] = []
-  var viewControllerForIndex: ((Int) -> UIViewController?)?
-  
-  func pagingViewController(_: PagingViewController, viewControllerFor pagingItem: PagingItem) -> UIViewController {
-    guard let index = items.firstIndex(where: { $0.isEqual(to: pagingItem) }) else {
-      fatalError("pagingViewController:viewControllerFor: PagingItem does not exist")
-    }
-    guard let viewController = viewControllerForIndex?(index) else {
-       fatalError("pagingViewController:viewControllerFor: No view controller exist for PagingItem")
+    var items: [PagingItem] = []
+    var viewControllerForIndex: ((Int) -> UIViewController?)?
+
+    func pagingViewController(_: PagingViewController, viewControllerFor pagingItem: PagingItem) -> UIViewController {
+        guard let index = items.firstIndex(where: { $0.isEqual(to: pagingItem) }) else {
+            fatalError("pagingViewController:viewControllerFor: PagingItem does not exist")
+        }
+        guard let viewController = viewControllerForIndex?(index) else {
+            fatalError("pagingViewController:viewControllerFor: No view controller exist for PagingItem")
+        }
+
+        return viewController
     }
-    
-    return viewController
-  }
-  
-  func pagingViewController(_: PagingViewController, itemBefore pagingItem: PagingItem) -> PagingItem? {
-    guard let index = items.firstIndex(where: { $0.isEqual(to: pagingItem) }) else { return nil }
-    if index > 0 {
-      return items[index - 1]
+
+    func pagingViewController(_: PagingViewController, itemBefore pagingItem: PagingItem) -> PagingItem? {
+        guard let index = items.firstIndex(where: { $0.isEqual(to: pagingItem) }) else { return nil }
+        if index > 0 {
+            return items[index - 1]
+        }
+        return nil
     }
-    return nil
-  }
-  
-  func pagingViewController(_: PagingViewController, itemAfter pagingItem: PagingItem) -> PagingItem? {
-    guard let index = items.firstIndex(where: { $0.isEqual(to: pagingItem) }) else { return nil }
-    if index < items.count - 1 {
-      return items[index + 1]
+
+    func pagingViewController(_: PagingViewController, itemAfter pagingItem: PagingItem) -> PagingItem? {
+        guard let index = items.firstIndex(where: { $0.isEqual(to: pagingItem) }) else { return nil }
+        if index < items.count - 1 {
+            return items[index + 1]
+        }
+        return nil
     }
-    return nil
-  }
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Classes/PagingIndicatorLayoutAttributes.swift b/OpenBook/Pods/Parchment/Parchment/Classes/PagingIndicatorLayoutAttributes.swift
index 4924e5d1..253a09f3 100644
--- a/OpenBook/Pods/Parchment/Parchment/Classes/PagingIndicatorLayoutAttributes.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Classes/PagingIndicatorLayoutAttributes.swift
@@ -1,49 +1,47 @@
 import UIKit
 
 open class PagingIndicatorLayoutAttributes: UICollectionViewLayoutAttributes {
+    open var backgroundColor: UIColor?
 
-  open var backgroundColor: UIColor?
-  
-  override open func copy(with zone: NSZone? = nil) -> Any {
-    let copy = super.copy(with: zone) as! PagingIndicatorLayoutAttributes
-    copy.backgroundColor = backgroundColor
-    return copy
-  }
-  
-  override open func isEqual(_ object: Any?) -> Bool {
-    if let rhs = object as? PagingIndicatorLayoutAttributes {
-      if backgroundColor != rhs.backgroundColor {
-        return false
-      }
-      return super.isEqual(object)
-    } else {
-      return false
+    open override func copy(with zone: NSZone? = nil) -> Any {
+        let copy = super.copy(with: zone) as! PagingIndicatorLayoutAttributes
+        copy.backgroundColor = backgroundColor
+        return copy
     }
-  }
-  
-  func configure(_ options: PagingOptions) {
-    if case let .visible(height, index, _, insets) = options.indicatorOptions {
-      backgroundColor = options.indicatorColor
-      frame.size.height = height
-        
-      switch options.menuPosition {
-      case .top:
-        frame.origin.y = options.menuHeight - height - insets.bottom + insets.top
-      case .bottom:
-        frame.origin.y = insets.bottom
-      }
-      zIndex = index
+
+    open override func isEqual(_ object: Any?) -> Bool {
+        if let rhs = object as? PagingIndicatorLayoutAttributes {
+            if backgroundColor != rhs.backgroundColor {
+                return false
+            }
+            return super.isEqual(object)
+        } else {
+            return false
+        }
+    }
+
+    func configure(_ options: PagingOptions) {
+        if case let .visible(height, index, _, insets) = options.indicatorOptions {
+            backgroundColor = options.indicatorColor
+            frame.size.height = height
+
+            switch options.menuPosition {
+            case .top:
+                frame.origin.y = options.menuHeight - height - insets.bottom + insets.top
+            case .bottom:
+                frame.origin.y = insets.bottom
+            }
+            zIndex = index
+        }
+    }
+
+    func update(from: PagingIndicatorMetric, to: PagingIndicatorMetric, progress: CGFloat) {
+        frame.origin.x = tween(from: from.x, to: to.x, progress: progress)
+        frame.size.width = tween(from: from.width, to: to.width, progress: progress)
+    }
+
+    func update(to metric: PagingIndicatorMetric) {
+        frame.origin.x = metric.x
+        frame.size.width = metric.width
     }
-  }
-  
-  func update(from: PagingIndicatorMetric, to: PagingIndicatorMetric, progress: CGFloat) {
-    frame.origin.x = tween(from: from.x, to: to.x, progress: progress)
-    frame.size.width = tween(from: from.width, to: to.width, progress: progress)
-  }
-  
-  func update(to metric: PagingIndicatorMetric) {
-    frame.origin.x = metric.x
-    frame.size.width = metric.width
-  }
-  
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Classes/PagingIndicatorView.swift b/OpenBook/Pods/Parchment/Parchment/Classes/PagingIndicatorView.swift
index d7acba26..ca3c2a88 100644
--- a/OpenBook/Pods/Parchment/Parchment/Classes/PagingIndicatorView.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Classes/PagingIndicatorView.swift
@@ -5,12 +5,10 @@ import UIKit
 /// this type if you need further customization; just override the
 /// `indicatorClass` property in `PagingViewController`.
 open class PagingIndicatorView: UICollectionReusableView {
-  
-  override open func apply(_ layoutAttributes: UICollectionViewLayoutAttributes) {
-    super.apply(layoutAttributes)
-    if let attributes = layoutAttributes as? PagingIndicatorLayoutAttributes {
-      backgroundColor = attributes.backgroundColor
+    open override func apply(_ layoutAttributes: UICollectionViewLayoutAttributes) {
+        super.apply(layoutAttributes)
+        if let attributes = layoutAttributes as? PagingIndicatorLayoutAttributes {
+            backgroundColor = attributes.backgroundColor
+        }
     }
-  }
-  
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Classes/PagingInvalidationContext.swift b/OpenBook/Pods/Parchment/Parchment/Classes/PagingInvalidationContext.swift
index 643d5ef7..3f66f175 100644
--- a/OpenBook/Pods/Parchment/Parchment/Classes/PagingInvalidationContext.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Classes/PagingInvalidationContext.swift
@@ -1,5 +1,5 @@
 import UIKit
 
 open class PagingInvalidationContext: UICollectionViewLayoutInvalidationContext {
-  var invalidateSizes: Bool = false
+    var invalidateSizes: Bool = false
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Classes/PagingMenuView.swift b/OpenBook/Pods/Parchment/Parchment/Classes/PagingMenuView.swift
index 43dc89e8..b9453e3a 100644
--- a/OpenBook/Pods/Parchment/Parchment/Classes/PagingMenuView.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Classes/PagingMenuView.swift
@@ -1,311 +1,306 @@
 import UIKit
 
 open class PagingMenuView: UIView {
-  
-  // MARK: Public Properties
-  
-  /// The size for each of the menu items. _Default:
-  /// .sizeToFit(minWidth: 150, height: 40)_
-  public var menuItemSize: PagingMenuItemSize {
-    get { return options.menuItemSize }
-    set { options.menuItemSize = newValue }
-  }
-    
-  /// Determine the spacing between the menu items. _Default: 0_
-  public var menuItemSpacing: CGFloat {
-    get { return options.menuItemSpacing }
-    set { options.menuItemSpacing = newValue }
-  }
-    
-  /// Determine the horizontal constraints of menu item label. _Default: 20_
-  public var menuItemLabelSpacing: CGFloat {
-    get { return options.menuItemLabelSpacing }
-    set { options.menuItemLabelSpacing = newValue }
-  }
-  
-  /// Determine the insets at around all the menu items. _Default:
-  /// UIEdgeInsets.zero_
-  public var menuInsets: UIEdgeInsets {
-    get { return options.menuInsets }
-    set { options.menuInsets = newValue }
-  }
-  
-  /// Determine whether the menu items should be centered when all the
-  /// items can fit within the bounds of the view. _Default: .left_
-  public var menuHorizontalAlignment: PagingMenuHorizontalAlignment {
-    get { return options.menuHorizontalAlignment }
-    set { options.menuHorizontalAlignment = newValue }
-  }
-  
-  /// Determine the transition behaviour of menu items while scrolling
-  /// the content. _Default: .scrollAlongside_
-  public var menuTransition: PagingMenuTransition {
-    get { return options.menuTransition }
-    set { options.menuTransition = newValue }
-  }
-  
-  /// Determine how users can interact with the menu items.
-  /// _Default: .scrolling_
-  public var menuInteraction: PagingMenuInteraction {
-    get { return options.menuInteraction }
-    set { options.menuInteraction = newValue }
-  }
-  
-  /// The class type for collection view layout. Override this if you
-  /// want to use your own subclass of the layout. Setting this
-  /// property will initialize the new layout type and update the
-  /// collection view.
-  /// _Default: PagingCollectionViewLayout.self_
-  public var menuLayoutClass: PagingCollectionViewLayout.Type {
-    get { return options.menuLayoutClass }
-    set { options.menuLayoutClass = newValue }
-  }
-  
-  /// Determine how the selected menu item should be aligned when it
-  /// is selected. Effectivly the same as the
-  /// `UICollectionViewScrollPosition`. _Default: .preferCentered_
-  public var selectedScrollPosition: PagingSelectedScrollPosition {
-    get { return options.selectedScrollPosition }
-    set { options.selectedScrollPosition = newValue }
-  }
-  
-  /// Add an indicator view to the selected menu item. The indicator
-  /// width will be equal to the selected menu items width. Insets
-  /// only apply horizontally. _Default: .visible_
-  public var indicatorOptions: PagingIndicatorOptions {
-    get { return options.indicatorOptions }
-    set { options.indicatorOptions = newValue }
-  }
-  
-  /// The class type for the indicator view. Override this if you want
-  /// your use your own subclass of PagingIndicatorView. _Default:
-  /// PagingIndicatorView.self_
-  public var indicatorClass: PagingIndicatorView.Type {
-    get { return options.indicatorClass }
-    set { options.indicatorClass = newValue }
-  }
-  
-  /// Determine the color of the indicator view.
-  public var indicatorColor: UIColor {
-    get { return options.indicatorColor }
-    set { options.indicatorColor = newValue }
-  }
-  
-  /// Add a border at the bottom of the menu items. The border will be
-  /// as wide as all the menu items. Insets only apply horizontally.
-  /// _Default: .visible_
-  public var borderOptions: PagingBorderOptions {
-    get { return options.borderOptions }
-    set { options.borderOptions = newValue }
-  }
-  
-  /// The class type for the border view. Override this if you want
-  /// your use your own subclass of PagingBorderView. _Default:
-  /// PagingBorderView.self_
-  public var borderClass: PagingBorderView.Type {
-    get { return options.borderClass }
-    set { options.borderClass = newValue }
-  }
-  
-  /// Determine the color of the border view.
-  public var borderColor: UIColor {
-    get { return options.borderColor }
-    set { options.borderColor = newValue }
-  }
-  
-  /// Updates the content inset for the menu items based on the
-  /// .safeAreaInsets property. _Default: true_
-  public var includeSafeAreaInsets: Bool {
-    get { return options.includeSafeAreaInsets }
-    set { options.includeSafeAreaInsets = newValue }
-  }
-  
-  /// The font used for title label on the menu items.
-  public var font: UIFont {
-     get { return options.font }
-     set { options.font = newValue }
-  }
-  
-  /// The font used for the currently selected menu item.
-  public var selectedFont: UIFont {
-     get { return options.selectedFont }
-     set { options.selectedFont = newValue }
-  }
-  
-  /// The color of the title label on the menu items.
-  public var textColor: UIColor {
-     get { return options.textColor }
-     set { options.textColor = newValue }
-  }
-  
-  /// The text color for the currently selected menu item.
-  public var selectedTextColor: UIColor {
-     get { return options.selectedTextColor }
-     set { options.selectedTextColor = newValue }
-  }
-  
-  /// The background color for the menu items.
-  open override var backgroundColor: UIColor? {
-    didSet {
-      if let backgroundColor = backgroundColor {
-        options.backgroundColor = backgroundColor
-      }
-    }
-  }
-  
-  /// The background color for the selected menu item.
-  public var selectedBackgroundColor: UIColor {
-     get { return options.selectedBackgroundColor }
-     set { options.selectedBackgroundColor = newValue }
-  }
-  
-  /// The background color for the view behind the menu items.
-  public var menuBackgroundColor: UIColor {
-     get { return options.menuBackgroundColor }
-     set { options.menuBackgroundColor = newValue }
-  }
-  
-  public weak var delegate: PagingMenuDelegate? {
-    didSet {
-      pagingController.delegate = delegate
-    }
-  }
-  
-  public weak var dataSource: PagingMenuDataSource? {
-    didSet {
-      pagingController.dataSource = dataSource
-    }
-  }
-  
-  /// The current state of the menu items. Indicates whether an item
-  /// is currently selected or is scrolling to another item. Can be
-  /// used to get the distance and progress of any ongoing transition.
-  public var state: PagingState {
-    return pagingController.state
-  }
-  
-  /// The `PagingItem`'s that are currently visible in the collection
-  /// view. The items in this array are not necessarily the same as
-  /// the `visibleCells` property on `UICollectionView`.
-  public var visibleItems: PagingItems {
-    return pagingController.visibleItems
-  }
-  
-  /// A custom collection view layout that lays out all the menu items
-  /// horizontally. You can customize the behavior of the layout by
-  /// setting the customization properties on `PagingViewController`.
-  /// You can also use your own subclass of the layout by defining the
-  /// `menuLayoutClass` property.
-  public private(set) lazy var collectionViewLayout: PagingCollectionViewLayout = {
-    return createLayout(layout: options.menuLayoutClass.self)
-  }()
-  
-  /// Used to display the menu items that scrolls along with the
-  /// content. Using a collection view means you can create custom
-  /// cells that display pretty much anything. By default, scrolling
-  /// is enabled in the collection view.
-  public lazy var collectionView: UICollectionView = {
-    return UICollectionView(frame: .zero, collectionViewLayout: collectionViewLayout)
-  }()
-  
-  /// An instance that stores all the customization so that it's
-  /// easier to share between other classes.
-  public private(set) var options = PagingOptions() {
-    didSet {
-      if options.menuLayoutClass != oldValue.menuLayoutClass {
-        let layout = createLayout(layout: options.menuLayoutClass.self)
-        collectionViewLayout = layout
-        collectionViewLayout.options = options
-        collectionView.setCollectionViewLayout(layout, animated: false)
-      }
-      else {
-        collectionViewLayout.options = options
-      }
-      
-      pagingController.options = options
-    }
-  }
-  
-  // MARK: Private Properties
-  
-  private lazy var pagingController = PagingController(options: options)
-  
-  // MARK: Initializers
-  
-  /// Creates an instance of `PagingViewController`. You need to call
-  /// `select(pagingItem:animated:)` in order to set the initial view
-  /// controller before any items become visible.
-  public override init(frame: CGRect) {
-    super.init(frame: frame)
-    configure()
-  }
-  
-  required public init?(coder: NSCoder) {
-    super.init(coder: coder)
-    configure()
-  }
-  
-  // TODO: Figure out how we can remove this method.
-  open func viewAppeared() {
-    pagingController.viewAppeared()
-  }
-  
-  open func transitionSize() {
-    pagingController.transitionSize()
-  }
-  
-  open func contentScrolled(progress: CGFloat) {
-    pagingController.contentScrolled(progress: progress)
-  }
-  
-  open func contentFinishedScrolling() {
-    pagingController.contentFinishedScrolling()
-  }
-  
-  /// Reload data around given paging item. This will set the given
-  /// paging item as selected and generate new items around it.
-  ///
-  /// - Parameter pagingItem: The `PagingItem` that will be selected
-  /// after the data reloads.
-  open func reload(around pagingItem: PagingItem) {
-    pagingController.reloadMenu(around: pagingItem)
-  }
-  
-  /// Selects a given paging item. This need to be called after you
-  /// initilize the `PagingViewController` to set the initial
-  /// `PagingItem`. This can be called both before and after the view
-  /// has been loaded. You can also use this to programmatically
-  /// navigate to another `PagingItem`.
-  ///
-  /// - Parameter pagingItem: The `PagingItem` to be displayed.
-  /// - Parameter animated: A boolean value that indicates whether
-  /// the transtion should be animated. Default is false.
-  open func select(pagingItem: PagingItem, animated: Bool = false) {
-    pagingController.select(pagingItem: pagingItem, animated: animated)
-  }
-  
-  // MARK: Private Methods
-  
-  private func configure() {
-    collectionView.backgroundColor = options.menuBackgroundColor
-    collectionView.delegate = self
-    addSubview(collectionView)
-    constrainToEdges(collectionView)
-    
-    pagingController.collectionView = collectionView
-    pagingController.collectionViewLayout = collectionViewLayout
-  }
-  
+    // MARK: Public Properties
+
+    /// The size for each of the menu items. _Default:
+    /// .sizeToFit(minWidth: 150, height: 40)_
+    public var menuItemSize: PagingMenuItemSize {
+        get { return options.menuItemSize }
+        set { options.menuItemSize = newValue }
+    }
+
+    /// Determine the spacing between the menu items. _Default: 0_
+    public var menuItemSpacing: CGFloat {
+        get { return options.menuItemSpacing }
+        set { options.menuItemSpacing = newValue }
+    }
+
+    /// Determine the horizontal constraints of menu item label. _Default: 20_
+    public var menuItemLabelSpacing: CGFloat {
+        get { return options.menuItemLabelSpacing }
+        set { options.menuItemLabelSpacing = newValue }
+    }
+
+    /// Determine the insets at around all the menu items. _Default:
+    /// UIEdgeInsets.zero_
+    public var menuInsets: UIEdgeInsets {
+        get { return options.menuInsets }
+        set { options.menuInsets = newValue }
+    }
+
+    /// Determine whether the menu items should be centered when all the
+    /// items can fit within the bounds of the view. _Default: .left_
+    public var menuHorizontalAlignment: PagingMenuHorizontalAlignment {
+        get { return options.menuHorizontalAlignment }
+        set { options.menuHorizontalAlignment = newValue }
+    }
+
+    /// Determine the transition behaviour of menu items while scrolling
+    /// the content. _Default: .scrollAlongside_
+    public var menuTransition: PagingMenuTransition {
+        get { return options.menuTransition }
+        set { options.menuTransition = newValue }
+    }
+
+    /// Determine how users can interact with the menu items.
+    /// _Default: .scrolling_
+    public var menuInteraction: PagingMenuInteraction {
+        get { return options.menuInteraction }
+        set { options.menuInteraction = newValue }
+    }
+
+    /// The class type for collection view layout. Override this if you
+    /// want to use your own subclass of the layout. Setting this
+    /// property will initialize the new layout type and update the
+    /// collection view.
+    /// _Default: PagingCollectionViewLayout.self_
+    public var menuLayoutClass: PagingCollectionViewLayout.Type {
+        get { return options.menuLayoutClass }
+        set { options.menuLayoutClass = newValue }
+    }
+
+    /// Determine how the selected menu item should be aligned when it
+    /// is selected. Effectivly the same as the
+    /// `UICollectionViewScrollPosition`. _Default: .preferCentered_
+    public var selectedScrollPosition: PagingSelectedScrollPosition {
+        get { return options.selectedScrollPosition }
+        set { options.selectedScrollPosition = newValue }
+    }
+
+    /// Add an indicator view to the selected menu item. The indicator
+    /// width will be equal to the selected menu items width. Insets
+    /// only apply horizontally. _Default: .visible_
+    public var indicatorOptions: PagingIndicatorOptions {
+        get { return options.indicatorOptions }
+        set { options.indicatorOptions = newValue }
+    }
+
+    /// The class type for the indicator view. Override this if you want
+    /// your use your own subclass of PagingIndicatorView. _Default:
+    /// PagingIndicatorView.self_
+    public var indicatorClass: PagingIndicatorView.Type {
+        get { return options.indicatorClass }
+        set { options.indicatorClass = newValue }
+    }
+
+    /// Determine the color of the indicator view.
+    public var indicatorColor: UIColor {
+        get { return options.indicatorColor }
+        set { options.indicatorColor = newValue }
+    }
+
+    /// Add a border at the bottom of the menu items. The border will be
+    /// as wide as all the menu items. Insets only apply horizontally.
+    /// _Default: .visible_
+    public var borderOptions: PagingBorderOptions {
+        get { return options.borderOptions }
+        set { options.borderOptions = newValue }
+    }
+
+    /// The class type for the border view. Override this if you want
+    /// your use your own subclass of PagingBorderView. _Default:
+    /// PagingBorderView.self_
+    public var borderClass: PagingBorderView.Type {
+        get { return options.borderClass }
+        set { options.borderClass = newValue }
+    }
+
+    /// Determine the color of the border view.
+    public var borderColor: UIColor {
+        get { return options.borderColor }
+        set { options.borderColor = newValue }
+    }
+
+    /// Updates the content inset for the menu items based on the
+    /// .safeAreaInsets property. _Default: true_
+    public var includeSafeAreaInsets: Bool {
+        get { return options.includeSafeAreaInsets }
+        set { options.includeSafeAreaInsets = newValue }
+    }
+
+    /// The font used for title label on the menu items.
+    public var font: UIFont {
+        get { return options.font }
+        set { options.font = newValue }
+    }
+
+    /// The font used for the currently selected menu item.
+    public var selectedFont: UIFont {
+        get { return options.selectedFont }
+        set { options.selectedFont = newValue }
+    }
+
+    /// The color of the title label on the menu items.
+    public var textColor: UIColor {
+        get { return options.textColor }
+        set { options.textColor = newValue }
+    }
+
+    /// The text color for the currently selected menu item.
+    public var selectedTextColor: UIColor {
+        get { return options.selectedTextColor }
+        set { options.selectedTextColor = newValue }
+    }
+
+    /// The background color for the menu items.
+    open override var backgroundColor: UIColor? {
+        didSet {
+            if let backgroundColor = backgroundColor {
+                options.backgroundColor = backgroundColor
+            }
+        }
+    }
+
+    /// The background color for the selected menu item.
+    public var selectedBackgroundColor: UIColor {
+        get { return options.selectedBackgroundColor }
+        set { options.selectedBackgroundColor = newValue }
+    }
+
+    /// The background color for the view behind the menu items.
+    public var menuBackgroundColor: UIColor {
+        get { return options.menuBackgroundColor }
+        set { options.menuBackgroundColor = newValue }
+    }
+
+    public weak var delegate: PagingMenuDelegate? {
+        didSet {
+            pagingController.delegate = delegate
+        }
+    }
+
+    public weak var dataSource: PagingMenuDataSource? {
+        didSet {
+            pagingController.dataSource = dataSource
+        }
+    }
+
+    /// The current state of the menu items. Indicates whether an item
+    /// is currently selected or is scrolling to another item. Can be
+    /// used to get the distance and progress of any ongoing transition.
+    public var state: PagingState {
+        return pagingController.state
+    }
+
+    /// The `PagingItem`'s that are currently visible in the collection
+    /// view. The items in this array are not necessarily the same as
+    /// the `visibleCells` property on `UICollectionView`.
+    public var visibleItems: PagingItems {
+        return pagingController.visibleItems
+    }
+
+    /// A custom collection view layout that lays out all the menu items
+    /// horizontally. You can customize the behavior of the layout by
+    /// setting the customization properties on `PagingViewController`.
+    /// You can also use your own subclass of the layout by defining the
+    /// `menuLayoutClass` property.
+    public private(set) lazy var collectionViewLayout: PagingCollectionViewLayout = {
+        createLayout(layout: options.menuLayoutClass.self)
+    }()
+
+    /// Used to display the menu items that scrolls along with the
+    /// content. Using a collection view means you can create custom
+    /// cells that display pretty much anything. By default, scrolling
+    /// is enabled in the collection view.
+    public lazy var collectionView: UICollectionView = {
+        UICollectionView(frame: .zero, collectionViewLayout: collectionViewLayout)
+    }()
+
+    /// An instance that stores all the customization so that it's
+    /// easier to share between other classes.
+    public private(set) var options = PagingOptions() {
+        didSet {
+            if options.menuLayoutClass != oldValue.menuLayoutClass {
+                let layout = createLayout(layout: options.menuLayoutClass.self)
+                collectionViewLayout = layout
+                collectionViewLayout.options = options
+                collectionView.setCollectionViewLayout(layout, animated: false)
+            } else {
+                collectionViewLayout.options = options
+            }
+
+            pagingController.options = options
+        }
+    }
+
+    // MARK: Private Properties
+
+    private lazy var pagingController = PagingController(options: options)
+
+    // MARK: Initializers
+
+    /// Creates an instance of `PagingViewController`. You need to call
+    /// `select(pagingItem:animated:)` in order to set the initial view
+    /// controller before any items become visible.
+    public override init(frame: CGRect) {
+        super.init(frame: frame)
+        configure()
+    }
+
+    public required init?(coder: NSCoder) {
+        super.init(coder: coder)
+        configure()
+    }
+
+    // TODO: Figure out how we can remove this method.
+    open func viewAppeared() {
+        pagingController.viewAppeared()
+    }
+
+    open func transitionSize() {
+        pagingController.transitionSize()
+    }
+
+    open func contentScrolled(progress: CGFloat) {
+        pagingController.contentScrolled(progress: progress)
+    }
+
+    open func contentFinishedScrolling() {
+        pagingController.contentFinishedScrolling()
+    }
+
+    /// Reload data around given paging item. This will set the given
+    /// paging item as selected and generate new items around it.
+    ///
+    /// - Parameter pagingItem: The `PagingItem` that will be selected
+    /// after the data reloads.
+    open func reload(around pagingItem: PagingItem) {
+        pagingController.reloadMenu(around: pagingItem)
+    }
+
+    /// Selects a given paging item. This need to be called after you
+    /// initilize the `PagingViewController` to set the initial
+    /// `PagingItem`. This can be called both before and after the view
+    /// has been loaded. You can also use this to programmatically
+    /// navigate to another `PagingItem`.
+    ///
+    /// - Parameter pagingItem: The `PagingItem` to be displayed.
+    /// - Parameter animated: A boolean value that indicates whether
+    /// the transtion should be animated. Default is false.
+    open func select(pagingItem: PagingItem, animated: Bool = false) {
+        pagingController.select(pagingItem: pagingItem, animated: animated)
+    }
+
+    // MARK: Private Methods
+
+    private func configure() {
+        collectionView.backgroundColor = options.menuBackgroundColor
+        collectionView.delegate = self
+        addSubview(collectionView)
+        constrainToEdges(collectionView)
+
+        pagingController.collectionView = collectionView
+        pagingController.collectionViewLayout = collectionViewLayout
+    }
 }
 
 extension PagingMenuView: UICollectionViewDelegate {
-  
-  public func scrollViewDidScroll(_ scrollView: UIScrollView) {
-    pagingController.menuScrolled()
-  }
-  
-  public func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
-    pagingController.select(indexPath: indexPath, animated: true)
-  }
-  
+    public func scrollViewDidScroll(_: UIScrollView) {
+        pagingController.menuScrolled()
+    }
+
+    public func collectionView(_: UICollectionView, didSelectItemAt indexPath: IndexPath) {
+        pagingController.select(indexPath: indexPath, animated: true)
+    }
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Classes/PagingOptions.swift b/OpenBook/Pods/Parchment/Parchment/Classes/PagingOptions.swift
index c833ecde..7c538f70 100644
--- a/OpenBook/Pods/Parchment/Parchment/Classes/PagingOptions.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Classes/PagingOptions.swift
@@ -1,184 +1,177 @@
 import UIKit
 
 public struct PagingOptions {
-  
-  /// The size for each of the menu items. _Default:
-  /// .sizeToFit(minWidth: 150, height: 40)_
-  public var menuItemSize: PagingMenuItemSize
+    /// The size for each of the menu items. _Default:
+    /// .sizeToFit(minWidth: 150, height: 40)_
+    public var menuItemSize: PagingMenuItemSize
+
+    /// Determine the spacing between the menu items. _Default: 0_
+    public var menuItemSpacing: CGFloat
+
+    /// Determine the horizontal constraints of menu item label. _Default: 20_
+    public var menuItemLabelSpacing: CGFloat
+
+    /// Determine the insets at around all the menu items. _Default:
+    /// UIEdgeInsets.zero_
+    public var menuInsets: UIEdgeInsets
+
+    /// Determine whether the menu items should be centered when all the
+    /// items can fit within the bounds of the view. _Default: .left_
+    public var menuHorizontalAlignment: PagingMenuHorizontalAlignment
+
+    /// Determine the position of the menu relative to the content.
+    /// _Default: .top_
+    public var menuPosition: PagingMenuPosition
+
+    /// Determine the transition behaviour of menu items while scrolling
+    /// the content. _Default: .scrollAlongside_
+    public var menuTransition: PagingMenuTransition
+
+    /// Determine how users can interact with the menu items.
+    /// _Default: .scrolling_
+    public var menuInteraction: PagingMenuInteraction
+    
+    /// Determine how users can interact with the contents
+    /// _Default: .scrolling_
+    public var contentInteraction: PagingContentInteraction
+
+    /// The class type for collection view layout. Override this if you
+    /// want to use your own subclass of the layout. Setting this
+    /// property will initialize the new layout type and update the
+    /// collection view.
+    /// _Default: PagingCollectionViewLayout.self_
+    public var menuLayoutClass: PagingCollectionViewLayout.Type
+
+    /// Determine how the selected menu item should be aligned when it
+    /// is selected. Effectivly the same as the
+    /// `UICollectionViewScrollPosition`. _Default: .preferCentered_
+    public var selectedScrollPosition: PagingSelectedScrollPosition
+
+    /// Add an indicator view to the selected menu item. The indicator
+    /// width will be equal to the selected menu items width. Insets
+    /// only apply horizontally. _Default: .visible_
+    public var indicatorOptions: PagingIndicatorOptions
+
+    /// The class type for the indicator view. Override this if you want
+    /// your use your own subclass of PagingIndicatorView. _Default:
+    /// PagingIndicatorView.self_
+    public var indicatorClass: PagingIndicatorView.Type
+
+    /// Determine the color of the indicator view.
+    public var indicatorColor: UIColor
+
+    /// Add a border at the bottom of the menu items. The border will be
+    /// as wide as all the menu items. Insets only apply horizontally.
+    /// _Default: .visible_
+    public var borderOptions: PagingBorderOptions
+
+    /// The class type for the border view. Override this if you want
+    /// your use your own subclass of PagingBorderView. _Default:
+    /// PagingBorderView.self_
+    public var borderClass: PagingBorderView.Type
+
+    /// Determine the color of the border view.
+    public var borderColor: UIColor
+
+    /// Updates the content inset for the menu items based on the
+    /// .safeAreaInsets property. _Default: true_
+    public var includeSafeAreaInsets: Bool
+
+    /// The font used for title label on the menu items.
+    public var font: UIFont
+
+    /// The font used for the currently selected menu item.
+    public var selectedFont: UIFont
+
+    /// The color of the title label on the menu items.
+    public var textColor: UIColor
+
+    /// The text color for the currently selected menu item.
+    public var selectedTextColor: UIColor
+
+    /// The background color for the menu items.
+    public var backgroundColor: UIColor
+
+    /// The background color for the selected menu item.
+    public var selectedBackgroundColor: UIColor
+
+    /// The background color for the view behind the menu items.
+    public var menuBackgroundColor: UIColor
     
-  /// Determine the spacing between the menu items. _Default: 0_
-  public var menuItemSpacing: CGFloat
-  
-  /// Determine the horizontal constraints of menu item label. _Default: 20_
-  public var menuItemLabelSpacing: CGFloat
-
-  /// Determine the insets at around all the menu items. _Default:
-  /// UIEdgeInsets.zero_
-  public var menuInsets: UIEdgeInsets
-  
-  /// Determine whether the menu items should be centered when all the
-  /// items can fit within the bounds of the view. _Default: .left_
-  public var menuHorizontalAlignment: PagingMenuHorizontalAlignment
-
-  /// Determine the position of the menu relative to the content.
-  /// _Default: .top_
-  public var menuPosition: PagingMenuPosition
-  
-  /// Determine the transition behaviour of menu items while scrolling
-  /// the content. _Default: .scrollAlongside_
-  public var menuTransition: PagingMenuTransition
-  
-  /// Determine how users can interact with the menu items.
-  /// _Default: .scrolling_
-  public var menuInteraction: PagingMenuInteraction
-  
-  /// The class type for collection view layout. Override this if you
-  /// want to use your own subclass of the layout. Setting this
-  /// property will initialize the new layout type and update the
-  /// collection view.
-  /// _Default: PagingCollectionViewLayout.self_
-  public var menuLayoutClass: PagingCollectionViewLayout.Type
-  
-  /// Determine how the selected menu item should be aligned when it
-  /// is selected. Effectivly the same as the
-  /// `UICollectionViewScrollPosition`. _Default: .preferCentered_
-  public var selectedScrollPosition: PagingSelectedScrollPosition
-  
-  /// Add an indicator view to the selected menu item. The indicator
-  /// width will be equal to the selected menu items width. Insets
-  /// only apply horizontally. _Default: .visible_
-  public var indicatorOptions: PagingIndicatorOptions
-  
-  /// The class type for the indicator view. Override this if you want
-  /// your use your own subclass of PagingIndicatorView. _Default:
-  /// PagingIndicatorView.self_
-  public var indicatorClass: PagingIndicatorView.Type
-  
-  /// Determine the color of the indicator view.
-  public var indicatorColor: UIColor
-  
-  /// Add a border at the bottom of the menu items. The border will be
-  /// as wide as all the menu items. Insets only apply horizontally.
-  /// _Default: .visible_
-  public var borderOptions: PagingBorderOptions
-  
-  /// The class type for the border view. Override this if you want
-  /// your use your own subclass of PagingBorderView. _Default:
-  /// PagingBorderView.self_
-  public var borderClass: PagingBorderView.Type
-  
-  /// Determine the color of the border view.
-  public var borderColor: UIColor
-  
-  /// Updates the content inset for the menu items based on the
-  /// .safeAreaInsets property. _Default: true_
-  public var includeSafeAreaInsets: Bool
-  
-  /// The font used for title label on the menu items.
-  public var font: UIFont
-  
-  /// The font used for the currently selected menu item.
-  public var selectedFont: UIFont
-  
-  /// The color of the title label on the menu items.
-  public var textColor: UIColor
-  
-  /// The text color for the currently selected menu item.
-  public var selectedTextColor: UIColor
-  
-  /// The background color for the menu items.
-  public var backgroundColor: UIColor
-  
-  /// The background color for the selected menu item.
-  public var selectedBackgroundColor: UIColor
-  
-  /// The background color for the view behind the menu items.
-  public var menuBackgroundColor: UIColor
-  
-  /// The scroll navigation orientation of the content in the page
-  /// view controller. _Default: .horizontal_
-  public var contentNavigationOrientation: PagingNavigationOrientation
-  
-  #if swift(>=4.2)
-  public var scrollPosition: UICollectionView.ScrollPosition {
-    switch selectedScrollPosition {
-    case .left:
-      return UICollectionView.ScrollPosition.left
-    case .right:
-      return UICollectionView.ScrollPosition.right
-    case .preferCentered, .center:
-      return UICollectionView.ScrollPosition.centeredHorizontally
+    /// The background color for the paging contents
+    /// _Default: .white
+    public var pagingContentBackgroundColor: UIColor
+
+    /// The scroll navigation orientation of the content in the page
+    /// view controller. _Default: .horizontal_
+    public var contentNavigationOrientation: PagingNavigationOrientation
+
+    public var scrollPosition: UICollectionView.ScrollPosition {
+        switch selectedScrollPosition {
+        case .left:
+            return UICollectionView.ScrollPosition.left
+        case .right:
+            return UICollectionView.ScrollPosition.right
+        case .preferCentered, .center:
+            return UICollectionView.ScrollPosition.centeredHorizontally
+        }
+    }
+
+    public var menuHeight: CGFloat {
+        return menuItemSize.height + menuInsets.top + menuInsets.bottom
     }
-  }
-  #else
-  public var scrollPosition: UICollectionViewScrollPosition {
-    switch selectedScrollPosition {
-    case .left:
-      return UICollectionViewScrollPosition.left
-    case .right:
-      return UICollectionViewScrollPosition.right
-    case .preferCentered, .center:
-      return UICollectionViewScrollPosition.centeredHorizontally
+
+    public var estimatedItemWidth: CGFloat {
+        switch menuItemSize {
+        case let .fixed(width, _):
+            return width
+        case let .sizeToFit(minWidth, _):
+            return minWidth
+        case let .selfSizing(estimatedItemWidth, _):
+            return estimatedItemWidth
+        }
     }
-  }
-  #endif
-  
-  public var menuHeight: CGFloat {
-    return menuItemSize.height + menuInsets.top + menuInsets.bottom
-  }
-  
-  public var estimatedItemWidth: CGFloat {
-    switch menuItemSize {
-    case let .fixed(width, _):
-      return width
-    case let .sizeToFit(minWidth, _):
-      return minWidth
-    case let .selfSizing(estimatedItemWidth, _):
-      return estimatedItemWidth
+
+    public init() {
+        selectedScrollPosition = .preferCentered
+        menuItemSize = .sizeToFit(minWidth: 150, height: 40)
+        menuPosition = .top
+        menuTransition = .scrollAlongside
+        menuInteraction = .scrolling
+        menuInsets = UIEdgeInsets.zero
+        menuItemSpacing = 0
+        menuItemLabelSpacing = 20
+        menuHorizontalAlignment = .left
+        includeSafeAreaInsets = true
+        indicatorClass = PagingIndicatorView.self
+        borderClass = PagingBorderView.self
+        menuLayoutClass = PagingCollectionViewLayout.self
+
+        indicatorOptions = .visible(
+            height: 4,
+            zIndex: Int.max,
+            spacing: UIEdgeInsets.zero,
+            insets: UIEdgeInsets(top: 0, left: 8, bottom: 0, right: 8)
+        )
+
+        borderOptions = .visible(
+            height: 1,
+            zIndex: Int.max - 1,
+            insets: UIEdgeInsets(top: 0, left: 8, bottom: 0, right: 8)
+        )
+
+        font = UIFont.systemFont(ofSize: 15, weight: UIFont.Weight.medium)
+        selectedFont = UIFont.systemFont(ofSize: 15, weight: UIFont.Weight.medium)
+
+        textColor = UIColor.black
+        selectedTextColor = UIColor(red: 3 / 255, green: 125 / 255, blue: 233 / 255, alpha: 1)
+        backgroundColor = .clear
+        selectedBackgroundColor = .clear
+        pagingContentBackgroundColor = .white
+        menuBackgroundColor = UIColor.white
+        borderColor = UIColor(white: 0.9, alpha: 1)
+        indicatorColor = UIColor(red: 3 / 255, green: 125 / 255, blue: 233 / 255, alpha: 1)
+        contentNavigationOrientation = .horizontal
+        contentInteraction = .scrolling
     }
-  }
-  
-  public init() {
-    selectedScrollPosition = .preferCentered
-    menuItemSize = .sizeToFit(minWidth: 150, height: 40)
-    menuPosition = .top
-    menuTransition = .scrollAlongside
-    menuInteraction = .scrolling
-    menuInsets = UIEdgeInsets.zero
-    menuItemSpacing = 0
-    menuItemLabelSpacing = 20
-    menuHorizontalAlignment = .left
-    includeSafeAreaInsets = true
-    indicatorClass = PagingIndicatorView.self
-    borderClass = PagingBorderView.self
-    menuLayoutClass = PagingCollectionViewLayout.self
-    
-    indicatorOptions = .visible(
-        height: 4,
-        zIndex: Int.max,
-        spacing: UIEdgeInsets.zero,
-        insets: UIEdgeInsets(top: 0, left: 8, bottom: 0, right: 8))
-  
-    borderOptions = .visible(
-        height: 1,
-        zIndex: Int.max - 1,
-        insets: UIEdgeInsets(top: 0, left: 8, bottom: 0, right: 8))
-
-    #if swift(>=4.0)
-    font = UIFont.systemFont(ofSize: 15, weight: UIFont.Weight.medium)
-    selectedFont = UIFont.systemFont(ofSize: 15, weight: UIFont.Weight.medium)
-    #else
-    font = UIFont.systemFont(ofSize: 15, weight: UIFontWeightMedium)
-    selectedFont = UIFont.systemFont(ofSize: 15, weight: UIFontWeightMedium)
-    #endif
-    
-    textColor = UIColor.black
-    selectedTextColor = UIColor(red: 3/255, green: 125/255, blue: 233/255, alpha: 1)
-    backgroundColor = .clear
-    selectedBackgroundColor = .clear
-    menuBackgroundColor = UIColor.white
-    borderColor = UIColor(white: 0.9, alpha: 1)
-    indicatorColor = UIColor(red: 3/255, green: 125/255, blue: 233/255, alpha: 1)
-    contentNavigationOrientation = .horizontal
-  }
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Classes/PagingSizeCache.swift b/OpenBook/Pods/Parchment/Parchment/Classes/PagingSizeCache.swift
index ff4caa48..56cd175c 100644
--- a/OpenBook/Pods/Parchment/Parchment/Classes/PagingSizeCache.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Classes/PagingSizeCache.swift
@@ -2,71 +2,64 @@ import Foundation
 import UIKit
 
 class PagingSizeCache {
-  
-  var options: PagingOptions
-  var implementsSizeDelegate: Bool = false
-  var sizeForPagingItem: ((PagingItem, Bool) -> CGFloat?)?
-  
-  private var sizeCache: [Int: CGFloat] = [:]
-  private var selectedSizeCache: [Int: CGFloat] = [:]
-  
-  init(options: PagingOptions) {
-    self.options = options
-    
-    #if swift(>=4.2)
-    let didEnterBackground = UIApplication.didEnterBackgroundNotification
-    let didReceiveMemoryWarning = UIApplication.didReceiveMemoryWarningNotification
-    #else
-    let didEnterBackground = NSNotification.Name.UIApplicationDidEnterBackground
-    let didReceiveMemoryWarning = NSNotification.Name.UIApplicationDidReceiveMemoryWarning
-    #endif
-    
-    NotificationCenter.default.addObserver(self,
-      selector: #selector(applicationDidEnterBackground(notification:)),
-      name: didEnterBackground,
-      object: nil)
-    
-    NotificationCenter.default.addObserver(self,
-      selector: #selector(didReceiveMemoryWarning(notification:)),
-      name: didReceiveMemoryWarning,
-      object: nil)
-  }
-  
-  deinit {
-    NotificationCenter.default.removeObserver(self)
-  }
-  
-  func clear() {
-    self.sizeCache =  [:]
-    self.selectedSizeCache = [:]
-  }
-  
-  func itemSize(for pagingItem: PagingItem) -> CGFloat {
-    if let size = sizeCache[pagingItem.identifier] {
-      return size
-    } else {
-      let size = sizeForPagingItem?(pagingItem, false)
-      sizeCache[pagingItem.identifier] = size
-      return size ?? options.estimatedItemWidth
+    var options: PagingOptions
+    var implementsSizeDelegate: Bool = false
+    var sizeForPagingItem: ((PagingItem, Bool) -> CGFloat?)?
+
+    private var sizeCache: [Int: CGFloat] = [:]
+    private var selectedSizeCache: [Int: CGFloat] = [:]
+
+    init(options: PagingOptions) {
+        self.options = options
+
+        let didEnterBackground = UIApplication.didEnterBackgroundNotification
+        let didReceiveMemoryWarning = UIApplication.didReceiveMemoryWarningNotification
+
+        NotificationCenter.default.addObserver(self,
+                                               selector: #selector(applicationDidEnterBackground(notification:)),
+                                               name: didEnterBackground,
+                                               object: nil)
+
+        NotificationCenter.default.addObserver(self,
+                                               selector: #selector(didReceiveMemoryWarning(notification:)),
+                                               name: didReceiveMemoryWarning,
+                                               object: nil)
+    }
+
+    deinit {
+        NotificationCenter.default.removeObserver(self)
+    }
+
+    func clear() {
+        sizeCache = [:]
+        selectedSizeCache = [:]
+    }
+
+    func itemSize(for pagingItem: PagingItem) -> CGFloat {
+        if let size = sizeCache[pagingItem.identifier] {
+            return size
+        } else {
+            let size = sizeForPagingItem?(pagingItem, false)
+            sizeCache[pagingItem.identifier] = size
+            return size ?? options.estimatedItemWidth
+        }
+    }
+
+    func itemWidthSelected(for pagingItem: PagingItem) -> CGFloat {
+        if let size = selectedSizeCache[pagingItem.identifier] {
+            return size
+        } else {
+            let size = sizeForPagingItem?(pagingItem, true)
+            selectedSizeCache[pagingItem.identifier] = size
+            return size ?? options.estimatedItemWidth
+        }
+    }
+
+    @objc private func didReceiveMemoryWarning(notification _: NSNotification) {
+        clear()
     }
-  }
-  
-  func itemWidthSelected(for pagingItem: PagingItem) -> CGFloat {
-    if let size = selectedSizeCache[pagingItem.identifier] {
-      return size
-    } else {
-      let size = sizeForPagingItem?(pagingItem, true)
-      selectedSizeCache[pagingItem.identifier] = size
-      return size ?? options.estimatedItemWidth
+
+    @objc private func applicationDidEnterBackground(notification _: NSNotification) {
+        clear()
     }
-  }
-  
-  @objc private func didReceiveMemoryWarning(notification: NSNotification) {
-    self.clear()
-  }
-  
-  @objc private func applicationDidEnterBackground(notification: NSNotification) {
-    self.clear()
-  }
-  
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Classes/PagingStaticDataSource.swift b/OpenBook/Pods/Parchment/Parchment/Classes/PagingStaticDataSource.swift
index 347e3f3f..e4c24183 100644
--- a/OpenBook/Pods/Parchment/Parchment/Classes/PagingStaticDataSource.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Classes/PagingStaticDataSource.swift
@@ -2,46 +2,44 @@ import Foundation
 import UIKit
 
 class PagingStaticDataSource: PagingViewControllerInfiniteDataSource {
-  
-  private(set) var items: [PagingItem] = []
-  private let viewControllers: [UIViewController]
-  
-  init(viewControllers: [UIViewController]) {
-    self.viewControllers = viewControllers
-    self.reloadItems()
-  }
-  
-  func pagingItem(at index: Int) -> PagingItem {
-    return items[index]
-  }
-  
-  func reloadItems() {
-    self.items = viewControllers.enumerated().map {
-      return PagingIndexItem(index: $0, title: $1.title ?? "")
+    private(set) var items: [PagingItem] = []
+    private let viewControllers: [UIViewController]
+
+    init(viewControllers: [UIViewController]) {
+        self.viewControllers = viewControllers
+        reloadItems()
+    }
+
+    func pagingItem(at index: Int) -> PagingItem {
+        return items[index]
+    }
+
+    func reloadItems() {
+        items = viewControllers.enumerated().map {
+            PagingIndexItem(index: $0, title: $1.title ?? "")
+        }
     }
-  }
-  
-  func pagingViewController(_: PagingViewController, viewControllerFor pagingItem: PagingItem) -> UIViewController {
-    guard let index = items.firstIndex(where: { $0.isEqual(to: pagingItem) }) else {
-      fatalError("pagingViewController:viewControllerFor: PagingItem does not exist")
+
+    func pagingViewController(_: PagingViewController, viewControllerFor pagingItem: PagingItem) -> UIViewController {
+        guard let index = items.firstIndex(where: { $0.isEqual(to: pagingItem) }) else {
+            fatalError("pagingViewController:viewControllerFor: PagingItem does not exist")
+        }
+        return viewControllers[index]
     }
-    return viewControllers[index]
-  }
-  
-  func pagingViewController(_: PagingViewController, itemBefore pagingItem: PagingItem) -> PagingItem? {
-    guard let index = items.firstIndex(where: { $0.isEqual(to: pagingItem) }) else { return nil }
-    if index > 0 {
-      return items[index - 1]
+
+    func pagingViewController(_: PagingViewController, itemBefore pagingItem: PagingItem) -> PagingItem? {
+        guard let index = items.firstIndex(where: { $0.isEqual(to: pagingItem) }) else { return nil }
+        if index > 0 {
+            return items[index - 1]
+        }
+        return nil
     }
-    return nil
-  }
-  
-  func pagingViewController(_: PagingViewController, itemAfter pagingItem: PagingItem) -> PagingItem? {
-    guard let index = items.firstIndex(where: { $0.isEqual(to: pagingItem) }) else { return nil }
-    if index < items.count - 1 {
-      return items[index + 1]
+
+    func pagingViewController(_: PagingViewController, itemAfter pagingItem: PagingItem) -> PagingItem? {
+        guard let index = items.firstIndex(where: { $0.isEqual(to: pagingItem) }) else { return nil }
+        if index < items.count - 1 {
+            return items[index + 1]
+        }
+        return nil
     }
-    return nil
-  }
-  
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Classes/PagingTitleCell.swift b/OpenBook/Pods/Parchment/Parchment/Classes/PagingTitleCell.swift
index 9e815248..e89e6102 100644
--- a/OpenBook/Pods/Parchment/Parchment/Classes/PagingTitleCell.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Classes/PagingTitleCell.swift
@@ -6,99 +6,107 @@ import UIKit
 /// applying layout attributes it will interpolate between the default
 /// and selected text color based on the `progress` property.
 open class PagingTitleCell: PagingCell {
-  
-  public let titleLabel = UILabel(frame: .zero)
-  private var viewModel: PagingTitleCellViewModel?
-    
-  private lazy var horizontalConstraints: [NSLayoutConstraint] = {
-    NSLayoutConstraint.constraints(
-        withVisualFormat: "H:|[label]|",
-        options: NSLayoutConstraint.FormatOptions(),
-        metrics: nil,
-        views: ["label": titleLabel])
-  }()
-    
-  private lazy var verticalConstraints: [NSLayoutConstraint] = {
-    NSLayoutConstraint.constraints(
-        withVisualFormat: "V:|[label]|",
-        options: NSLayoutConstraint.FormatOptions(),
-        metrics: nil,
-        views: ["label": titleLabel])
-  }()
-    
-  open override var isSelected: Bool {
-    didSet {
-      configureTitleLabel()
+    public let titleLabel = UILabel(frame: .zero)
+    private var viewModel: PagingTitleCellViewModel?
+
+    private lazy var horizontalConstraints: [NSLayoutConstraint] = {
+        NSLayoutConstraint.constraints(
+            withVisualFormat: "H:|[label]|",
+            options: NSLayoutConstraint.FormatOptions(),
+            metrics: nil,
+            views: ["label": titleLabel]
+        )
+    }()
+
+    private lazy var verticalConstraints: [NSLayoutConstraint] = {
+        NSLayoutConstraint.constraints(
+            withVisualFormat: "V:|[label]|",
+            options: NSLayoutConstraint.FormatOptions(),
+            metrics: nil,
+            views: ["label": titleLabel]
+        )
+    }()
+
+    open override var isSelected: Bool {
+        didSet {
+            configureTitleLabel()
+        }
     }
-  }
-  
-  public override init(frame: CGRect) {
-    super.init(frame: frame)
-    configure()
-  }
-  
-  public required init?(coder: NSCoder) {
-    super.init(coder: coder)
-    configure()
-  }
-  
-  open override func setPagingItem(_ pagingItem: PagingItem, selected: Bool, options: PagingOptions) {
-    if let titleItem = pagingItem as? PagingIndexItem {
-      viewModel = PagingTitleCellViewModel(
-        title: titleItem.title,
-        selected: selected,
-        options: options)
+
+    public override init(frame: CGRect) {
+        super.init(frame: frame)
+        configure()
     }
-    configureTitleLabel()
-    configureAccessibility()
-  }
-  
-  open func configure() {
-    contentView.addSubview(titleLabel)
-    contentView.isAccessibilityElement = true
-    titleLabel.translatesAutoresizingMaskIntoConstraints = false
-    
-    contentView.addConstraints(horizontalConstraints)
-    contentView.addConstraints(verticalConstraints)
-  }
-  
-  open func configureTitleLabel() {
-    guard let viewModel = viewModel else { return }
-    titleLabel.text = viewModel.title
-    titleLabel.textAlignment = .center
-    
-    if viewModel.selected {
-      titleLabel.font = viewModel.selectedFont
-      titleLabel.textColor = viewModel.selectedTextColor
-      backgroundColor = viewModel.selectedBackgroundColor
-    } else {
-      titleLabel.font = viewModel.font
-      titleLabel.textColor = viewModel.textColor
-      backgroundColor = viewModel.backgroundColor
+
+    public required init?(coder: NSCoder) {
+        super.init(coder: coder)
+        configure()
     }
-    
-    horizontalConstraints.forEach { $0.constant = viewModel.labelSpacing }
-  }
 
-  open func configureAccessibility() {
-    accessibilityIdentifier = viewModel?.title
-    contentView.accessibilityLabel = viewModel?.title
-    contentView.accessibilityTraits = viewModel?.selected ?? false ? .selected : .none
-  }
-  
-  open override func apply(_ layoutAttributes: UICollectionViewLayoutAttributes) {
-    super.apply(layoutAttributes)
-    guard let viewModel = viewModel else { return }
-    if let attributes = layoutAttributes as? PagingCellLayoutAttributes {
-      titleLabel.textColor = UIColor.interpolate(
-        from: viewModel.textColor,
-        to: viewModel.selectedTextColor,
-        with: attributes.progress)
-      
-      backgroundColor = UIColor.interpolate(
-        from: viewModel.backgroundColor,
-        to: viewModel.selectedBackgroundColor,
-        with: attributes.progress)
+    open override func setPagingItem(_ pagingItem: PagingItem, selected: Bool, options: PagingOptions) {
+        if let titleItem = pagingItem as? PagingIndexItem {
+            viewModel = PagingTitleCellViewModel(
+                title: titleItem.title,
+                selected: selected,
+                options: options
+            )
+        }
+        configureTitleLabel()
+        configureAccessibility()
+    }
+
+    open func configure() {
+        contentView.addSubview(titleLabel)
+        contentView.isAccessibilityElement = true
+        titleLabel.translatesAutoresizingMaskIntoConstraints = false
+
+        contentView.addConstraints(horizontalConstraints)
+        contentView.addConstraints(verticalConstraints)
+    }
+
+    open func configureTitleLabel() {
+        guard let viewModel = viewModel else { return }
+        titleLabel.text = viewModel.title
+        titleLabel.textAlignment = .center
+
+        if viewModel.selected {
+            titleLabel.font = viewModel.selectedFont
+            titleLabel.textColor = viewModel.selectedTextColor
+            backgroundColor = viewModel.selectedBackgroundColor
+        } else {
+            titleLabel.font = viewModel.font
+            titleLabel.textColor = viewModel.textColor
+            backgroundColor = viewModel.backgroundColor
+        }
+
+        horizontalConstraints.forEach { $0.constant = viewModel.labelSpacing }
+    }
+
+    open func configureAccessibility() {
+        accessibilityIdentifier = viewModel?.title
+        contentView.accessibilityLabel = viewModel?.title
+        if #available(iOS 10.0, *) {
+            contentView.accessibilityTraits = viewModel?.selected ?? false ? [.tabBar, .selected] : .tabBar
+        } else {
+            contentView.accessibilityTraits = viewModel?.selected ?? false ? .selected : .none
+        }
+    }
+
+    open override func apply(_ layoutAttributes: UICollectionViewLayoutAttributes) {
+        super.apply(layoutAttributes)
+        guard let viewModel = viewModel else { return }
+        if let attributes = layoutAttributes as? PagingCellLayoutAttributes {
+            titleLabel.textColor = UIColor.interpolate(
+                from: viewModel.textColor,
+                to: viewModel.selectedTextColor,
+                with: attributes.progress
+            )
+
+            backgroundColor = UIColor.interpolate(
+                from: viewModel.backgroundColor,
+                to: viewModel.selectedBackgroundColor,
+                with: attributes.progress
+            )
+        }
     }
-  }
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Classes/PagingView.swift b/OpenBook/Pods/Parchment/Parchment/Classes/PagingView.swift
index 376b2fae..1e0b2abf 100644
--- a/OpenBook/Pods/Parchment/Parchment/Classes/PagingView.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Classes/PagingView.swift
@@ -8,105 +8,104 @@ import UIKit
 /// constraints, you can subclass `PagingView` and override
 /// `loadView:` in `PagingViewController` to use your subclass.
 open class PagingView: UIView {
-  
-  // MARK: Public Properties
-  
-  public let collectionView: UICollectionView
-  public let pageView: UIView
-  public var options: PagingOptions {
-    didSet {
-      heightConstraint?.constant = options.menuItemSize.height
-      collectionView.backgroundColor = options.menuBackgroundColor
+    // MARK: Public Properties
+
+    public let collectionView: UICollectionView
+    public let pageView: UIView
+    public var options: PagingOptions {
+        didSet {
+            heightConstraint?.constant = options.menuItemSize.height
+            collectionView.backgroundColor = options.menuBackgroundColor
+        }
+    }
+
+    // MARK: Private Properties
+
+    private var heightConstraint: NSLayoutConstraint?
+
+    // MARK: Initializers
+
+    /// Creates an instance of `PagingView`.
+    ///
+    /// - Parameter options: The `PagingOptions` passed into the
+    /// `PagingViewController`.
+    public init(options: PagingOptions, collectionView: UICollectionView, pageView: UIView) {
+        self.options = options
+        self.collectionView = collectionView
+        self.pageView = pageView
+        super.init(frame: .zero)
+    }
+
+    public required init?(coder _: NSCoder) {
+        fatalError("init(coder:) has not been implemented")
     }
-  }
-  
-  // MARK: Private Properties
-  
-  private var heightConstraint: NSLayoutConstraint?
-  
-  // MARK: Initializers
-  
-  /// Creates an instance of `PagingView`.
-  ///
-  /// - Parameter options: The `PagingOptions` passed into the
-  /// `PagingViewController`.
-  public init(options: PagingOptions, collectionView: UICollectionView, pageView: UIView) {
-    self.options = options
-    self.collectionView = collectionView
-    self.pageView = pageView
-    super.init(frame: .zero)
-  }
-  
-  required public init?(coder: NSCoder) {
-    fatalError("init(coder:) has not been implemented")
-  }
-  
-  // MARK: Public Methods
-  
-  /// Configures the view hierarchy, sets up the layout constraints
-  /// and does any other customization based on the `PagingOptions`.
-  /// Override this if you need any custom behavior.
-  open func configure() {
-    collectionView.backgroundColor = options.menuBackgroundColor
-    addSubview(pageView)
-    addSubview(collectionView)
-    setupConstraints()
-  }
-  
-  /// Sets up all the layout constraints. Override this if you need to
-  /// make changes to how the views are layed out.
-  open func setupConstraints() {
-    collectionView.translatesAutoresizingMaskIntoConstraints = false
-    pageView.translatesAutoresizingMaskIntoConstraints = false
-    
-    let metrics = [
-      "height": options.menuHeight]
-    
-    let views = [
-      "collectionView": collectionView,
-      "pageView": pageView]
-    
-    #if swift(>=4.2)
-    let formatOptions = NSLayoutConstraint.FormatOptions()
-    #else
-    let formatOptions = NSLayoutFormatOptions()
-    #endif
-    
-    let horizontalCollectionViewContraints = NSLayoutConstraint.constraints(
-      withVisualFormat: "H:|[collectionView]|",
-      options: formatOptions,
-      metrics: metrics,
-      views: views)
-    
-    let horizontalPagingContentViewContraints = NSLayoutConstraint.constraints(
-      withVisualFormat: "H:|[pageView]|",
-      options: formatOptions,
-      metrics: metrics,
-      views: views)
-    
-    let verticalConstraintsFormat: String
-    switch options.menuPosition {
-    case .top:
-      verticalConstraintsFormat = "V:|[collectionView(==height)][pageView]|"
-    case .bottom:
-      verticalConstraintsFormat = "V:|[pageView][collectionView(==height)]|"
+
+    // MARK: Public Methods
+
+    /// Configures the view hierarchy, sets up the layout constraints
+    /// and does any other customization based on the `PagingOptions`.
+    /// Override this if you need any custom behavior.
+    open func configure() {
+        collectionView.backgroundColor = options.menuBackgroundColor
+        addSubview(pageView)
+        addSubview(collectionView)
+        setupConstraints()
     }
 
-    let verticalContraints = NSLayoutConstraint.constraints(
-      withVisualFormat: verticalConstraintsFormat,
-      options: formatOptions,
-      metrics: metrics,
-      views: views)
-    
-    addConstraints(horizontalCollectionViewContraints)
-    addConstraints(horizontalPagingContentViewContraints)
-    addConstraints(verticalContraints)
-    
-    for constraint in verticalContraints {
-      if constraint.firstAttribute == NSLayoutConstraint.Attribute.height {
-        heightConstraint = constraint
-      }
+    /// Sets up all the layout constraints. Override this if you need to
+    /// make changes to how the views are layed out.
+    open func setupConstraints() {
+        collectionView.translatesAutoresizingMaskIntoConstraints = false
+        pageView.translatesAutoresizingMaskIntoConstraints = false
+
+        let metrics = [
+            "height": options.menuHeight,
+        ]
+
+        let views = [
+            "collectionView": collectionView,
+            "pageView": pageView,
+        ]
+
+        let formatOptions = NSLayoutConstraint.FormatOptions()
+
+        let horizontalCollectionViewContraints = NSLayoutConstraint.constraints(
+            withVisualFormat: "H:|[collectionView]|",
+            options: formatOptions,
+            metrics: metrics,
+            views: views
+        )
+
+        let horizontalPagingContentViewContraints = NSLayoutConstraint.constraints(
+            withVisualFormat: "H:|[pageView]|",
+            options: formatOptions,
+            metrics: metrics,
+            views: views
+        )
+
+        let verticalConstraintsFormat: String
+        switch options.menuPosition {
+        case .top:
+            verticalConstraintsFormat = "V:|[collectionView(==height)][pageView]|"
+        case .bottom:
+            verticalConstraintsFormat = "V:|[pageView][collectionView(==height)]|"
+        }
+
+        let verticalContraints = NSLayoutConstraint.constraints(
+            withVisualFormat: verticalConstraintsFormat,
+            options: formatOptions,
+            metrics: metrics,
+            views: views
+        )
+
+        addConstraints(horizontalCollectionViewContraints)
+        addConstraints(horizontalPagingContentViewContraints)
+        addConstraints(verticalContraints)
+
+        for constraint in verticalContraints {
+            if constraint.firstAttribute == NSLayoutConstraint.Attribute.height {
+                heightConstraint = constraint
+            }
+        }
     }
-  }
-  
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Classes/PagingViewController.swift b/OpenBook/Pods/Parchment/Parchment/Classes/PagingViewController.swift
index 0be48f76..02c102e7 100644
--- a/OpenBook/Pods/Parchment/Parchment/Classes/PagingViewController.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Classes/PagingViewController.swift
@@ -12,741 +12,733 @@ import UIKit
 /// You can also use the same method to programmatically navigate to
 /// other view controllers.
 open class PagingViewController:
-  UIViewController,
-  UICollectionViewDelegate,
-  PageViewControllerDataSource,
-  PageViewControllerDelegate {
-
-  // MARK: Public Properties
-  
-  /// The size for each of the menu items. _Default:
-  /// .sizeToFit(minWidth: 150, height: 40)_
-  public var menuItemSize: PagingMenuItemSize {
-    get { return options.menuItemSize }
-    set { options.menuItemSize = newValue }
-  }
-    
-  /// Determine the spacing between the menu items. _Default: 0_
-  public var menuItemSpacing: CGFloat {
-    get { return options.menuItemSpacing }
-    set { options.menuItemSpacing = newValue }
-  }
-    
+    UIViewController,
+    UICollectionViewDelegate,
+    PageViewControllerDataSource,
+    PageViewControllerDelegate {
+    // MARK: Public Properties
+
+    /// The size for each of the menu items. _Default:
+    /// .sizeToFit(minWidth: 150, height: 40)_
+    public var menuItemSize: PagingMenuItemSize {
+        get { return options.menuItemSize }
+        set { options.menuItemSize = newValue }
+    }
+
+    /// Determine the spacing between the menu items. _Default: 0_
+    public var menuItemSpacing: CGFloat {
+        get { return options.menuItemSpacing }
+        set { options.menuItemSpacing = newValue }
+    }
+
     /// Determine the horizontal constraints of menu item label. _Default: 20_
-  public var menuItemLabelSpacing: CGFloat {
-    get { return options.menuItemLabelSpacing }
-    set { options.menuItemLabelSpacing = newValue }
-  }
-  
-  /// Determine the insets at around all the menu items. _Default:
-  /// UIEdgeInsets.zero_
-  public var menuInsets: UIEdgeInsets {
-    get { return options.menuInsets }
-    set { options.menuInsets = newValue }
-  }
-  
-  /// Determine whether the menu items should be centered when all the
-  /// items can fit within the bounds of the view. _Default: .left_
-  public var menuHorizontalAlignment: PagingMenuHorizontalAlignment {
-    get { return options.menuHorizontalAlignment }
-    set { options.menuHorizontalAlignment = newValue }
-  }
-    
-  /// Determine the position of the menu relative to the content.
-  /// _Default: .top_
-  public var menuPosition: PagingMenuPosition {
-    get { return options.menuPosition }
-    set { options.menuPosition = newValue }
-  }
-  
-  /// Determine the transition behaviour of menu items while scrolling
-  /// the content. _Default: .scrollAlongside_
-  public var menuTransition: PagingMenuTransition {
-    get { return options.menuTransition }
-    set { options.menuTransition = newValue }
-  }
-  
-  /// Determine how users can interact with the menu items.
-  /// _Default: .scrolling_
-  public var menuInteraction: PagingMenuInteraction {
-    get { return options.menuInteraction }
-    set { options.menuInteraction = newValue }
-  }
-  
-  /// The class type for collection view layout. Override this if you
-  /// want to use your own subclass of the layout. Setting this
-  /// property will initialize the new layout type and update the
-  /// collection view.
-  /// _Default: PagingCollectionViewLayout.self_
-  public var menuLayoutClass: PagingCollectionViewLayout.Type {
-    get { return options.menuLayoutClass }
-    set { options.menuLayoutClass = newValue }
-  }
-  
-  /// Determine how the selected menu item should be aligned when it
-  /// is selected. Effectivly the same as the
-  /// `UICollectionViewScrollPosition`. _Default: .preferCentered_
-  public var selectedScrollPosition: PagingSelectedScrollPosition {
-    get { return options.selectedScrollPosition }
-    set { options.selectedScrollPosition = newValue }
-  }
-  
-  /// Add an indicator view to the selected menu item. The indicator
-  /// width will be equal to the selected menu items width. Insets
-  /// only apply horizontally. _Default: .visible_
-  public var indicatorOptions: PagingIndicatorOptions {
-    get { return options.indicatorOptions }
-    set { options.indicatorOptions = newValue }
-  }
-  
-  /// The class type for the indicator view. Override this if you want
-  /// your use your own subclass of PagingIndicatorView. _Default:
-  /// PagingIndicatorView.self_
-  public var indicatorClass: PagingIndicatorView.Type {
-    get { return options.indicatorClass }
-    set { options.indicatorClass = newValue }
-  }
-  
-  /// Determine the color of the indicator view.
-  public var indicatorColor: UIColor {
-    get { return options.indicatorColor }
-    set { options.indicatorColor = newValue }
-  }
-  
-  /// Add a border at the bottom of the menu items. The border will be
-  /// as wide as all the menu items. Insets only apply horizontally.
-  /// _Default: .visible_
-  public var borderOptions: PagingBorderOptions {
-    get { return options.borderOptions }
-    set { options.borderOptions = newValue }
-  }
-  
-  /// The class type for the border view. Override this if you want
-  /// your use your own subclass of PagingBorderView. _Default:
-  /// PagingBorderView.self_
-  public var borderClass: PagingBorderView.Type {
-    get { return options.borderClass }
-    set { options.borderClass = newValue }
-  }
-  
-  /// Determine the color of the border view.
-  public var borderColor: UIColor {
-    get { return options.borderColor }
-    set { options.borderColor = newValue }
-  }
-  
-  /// Updates the content inset for the menu items based on the
-  /// .safeAreaInsets property. _Default: true_
-  public var includeSafeAreaInsets: Bool {
-    get { return options.includeSafeAreaInsets }
-    set { options.includeSafeAreaInsets = newValue }
-  }
-  
-  /// The font used for title label on the menu items.
-  public var font: UIFont {
-     get { return options.font }
-     set { options.font = newValue }
-  }
-  
-  /// The font used for the currently selected menu item.
-  public var selectedFont: UIFont {
-     get { return options.selectedFont }
-     set { options.selectedFont = newValue }
-  }
-  
-  /// The color of the title label on the menu items.
-  public var textColor: UIColor {
-     get { return options.textColor }
-     set { options.textColor = newValue }
-  }
-  
-  /// The text color for the currently selected menu item.
-  public var selectedTextColor: UIColor {
-     get { return options.selectedTextColor }
-     set { options.selectedTextColor = newValue }
-  }
-  
-  /// The background color for the menu items.
-  public var backgroundColor: UIColor {
-     get { return options.backgroundColor }
-     set { options.backgroundColor = newValue }
-  }
-  
-  /// The background color for the selected menu item.
-  public var selectedBackgroundColor: UIColor {
-     get { return options.selectedBackgroundColor }
-     set { options.selectedBackgroundColor = newValue }
-  }
-  
-  /// The background color for the view behind the menu items.
-  public var menuBackgroundColor: UIColor {
-     get { return options.menuBackgroundColor }
-     set { options.menuBackgroundColor = newValue }
-  }
-  
-  /// The scroll navigation orientation of the content in the page
-  /// view controller. _Default: .horizontal_
-  public var contentNavigationOrientation: PagingNavigationOrientation {
-    get { return options.contentNavigationOrientation }
-    set { options.contentNavigationOrientation = newValue }
-  }
-  
-  /// Determine how users can interact with the page view controller.
-  /// _Default: .scrolling_
-  public var contentInteraction: PagingContentInteraction = .scrolling {
-    didSet {
-      configureContentInteraction()
-    }
-  }
-  
-  /// The current state of the menu items. Indicates whether an item
-  /// is currently selected or is scrolling to another item. Can be
-  /// used to get the distance and progress of any ongoing transition.
-  public var state: PagingState {
-    return pagingController.state
-  }
-  
-  /// The `PagingItem`'s that are currently visible in the collection
-  /// view. The items in this array are not necessarily the same as
-  /// the `visibleCells` property on `UICollectionView`.
-  public var visibleItems: PagingItems {
-    return pagingController.visibleItems
-  }
-  
-  /// The data source is responsible for providing the `PagingItem`s
-  /// that are displayed in the menu. The `PagingItem` protocol is
-  /// used to generate menu items for all the view controllers,
-  /// without having to actually allocate them before they are needed.
-  /// Use this property when you have a fixed amount of view
-  /// controllers. If you need to support infinitely large data
-  /// sources, use the infiniteDataSource property instead.
-  public weak var dataSource: PagingViewControllerDataSource? {
-    didSet {
-      configureDataSource()
-    }
-  }
-  
-  /// A data source that can be used when you need to support
-  /// infinitely large data source by returning the `PagingItem`
-  /// before or after a given `PagingItem`. The `PagingItem` protocol
-  /// is used to generate menu items for all the view controllers,
-  /// without having to actually allocate them before they are needed.
-  public weak var infiniteDataSource: PagingViewControllerInfiniteDataSource?
-  
-  /// Use this delegate to get notified when the user is scrolling or
-  /// when an item is selected.
-  public weak var delegate: PagingViewControllerDelegate?
-  
-  /// Use this delegate if you want to manually control the width of
-  /// your menu items. Self-sizing cells is not supported at the
-  /// moment, so you have to use this if you have a custom cell that
-  /// you want to size based on its content.
-  public weak var sizeDelegate: PagingViewControllerSizeDelegate? {
-    didSet {
-      pagingController.sizeDelegate = self
-    }
-  }
-  
-  /// A custom collection view layout that lays out all the menu items
-  /// horizontally. You can customize the behavior of the layout by
-  /// setting the customization properties on `PagingViewController`.
-  /// You can also use your own subclass of the layout by defining the
-  /// `menuLayoutClass` property.
-  public private(set) var collectionViewLayout: PagingCollectionViewLayout
-
-  /// Used to display the menu items that scrolls along with the
-  /// content. Using a collection view means you can create custom
-  /// cells that display pretty much anything. By default, scrolling
-  /// is enabled in the collection view.
-  public let collectionView: UICollectionView
-
-  /// Used to display the view controllers that you are paging between.
-  public let pageViewController: PageViewController
-  
-  /// An instance that stores all the customization so that it's
-  /// easier to share between other classes.
-  public private(set) var options: PagingOptions {
-    didSet {
-      if options.menuLayoutClass != oldValue.menuLayoutClass {
-        let layout = createLayout(layout: options.menuLayoutClass.self)
-        collectionViewLayout = layout
-        collectionViewLayout.options = options
-        collectionView.setCollectionViewLayout(layout, animated: false)
+    public var menuItemLabelSpacing: CGFloat {
+        get { return options.menuItemLabelSpacing }
+        set { options.menuItemLabelSpacing = newValue }
+    }
+
+    /// Determine the insets at around all the menu items. _Default:
+    /// UIEdgeInsets.zero_
+    public var menuInsets: UIEdgeInsets {
+        get { return options.menuInsets }
+        set { options.menuInsets = newValue }
+    }
+
+    /// Determine whether the menu items should be centered when all the
+    /// items can fit within the bounds of the view. _Default: .left_
+    public var menuHorizontalAlignment: PagingMenuHorizontalAlignment {
+        get { return options.menuHorizontalAlignment }
+        set { options.menuHorizontalAlignment = newValue }
+    }
+
+    /// Determine the position of the menu relative to the content.
+    /// _Default: .top_
+    public var menuPosition: PagingMenuPosition {
+        get { return options.menuPosition }
+        set { options.menuPosition = newValue }
+    }
+
+    /// Determine the transition behaviour of menu items while scrolling
+    /// the content. _Default: .scrollAlongside_
+    public var menuTransition: PagingMenuTransition {
+        get { return options.menuTransition }
+        set { options.menuTransition = newValue }
+    }
+
+    /// Determine how users can interact with the menu items.
+    /// _Default: .scrolling_
+    public var menuInteraction: PagingMenuInteraction {
+        get { return options.menuInteraction }
+        set { options.menuInteraction = newValue }
+    }
+
+    /// The class type for collection view layout. Override this if you
+    /// want to use your own subclass of the layout. Setting this
+    /// property will initialize the new layout type and update the
+    /// collection view.
+    /// _Default: PagingCollectionViewLayout.self_
+    public var menuLayoutClass: PagingCollectionViewLayout.Type {
+        get { return options.menuLayoutClass }
+        set { options.menuLayoutClass = newValue }
+    }
+
+    /// Determine how the selected menu item should be aligned when it
+    /// is selected. Effectivly the same as the
+    /// `UICollectionViewScrollPosition`. _Default: .preferCentered_
+    public var selectedScrollPosition: PagingSelectedScrollPosition {
+        get { return options.selectedScrollPosition }
+        set { options.selectedScrollPosition = newValue }
+    }
+
+    /// Add an indicator view to the selected menu item. The indicator
+    /// width will be equal to the selected menu items width. Insets
+    /// only apply horizontally. _Default: .visible_
+    public var indicatorOptions: PagingIndicatorOptions {
+        get { return options.indicatorOptions }
+        set { options.indicatorOptions = newValue }
+    }
+
+    /// The class type for the indicator view. Override this if you want
+    /// your use your own subclass of PagingIndicatorView. _Default:
+    /// PagingIndicatorView.self_
+    public var indicatorClass: PagingIndicatorView.Type {
+        get { return options.indicatorClass }
+        set { options.indicatorClass = newValue }
+    }
+
+    /// Determine the color of the indicator view.
+    public var indicatorColor: UIColor {
+        get { return options.indicatorColor }
+        set { options.indicatorColor = newValue }
+    }
+
+    /// Add a border at the bottom of the menu items. The border will be
+    /// as wide as all the menu items. Insets only apply horizontally.
+    /// _Default: .visible_
+    public var borderOptions: PagingBorderOptions {
+        get { return options.borderOptions }
+        set { options.borderOptions = newValue }
+    }
+
+    /// The class type for the border view. Override this if you want
+    /// your use your own subclass of PagingBorderView. _Default:
+    /// PagingBorderView.self_
+    public var borderClass: PagingBorderView.Type {
+        get { return options.borderClass }
+        set { options.borderClass = newValue }
+    }
+
+    /// Determine the color of the border view.
+    public var borderColor: UIColor {
+        get { return options.borderColor }
+        set { options.borderColor = newValue }
+    }
+
+    /// Updates the content inset for the menu items based on the
+    /// .safeAreaInsets property. _Default: true_
+    public var includeSafeAreaInsets: Bool {
+        get { return options.includeSafeAreaInsets }
+        set { options.includeSafeAreaInsets = newValue }
+    }
+
+    /// The font used for title label on the menu items.
+    public var font: UIFont {
+        get { return options.font }
+        set { options.font = newValue }
+    }
+
+    /// The font used for the currently selected menu item.
+    public var selectedFont: UIFont {
+        get { return options.selectedFont }
+        set { options.selectedFont = newValue }
+    }
+
+    /// The color of the title label on the menu items.
+    public var textColor: UIColor {
+        get { return options.textColor }
+        set { options.textColor = newValue }
+    }
+
+    /// The text color for the currently selected menu item.
+    public var selectedTextColor: UIColor {
+        get { return options.selectedTextColor }
+        set { options.selectedTextColor = newValue }
+    }
+
+    /// The background color for the menu items.
+    public var backgroundColor: UIColor {
+        get { return options.backgroundColor }
+        set { options.backgroundColor = newValue }
+    }
+
+    /// The background color for the selected menu item.
+    public var selectedBackgroundColor: UIColor {
+        get { return options.selectedBackgroundColor }
+        set { options.selectedBackgroundColor = newValue }
+    }
+
+    /// The background color for the view behind the menu items.
+    public var menuBackgroundColor: UIColor {
+        get { return options.menuBackgroundColor }
+        set { options.menuBackgroundColor = newValue }
+    }
+
+    /// The scroll navigation orientation of the content in the page
+    /// view controller. _Default: .horizontal_
+    public var contentNavigationOrientation: PagingNavigationOrientation {
+        get { return options.contentNavigationOrientation }
+        set { options.contentNavigationOrientation = newValue }
+    }
+
+    /// Determine how users can interact with the page view controller.
+    /// _Default: .scrolling_
+    public var contentInteraction: PagingContentInteraction {
+      get { return options.contentInteraction }
+      set { 
+        options.contentInteraction = newValue
+        configureContentInteraction()
       }
-      else {
+    }
+
+    /// The current state of the menu items. Indicates whether an item
+    /// is currently selected or is scrolling to another item. Can be
+    /// used to get the distance and progress of any ongoing transition.
+    public var state: PagingState {
+        return pagingController.state
+    }
+
+    /// The `PagingItem`'s that are currently visible in the collection
+    /// view. The items in this array are not necessarily the same as
+    /// the `visibleCells` property on `UICollectionView`.
+    public var visibleItems: PagingItems {
+        return pagingController.visibleItems
+    }
+
+    /// The data source is responsible for providing the `PagingItem`s
+    /// that are displayed in the menu. The `PagingItem` protocol is
+    /// used to generate menu items for all the view controllers,
+    /// without having to actually allocate them before they are needed.
+    /// Use this property when you have a fixed amount of view
+    /// controllers. If you need to support infinitely large data
+    /// sources, use the infiniteDataSource property instead.
+    public weak var dataSource: PagingViewControllerDataSource? {
+        didSet {
+            configureDataSource()
+        }
+    }
+
+    /// A data source that can be used when you need to support
+    /// infinitely large data source by returning the `PagingItem`
+    /// before or after a given `PagingItem`. The `PagingItem` protocol
+    /// is used to generate menu items for all the view controllers,
+    /// without having to actually allocate them before they are needed.
+    public weak var infiniteDataSource: PagingViewControllerInfiniteDataSource?
+
+    /// Use this delegate to get notified when the user is scrolling or
+    /// when an item is selected.
+    public weak var delegate: PagingViewControllerDelegate?
+
+    /// Use this delegate if you want to manually control the width of
+    /// your menu items. Self-sizing cells is not supported at the
+    /// moment, so you have to use this if you have a custom cell that
+    /// you want to size based on its content.
+    public weak var sizeDelegate: PagingViewControllerSizeDelegate? {
+        didSet {
+            pagingController.sizeDelegate = self
+        }
+    }
+
+    /// A custom collection view layout that lays out all the menu items
+    /// horizontally. You can customize the behavior of the layout by
+    /// setting the customization properties on `PagingViewController`.
+    /// You can also use your own subclass of the layout by defining the
+    /// `menuLayoutClass` property.
+    public private(set) var collectionViewLayout: PagingCollectionViewLayout
+
+    /// Used to display the menu items that scrolls along with the
+    /// content. Using a collection view means you can create custom
+    /// cells that display pretty much anything. By default, scrolling
+    /// is enabled in the collection view.
+    public let collectionView: UICollectionView
+
+    /// Used to display the view controllers that you are paging between.
+    public let pageViewController: PageViewController
+
+    /// An instance that stores all the customization so that it's
+    /// easier to share between other classes.
+    public private(set) var options: PagingOptions {
+        didSet {
+            if options.menuLayoutClass != oldValue.menuLayoutClass {
+                let layout = createLayout(layout: options.menuLayoutClass.self)
+                collectionViewLayout = layout
+                collectionViewLayout.options = options
+                collectionView.setCollectionViewLayout(layout, animated: false)
+            } else {
+                collectionViewLayout.options = options
+            }
+
+            pageViewController.options = options
+            pagingController.options = options
+            pagingView.options = options
+        }
+    }
+
+    // MARK: Private Properties
+
+    private let pagingController: PagingController
+    private var didLayoutSubviews: Bool = false
+
+    private var pagingView: PagingView {
+        return view as! PagingView
+    }
+
+    private enum DataSourceReference {
+        case `static`(PagingStaticDataSource)
+        case finite(PagingFiniteDataSource)
+        case none
+    }
+
+    /// Used to keep a strong reference to the internal data sources.
+    private var dataSourceReference: DataSourceReference = .none
+
+    // MARK: Initializers
+
+    /// Creates an instance of `PagingViewController`. You need to call
+    /// `select(pagingItem:animated:)` in order to set the initial view
+    /// controller before any items become visible.
+    ///
+    /// - Parameter options: An object with configuration options. These
+    /// parameters are also available directly on `PagingViewController`.
+    public init(options: PagingOptions = PagingOptions()) {
+        self.options = options
+        pagingController = PagingController(options: options)
+        pageViewController = PageViewController(options: options)
+        collectionViewLayout = createLayout(layout: options.menuLayoutClass.self)
+        collectionView = UICollectionView(frame: .zero, collectionViewLayout: collectionViewLayout)
+        super.init(nibName: nil, bundle: nil)
+        collectionView.delegate = self
         collectionViewLayout.options = options
-      }
-      
-      pageViewController.options = options
-      pagingController.options = options
-      pagingView.options = options
-    }
-  }
-  
-  // MARK: Private Properties
-  
-  private let pagingController: PagingController
-  private var didLayoutSubviews: Bool = false
-  
-  private var pagingView: PagingView {
-    return view as! PagingView
-  }
-  
-  private enum DataSourceReference {
-    case `static`(PagingStaticDataSource)
-    case finite(PagingFiniteDataSource)
-    case none
-  }
-  
-  /// Used to keep a strong reference to the internal data sources.
-  private var dataSourceReference: DataSourceReference = .none
-  
-  // MARK: Initializers
-
-  /// Creates an instance of `PagingViewController`. You need to call
-  /// `select(pagingItem:animated:)` in order to set the initial view
-  /// controller before any items become visible.
-  ///
-  /// - Parameter options: An object with configuration options. These
-  /// parameters are also available directly on `PagingViewController`.
-  public init(options: PagingOptions = PagingOptions()) {
-    self.options = options
-    self.pagingController = PagingController(options: options)
-    self.pageViewController = PageViewController(options: options)
-    self.collectionViewLayout = createLayout(layout: options.menuLayoutClass.self)
-    self.collectionView = UICollectionView(frame: .zero, collectionViewLayout: collectionViewLayout)
-    super.init(nibName: nil, bundle: nil)
-    collectionView.delegate = self
-    collectionViewLayout.options = options
-    configurePagingController()
-    
-    // Register default cell
-    register(PagingTitleCell.self, for: PagingIndexItem.self)
-  }
-  
-  /// Creates an instance of `PagingViewController`. The first view
-  /// controller will be selected by default.
-  ///
-  /// - Parameters:
-  ///   - options: An object with configuration options. These
-  ///   parameters are also available directly on `PagingViewController`.
-  ///   - viewControllers: An array of view controllers that you want
-  /// to display. The title of the view controllers will be used to
-  /// generate the menu items.
-  public convenience init(
-    options: PagingOptions = PagingOptions(),
-    viewControllers: [UIViewController]) {
-    self.init(options: options)
-    configureDataSource(for: viewControllers)
-  }
-
-  /// Creates an instance of `PagingViewController`.
-  ///
-  /// - Parameter coder: An unarchiver object.
-  required public init?(coder: NSCoder) {
-    self.options = PagingOptions()
-    self.pagingController = PagingController(options: options)
-    self.pageViewController = PageViewController(options: options)
-    self.collectionViewLayout = createLayout(layout: options.menuLayoutClass.self)
-    self.collectionView = UICollectionView(frame: .zero, collectionViewLayout: collectionViewLayout)
-    super.init(coder: coder)
-    collectionView.delegate = self
-    configurePagingController()
-  }
-  
-  // MARK: Public Methods
-  
-  /// Reload the data for the menu items. This method will not reload
-  /// the view controllers.
-  open func reloadMenu() {
-    var updatedItems: [PagingItem] = []
-    
-    switch dataSourceReference {
-    case let .static(dataSource):
-      dataSource.reloadItems()
-      updatedItems = dataSource.items
-    case let .finite(dataSource):
-      dataSource.items = itemsForFiniteDataSource()
-      updatedItems = dataSource.items
-    default:
-      break
-    }
-    
-    if let previouslySelected = state.currentPagingItem,
-      let pagingItem = updatedItems.first(where: { $0.isEqual(to: previouslySelected) }) {
-      pagingController.reloadMenu(around: pagingItem)
-    } else if let firstItem = updatedItems.first {
-      pagingController.reloadMenu(around: firstItem)
-    } else {
-      pagingController.removeAll()
-    }
-  }
-  
-  /// Reload data for all the menu items. This will keep the
-  /// previously selected item if it's still part of the updated data.
-  /// If not, it will select the first item in the list. This method
-  /// will not work when using PagingViewControllerInfiniteDataSource
-  /// as we then need to know what the initial item should be. You
-  /// should use the reloadData(around:) method in that case.
-  open func reloadData() {
-    var updatedItems: [PagingItem] = []
-    
-    switch dataSourceReference {
-    case let .static(dataSource):
-      dataSource.reloadItems()
-      updatedItems = dataSource.items
-    case let .finite(dataSource):
-      dataSource.items = itemsForFiniteDataSource()
-      updatedItems = dataSource.items
-    default:
-      break
-    }
-    
-    if let previouslySelected = state.currentPagingItem,
-      let pagingItem = updatedItems.first(where: { $0.isEqual(to: previouslySelected) }) {
-      pagingController.reloadData(around: pagingItem)
-    } else if let firstItem = updatedItems.first {
-      pagingController.reloadData(around: firstItem)
-    } else {
-      pagingController.removeAll()
-    }
-  }
-  
-  /// Reload data around given paging item. This will set the given
-  /// paging item as selected and generate new items around it. This
-  /// will also reload the view controllers displayed in the page view
-  /// controller. You need to use this method to reload data when
-  /// using PagingViewControllerInfiniteDataSource as we need to know
-  /// the initial item.
-  ///
-  /// - Parameter pagingItem: The `PagingItem` that will be selected
-  /// after the data reloads.
-  open func reloadData(around pagingItem: PagingItem) {
-    switch dataSourceReference {
-    case let .static(dataSource):
-      dataSource.reloadItems()
-    case let .finite(dataSource):
-      dataSource.items = itemsForFiniteDataSource()
-    default:
-      break
-    }
-    pagingController.reloadData(around: pagingItem)
-  }
-  
-  /// Selects a given paging item. This need to be called after you
-  /// initilize the `PagingViewController` to set the initial
-  /// `PagingItem`. This can be called both before and after the view
-  /// has been loaded. You can also use this to programmatically
-  /// navigate to another `PagingItem`.
-  ///
-  /// - Parameter pagingItem: The `PagingItem` to be displayed.
-  /// - Parameter animated: A boolean value that indicates whether
-  /// the transtion should be animated. Default is false.
-  open func select(pagingItem: PagingItem, animated: Bool = false) {
-    pagingController.select(pagingItem: pagingItem, animated: animated)
-  }
-  
-  /// Selects the paging item at a given index. This can be called
-  /// both before and after the view has been loaded.
-  ///
-  /// - Parameter index: The index of the `PagingItem` to be displayed.
-  /// - Parameter animated: A boolean value that indicates whether
-  /// the transtion should be animated. Default is false.
-  open func select(index: Int, animated: Bool = false) {
-    switch dataSourceReference {
-    case let .static(dataSource):
-      let pagingItem = dataSource.items[index]
-      pagingController.select(pagingItem: pagingItem, animated: animated)
-    case let .finite(dataSource):
-      let pagingItem = dataSource.items[index]
-      pagingController.select(pagingItem: pagingItem, animated: animated)
-    case .none:
-      fatalError("select(index:animated:): You need to set the dataSource property to use this method")
-    }
-  }
-  
-  open override func loadView() {
-    view = PagingView(
-      options: options,
-      collectionView: collectionView,
-      pageView: pageViewController.view
-    )
-  }
-  
-  open override func viewDidLoad() {
-    super.viewDidLoad()
-    
-    #if swift(>=4.2)
-    addChild(pageViewController)
-    pagingView.configure()
-    pageViewController.didMove(toParent: self)
-    #else
-    addChildViewController(pageViewController)
-    pagingView.configure()
-    pageViewController.didMove(toParentViewController: self)
-    #endif
-    
-    pageViewController.delegate = self
-    pageViewController.dataSource = self
-    configureContentInteraction()
-  }
-  
-  open override func viewDidLayoutSubviews() {
-    super.viewDidLayoutSubviews()
-    
-    // We need generate the menu items when the view appears for the
-    // first time. Doing it in viewWillAppear does not work as the
-    // safeAreaInsets will not be updated yet.
-    if didLayoutSubviews == false {
-      didLayoutSubviews = true
-      pagingController.viewAppeared()
-    }
-  }
-  
-  open override func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {
-    super.viewWillTransition(to: size, with: coordinator)
-    coordinator.animate(alongsideTransition: { context in
-      self.pagingController.transitionSize()
+        configurePagingController()
+
+        // Register default cell
+        register(PagingTitleCell.self, for: PagingIndexItem.self)
+    }
+
+    /// Creates an instance of `PagingViewController`. The first view
+    /// controller will be selected by default.
+    ///
+    /// - Parameters:
+    ///   - options: An object with configuration options. These
+    ///   parameters are also available directly on `PagingViewController`.
+    ///   - viewControllers: An array of view controllers that you want
+    /// to display. The title of the view controllers will be used to
+    /// generate the menu items.
+    public convenience init(
+        options: PagingOptions = PagingOptions(),
+        viewControllers: [UIViewController]
+    ) {
+        self.init(options: options)
+        configureDataSource(for: viewControllers)
+    }
+
+    /// Creates an instance of `PagingViewController`.
+    ///
+    /// - Parameter coder: An unarchiver object.
+    public required init?(coder: NSCoder) {
+        options = PagingOptions()
+        pagingController = PagingController(options: options)
+        pageViewController = PageViewController(options: options)
+        collectionViewLayout = createLayout(layout: options.menuLayoutClass.self)
+        collectionView = UICollectionView(frame: .zero, collectionViewLayout: collectionViewLayout)
+        super.init(coder: coder)
+        collectionView.delegate = self
+        configurePagingController()
+    }
+
+    // MARK: Public Methods
+
+    /// Reload the data for the menu items. This method will not reload
+    /// the view controllers.
+    open func reloadMenu() {
+        var updatedItems: [PagingItem] = []
+
+        switch dataSourceReference {
+        case let .static(dataSource):
+            dataSource.reloadItems()
+            updatedItems = dataSource.items
+        case let .finite(dataSource):
+            dataSource.items = itemsForFiniteDataSource()
+            updatedItems = dataSource.items
+        default:
+            break
+        }
+
+        if let previouslySelected = state.currentPagingItem,
+            let pagingItem = updatedItems.first(where: { $0.isEqual(to: previouslySelected) }) {
+            pagingController.reloadMenu(around: pagingItem)
+        } else if let firstItem = updatedItems.first {
+            pagingController.reloadMenu(around: firstItem)
+        } else {
+            pagingController.removeAll()
+        }
+    }
+
+    /// Reload data for all the menu items. This will keep the
+    /// previously selected item if it's still part of the updated data.
+    /// If not, it will select the first item in the list. This method
+    /// will not work when using PagingViewControllerInfiniteDataSource
+    /// as we then need to know what the initial item should be. You
+    /// should use the reloadData(around:) method in that case.
+    open func reloadData() {
+        var updatedItems: [PagingItem] = []
+
+        switch dataSourceReference {
+        case let .static(dataSource):
+            dataSource.reloadItems()
+            updatedItems = dataSource.items
+        case let .finite(dataSource):
+            dataSource.items = itemsForFiniteDataSource()
+            updatedItems = dataSource.items
+        default:
+            break
+        }
+
+        if let previouslySelected = state.currentPagingItem,
+            let pagingItem = updatedItems.first(where: { $0.isEqual(to: previouslySelected) }) {
+            pagingController.reloadData(around: pagingItem)
+        } else if let firstItem = updatedItems.first {
+            pagingController.reloadData(around: firstItem)
+        } else {
+            pagingController.removeAll()
+        }
+    }
+
+    /// Reload data around given paging item. This will set the given
+    /// paging item as selected and generate new items around it. This
+    /// will also reload the view controllers displayed in the page view
+    /// controller. You need to use this method to reload data when
+    /// using PagingViewControllerInfiniteDataSource as we need to know
+    /// the initial item.
+    ///
+    /// - Parameter pagingItem: The `PagingItem` that will be selected
+    /// after the data reloads.
+    open func reloadData(around pagingItem: PagingItem) {
+        switch dataSourceReference {
+        case let .static(dataSource):
+            dataSource.reloadItems()
+        case let .finite(dataSource):
+            dataSource.items = itemsForFiniteDataSource()
+        default:
+            break
+        }
+        pagingController.reloadData(around: pagingItem)
+    }
+
+    /// Selects a given paging item. This need to be called after you
+    /// initilize the `PagingViewController` to set the initial
+    /// `PagingItem`. This can be called both before and after the view
+    /// has been loaded. You can also use this to programmatically
+    /// navigate to another `PagingItem`.
+    ///
+    /// - Parameter pagingItem: The `PagingItem` to be displayed.
+    /// - Parameter animated: A boolean value that indicates whether
+    /// the transtion should be animated. Default is false.
+    open func select(pagingItem: PagingItem, animated: Bool = false) {
+        pagingController.select(pagingItem: pagingItem, animated: animated)
+    }
+
+    /// Selects the paging item at a given index. This can be called
+    /// both before and after the view has been loaded.
+    ///
+    /// - Parameter index: The index of the `PagingItem` to be displayed.
+    /// - Parameter animated: A boolean value that indicates whether
+    /// the transtion should be animated. Default is false.
+    open func select(index: Int, animated: Bool = false) {
+        switch dataSourceReference {
+        case let .static(dataSource):
+            let pagingItem = dataSource.items[index]
+            pagingController.select(pagingItem: pagingItem, animated: animated)
+        case let .finite(dataSource):
+            let pagingItem = dataSource.items[index]
+            pagingController.select(pagingItem: pagingItem, animated: animated)
+        case .none:
+            fatalError("select(index:animated:): You need to set the dataSource property to use this method")
+        }
+    }
+
+    open override func loadView() {
+        view = PagingView(
+            options: options,
+            collectionView: collectionView,
+            pageView: pageViewController.view
+        )
+    }
+
+    open override func viewDidLoad() {
+        super.viewDidLoad()
+
+        addChild(pageViewController)
+        pagingView.configure()
+        pageViewController.didMove(toParent: self)
+
+        pageViewController.delegate = self
+        pageViewController.dataSource = self
+        configureContentInteraction()
+    }
+
+    open override func viewDidLayoutSubviews() {
+        super.viewDidLayoutSubviews()
+
+        // We need generate the menu items when the view appears for the
+        // first time. Doing it in viewWillAppear does not work as the
+        // safeAreaInsets will not be updated yet.
+        if didLayoutSubviews == false {
+            didLayoutSubviews = true
+            pagingController.viewAppeared()
+        }
+    }
+
+    open override func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {
+        super.viewWillTransition(to: size, with: coordinator)
+        coordinator.animate(alongsideTransition: { _ in
+            self.pagingController.transitionSize()
     }, completion: nil)
-  }
-  
-  /// Register cell class for paging cell
-  /// - Parameter cellClass: paging cell's class
-  /// - Parameter pagingItemType: paging item type for specifying cell identifier
-  public func register(_ cellClass: AnyClass?, for pagingItemType: PagingItem.Type) {
-    collectionView.register(cellClass, forCellWithReuseIdentifier: String(describing: pagingItemType))
-  }
-  
-  /// Register nib for paging cell
-  /// - Parameter nib: paging cell's nib
-  /// - Parameter pagingItemType: paging item type for specifying cell identifier
-  public func register(_ nib: UINib?, for pagingItemType: PagingItem.Type) {
-    collectionView.register(nib, forCellWithReuseIdentifier: String(describing: pagingItemType))
-  }
-  
-  // MARK: Private Methods
-  
-  private func configurePagingController() {
-    pagingController.collectionView = collectionView
-    pagingController.collectionViewLayout = collectionViewLayout
-    pagingController.dataSource = self
-    pagingController.delegate = self
-    pagingController.options = options
-  }
-  
-  private func itemsForFiniteDataSource() -> [PagingItem] {
-    let numberOfItems = dataSource?.numberOfViewControllers(in: self) ?? 0
-    var items: [PagingItem] = []
-    
-    for index in 0..<numberOfItems {
-      if let item = dataSource?.pagingViewController(self, pagingItemAt: index) {
-        items.append(item)
-      }
     }
-    
-    return items
-  }
-  
-  private func configureDataSource() {
-    let dataSource = PagingFiniteDataSource()
-    dataSource.items = itemsForFiniteDataSource()
-    dataSource.viewControllerForIndex = { [unowned self] in
-      return self.dataSource?.pagingViewController(self, viewControllerAt: $0)
-    }
-    
-    dataSourceReference = .finite(dataSource)
-    infiniteDataSource = dataSource
-    
-    if let firstItem = dataSource.items.first {
-      pagingController.select(pagingItem: firstItem, animated: false)
-    }
-  }
-  
-  private func configureDataSource(for viewControllers: [UIViewController]) {
-    let dataSource = PagingStaticDataSource(viewControllers: viewControllers)
-    dataSourceReference = .static(dataSource)
-    infiniteDataSource = dataSource
-    if let pagingItem = dataSource.items.first {
-      pagingController.select(pagingItem: pagingItem, animated: false)
-    }
-  }
-  
-  private func configureContentInteraction() {
-    switch contentInteraction {
-    case .scrolling:
-      pageViewController.scrollView.isScrollEnabled = true
-    case .none:
-      pageViewController.scrollView.isScrollEnabled = false
-    }
-  }
-  
-  // MARK: UIScrollViewDelegate
-  
-  open func scrollViewDidScroll(_ scrollView: UIScrollView) {
-    pagingController.menuScrolled()
-  }
-  
-  open func scrollViewWillBeginDragging(_ scrollView: UIScrollView) {
-    return
-  }
-  
-  open func scrollViewWillEndDragging(_ scrollView: UIScrollView, withVelocity velocity: CGPoint, targetContentOffset: UnsafeMutablePointer<CGPoint>) {
-    return
-  }
-  
-  open func scrollViewDidEndDragging(_ scrollView: UIScrollView, willDecelerate decelerate: Bool) {
-    return
-  }
-  
-  open func scrollViewDidEndScrollingAnimation(_ scrollView: UIScrollView) {
-    return
-  }
-  
-  open func scrollViewWillBeginDecelerating(_ scrollView: UIScrollView) {
-    return
-  }
-  
-  open func scrollViewDidEndDecelerating(_ scrollView: UIScrollView) {
-    return
-  }
-  
-  // MARK: UICollectionViewDelegate
-  
-  open func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
-    let pagingItem = pagingController.visibleItems.pagingItem(for: indexPath)
-    delegate?.pagingViewController(self, didSelectItem: pagingItem)
-    pagingController.select(indexPath: indexPath, animated: true)
-  }
-  
-  open func collectionView(_ collectionView: UICollectionView, targetContentOffsetForProposedContentOffset proposedContentOffset: CGPoint) -> CGPoint {
-    return proposedContentOffset
-  }
-  
-  open func collectionView(_ collectionView: UICollectionView, didUnhighlightItemAt indexPath: IndexPath) {
-    return
-  }
-  
-  open func collectionView(_ collectionView: UICollectionView, didHighlightItemAt indexPath: IndexPath) {
-    return
-  }
-  
-  open func collectionView(_ collectionView: UICollectionView, didDeselectItemAt indexPath: IndexPath) {
-    return
-  }
-  
-  open func collectionView(_ collectionView: UICollectionView, willDisplay cell: UICollectionViewCell, forItemAt indexPath: IndexPath) {
-    return
-  }
-  
-  open func collectionView(_ collectionView: UICollectionView, didEndDisplaying cell: UICollectionViewCell, forItemAt indexPath: IndexPath) {
-    return
-  }
-  
-  // MARK: PageViewControllerDataSource
-  
-  open func pageViewController(_ pageViewController: PageViewController, viewControllerBeforeViewController viewController: UIViewController) -> UIViewController? {
-    guard
-      let dataSource = infiniteDataSource,
-      let currentPagingItem = state.currentPagingItem,
-      let pagingItem = dataSource.pagingViewController(self, itemBefore: currentPagingItem) else { return nil }
-    
-    return dataSource.pagingViewController(self, viewControllerFor: pagingItem)
-  }
-  
-  open func pageViewController(_ pageViewController: PageViewController, viewControllerAfterViewController viewController: UIViewController) -> UIViewController? {
-    guard
-      let dataSource = infiniteDataSource,
-      let currentPagingItem = state.currentPagingItem,
-      let pagingItem = dataSource.pagingViewController(self, itemAfter: currentPagingItem) else { return nil }
-    
-    return dataSource.pagingViewController(self, viewControllerFor: pagingItem)
-  }
-  
-  // MARK: PageViewControllerDelegate
-  
-  open func pageViewController(_ pageViewController: PageViewController, isScrollingFrom startingViewController: UIViewController, destinationViewController: UIViewController?, progress: CGFloat) {
-    guard let currentPagingItem = state.currentPagingItem else { return }
-    
-    pagingController.contentScrolled(progress: progress)
-    delegate?.pagingViewController(
-      self,
-      isScrollingFromItem: currentPagingItem,
-      toItem: state.upcomingPagingItem,
-      startingViewController: startingViewController,
-      destinationViewController: destinationViewController,
-      progress: progress)
-  }
-  
-  open func pageViewController(_ pageViewController: PageViewController, willStartScrollingFrom startingViewController: UIViewController, destinationViewController: UIViewController) {
-    if let upcomingPagingItem = state.upcomingPagingItem {
-      delegate?.pagingViewController(
-        self,
-        willScrollToItem: upcomingPagingItem,
-        startingViewController: startingViewController,
-        destinationViewController: destinationViewController)
-    }
-  }
-  
-  open func pageViewController(_ pageViewController: PageViewController, didFinishScrollingFrom startingViewController: UIViewController, destinationViewController: UIViewController, transitionSuccessful: Bool) {
-    if transitionSuccessful {
-      pagingController.contentFinishedScrolling()
-    }
-    
-    if let currentPagingItem = state.currentPagingItem {
-      delegate?.pagingViewController(
-        self,
-        didScrollToItem: currentPagingItem,
-        startingViewController: startingViewController,
-        destinationViewController: destinationViewController,
-        transitionSuccessful: transitionSuccessful)
-    }
-  }
+
+    /// Register cell class for paging cell
+    /// - Parameter cellClass: paging cell's class
+    /// - Parameter pagingItemType: paging item type for specifying cell identifier
+    public func register(_ cellClass: AnyClass?, for pagingItemType: PagingItem.Type) {
+        collectionView.register(cellClass, forCellWithReuseIdentifier: String(describing: pagingItemType))
+    }
+
+    /// Register nib for paging cell
+    /// - Parameter nib: paging cell's nib
+    /// - Parameter pagingItemType: paging item type for specifying cell identifier
+    public func register(_ nib: UINib?, for pagingItemType: PagingItem.Type) {
+        collectionView.register(nib, forCellWithReuseIdentifier: String(describing: pagingItemType))
+    }
+
+    // MARK: Private Methods
+
+    private func configurePagingController() {
+        pagingController.collectionView = collectionView
+        pagingController.collectionViewLayout = collectionViewLayout
+        pagingController.dataSource = self
+        pagingController.delegate = self
+        pagingController.options = options
+    }
+
+    private func itemsForFiniteDataSource() -> [PagingItem] {
+        let numberOfItems = dataSource?.numberOfViewControllers(in: self) ?? 0
+        var items: [PagingItem] = []
+
+        for index in 0 ..< numberOfItems {
+            if let item = dataSource?.pagingViewController(self, pagingItemAt: index) {
+                items.append(item)
+            }
+        }
+
+        return items
+    }
+
+    private func configureDataSource() {
+        let dataSource = PagingFiniteDataSource()
+        dataSource.items = itemsForFiniteDataSource()
+        dataSource.viewControllerForIndex = { [unowned self] in
+            self.dataSource?.pagingViewController(self, viewControllerAt: $0)
+        }
+
+        dataSourceReference = .finite(dataSource)
+        infiniteDataSource = dataSource
+
+        if let firstItem = dataSource.items.first {
+            pagingController.select(pagingItem: firstItem, animated: false)
+        }
+    }
+
+    private func configureDataSource(for viewControllers: [UIViewController]) {
+        let dataSource = PagingStaticDataSource(viewControllers: viewControllers)
+        dataSourceReference = .static(dataSource)
+        infiniteDataSource = dataSource
+        if let pagingItem = dataSource.items.first {
+            pagingController.select(pagingItem: pagingItem, animated: false)
+        }
+    }
+
+    private func configureContentInteraction() {
+        switch contentInteraction {
+        case .scrolling:
+            pageViewController.scrollView.isScrollEnabled = true
+        case .none:
+            pageViewController.scrollView.isScrollEnabled = false
+        }
+    }
+
+    // MARK: UIScrollViewDelegate
+
+    open func scrollViewDidScroll(_: UIScrollView) {
+        pagingController.menuScrolled()
+    }
+
+    open func scrollViewWillBeginDragging(_: UIScrollView) {
+        return
+    }
+
+    open func scrollViewWillEndDragging(_: UIScrollView, withVelocity _: CGPoint, targetContentOffset _: UnsafeMutablePointer<CGPoint>) {
+        return
+    }
+
+    open func scrollViewDidEndDragging(_: UIScrollView, willDecelerate _: Bool) {
+        return
+    }
+
+    open func scrollViewDidEndScrollingAnimation(_: UIScrollView) {
+        return
+    }
+
+    open func scrollViewWillBeginDecelerating(_: UIScrollView) {
+        return
+    }
+
+    open func scrollViewDidEndDecelerating(_: UIScrollView) {
+        return
+    }
+
+    // MARK: UICollectionViewDelegate
+
+    open func collectionView(_: UICollectionView, didSelectItemAt indexPath: IndexPath) {
+        let pagingItem = pagingController.visibleItems.pagingItem(for: indexPath)
+        delegate?.pagingViewController(self, didSelectItem: pagingItem)
+        pagingController.select(indexPath: indexPath, animated: true)
+    }
+
+    open func collectionView(_: UICollectionView, targetContentOffsetForProposedContentOffset proposedContentOffset: CGPoint) -> CGPoint {
+        return proposedContentOffset
+    }
+
+    open func collectionView(_: UICollectionView, didUnhighlightItemAt _: IndexPath) {
+        return
+    }
+
+    open func collectionView(_: UICollectionView, didHighlightItemAt _: IndexPath) {
+        return
+    }
+
+    open func collectionView(_: UICollectionView, didDeselectItemAt _: IndexPath) {
+        return
+    }
+
+    open func collectionView(_: UICollectionView, willDisplay _: UICollectionViewCell, forItemAt _: IndexPath) {
+        return
+    }
+
+    open func collectionView(_: UICollectionView, didEndDisplaying _: UICollectionViewCell, forItemAt _: IndexPath) {
+        return
+    }
+
+    // MARK: PageViewControllerDataSource
+
+    open func pageViewController(_: PageViewController, viewControllerBeforeViewController _: UIViewController) -> UIViewController? {
+        guard
+            let dataSource = infiniteDataSource,
+            let currentPagingItem = state.currentPagingItem,
+            let pagingItem = dataSource.pagingViewController(self, itemBefore: currentPagingItem) else { return nil }
+
+        return dataSource.pagingViewController(self, viewControllerFor: pagingItem)
+    }
+
+    open func pageViewController(_: PageViewController, viewControllerAfterViewController _: UIViewController) -> UIViewController? {
+        guard
+            let dataSource = infiniteDataSource,
+            let currentPagingItem = state.currentPagingItem,
+            let pagingItem = dataSource.pagingViewController(self, itemAfter: currentPagingItem) else { return nil }
+
+        return dataSource.pagingViewController(self, viewControllerFor: pagingItem)
+    }
+
+    // MARK: PageViewControllerDelegate
+
+    open func pageViewController(_: PageViewController, isScrollingFrom startingViewController: UIViewController, destinationViewController: UIViewController?, progress: CGFloat) {
+        guard let currentPagingItem = state.currentPagingItem else { return }
+
+        pagingController.contentScrolled(progress: progress)
+        delegate?.pagingViewController(
+            self,
+            isScrollingFromItem: currentPagingItem,
+            toItem: state.upcomingPagingItem,
+            startingViewController: startingViewController,
+            destinationViewController: destinationViewController,
+            progress: progress
+        )
+    }
+
+    open func pageViewController(_: PageViewController, willStartScrollingFrom startingViewController: UIViewController, destinationViewController: UIViewController) {
+        if let upcomingPagingItem = state.upcomingPagingItem {
+            delegate?.pagingViewController(
+                self,
+                willScrollToItem: upcomingPagingItem,
+                startingViewController: startingViewController,
+                destinationViewController: destinationViewController
+            )
+        }
+    }
+
+    open func pageViewController(_: PageViewController, didFinishScrollingFrom startingViewController: UIViewController, destinationViewController: UIViewController, transitionSuccessful: Bool) {
+        if transitionSuccessful {
+            pagingController.contentFinishedScrolling()
+        }
+
+        if let currentPagingItem = state.currentPagingItem {
+            delegate?.pagingViewController(
+                self,
+                didScrollToItem: currentPagingItem,
+                startingViewController: startingViewController,
+                destinationViewController: destinationViewController,
+                transitionSuccessful: transitionSuccessful
+            )
+        }
+    }
 }
 
 extension PagingViewController: PagingMenuDataSource {
-  
-  public func pagingItemBefore(pagingItem: PagingItem) -> PagingItem? {
-    return infiniteDataSource?.pagingViewController(self, itemBefore: pagingItem)
-  }
-  
-  public func pagingItemAfter(pagingItem: PagingItem) -> PagingItem? {
-    return infiniteDataSource?.pagingViewController(self, itemAfter: pagingItem)
-  }
-  
+    public func pagingItemBefore(pagingItem: PagingItem) -> PagingItem? {
+        return infiniteDataSource?.pagingViewController(self, itemBefore: pagingItem)
+    }
+
+    public func pagingItemAfter(pagingItem: PagingItem) -> PagingItem? {
+        return infiniteDataSource?.pagingViewController(self, itemAfter: pagingItem)
+    }
 }
 
 extension PagingViewController: PagingControllerSizeDelegate {
-  
-  func width(for pagingItem: PagingItem, isSelected: Bool) -> CGFloat {
-    return sizeDelegate?.pagingViewController(self, widthForPagingItem: pagingItem, isSelected: isSelected) ?? 0
-  }
-  
+    func width(for pagingItem: PagingItem, isSelected: Bool) -> CGFloat {
+        return sizeDelegate?.pagingViewController(self, widthForPagingItem: pagingItem, isSelected: isSelected) ?? 0
+    }
 }
 
 extension PagingViewController: PagingMenuDelegate {
-  
-  public func selectContent(pagingItem: PagingItem, direction: PagingDirection, animated: Bool) {
-    guard let dataSource = infiniteDataSource else { return }
-    
-    switch direction {
-    case .forward(true):
-      pageViewController.selectNext(animated: animated)
-      
-    case .reverse(true):
-      pageViewController.selectPrevious(animated: animated)
-      
-    default:
-      let viewController = dataSource.pagingViewController(self, viewControllerFor: pagingItem)
-      pageViewController.selectViewController(
-        viewController,
-        direction: PageViewDirection(from: direction),
-        animated: animated
-      )
-    }
-  }
-  
-  public func removeContent() {
-    pageViewController.removeAll()
-  }
-  
+    public func selectContent(pagingItem: PagingItem, direction: PagingDirection, animated: Bool) {
+        guard let dataSource = infiniteDataSource else { return }
+
+        switch direction {
+        case .forward(true):
+            pageViewController.selectNext(animated: animated)
+
+        case .reverse(true):
+            pageViewController.selectPrevious(animated: animated)
+
+        default:
+            let viewController = dataSource.pagingViewController(self, viewControllerFor: pagingItem)
+            pageViewController.selectViewController(
+                viewController,
+                direction: PageViewDirection(from: direction),
+                animated: animated
+            )
+        }
+    }
+
+    public func removeContent() {
+        pageViewController.removeAll()
+    }
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Enums/InvalidationState.swift b/OpenBook/Pods/Parchment/Parchment/Enums/InvalidationState.swift
index f0454f63..b8caa5a4 100644
--- a/OpenBook/Pods/Parchment/Parchment/Enums/InvalidationState.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Enums/InvalidationState.swift
@@ -7,37 +7,36 @@ import UIKit
 /// much we need to invalidate by adding together the states each
 /// time a new context is invalidated.
 public enum InvalidationState {
-  case nothing
-  case everything
-  case sizes
-  
-  public init(_ invalidationContext: UICollectionViewLayoutInvalidationContext) {
-    if invalidationContext.invalidateEverything {
-      self = .everything
-    } else if invalidationContext.invalidateDataSourceCounts {
-      self = .everything
-    } else if let context = invalidationContext as? PagingInvalidationContext {
-      if context.invalidateSizes {
-        self = .sizes
-      } else {
-        self = .nothing
-      }
-    } else {
-      self = .nothing
+    case nothing
+    case everything
+    case sizes
+
+    public init(_ invalidationContext: UICollectionViewLayoutInvalidationContext) {
+        if invalidationContext.invalidateEverything {
+            self = .everything
+        } else if invalidationContext.invalidateDataSourceCounts {
+            self = .everything
+        } else if let context = invalidationContext as? PagingInvalidationContext {
+            if context.invalidateSizes {
+                self = .sizes
+            } else {
+                self = .nothing
+            }
+        } else {
+            self = .nothing
+        }
     }
-  }
-  
-  public static func +(lhs: InvalidationState, rhs: InvalidationState) -> InvalidationState {
-    switch (lhs, rhs) {
-    case (.everything, _), (_, .everything):
-      return .everything
-    case (.sizes, _), (_, .sizes):
-      return .sizes
-    case (.nothing, _), (_, .nothing):
-      return .nothing
-    default:
-      return .everything
+
+    public static func + (lhs: InvalidationState, rhs: InvalidationState) -> InvalidationState {
+        switch (lhs, rhs) {
+        case (.everything, _), (_, .everything):
+            return .everything
+        case (.sizes, _), (_, .sizes):
+            return .sizes
+        case (.nothing, _), (_, .nothing):
+            return .nothing
+        default:
+            return .everything
+        }
     }
-  }
 }
-
diff --git a/OpenBook/Pods/Parchment/Parchment/Enums/PageViewDirection.swift b/OpenBook/Pods/Parchment/Parchment/Enums/PageViewDirection.swift
index 8ad42b6a..435c9719 100644
--- a/OpenBook/Pods/Parchment/Parchment/Enums/PageViewDirection.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Enums/PageViewDirection.swift
@@ -1,29 +1,29 @@
-import Foundation
 import CoreGraphics
+import Foundation
 
 public enum PageViewDirection {
-  case forward
-  case reverse
-  case none
-  
-  init(from direction: PagingDirection) {
-    switch direction {
-    case .forward:
-      self = .forward
-    case .reverse:
-      self = .reverse
-    case .none:
-      self = .none
+    case forward
+    case reverse
+    case none
+
+    init(from direction: PagingDirection) {
+        switch direction {
+        case .forward:
+            self = .forward
+        case .reverse:
+            self = .reverse
+        case .none:
+            self = .none
+        }
     }
-  }
-  
-  init(progress: CGFloat) {
-    if progress > 0 {
-      self = .forward
-    } else if progress < 0 {
-      self = .reverse
-    } else {
-      self = .none
+
+    init(progress: CGFloat) {
+        if progress > 0 {
+            self = .forward
+        } else if progress < 0 {
+            self = .reverse
+        } else {
+            self = .none
+        }
     }
-  }
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Enums/PageViewState.swift b/OpenBook/Pods/Parchment/Parchment/Enums/PageViewState.swift
index 1e5febf0..68a66dd9 100644
--- a/OpenBook/Pods/Parchment/Parchment/Enums/PageViewState.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Enums/PageViewState.swift
@@ -1,22 +1,22 @@
 import Foundation
 
 enum PageViewState {
-  case empty
-  case single
-  case first
-  case center
-  case last
-  
-  var count: Int {
-    switch self {
-    case .empty:
-      return 0
-    case .single:
-      return 1
-    case .first, .last:
-      return 2
-    case .center:
-      return 3
+    case empty
+    case single
+    case first
+    case center
+    case last
+
+    var count: Int {
+        switch self {
+        case .empty:
+            return 0
+        case .single:
+            return 1
+        case .first, .last:
+            return 2
+        case .center:
+            return 3
+        }
     }
-  }
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Enums/PagingBorderOptions.swift b/OpenBook/Pods/Parchment/Parchment/Enums/PagingBorderOptions.swift
index 3e16e6bb..6cfd043e 100644
--- a/OpenBook/Pods/Parchment/Parchment/Enums/PagingBorderOptions.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Enums/PagingBorderOptions.swift
@@ -1,9 +1,10 @@
 import UIKit
 
 public enum PagingBorderOptions {
-  case hidden
-  case visible(
-    height: CGFloat,
-    zIndex: Int,
-    insets: UIEdgeInsets)
+    case hidden
+    case visible(
+        height: CGFloat,
+        zIndex: Int,
+        insets: UIEdgeInsets
+    )
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Enums/PagingContentInteraction.swift b/OpenBook/Pods/Parchment/Parchment/Enums/PagingContentInteraction.swift
index d3d8999d..369bcdcf 100644
--- a/OpenBook/Pods/Parchment/Parchment/Enums/PagingContentInteraction.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Enums/PagingContentInteraction.swift
@@ -1,6 +1,6 @@
 import Foundation
 
 public enum PagingContentInteraction {
-  case scrolling
-  case none
+    case scrolling
+    case none
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Enums/PagingDirection.swift b/OpenBook/Pods/Parchment/Parchment/Enums/PagingDirection.swift
index d82a4fcc..dac4b1d4 100644
--- a/OpenBook/Pods/Parchment/Parchment/Enums/PagingDirection.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Enums/PagingDirection.swift
@@ -2,20 +2,18 @@ import Foundation
 import UIKit
 
 public enum PagingDirection: Equatable {
-  case reverse(sibling: Bool)
-  case forward(sibling: Bool)
-  case none
+    case reverse(sibling: Bool)
+    case forward(sibling: Bool)
+    case none
 }
 
 extension PagingDirection {
-  
-  var pageViewControllerNavigationDirection: UIPageViewController.NavigationDirection {
-    switch self {
-    case .forward, .none:
-      return .forward
-    case .reverse:
-      return .reverse
+    var pageViewControllerNavigationDirection: UIPageViewController.NavigationDirection {
+        switch self {
+        case .forward, .none:
+            return .forward
+        case .reverse:
+            return .reverse
+        }
     }
-  }
-  
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Enums/PagingIndicatorOptions.swift b/OpenBook/Pods/Parchment/Parchment/Enums/PagingIndicatorOptions.swift
index b277e30c..df76c3d8 100644
--- a/OpenBook/Pods/Parchment/Parchment/Enums/PagingIndicatorOptions.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Enums/PagingIndicatorOptions.swift
@@ -1,10 +1,11 @@
 import UIKit
 
 public enum PagingIndicatorOptions {
-  case hidden
-  case visible(
-    height: CGFloat,
-    zIndex: Int,
-    spacing: UIEdgeInsets,
-    insets: UIEdgeInsets)
+    case hidden
+    case visible(
+        height: CGFloat,
+        zIndex: Int,
+        spacing: UIEdgeInsets,
+        insets: UIEdgeInsets
+    )
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Enums/PagingMenuHorizontalAlignment.swift b/OpenBook/Pods/Parchment/Parchment/Enums/PagingMenuHorizontalAlignment.swift
index 136b5dd2..aa0b7865 100644
--- a/OpenBook/Pods/Parchment/Parchment/Enums/PagingMenuHorizontalAlignment.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Enums/PagingMenuHorizontalAlignment.swift
@@ -1,10 +1,10 @@
 import Foundation
 
 public enum PagingMenuHorizontalAlignment {
-  case left
-  
+    case left
+
   // Allows all paging items to be centered within the paging menu
   // when PagingMenuItemSize is .fixed and the sum of the widths
   // of all the paging items are less than the paging menu
-  case center
+    case center
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Enums/PagingMenuInteraction.swift b/OpenBook/Pods/Parchment/Parchment/Enums/PagingMenuInteraction.swift
index 53cd8492..54e7191f 100644
--- a/OpenBook/Pods/Parchment/Parchment/Enums/PagingMenuInteraction.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Enums/PagingMenuInteraction.swift
@@ -1,7 +1,7 @@
 import Foundation
 
 public enum PagingMenuInteraction {
-  case scrolling
-  case swipe
-  case none
+    case scrolling
+    case swipe
+    case none
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Enums/PagingMenuItemSize.swift b/OpenBook/Pods/Parchment/Parchment/Enums/PagingMenuItemSize.swift
index 1ac7bdd0..31db2784 100644
--- a/OpenBook/Pods/Parchment/Parchment/Enums/PagingMenuItemSize.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Enums/PagingMenuItemSize.swift
@@ -2,35 +2,33 @@ import Foundation
 import UIKit
 
 public enum PagingMenuItemSize {
-  case fixed(width: CGFloat, height: CGFloat)
-  
+    case fixed(width: CGFloat, height: CGFloat)
+
   // Automatically calculate the size of the menu items based on the
   // cells intrinsic content size. Try to come up with an estimated
   // width that's similar to the expected width of the cells.
-  case selfSizing(estimatedWidth: CGFloat, height: CGFloat)
-  
+    case selfSizing(estimatedWidth: CGFloat, height: CGFloat)
+
   // Tries to fit all menu items inside the bounds of the screen.
   // If the items can't fit, the items will scroll as normal and
   // set the menu items width to `minWidth`.
-  case sizeToFit(minWidth: CGFloat, height: CGFloat)
+    case sizeToFit(minWidth: CGFloat, height: CGFloat)
 }
 
 public extension PagingMenuItemSize {
-  
-  var width: CGFloat {
-    switch self {
-    case let .fixed(width, _): return width
-    case let .sizeToFit(minWidth, _): return minWidth
-    case let .selfSizing(estimatedWidth, _): return estimatedWidth
+    var width: CGFloat {
+        switch self {
+        case let .fixed(width, _): return width
+        case let .sizeToFit(minWidth, _): return minWidth
+        case let .selfSizing(estimatedWidth, _): return estimatedWidth
+        }
     }
-  }
-  
-  var height: CGFloat {
-    switch self {
-    case let .fixed(_, height): return height
-    case let .sizeToFit(_, height): return height
-    case let .selfSizing(_, height): return height
+
+    var height: CGFloat {
+        switch self {
+        case let .fixed(_, height): return height
+        case let .sizeToFit(_, height): return height
+        case let .selfSizing(_, height): return height
+        }
     }
-  }
-  
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Enums/PagingMenuItemSource.swift b/OpenBook/Pods/Parchment/Parchment/Enums/PagingMenuItemSource.swift
index d1e43924..f095a202 100644
--- a/OpenBook/Pods/Parchment/Parchment/Enums/PagingMenuItemSource.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Enums/PagingMenuItemSource.swift
@@ -2,21 +2,21 @@ import Foundation
 import UIKit
 
 public enum PagingMenuItemSource {
-	case `class`(type: PagingCell.Type)
-	case nib(nib: UINib)
+    case `class`(type: PagingCell.Type)
+    case nib(nib: UINib)
 }
 
 extension PagingMenuItemSource: Equatable {
-  public static func == (lhs: PagingMenuItemSource, rhs: PagingMenuItemSource) -> Bool {
-    switch (lhs, rhs) {
-    case let (.class(lhsType), .class(rhsType)):
-      return lhsType == rhsType
-      
-    case let (.nib(lhsNib), .nib(rhsNib)):
-      return lhsNib === rhsNib
-      
-    default:
-      return false
+    public static func == (lhs: PagingMenuItemSource, rhs: PagingMenuItemSource) -> Bool {
+        switch (lhs, rhs) {
+        case let (.class(lhsType), .class(rhsType)):
+            return lhsType == rhsType
+
+        case let (.nib(lhsNib), .nib(rhsNib)):
+            return lhsNib === rhsNib
+
+        default:
+            return false
+        }
     }
-  }
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Enums/PagingMenuPosition.swift b/OpenBook/Pods/Parchment/Parchment/Enums/PagingMenuPosition.swift
index 640476b3..5066a074 100644
--- a/OpenBook/Pods/Parchment/Parchment/Enums/PagingMenuPosition.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Enums/PagingMenuPosition.swift
@@ -1,6 +1,6 @@
 import Foundation
 
 public enum PagingMenuPosition {
-    case top            // default
+    case top // default
     case bottom
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Enums/PagingMenuTransition.swift b/OpenBook/Pods/Parchment/Parchment/Enums/PagingMenuTransition.swift
index c8d02512..ce39e247 100644
--- a/OpenBook/Pods/Parchment/Parchment/Enums/PagingMenuTransition.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Enums/PagingMenuTransition.swift
@@ -3,8 +3,8 @@ import Foundation
 public enum PagingMenuTransition {
   // Update scroll offset based on how much the content has
   // scrolled. Makes the menu items transition smoothly as you scroll.
-  case scrollAlongside
-  
+    case scrollAlongside
+
   // Animate the menu item position after a transition has completed.
-  case animateAfter
+    case animateAfter
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Enums/PagingSelectedScrollPosition.swift b/OpenBook/Pods/Parchment/Parchment/Enums/PagingSelectedScrollPosition.swift
index 745d5f2f..04d6675b 100644
--- a/OpenBook/Pods/Parchment/Parchment/Enums/PagingSelectedScrollPosition.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Enums/PagingSelectedScrollPosition.swift
@@ -1,13 +1,13 @@
 import Foundation
 
 public enum PagingSelectedScrollPosition {
-  case left
-  case right
-  case center
-  
+    case left
+    case right
+    case center
+
   /// Centers the selected menu item where possible. If the item is
   /// to the far left or right, it will not update the scroll
   /// position. Effectivly the same as .centeredHorizontally on
   /// UICollectionViewScrollPosition.
-  case preferCentered
+    case preferCentered
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Enums/PagingState.swift b/OpenBook/Pods/Parchment/Parchment/Enums/PagingState.swift
index 2253e0b6..cb7786ce 100644
--- a/OpenBook/Pods/Parchment/Parchment/Enums/PagingState.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Enums/PagingState.swift
@@ -5,89 +5,88 @@ import UIKit
 /// is currently selected or is scrolling to another item. Can be
 /// used to get the distance and progress of any ongoing transition.
 public enum PagingState: Equatable {
-  case empty
-  case selected(pagingItem: PagingItem)
-  case scrolling(
-    pagingItem: PagingItem,
-    upcomingPagingItem: PagingItem?,
-    progress: CGFloat,
-    initialContentOffset: CGPoint,
-    distance: CGFloat)
+    case empty
+    case selected(pagingItem: PagingItem)
+    case scrolling(
+        pagingItem: PagingItem,
+        upcomingPagingItem: PagingItem?,
+        progress: CGFloat,
+        initialContentOffset: CGPoint,
+        distance: CGFloat
+    )
 }
 
 public extension PagingState {
-  
-  var currentPagingItem: PagingItem? {
-    switch self {
-    case .empty:
-      return nil
-    case let .scrolling(pagingItem, _, _, _, _):
-      return pagingItem
-    case let .selected(pagingItem):
-      return pagingItem
+    var currentPagingItem: PagingItem? {
+        switch self {
+        case .empty:
+            return nil
+        case let .scrolling(pagingItem, _, _, _, _):
+            return pagingItem
+        case let .selected(pagingItem):
+            return pagingItem
+        }
     }
-  }
-  
-  var upcomingPagingItem: PagingItem? {
-    switch self {
-    case .empty:
-      return nil
-    case let .scrolling(_, upcomingPagingItem, _, _, _):
-      return upcomingPagingItem
-    case .selected:
-      return nil
+
+    var upcomingPagingItem: PagingItem? {
+        switch self {
+        case .empty:
+            return nil
+        case let .scrolling(_, upcomingPagingItem, _, _, _):
+            return upcomingPagingItem
+        case .selected:
+            return nil
+        }
     }
-  }
-  
-  var progress: CGFloat {
-    switch self {
-    case let .scrolling(_, _, progress, _, _):
-      return progress
-    case .selected, .empty:
-      return 0
+
+    var progress: CGFloat {
+        switch self {
+        case let .scrolling(_, _, progress, _, _):
+            return progress
+        case .selected, .empty:
+            return 0
+        }
     }
-  }
-  
-  var distance: CGFloat {
-    switch self {
-    case let .scrolling(_, _, _, _, distance):
-      return distance
-    case .selected, .empty:
-      return 0
+
+    var distance: CGFloat {
+        switch self {
+        case let .scrolling(_, _, _, _, distance):
+            return distance
+        case .selected, .empty:
+            return 0
+        }
     }
-  }
-  
-  var visuallySelectedPagingItem: PagingItem? {
-    if abs(progress) > 0.5 {
-      return upcomingPagingItem ?? currentPagingItem
-    } else {
-      return currentPagingItem
+
+    var visuallySelectedPagingItem: PagingItem? {
+        if abs(progress) > 0.5 {
+            return upcomingPagingItem ?? currentPagingItem
+        } else {
+            return currentPagingItem
+        }
     }
-  }
-  
 }
 
-public func ==(lhs: PagingState, rhs: PagingState) -> Bool {
-  switch (lhs, rhs) {
-  case
-    (let .scrolling(lhsCurrent, lhsUpcoming, lhsProgress, lhsOffset, lhsDistance),
-     let .scrolling(rhsCurrent, rhsUpcoming, rhsProgress, rhsOffset, rhsDistance)):
-    if lhsCurrent.isEqual(to: rhsCurrent) &&
-      lhsProgress == rhsProgress &&
-      lhsOffset == rhsOffset &&
-      lhsDistance == rhsDistance {
-      if let lhsUpcoming = lhsUpcoming, let rhsUpcoming = rhsUpcoming, lhsUpcoming.isEqual(to: rhsUpcoming) {
+public func == (lhs: PagingState, rhs: PagingState) -> Bool {
+    switch (lhs, rhs) {
+    case
+        (let .scrolling(lhsCurrent, lhsUpcoming, lhsProgress, lhsOffset, lhsDistance),
+         let .scrolling(rhsCurrent, rhsUpcoming, rhsProgress, rhsOffset, rhsDistance)):
+        if lhsCurrent.isEqual(to: rhsCurrent),
+            lhsProgress == rhsProgress,
+            lhsOffset == rhsOffset,
+            lhsDistance == rhsDistance {
+            if let lhsUpcoming = lhsUpcoming, let rhsUpcoming = rhsUpcoming, lhsUpcoming.isEqual(to: rhsUpcoming) {
+                return true
+            } else if lhsUpcoming == nil, rhsUpcoming == nil {
+                return true
+            }
+        }
+        return false
+    case let (.selected(a), .selected(b)) where a.isEqual(to: b):
         return true
-      } else if lhsUpcoming == nil && rhsUpcoming == nil {
+    case (.empty, .empty):
         return true
-      }
+    default:
+        return false
     }
-    return false
-  case (let .selected(a), let .selected(b)) where a.isEqual(to: b):
-    return true
-  case (.empty, .empty):
-    return true
-  default:
-    return false
-  }
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Extensions/UIColor+interpolation.swift b/OpenBook/Pods/Parchment/Parchment/Extensions/UIColor+interpolation.swift
index ab579231..bb9ef752 100644
--- a/OpenBook/Pods/Parchment/Parchment/Extensions/UIColor+interpolation.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Extensions/UIColor+interpolation.swift
@@ -4,27 +4,25 @@ import UIKit
 // Based on http://stackoverflow.com/a/35853850
 
 extension UIColor {
-  
-  func components() -> (CGFloat, CGFloat, CGFloat, CGFloat) {
-    guard let c = cgColor.components else { return (0, 0, 0, 1) }
-    if cgColor.numberOfComponents == 1 {
-      return (0, 0, 0, 1)
-    } else if cgColor.numberOfComponents == 2 {
-      return (c[0], c[0], c[0], c[1])
-    } else {
-      return (c[0], c[1], c[2], c[3])
+    func components() -> (CGFloat, CGFloat, CGFloat, CGFloat) {
+        guard let c = cgColor.components else { return (0, 0, 0, 1) }
+        if cgColor.numberOfComponents == 1 {
+            return (0, 0, 0, 1)
+        } else if cgColor.numberOfComponents == 2 {
+            return (c[0], c[0], c[0], c[1])
+        } else {
+            return (c[0], c[1], c[2], c[3])
+        }
+    }
+
+    static func interpolate(from: UIColor, to: UIColor, with fraction: CGFloat) -> UIColor {
+        let f = min(1, max(0, fraction))
+        let c1 = from.components()
+        let c2 = to.components()
+        let r = c1.0 + (c2.0 - c1.0) * f
+        let g = c1.1 + (c2.1 - c1.1) * f
+        let b = c1.2 + (c2.2 - c1.2) * f
+        let a = c1.3 + (c2.3 - c1.3) * f
+        return UIColor(red: r, green: g, blue: b, alpha: a)
     }
-  }
-  
-  static func interpolate(from: UIColor, to: UIColor, with fraction: CGFloat) -> UIColor {
-    let f = min(1, max(0, fraction))
-    let c1 = from.components()
-    let c2 = to.components()
-    let r = c1.0 + (c2.0 - c1.0) * f
-    let g = c1.1 + (c2.1 - c1.1) * f
-    let b = c1.2 + (c2.2 - c1.2) * f
-    let a = c1.3 + (c2.3 - c1.3) * f
-    return UIColor(red: r, green: g, blue: b, alpha: a)
-  }
-  
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Extensions/UIEdgeInsets.swift b/OpenBook/Pods/Parchment/Parchment/Extensions/UIEdgeInsets.swift
index 6539815f..21b0b38d 100644
--- a/OpenBook/Pods/Parchment/Parchment/Extensions/UIEdgeInsets.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Extensions/UIEdgeInsets.swift
@@ -1,13 +1,11 @@
 import UIKit
 
 extension UIEdgeInsets {
-  
-  var horizontal: CGFloat {
-    return left + right
-  }
-  
-  var vertical: CGFloat {
-    return top + bottom
-  }
-  
+    var horizontal: CGFloat {
+        return left + right
+    }
+
+    var vertical: CGFloat {
+        return top + bottom
+    }
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Extensions/UIView+constraints.swift b/OpenBook/Pods/Parchment/Parchment/Extensions/UIView+constraints.swift
index 461c9352..427cf813 100644
--- a/OpenBook/Pods/Parchment/Parchment/Extensions/UIView+constraints.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Extensions/UIView+constraints.swift
@@ -1,52 +1,54 @@
 import UIKit
 
 extension UIView {
-  
-  func constrainToEdges(_ subview: UIView) {
-    
-    subview.translatesAutoresizingMaskIntoConstraints = false
-    
-    let topContraint = NSLayoutConstraint(
-      item: subview,
-      attribute: .top,
-      relatedBy: .equal,
-      toItem: self,
-      attribute: .top,
-      multiplier: 1.0,
-      constant: 0)
-    
-    let bottomConstraint = NSLayoutConstraint(
-      item: subview,
-      attribute: .bottom,
-      relatedBy: .equal,
-      toItem: self,
-      attribute: .bottom,
-      multiplier: 1.0,
-      constant: 0)
-    
-    let leadingContraint = NSLayoutConstraint(
-      item: subview,
-      attribute: .leading,
-      relatedBy: .equal,
-      toItem: self,
-      attribute: .leading,
-      multiplier: 1.0,
-      constant: 0)
-    
-    let trailingContraint = NSLayoutConstraint(
-      item: subview,
-      attribute: .trailing,
-      relatedBy: .equal,
-      toItem: self,
-      attribute: .trailing,
-      multiplier: 1.0,
-      constant: 0)
-    
-    addConstraints([
-      topContraint,
-      bottomConstraint,
-      leadingContraint,
-      trailingContraint])
-  }
-  
+    func constrainToEdges(_ subview: UIView) {
+        subview.translatesAutoresizingMaskIntoConstraints = false
+
+        let topContraint = NSLayoutConstraint(
+            item: subview,
+            attribute: .top,
+            relatedBy: .equal,
+            toItem: self,
+            attribute: .top,
+            multiplier: 1.0,
+            constant: 0
+        )
+
+        let bottomConstraint = NSLayoutConstraint(
+            item: subview,
+            attribute: .bottom,
+            relatedBy: .equal,
+            toItem: self,
+            attribute: .bottom,
+            multiplier: 1.0,
+            constant: 0
+        )
+
+        let leadingContraint = NSLayoutConstraint(
+            item: subview,
+            attribute: .leading,
+            relatedBy: .equal,
+            toItem: self,
+            attribute: .leading,
+            multiplier: 1.0,
+            constant: 0
+        )
+
+        let trailingContraint = NSLayoutConstraint(
+            item: subview,
+            attribute: .trailing,
+            relatedBy: .equal,
+            toItem: self,
+            attribute: .trailing,
+            multiplier: 1.0,
+            constant: 0
+        )
+
+        addConstraints([
+            topContraint,
+            bottomConstraint,
+            leadingContraint,
+            trailingContraint,
+        ])
+    }
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Protocols/CollectionView.swift b/OpenBook/Pods/Parchment/Parchment/Protocols/CollectionView.swift
index f2ece12d..9ca68103 100644
--- a/OpenBook/Pods/Parchment/Parchment/Protocols/CollectionView.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Protocols/CollectionView.swift
@@ -1,64 +1,62 @@
 import UIKit
 
-protocol CollectionViewLayout: class {
-  var state: PagingState { get set }
-  var visibleItems: PagingItems { get set }
-  var sizeCache: PagingSizeCache? { get set }
-  var contentInsets: UIEdgeInsets { get }
-  var layoutAttributes: [IndexPath: PagingCellLayoutAttributes] { get }
-  func prepare()
-  func invalidateLayout()
-  func invalidateLayout(with context: UICollectionViewLayoutInvalidationContext)
+protocol CollectionViewLayout: AnyObject {
+    var state: PagingState { get set }
+    var visibleItems: PagingItems { get set }
+    var sizeCache: PagingSizeCache? { get set }
+    var contentInsets: UIEdgeInsets { get }
+    var layoutAttributes: [IndexPath: PagingCellLayoutAttributes] { get }
+    func prepare()
+    func invalidateLayout()
+    func invalidateLayout(with context: UICollectionViewLayoutInvalidationContext)
 }
 
 extension PagingCollectionViewLayout: CollectionViewLayout {}
 
-protocol CollectionView: class {
-  var indexPathsForVisibleItems: [IndexPath] { get }
-  var isDragging: Bool { get }
-  var window: UIWindow? { get }
-  var superview: UIView? { get }
-  var bounds: CGRect { get }
-  var contentOffset: CGPoint { get set }
-  var contentSize: CGSize { get }
-  var contentInset: UIEdgeInsets { get }
-  var showsHorizontalScrollIndicator: Bool { get set }
-  var dataSource: UICollectionViewDataSource? { get set }
-  var isScrollEnabled: Bool { get set }
-  var alwaysBounceHorizontal: Bool { get set }
-  
-  @available(iOS 11.0, *)
-  var contentInsetAdjustmentBehavior: UIScrollView.ContentInsetAdjustmentBehavior { get set }
-  
-  func register(_ cellClass: AnyClass?, forCellWithReuseIdentifier: String)
-  func register(_ nib: UINib?, forCellWithReuseIdentifier: String)
-  func addGestureRecognizer(_ recognizer: UIGestureRecognizer)
-  func removeGestureRecognizer(_ recognizer: UIGestureRecognizer)
-  func reloadData()
-  func layoutIfNeeded()
-  func setContentOffset(_ contentOffset: CGPoint, animated: Bool)
-  func selectItem(at indexPath: IndexPath?, animated: Bool, scrollPosition: UICollectionView.ScrollPosition)
+protocol CollectionView: AnyObject {
+    var indexPathsForVisibleItems: [IndexPath] { get }
+    var isDragging: Bool { get }
+    var window: UIWindow? { get }
+    var superview: UIView? { get }
+    var bounds: CGRect { get }
+    var contentOffset: CGPoint { get set }
+    var contentSize: CGSize { get }
+    var contentInset: UIEdgeInsets { get }
+    var showsHorizontalScrollIndicator: Bool { get set }
+    var dataSource: UICollectionViewDataSource? { get set }
+    var isScrollEnabled: Bool { get set }
+    var alwaysBounceHorizontal: Bool { get set }
+
+    @available(iOS 11.0, *)
+    var contentInsetAdjustmentBehavior: UIScrollView.ContentInsetAdjustmentBehavior { get set }
+
+    func register(_ cellClass: AnyClass?, forCellWithReuseIdentifier: String)
+    func register(_ nib: UINib?, forCellWithReuseIdentifier: String)
+    func addGestureRecognizer(_ recognizer: UIGestureRecognizer)
+    func removeGestureRecognizer(_ recognizer: UIGestureRecognizer)
+    func reloadData()
+    func layoutIfNeeded()
+    func setContentOffset(_ contentOffset: CGPoint, animated: Bool)
+    func selectItem(at indexPath: IndexPath?, animated: Bool, scrollPosition: UICollectionView.ScrollPosition)
 }
 
 extension UICollectionView: CollectionView {}
 
 enum Edge {
-  case left, right, top, bottom
+    case left, right, top, bottom
 }
 
 extension CollectionView {
-  
-  func near(edge: Edge, clearance: CGFloat = 0) -> Bool {
-    switch edge {
-    case .left:
-      return contentOffset.x + contentInset.left - clearance <= 0
-    case .right:
-      return (contentOffset.x + bounds.width + clearance) >= contentSize.width
-    case .top:
-      return contentOffset.y + contentInset.top - clearance <= 0
-    case .bottom:
-      return (contentOffset.y + bounds.height + clearance) >= contentSize.height
+    func near(edge: Edge, clearance: CGFloat = 0) -> Bool {
+        switch edge {
+        case .left:
+            return contentOffset.x + contentInset.left - clearance <= 0
+        case .right:
+            return (contentOffset.x + bounds.width + clearance) >= contentSize.width
+        case .top:
+            return contentOffset.y + contentInset.top - clearance <= 0
+        case .bottom:
+            return (contentOffset.y + bounds.height + clearance) >= contentSize.height
+        }
     }
-  }
-  
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Protocols/PageViewControllerDataSource.swift b/OpenBook/Pods/Parchment/Parchment/Protocols/PageViewControllerDataSource.swift
index b5af2951..446b34cc 100644
--- a/OpenBook/Pods/Parchment/Parchment/Protocols/PageViewControllerDataSource.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Protocols/PageViewControllerDataSource.swift
@@ -2,23 +2,24 @@ import UIKit
 
 /// The `PageViewControllerDataSource` protocol is used to provide
 /// the view controller you want to display.
-public protocol PageViewControllerDataSource: class {
-  
-  /// Return the view controller before a given view controller.
-  ///
-  /// - Parameters:
-  ///   - pageViewController: The `PageViewController` instance.
-  ///   - viewController: The current view controller.
-  func pageViewController(
-    _ pageViewController: PageViewController,
-    viewControllerBeforeViewController viewController: UIViewController) -> UIViewController?
-  
-  /// Return the view controller after a given view controller.
-  ///
-  /// - Parameters:
-  ///   - pageViewController: The `PageViewController` instance.
-  ///   - viewController: The current view controller.
-  func pageViewController(
-    _ pageViewController: PageViewController,
-    viewControllerAfterViewController viewController: UIViewController) -> UIViewController?
+public protocol PageViewControllerDataSource: AnyObject {
+    /// Return the view controller before a given view controller.
+    ///
+    /// - Parameters:
+    ///   - pageViewController: The `PageViewController` instance.
+    ///   - viewController: The current view controller.
+    func pageViewController(
+        _ pageViewController: PageViewController,
+        viewControllerBeforeViewController viewController: UIViewController
+    ) -> UIViewController?
+
+    /// Return the view controller after a given view controller.
+    ///
+    /// - Parameters:
+    ///   - pageViewController: The `PageViewController` instance.
+    ///   - viewController: The current view controller.
+    func pageViewController(
+        _ pageViewController: PageViewController,
+        viewControllerAfterViewController viewController: UIViewController
+    ) -> UIViewController?
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Protocols/PageViewControllerDelegate.swift b/OpenBook/Pods/Parchment/Parchment/Protocols/PageViewControllerDelegate.swift
index 524949ac..8db88492 100644
--- a/OpenBook/Pods/Parchment/Parchment/Protocols/PageViewControllerDelegate.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Protocols/PageViewControllerDelegate.swift
@@ -3,52 +3,54 @@ import UIKit
 /// The `PageViewControllerDelegate` protocol defines methods that
 /// can used to determine when the user navigates between view
 /// controllers.
-public protocol PageViewControllerDelegate: class {
-  
-  /// Called whenever the user is about to start scrolling to a view
-  /// controller.
-  ///
-  /// - Parameters:
-  ///   - pageViewController: The `PageViewController` instance.
-  ///   - startingViewController: The view controller the user is
-  ///   scrolling from.
-  ///   - destinationViewController: The view controller the user is
-  ///   scrolling towards.
-  func pageViewController(
-    _  pageViewController: PageViewController,
-    willStartScrollingFrom startingViewController: UIViewController,
-    destinationViewController: UIViewController)
-  
-  /// Called whenever a scroll transition is in progress.
-  ///
-  /// - Parameters:
-  ///   - pageViewController: The `PageViewController` instance.
-  ///   - startingViewController: The view controller the user is
-  ///   scrolling from.
-  ///   - destinationViewController: The view controller the user is
-  ///   scrolling towards. Will be nil if the user is scrolling
-  ///   towards one of the edges.
-  ///   - progress: The progress of the scroll transition. Between 0
-  ///   and 1.
-  func pageViewController(
-    _  pageViewController: PageViewController,
-    isScrollingFrom startingViewController: UIViewController,
-    destinationViewController: UIViewController?,
-    progress: CGFloat)
-  
-  /// Called when the user finished scrolling to a new view.
-  ///
-  /// - Parameters:
-  ///   - pageViewController: The `PageViewController` instance.
-  ///   - startingViewController: The view controller the user is
-  ///   scrolling from.
-  ///   - destinationViewController: The view controller the user is
-  ///   scrolling towards.
-  ///   - transitionSuccessful: A boolean indicating whether the
-  ///   transition completed, or was cancelled by the user.
-  func pageViewController(
-    _  pageViewController: PageViewController,
-    didFinishScrollingFrom startingViewController: UIViewController,
-    destinationViewController: UIViewController,
-    transitionSuccessful: Bool)
+public protocol PageViewControllerDelegate: AnyObject {
+    /// Called whenever the user is about to start scrolling to a view
+    /// controller.
+    ///
+    /// - Parameters:
+    ///   - pageViewController: The `PageViewController` instance.
+    ///   - startingViewController: The view controller the user is
+    ///   scrolling from.
+    ///   - destinationViewController: The view controller the user is
+    ///   scrolling towards.
+    func pageViewController(
+        _ pageViewController: PageViewController,
+        willStartScrollingFrom startingViewController: UIViewController,
+        destinationViewController: UIViewController
+    )
+
+    /// Called whenever a scroll transition is in progress.
+    ///
+    /// - Parameters:
+    ///   - pageViewController: The `PageViewController` instance.
+    ///   - startingViewController: The view controller the user is
+    ///   scrolling from.
+    ///   - destinationViewController: The view controller the user is
+    ///   scrolling towards. Will be nil if the user is scrolling
+    ///   towards one of the edges.
+    ///   - progress: The progress of the scroll transition. Between 0
+    ///   and 1.
+    func pageViewController(
+        _ pageViewController: PageViewController,
+        isScrollingFrom startingViewController: UIViewController,
+        destinationViewController: UIViewController?,
+        progress: CGFloat
+    )
+
+    /// Called when the user finished scrolling to a new view.
+    ///
+    /// - Parameters:
+    ///   - pageViewController: The `PageViewController` instance.
+    ///   - startingViewController: The view controller the user is
+    ///   scrolling from.
+    ///   - destinationViewController: The view controller the user is
+    ///   scrolling towards.
+    ///   - transitionSuccessful: A boolean indicating whether the
+    ///   transition completed, or was cancelled by the user.
+    func pageViewController(
+        _ pageViewController: PageViewController,
+        didFinishScrollingFrom startingViewController: UIViewController,
+        destinationViewController: UIViewController,
+        transitionSuccessful: Bool
+    )
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Protocols/PageViewManagerDataSource.swift b/OpenBook/Pods/Parchment/Parchment/Protocols/PageViewManagerDataSource.swift
index c01c5ef5..668858b9 100644
--- a/OpenBook/Pods/Parchment/Parchment/Protocols/PageViewManagerDataSource.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Protocols/PageViewManagerDataSource.swift
@@ -1,6 +1,6 @@
 import UIKit
 
-protocol PageViewManagerDataSource: class {
-  func viewControllerBefore(_ viewController: UIViewController) -> UIViewController?
-  func viewControllerAfter(_ viewController: UIViewController) -> UIViewController?
+protocol PageViewManagerDataSource: AnyObject {
+    func viewControllerBefore(_ viewController: UIViewController) -> UIViewController?
+    func viewControllerAfter(_ viewController: UIViewController) -> UIViewController?
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Protocols/PageViewManagerDelegate.swift b/OpenBook/Pods/Parchment/Parchment/Protocols/PageViewManagerDelegate.swift
index 8e70ecb9..74ee6686 100644
--- a/OpenBook/Pods/Parchment/Parchment/Protocols/PageViewManagerDelegate.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Protocols/PageViewManagerDelegate.swift
@@ -1,25 +1,29 @@
 import UIKit
 
-protocol PageViewManagerDelegate: class {
-  func scrollForward()
-  func scrollReverse()
-  func layoutViews(for viewControllers: [UIViewController], keepContentOffset: Bool)
-  func addViewController(_ viewController: UIViewController)
-  func removeViewController(_ viewController: UIViewController)
-  func beginAppearanceTransition(
-    isAppearing: Bool,
-    viewController: UIViewController,
-    animated: Bool)
-  func endAppearanceTransition(viewController: UIViewController)
-  func willScroll(
-    from selectedViewController: UIViewController,
-    to destinationViewController: UIViewController)
-  func isScrolling(
-    from selectedViewController: UIViewController,
-    to destinationViewController: UIViewController?,
-    progress: CGFloat)
-  func didFinishScrolling(
-    from selectedViewController: UIViewController,
-    to destinationViewController: UIViewController,
-    transitionSuccessful: Bool)
+protocol PageViewManagerDelegate: AnyObject {
+    func scrollForward()
+    func scrollReverse()
+    func layoutViews(for viewControllers: [UIViewController], keepContentOffset: Bool)
+    func addViewController(_ viewController: UIViewController)
+    func removeViewController(_ viewController: UIViewController)
+    func beginAppearanceTransition(
+        isAppearing: Bool,
+        viewController: UIViewController,
+        animated: Bool
+    )
+    func endAppearanceTransition(viewController: UIViewController)
+    func willScroll(
+        from selectedViewController: UIViewController,
+        to destinationViewController: UIViewController
+    )
+    func isScrolling(
+        from selectedViewController: UIViewController,
+        to destinationViewController: UIViewController?,
+        progress: CGFloat
+    )
+    func didFinishScrolling(
+        from selectedViewController: UIViewController,
+        to destinationViewController: UIViewController,
+        transitionSuccessful: Bool
+    )
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Protocols/PagingItem.swift b/OpenBook/Pods/Parchment/Parchment/Protocols/PagingItem.swift
index d942030f..64ad937b 100644
--- a/OpenBook/Pods/Parchment/Parchment/Protocols/PagingItem.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Protocols/PagingItem.swift
@@ -5,27 +5,27 @@ import Foundation
 /// before they are needed. You can store whatever you want in here
 /// that makes sense for what you're displaying.
 public protocol PagingItem {
-  var identifier: Int { get }
-  func isEqual(to item: PagingItem) -> Bool
-  func isBefore(item: PagingItem) -> Bool
+    var identifier: Int { get }
+    func isEqual(to item: PagingItem) -> Bool
+    func isBefore(item: PagingItem) -> Bool
 }
 
 extension PagingItem where Self: Equatable {
-  public func isEqual(to item: PagingItem) -> Bool {
-    guard let item = item as? Self else { return false }
-    return self == item
-  }
+    public func isEqual(to item: PagingItem) -> Bool {
+        guard let item = item as? Self else { return false }
+        return self == item
+    }
 }
 
 extension PagingItem where Self: Comparable {
-  public func isBefore(item: PagingItem) -> Bool {
-    guard let item = item as? Self else { return false }
-    return self < item
-  }
+    public func isBefore(item: PagingItem) -> Bool {
+        guard let item = item as? Self else { return false }
+        return self < item
+    }
 }
 
 extension PagingItem where Self: Hashable {
-  public var identifier: Int {
-    return self.hashValue
-  }
+    public var identifier: Int {
+        return hashValue
+    }
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Protocols/PagingLayout.swift b/OpenBook/Pods/Parchment/Parchment/Protocols/PagingLayout.swift
index 43bad254..2c12a31e 100644
--- a/OpenBook/Pods/Parchment/Parchment/Protocols/PagingLayout.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Protocols/PagingLayout.swift
@@ -3,9 +3,9 @@ import Foundation
 /// Used to be able to initialize a layout based on the type defined
 /// in the menuLayoutClass property.
 protocol PagingLayout {
-  init()
+    init()
 }
 
 func createLayout<T>(layout: T.Type) -> T where T: PagingLayout {
-  return layout.init()
+    return layout.init()
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Protocols/PagingMenuDataSource.swift b/OpenBook/Pods/Parchment/Parchment/Protocols/PagingMenuDataSource.swift
index 1e0fd962..f209de8a 100644
--- a/OpenBook/Pods/Parchment/Parchment/Protocols/PagingMenuDataSource.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Protocols/PagingMenuDataSource.swift
@@ -1,6 +1,6 @@
 import Foundation
 
-public protocol PagingMenuDataSource: class {
-  func pagingItemBefore(pagingItem: PagingItem) -> PagingItem?
-  func pagingItemAfter(pagingItem: PagingItem) -> PagingItem?
+public protocol PagingMenuDataSource: AnyObject {
+    func pagingItemBefore(pagingItem: PagingItem) -> PagingItem?
+    func pagingItemAfter(pagingItem: PagingItem) -> PagingItem?
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Protocols/PagingMenuDelegate.swift b/OpenBook/Pods/Parchment/Parchment/Protocols/PagingMenuDelegate.swift
index 92e78ed3..b606724a 100644
--- a/OpenBook/Pods/Parchment/Parchment/Protocols/PagingMenuDelegate.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Protocols/PagingMenuDelegate.swift
@@ -1,6 +1,6 @@
 import Foundation
 
-public protocol PagingMenuDelegate: class {
-  func selectContent(pagingItem: PagingItem, direction: PagingDirection, animated: Bool)
-  func removeContent()
+public protocol PagingMenuDelegate: AnyObject {
+    func selectContent(pagingItem: PagingItem, direction: PagingDirection, animated: Bool)
+    func removeContent()
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Protocols/PagingViewControllerDataSource.swift b/OpenBook/Pods/Parchment/Parchment/Protocols/PagingViewControllerDataSource.swift
index 4aed3209..a11ab361 100644
--- a/OpenBook/Pods/Parchment/Parchment/Protocols/PagingViewControllerDataSource.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Protocols/PagingViewControllerDataSource.swift
@@ -8,29 +8,28 @@ import UIKit
 /// In order for these methods to be called, you first need to set the
 /// initial `PagingItem` by calling `select(pagingItem:)` on
 /// `PagingViewController`.
-public protocol PagingViewControllerDataSource: class {
-  
-  /// Return the total number of view controllers
-  ///
-  /// - Parameter pagingViewController: The `PagingViewController`
-  /// instance
-  /// - Returns: The number of view controllers
-  func numberOfViewControllers(in pagingViewController: PagingViewController) -> Int
-  
-  /// Return the view controller accociated with a given index. This
-  /// method is only called for the currently selected `PagingItem`,
-  /// and its two possible siblings.
-  ///
-  /// - Parameter pagingViewController: The `PagingViewController`
-  /// instance
-  /// - Parameter index: The index of a given `PagingItem`
-  /// - Returns: The view controller for the given index
-  func pagingViewController(_: PagingViewController, viewControllerAt index: Int) -> UIViewController
-  
-  /// Return the `PagingItem` instance for a given index
-  ///
-  /// - Parameter pagingViewController: The `PagingViewController`
-  /// instance
-  /// - Returns: The `PagingItem` instance
-  func pagingViewController(_: PagingViewController, pagingItemAt index: Int) -> PagingItem
+public protocol PagingViewControllerDataSource: AnyObject {
+    /// Return the total number of view controllers
+    ///
+    /// - Parameter pagingViewController: The `PagingViewController`
+    /// instance
+    /// - Returns: The number of view controllers
+    func numberOfViewControllers(in pagingViewController: PagingViewController) -> Int
+
+    /// Return the view controller accociated with a given index. This
+    /// method is only called for the currently selected `PagingItem`,
+    /// and its two possible siblings.
+    ///
+    /// - Parameter pagingViewController: The `PagingViewController`
+    /// instance
+    /// - Parameter index: The index of a given `PagingItem`
+    /// - Returns: The view controller for the given index
+    func pagingViewController(_: PagingViewController, viewControllerAt index: Int) -> UIViewController
+
+    /// Return the `PagingItem` instance for a given index
+    ///
+    /// - Parameter pagingViewController: The `PagingViewController`
+    /// instance
+    /// - Returns: The `PagingItem` instance
+    func pagingViewController(_: PagingViewController, pagingItemAt index: Int) -> PagingItem
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Protocols/PagingViewControllerDelegate.swift b/OpenBook/Pods/Parchment/Parchment/Protocols/PagingViewControllerDelegate.swift
index fa6aba36..2ed2a845 100644
--- a/OpenBook/Pods/Parchment/Parchment/Protocols/PagingViewControllerDelegate.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Protocols/PagingViewControllerDelegate.swift
@@ -4,95 +4,101 @@ import UIKit
 /// The `PagingViewControllerDelegate` protocol defines methods that
 /// can used to determine when the user navigates between view
 /// controllers.
-public protocol PagingViewControllerDelegate: class {
-  
-  /// Called whenever a scroll transition is in progress.
-  ///
-  /// - Parameter currentPagingItem: The currently selected `PagingItem`
-  /// - Parameter upcomingPagingItem: The `PagingItem` being scrolled to
-  /// - Parameter startingViewController: The view controller for the
-  /// current paging item
-  /// - Parameter destinationViewController: The view controller for
-  /// the upcoming paging item
-  /// - Parameter progress: The progress of the scroll transition
-  func pagingViewController(
-    _: PagingViewController,
-    isScrollingFromItem currentPagingItem: PagingItem,
-    toItem upcomingPagingItem: PagingItem?,
-    startingViewController: UIViewController,
-    destinationViewController: UIViewController?,
-    progress: CGFloat)
-  
-  /// Called whenever a scroll transition is about to start.
-  ///
-  /// - Parameter pagingItem: The `PagingItem` being scrolled to
-  /// - Parameter startingViewController: The view controller for the
-  /// current paging item
-  /// - Parameter destinationViewController: The view controller for
-  /// the upcoming paging item
-  func pagingViewController(
-    _: PagingViewController,
-    willScrollToItem pagingItem: PagingItem,
-    startingViewController: UIViewController,
-    destinationViewController: UIViewController)
-  
-  /// Called whenever a scroll transition completes or is cancelled.
-  ///
-  /// - Parameter pagingItem: The `PagingItem` that was scroll to
-  /// - Parameter startingViewController: The view controller for the
-  /// current paging item
-  /// - Parameter destinationViewController: The view controller for
-  /// the upcoming paging item
-  /// - Parameter transitionSuccessful: Boolean that indicates whether
-  /// the transition to the paging item was successful or not
-  func pagingViewController(
-    _ pagingViewController: PagingViewController,
-    didScrollToItem pagingItem: PagingItem,
-    startingViewController: UIViewController?,
-    destinationViewController: UIViewController,
-    transitionSuccessful: Bool)
-  
-  /// Called when paging cell is selected in the menu.
-  ///
-  /// - Parameter pagingViewController: The `PagingViewController` instance
-  /// - Parameter pagingItem: The item that was selected.
-  func pagingViewController(
-    _ pagingViewController: PagingViewController,
-    didSelectItem pagingItem: PagingItem)
+public protocol PagingViewControllerDelegate: AnyObject {
+    /// Called whenever a scroll transition is in progress.
+    ///
+    /// - Parameter currentPagingItem: The currently selected `PagingItem`
+    /// - Parameter upcomingPagingItem: The `PagingItem` being scrolled to
+    /// - Parameter startingViewController: The view controller for the
+    /// current paging item
+    /// - Parameter destinationViewController: The view controller for
+    /// the upcoming paging item
+    /// - Parameter progress: The progress of the scroll transition
+    func pagingViewController(
+        _: PagingViewController,
+        isScrollingFromItem currentPagingItem: PagingItem,
+        toItem upcomingPagingItem: PagingItem?,
+        startingViewController: UIViewController,
+        destinationViewController: UIViewController?,
+        progress: CGFloat
+    )
+
+    /// Called whenever a scroll transition is about to start.
+    ///
+    /// - Parameter pagingItem: The `PagingItem` being scrolled to
+    /// - Parameter startingViewController: The view controller for the
+    /// current paging item
+    /// - Parameter destinationViewController: The view controller for
+    /// the upcoming paging item
+    func pagingViewController(
+        _: PagingViewController,
+        willScrollToItem pagingItem: PagingItem,
+        startingViewController: UIViewController,
+        destinationViewController: UIViewController
+    )
+
+    /// Called whenever a scroll transition completes or is cancelled.
+    ///
+    /// - Parameter pagingItem: The `PagingItem` that was scroll to
+    /// - Parameter startingViewController: The view controller for the
+    /// current paging item
+    /// - Parameter destinationViewController: The view controller for
+    /// the upcoming paging item
+    /// - Parameter transitionSuccessful: Boolean that indicates whether
+    /// the transition to the paging item was successful or not
+    func pagingViewController(
+        _ pagingViewController: PagingViewController,
+        didScrollToItem pagingItem: PagingItem,
+        startingViewController: UIViewController?,
+        destinationViewController: UIViewController,
+        transitionSuccessful: Bool
+    )
+
+    /// Called when paging cell is selected in the menu.
+    ///
+    /// - Parameter pagingViewController: The `PagingViewController` instance
+    /// - Parameter pagingItem: The item that was selected.
+    func pagingViewController(
+        _ pagingViewController: PagingViewController,
+        didSelectItem pagingItem: PagingItem
+    )
 }
 
 public extension PagingViewControllerDelegate {
+    func pagingViewController(
+        _: PagingViewController,
+        isScrollingFromItem _: PagingItem,
+        toItem _: PagingItem?,
+        startingViewController _: UIViewController,
+        destinationViewController _: UIViewController?,
+        progress _: CGFloat
+    ) {
+        return
+    }
+
+    func pagingViewController(
+        _: PagingViewController,
+        willScrollToItem _: PagingItem,
+        startingViewController _: UIViewController,
+        destinationViewController _: UIViewController
+    ) {
+        return
+    }
+
+    func pagingViewController(
+        _: PagingViewController,
+        didScrollToItem _: PagingItem,
+        startingViewController _: UIViewController?,
+        destinationViewController _: UIViewController,
+        transitionSuccessful _: Bool
+    ) {
+        return
+    }
 
-  func pagingViewController(
-    _: PagingViewController,
-    isScrollingFromItem currentPagingItem: PagingItem,
-    toItem upcomingPagingItem: PagingItem?,
-    startingViewController: UIViewController,
-    destinationViewController: UIViewController?,
-    progress: CGFloat) {
-    return
-  }
-  
-  func pagingViewController(
-    _ pagingViewController: PagingViewController,
-    willScrollToItem pagingItem: PagingItem,
-    startingViewController: UIViewController,
-    destinationViewController: UIViewController) {
-    return
-  }
-  
-  func pagingViewController(
-    _ pagingViewController: PagingViewController,
-    didScrollToItem pagingItem: PagingItem,
-    startingViewController: UIViewController?,
-    destinationViewController: UIViewController,
-    transitionSuccessful: Bool) {
-    return
-  }
-  
-  func pagingViewController(
-    _ pagingViewController: PagingViewController,
-    didSelectItem pagingItem: PagingItem) {
-    return
-  }
+    func pagingViewController(
+        _: PagingViewController,
+        didSelectItem _: PagingItem
+    ) {
+        return
+    }
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Protocols/PagingViewControllerInfiniteDataSource.swift b/OpenBook/Pods/Parchment/Parchment/Protocols/PagingViewControllerInfiniteDataSource.swift
index a7113ec6..aca946d5 100644
--- a/OpenBook/Pods/Parchment/Parchment/Protocols/PagingViewControllerInfiniteDataSource.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Protocols/PagingViewControllerInfiniteDataSource.swift
@@ -7,35 +7,34 @@ import UIKit
 /// In order for these methods to be called, you first need to set
 /// the initial `PagingItem` by calling `select(pagingItem:)` on
 /// `PagingViewController`.
-public protocol PagingViewControllerInfiniteDataSource: class {
-                                                    
-  /// Return the view controller accociated with a `PagingItem`. This
-  /// method is only called for the currently selected `PagingItem`,
-  /// and its two possible siblings.
-  ///
-  /// - Parameter pagingViewController: The `PagingViewController`
-  /// instance
-  /// - Parameter viewControllerForPagingItem: A `PagingItem` instance
-  /// - Returns: The view controller for the `PagingItem` instance
-  func pagingViewController(_: PagingViewController, viewControllerFor pagingItem: PagingItem) -> UIViewController
+public protocol PagingViewControllerInfiniteDataSource: AnyObject {
+    /// Return the view controller accociated with a `PagingItem`. This
+    /// method is only called for the currently selected `PagingItem`,
+    /// and its two possible siblings.
+    ///
+    /// - Parameter pagingViewController: The `PagingViewController`
+    /// instance
+    /// - Parameter viewControllerForPagingItem: A `PagingItem` instance
+    /// - Returns: The view controller for the `PagingItem` instance
+    func pagingViewController(_: PagingViewController, viewControllerFor pagingItem: PagingItem) -> UIViewController
 
-  /// The `PagingItem` that comes before a given `PagingItem`
-  ///
-  /// - Parameter pagingViewController: The `PagingViewController`
-  /// instance
-  /// - Parameter pagingItemBeforePagingItem: A `PagingItem` instance
-  /// - Returns: The `PagingItem` that appears before the given
-  /// `PagingItem`, or `nil` to indicate that no more progress can be
-  /// made in that direction.
-  func pagingViewController(_: PagingViewController, itemBefore pagingItem: PagingItem) -> PagingItem?
-  
-  /// The `PagingItem` that comes after a given `PagingItem`
-  ///
-  /// - Parameter pagingViewController: The `PagingViewController`
-  /// instance
-  /// - Parameter pagingItemAfterPagingItem: A `PagingItem` instance
-  /// - Returns: The `PagingItem` that appears after the given
-  /// `PagingItem`, or `nil` to indicate that no more progress can be
-  /// made in that direction.
-  func pagingViewController(_ : PagingViewController, itemAfter pagingItem: PagingItem) -> PagingItem?
+    /// The `PagingItem` that comes before a given `PagingItem`
+    ///
+    /// - Parameter pagingViewController: The `PagingViewController`
+    /// instance
+    /// - Parameter pagingItemBeforePagingItem: A `PagingItem` instance
+    /// - Returns: The `PagingItem` that appears before the given
+    /// `PagingItem`, or `nil` to indicate that no more progress can be
+    /// made in that direction.
+    func pagingViewController(_: PagingViewController, itemBefore pagingItem: PagingItem) -> PagingItem?
+
+    /// The `PagingItem` that comes after a given `PagingItem`
+    ///
+    /// - Parameter pagingViewController: The `PagingViewController`
+    /// instance
+    /// - Parameter pagingItemAfterPagingItem: A `PagingItem` instance
+    /// - Returns: The `PagingItem` that appears after the given
+    /// `PagingItem`, or `nil` to indicate that no more progress can be
+    /// made in that direction.
+    func pagingViewController(_: PagingViewController, itemAfter pagingItem: PagingItem) -> PagingItem?
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Protocols/PagingViewControllerSizeDelegate.swift b/OpenBook/Pods/Parchment/Parchment/Protocols/PagingViewControllerSizeDelegate.swift
index b4428fdf..4d3d8725 100644
--- a/OpenBook/Pods/Parchment/Parchment/Protocols/PagingViewControllerSizeDelegate.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Protocols/PagingViewControllerSizeDelegate.swift
@@ -1,19 +1,19 @@
 import UIKit
 
-public protocol PagingViewControllerSizeDelegate: class {
-  
-  /// Manually control the width for a given `PagingItem`. Parchment
-  /// does not support self-sizing cells, so you have to use this if
-  /// you have a cell that you want to size based on its content.
-  ///
-  /// - Parameter pagingViewController: The `PagingViewController`
-  /// instance
-  /// - Parameter pagingItem: The `PagingItem` instance
-  /// - Parameter isSelected: A boolean that indicates whether the
-  /// given `PagingItem` is selected
-  /// - Returns: The width for the `PagingItem`
-  func pagingViewController(
-    _: PagingViewController,
-    widthForPagingItem pagingItem: PagingItem,
-    isSelected: Bool) -> CGFloat
+public protocol PagingViewControllerSizeDelegate: AnyObject {
+    /// Manually control the width for a given `PagingItem`. Parchment
+    /// does not support self-sizing cells, so you have to use this if
+    /// you have a cell that you want to size based on its content.
+    ///
+    /// - Parameter pagingViewController: The `PagingViewController`
+    /// instance
+    /// - Parameter pagingItem: The `PagingItem` instance
+    /// - Parameter isSelected: A boolean that indicates whether the
+    /// given `PagingItem` is selected
+    /// - Returns: The width for the `PagingItem`
+    func pagingViewController(
+        _: PagingViewController,
+        widthForPagingItem pagingItem: PagingItem,
+        isSelected: Bool
+    ) -> CGFloat
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Protocols/Tween.swift b/OpenBook/Pods/Parchment/Parchment/Protocols/Tween.swift
index 4b16e97b..87e98cd2 100644
--- a/OpenBook/Pods/Parchment/Parchment/Protocols/Tween.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Protocols/Tween.swift
@@ -2,5 +2,5 @@ import Foundation
 import UIKit
 
 func tween(from: CGFloat, to: CGFloat, progress: CGFloat) -> CGFloat {
-  return ((to - from) * progress) + from
+    return ((to - from) * progress) + from
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Structs/AnyPagingItem.swift b/OpenBook/Pods/Parchment/Parchment/Structs/AnyPagingItem.swift
index 0d65b5b6..cbea22d7 100644
--- a/OpenBook/Pods/Parchment/Parchment/Structs/AnyPagingItem.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Structs/AnyPagingItem.swift
@@ -1,21 +1,21 @@
 import Foundation
 
 struct AnyPagingItem: PagingItem, Hashable, Comparable {
-  let base: PagingItem
-  
-  init(base: PagingItem) {
-    self.base = base
-  }
-  
-  func hash(into hasher: inout Hasher) {
-    hasher.combine(base.identifier)
-  }
-  
-  static func < (lhs: AnyPagingItem, rhs: AnyPagingItem) -> Bool {
-    return lhs.base.isBefore(item: rhs.base)
-  }
-  
-  static func == (lhs: AnyPagingItem, rhs: AnyPagingItem) -> Bool {
-    return lhs.base.isEqual(to: rhs.base)
-  }
+    let base: PagingItem
+
+    init(base: PagingItem) {
+        self.base = base
+    }
+
+    func hash(into hasher: inout Hasher) {
+        hasher.combine(base.identifier)
+    }
+
+    static func < (lhs: AnyPagingItem, rhs: AnyPagingItem) -> Bool {
+        return lhs.base.isBefore(item: rhs.base)
+    }
+
+    static func == (lhs: AnyPagingItem, rhs: AnyPagingItem) -> Bool {
+        return lhs.base.isEqual(to: rhs.base)
+    }
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Structs/PageView.swift b/OpenBook/Pods/Parchment/Parchment/Structs/PageView.swift
index c841ed3d..26588b49 100644
--- a/OpenBook/Pods/Parchment/Parchment/Structs/PageView.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Structs/PageView.swift
@@ -1,5 +1,5 @@
-import UIKit
 import SwiftUI
+import UIKit
 
 /// Check if both SwiftUI and Combine is available. Without this
 /// xcodebuild fails, saying it can't find the SwiftUI types used
@@ -7,83 +7,197 @@ import SwiftUI
 /// check. Found a possible fix here: https://stackoverflow.com/questions/58233454/how-to-use-swiftui-in-framework
 /// This might be related to the issue discussed in this thread:
 /// https://forums.swift.org/t/weak-linking-of-frameworks-with-greater-deployment-targets/26017/24
-#if canImport(SwiftUI) && canImport(Combine)
-
-/// `PageView` provides a SwiftUI wrapper around `PagingViewController`.
-/// It can be used with any fixed array of `PagingItem`s. Use the
-/// `PagingOptions` struct to customize the properties.
-@available(iOS 13.0, *)
-public struct PageView<Item: PagingItem, Page: View>: View {
-  private let items: [Item]
-  private let options: PagingOptions
-  private let content: (Item) -> Page
-  
-  /// Initialize a new `PageView`.
-  ///
-  /// - Parameters:
-  ///   - options: The configuration parameters we want to customize.
-  ///   - items: The array of `PagingItem`s to display in the menu.
-  ///   - content: A callback that returns the `View` for each item.
-  public init(
-    options: PagingOptions = PagingOptions(),
-    items: [Item],
-    content: @escaping (Item) -> Page) {
-    self.options = options
-    self.items = items
-    self.content = content
-  }
-  
-  public var body: some View {
-    PagingController(
-      items: items,
-      options: options,
-      content: content)
-  }
-  
-  struct PagingController: UIViewControllerRepresentable {
-    let items: [Item]
-    let options: PagingOptions
-    let content: (Item) -> Page
-    
-    func makeCoordinator() -> Coordinator {
-      Coordinator(self)
-    }
-    
-    func makeUIViewController(context: UIViewControllerRepresentableContext<PagingController>) -> PagingViewController {
-      let pagingViewController = PagingViewController(options: options)
-      return pagingViewController
-    }
-    
-    func updateUIViewController(_ pagingViewController: PagingViewController, context: UIViewControllerRepresentableContext<PagingController>) {
-      context.coordinator.parent = self
-      
-      if pagingViewController.dataSource == nil {
-        pagingViewController.dataSource = context.coordinator
-      } else {
-        pagingViewController.reloadData()
-      }
-    }
-  }
+#if canImport(SwiftUI) && !(os(iOS) && (arch(i386) || arch(arm)))
 
-  class Coordinator: PagingViewControllerDataSource {
-    var parent: PagingController
-    
-    init(_ pagingController: PagingController) {
-      self.parent = pagingController
-    }
-    
-    func numberOfViewControllers(in pagingViewController: PagingViewController) -> Int {
-      return parent.items.count
-    }
-    
-    func pagingViewController(_: PagingViewController, viewControllerAt index: Int) -> UIViewController {
-      let view = parent.content(parent.items[index])
-      return UIHostingController(rootView: view)
-    }
-    
-    func pagingViewController(_: PagingViewController, pagingItemAt index: Int) -> PagingItem {
-      return parent.items[index]
+    /// `PageView` provides a SwiftUI wrapper around `PagingViewController`.
+    /// It can be used with any fixed array of `PagingItem`s. Use the
+    /// `PagingOptions` struct to customize the properties.
+    @available(iOS 13.0, *)
+    public struct PageView<Item: PagingItem, Page: View>: View {
+        let content: (Item) -> Page
+
+        private let options: PagingOptions
+        private var items = [Item]()
+        private var onWillScroll: ((PagingItem) -> Void)?
+        private var onDidScroll: ((PagingItem) -> Void)?
+        private var onDidSelect: ((PagingItem) -> Void)?
+        @Binding private var selectedIndex: Int
+
+        /// Initialize a new `PageView`.
+        ///
+        /// - Parameters:
+        ///   - options: The configuration parameters we want to customize.
+        ///   - items: The array of `PagingItem`s to display in the menu.
+        ///   - selectedIndex: The index of the currently selected page.
+        ///   Updating this index will transition to the new index.
+        ///   - content: A callback that returns the `View` for each item.
+        public init(
+            options: PagingOptions = PagingOptions(),
+            items: [Item],
+            selectedIndex: Binding<Int> = .constant(Int.max),
+            content: @escaping (Item) -> Page
+        ) {
+            _selectedIndex = selectedIndex
+            self.options = options
+            self.items = items
+            self.content = content
+        }
+
+        public var body: some View {
+            PagingController(
+                items: items,
+                options: options,
+                content: content,
+                onWillScroll: onWillScroll,
+                onDidScroll: onDidScroll,
+                onDidSelect: onDidSelect,
+                selectedIndex: $selectedIndex
+            )
+        }
+
+        /// Called when the user finished scrolling to a new view.
+        ///
+        /// - Parameter action: A closure that is called with the
+        /// paging item that was scrolled to.
+        /// - Returns: An instance of self
+        public func didScroll(_ action: @escaping (PagingItem) -> Void) -> Self {
+            var view = self
+            view.onDidScroll = action
+            return view
+        }
+
+        /// Called when the user is about to start scrolling to a new view.
+        ///
+        /// - Parameter action: A closure that is called with the
+        /// paging item that is being scrolled to.
+        /// - Returns: An instance of self
+        public func willScroll(_ action: @escaping (PagingItem) -> Void) -> Self {
+            var view = self
+            view.onWillScroll = action
+            return view
+        }
+
+        /// Called when an item was selected in the menu.
+        ///
+        /// - Parameter action: A closure that is called with the
+        /// selected paging item.
+        /// - Returns: An instance of self
+        public func didSelect(_ action: @escaping (PagingItem) -> Void) -> Self {
+            var view = self
+            view.onDidSelect = action
+            return view
+        }
+
+        /// Create a custom paging view controller subclass that we
+        /// can use to store state to avoid reloading data unnecessary.
+        final class CustomPagingViewController: PagingViewController {
+            var items: [Item]?
+        }
+
+        struct PagingController: UIViewControllerRepresentable {
+            let items: [Item]
+            let options: PagingOptions
+            let content: (Item) -> Page
+            var onWillScroll: ((PagingItem) -> Void)?
+            var onDidScroll: ((PagingItem) -> Void)?
+            var onDidSelect: ((PagingItem) -> Void)?
+
+            @Binding var selectedIndex: Int
+
+            func makeCoordinator() -> Coordinator {
+                Coordinator(self)
+            }
+
+            func makeUIViewController(context: UIViewControllerRepresentableContext<PagingController>) -> CustomPagingViewController {
+                let pagingViewController = CustomPagingViewController(options: options)
+                pagingViewController.dataSource = context.coordinator
+                pagingViewController.delegate = context.coordinator
+                return pagingViewController
+            }
+
+            func updateUIViewController(_ pagingViewController: CustomPagingViewController,
+                                        context: UIViewControllerRepresentableContext<PagingController>) {
+                context.coordinator.parent = self
+
+                if pagingViewController.dataSource == nil {
+                    pagingViewController.dataSource = context.coordinator
+                }
+
+                // If the menu items have changed we call reload data
+                // to update both the menu and content views.
+                if let previousItems = pagingViewController.items,
+                    !previousItems.elementsEqual(items, by: { $0.isEqual(to: $1) }) {
+                    pagingViewController.reloadData()
+                }
+
+                // Store the current items so we can compare it with
+                // the new items the next time this method is called.
+                pagingViewController.items = items
+
+                // HACK: If the user don't pass a selectedIndex binding, the
+                // default parameter is set to .constant(Int.max) which allows
+                // us to check here if a binding was passed in or not (it
+                // doesn't seem possible to make the binding itself optional).
+                // This check is needed because we cannot update a .constant
+                // value. When the user scroll to another page, the
+                // selectedIndex binding will always be the same, so calling
+                // `select(index:)` will select the wrong page. This fixes a bug
+                // where the wrong page would be selected when rotating.
+                guard selectedIndex != Int.max else {
+                    return
+                }
+
+                pagingViewController.select(index: selectedIndex, animated: true)
+            }
+        }
+
+        final class Coordinator: PagingViewControllerDataSource, PagingViewControllerDelegate {
+            var parent: PagingController
+
+            init(_ pagingController: PagingController) {
+                parent = pagingController
+            }
+
+            func numberOfViewControllers(in _: PagingViewController) -> Int {
+                return parent.items.count
+            }
+
+            func pagingViewController(_: PagingViewController, viewControllerAt index: Int) -> UIViewController {
+                let view = parent.content(parent.items[index])
+                let hostingViewController = UIHostingController(rootView: view)
+                let backgroundColor = parent.options.pagingContentBackgroundColor
+                hostingViewController.view.backgroundColor = backgroundColor
+                return hostingViewController
+            }
+
+            func pagingViewController(_: PagingViewController, pagingItemAt index: Int) -> PagingItem {
+                parent.items[index]
+            }
+
+            func pagingViewController(_ controller: PagingViewController,
+                                      didScrollToItem pagingItem: PagingItem,
+                                      startingViewController _: UIViewController?,
+                                      destinationViewController _: UIViewController,
+                                      transitionSuccessful _: Bool) {
+                if let item = pagingItem as? Item,
+                    let index = parent.items.firstIndex(where: { $0.isEqual(to: item) }) {
+                    parent.selectedIndex = index
+                }
+
+                parent.onDidScroll?(pagingItem)
+
+            }
+
+            func pagingViewController(_: PagingViewController,
+                                      willScrollToItem pagingItem: PagingItem,
+                                      startingViewController _: UIViewController,
+                                      destinationViewController _: UIViewController) {
+                parent.onWillScroll?(pagingItem)
+            }
+
+            func pagingViewController(_: PagingViewController, didSelectItem pagingItem: PagingItem) {
+                parent.onDidSelect?(pagingItem)
+            }
+        }
     }
-  }
-}
 #endif
diff --git a/OpenBook/Pods/Parchment/Parchment/Structs/PagingCellViewModel.swift b/OpenBook/Pods/Parchment/Parchment/Structs/PagingCellViewModel.swift
index 08f34563..dc14efff 100644
--- a/OpenBook/Pods/Parchment/Parchment/Structs/PagingCellViewModel.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Structs/PagingCellViewModel.swift
@@ -2,26 +2,25 @@ import Foundation
 import UIKit
 
 struct PagingTitleCellViewModel {
-  let title: String?
-  let font: UIFont
-  let selectedFont: UIFont
-  let textColor: UIColor
-  let selectedTextColor: UIColor
-  let backgroundColor: UIColor
-  let selectedBackgroundColor: UIColor
-  let selected: Bool
-  let labelSpacing: CGFloat
-  
-  init(title: String?, selected: Bool, options: PagingOptions) {
-    self.title = title
-    self.font = options.font
-    self.selectedFont = options.selectedFont
-    self.textColor = options.textColor
-    self.selectedTextColor = options.selectedTextColor
-    self.backgroundColor = options.backgroundColor
-    self.selectedBackgroundColor = options.selectedBackgroundColor
-    self.selected = selected
-    self.labelSpacing = options.menuItemLabelSpacing
-  }
-  
+    let title: String?
+    let font: UIFont
+    let selectedFont: UIFont
+    let textColor: UIColor
+    let selectedTextColor: UIColor
+    let backgroundColor: UIColor
+    let selectedBackgroundColor: UIColor
+    let selected: Bool
+    let labelSpacing: CGFloat
+
+    init(title: String?, selected: Bool, options: PagingOptions) {
+        self.title = title
+        font = options.font
+        selectedFont = options.selectedFont
+        textColor = options.textColor
+        selectedTextColor = options.selectedTextColor
+        backgroundColor = options.backgroundColor
+        selectedBackgroundColor = options.selectedBackgroundColor
+        self.selected = selected
+        labelSpacing = options.menuItemLabelSpacing
+    }
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Structs/PagingDiff.swift b/OpenBook/Pods/Parchment/Parchment/Structs/PagingDiff.swift
index 657bc93a..c9fc5b5f 100644
--- a/OpenBook/Pods/Parchment/Parchment/Structs/PagingDiff.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Structs/PagingDiff.swift
@@ -1,90 +1,78 @@
 import Foundation
 
 struct PagingDiff {
-  
-  private let from: PagingItems
-  private let to: PagingItems
-  private var fromCache: [Int: PagingItem]
-  private var toCache: [Int: PagingItem]
-  private var lastMatchingItem: PagingItem?
-  
-  init(from: PagingItems, to: PagingItems) {
-    self.from = from
-    self.to = to
-    self.fromCache = [:]
-    self.toCache = [:]
-    
-    for item in from.items {
-      fromCache[item.identifier] = item
-    }
-    
-    for item in to.items {
-      toCache[item.identifier] = item
-    }
-    
-    for toItem in to.items {
-      for fromItem in from.items {
-        if toItem.isEqual(to: fromItem) {
-          lastMatchingItem = toItem
-          break
+    private let from: PagingItems
+    private let to: PagingItems
+    private var fromCache: [Int: PagingItem]
+    private var toCache: [Int: PagingItem]
+    private var lastMatchingItem: PagingItem?
+
+    init(from: PagingItems, to: PagingItems) {
+        self.from = from
+        self.to = to
+        fromCache = [:]
+        toCache = [:]
+
+        for item in from.items {
+            fromCache[item.identifier] = item
         }
-      }
-    }
-  }
-  
-  func removed() -> [IndexPath] {
-    let removed = diff(visibleItems: from, cache: toCache)
-    var items: [IndexPath] = []
-    
-    if let lastItem = lastMatchingItem {
-      for indexPath in removed {
-        if let lastIndexPath = from.indexPath(for: lastItem) {
-          if indexPath.item < lastIndexPath.item {
-            items.append(indexPath)
-          }
+
+        for item in to.items {
+            toCache[item.identifier] = item
+        }
+
+        for toItem in to.items {
+            for fromItem in from.items {
+                if toItem.isEqual(to: fromItem) {
+                    lastMatchingItem = toItem
+                    break
+                }
+            }
         }
-      }
     }
-    
-    return items
-  }
-  
-  func added() -> [IndexPath] {
-    let removedCount = removed().count
-    let added = diff(visibleItems: to, cache: fromCache)
-    
-    var items: [IndexPath] = []
-    
-    if let lastItem = lastMatchingItem {
-      for indexPath in added {
-        if let lastIndexPath = from.indexPath(for: lastItem) {
-          if indexPath.item + removedCount <= lastIndexPath.item {
-            items.append(indexPath)
-          }
+
+    func removed() -> [IndexPath] {
+        let removed = diff(visibleItems: from, cache: toCache)
+        var items: [IndexPath] = []
+
+        if let lastItem = lastMatchingItem {
+            for indexPath in removed {
+                if let lastIndexPath = from.indexPath(for: lastItem) {
+                    if indexPath.item < lastIndexPath.item {
+                        items.append(indexPath)
+                    }
+                }
+            }
         }
-      }
+
+        return items
     }
-    
-    return items
-  }
-  
-  private func diff(visibleItems: PagingItems, cache: [Int: PagingItem]) -> [IndexPath] {
-    #if swift(>=4.1)
-      return visibleItems.items.compactMap { item in
-        if cache[item.identifier] == nil {
-          return visibleItems.indexPath(for: item)
+
+    func added() -> [IndexPath] {
+        let removedCount = removed().count
+        let added = diff(visibleItems: to, cache: fromCache)
+
+        var items: [IndexPath] = []
+
+        if let lastItem = lastMatchingItem {
+            for indexPath in added {
+                if let lastIndexPath = from.indexPath(for: lastItem) {
+                    if indexPath.item + removedCount <= lastIndexPath.item {
+                        items.append(indexPath)
+                    }
+                }
+            }
         }
-        return nil
-      }
-    #else
-      return visibleItems.items.flatMap { item in
-        if cache[item.hashValue] == nil {
-          return visibleItems.indexPath(for: item)
+
+        return items
+    }
+
+    private func diff(visibleItems: PagingItems, cache: [Int: PagingItem]) -> [IndexPath] {
+        return visibleItems.items.compactMap { item in
+            if cache[item.identifier] == nil {
+                return visibleItems.indexPath(for: item)
+            }
+            return nil
         }
-        return nil
-      }
-    #endif
-  }
-  
+    }
 }
-
diff --git a/OpenBook/Pods/Parchment/Parchment/Structs/PagingDistance.swift b/OpenBook/Pods/Parchment/Parchment/Structs/PagingDistance.swift
index a11c7059..38c4e79a 100644
--- a/OpenBook/Pods/Parchment/Parchment/Structs/PagingDistance.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Structs/PagingDistance.swift
@@ -2,261 +2,261 @@ import Foundation
 import UIKit
 
 struct PagingDistance {
-  private let view: CollectionView
-  private let hasItemsBefore: Bool
-  private let hasItemsAfter: Bool
-  private let fromItem: PagingItem
-  private let fromAttributes: PagingCellLayoutAttributes?
-  private let toItem: PagingItem
-  private let toAttributes: PagingCellLayoutAttributes
-  private let selectedScrollPosition: PagingSelectedScrollPosition
-  private let sizeCache: PagingSizeCache
-  private let navigationOrientation: PagingNavigationOrientation
-  
-  private var fromSize: CGFloat {
-    guard let attributes = fromAttributes else { return 0 }
-    switch navigationOrientation {
-    case .vertical:
-      return attributes.bounds.height
-    case .horizontal:
-      return attributes.bounds.width
-    }
-  }
-  
-  private var fromCenter: CGFloat {
-    guard let attributes = fromAttributes else { return 0 }
-    switch navigationOrientation {
-    case .vertical:
-      return attributes.center.y
-    case .horizontal:
-      return attributes.center.x
-    }
-  }
-  
-  private var toSize: CGFloat {
-    switch navigationOrientation {
-    case .vertical:
-      return toAttributes.bounds.height
-    case .horizontal:
-      return toAttributes.bounds.width
+    private let view: CollectionView
+    private let hasItemsBefore: Bool
+    private let hasItemsAfter: Bool
+    private let fromItem: PagingItem
+    private let fromAttributes: PagingCellLayoutAttributes?
+    private let toItem: PagingItem
+    private let toAttributes: PagingCellLayoutAttributes
+    private let selectedScrollPosition: PagingSelectedScrollPosition
+    private let sizeCache: PagingSizeCache
+    private let navigationOrientation: PagingNavigationOrientation
+
+    private var fromSize: CGFloat {
+        guard let attributes = fromAttributes else { return 0 }
+        switch navigationOrientation {
+        case .vertical:
+            return attributes.bounds.height
+        case .horizontal:
+            return attributes.bounds.width
+        }
     }
-  }
-  
-  private var toCenter: CGFloat {
-    switch navigationOrientation {
-    case .vertical:
-      return toAttributes.center.y
-    case .horizontal:
-      return toAttributes.center.x
+
+    private var fromCenter: CGFloat {
+        guard let attributes = fromAttributes else { return 0 }
+        switch navigationOrientation {
+        case .vertical:
+            return attributes.center.y
+        case .horizontal:
+            return attributes.center.x
+        }
     }
-  }
-  
-  private var contentOffset: CGFloat {
-    switch navigationOrientation {
-    case .vertical:
-      return view.contentOffset.y
-    case .horizontal:
-      return view.contentOffset.x
+
+    private var toSize: CGFloat {
+        switch navigationOrientation {
+        case .vertical:
+            return toAttributes.bounds.height
+        case .horizontal:
+            return toAttributes.bounds.width
+        }
     }
-  }
-  
-  private var contentSize: CGFloat {
-    switch navigationOrientation {
-    case .vertical:
-      return view.contentSize.height
-    case .horizontal:
-      return view.contentSize.width
+
+    private var toCenter: CGFloat {
+        switch navigationOrientation {
+        case .vertical:
+            return toAttributes.center.y
+        case .horizontal:
+            return toAttributes.center.x
+        }
     }
-  }
-  
-  private var viewSize: CGFloat {
-    switch navigationOrientation {
-    case .vertical:
-      return view.bounds.height
-    case .horizontal:
-      return view.bounds.width
+
+    private var contentOffset: CGFloat {
+        switch navigationOrientation {
+        case .vertical:
+            return view.contentOffset.y
+        case .horizontal:
+            return view.contentOffset.x
+        }
     }
-  }
-  
-  private var viewCenter: CGFloat {
-    switch navigationOrientation {
-    case .vertical:
-      return view.bounds.midY
-    case .horizontal:
-      return view.bounds.midX
+
+    private var contentSize: CGFloat {
+        switch navigationOrientation {
+        case .vertical:
+            return view.contentSize.height
+        case .horizontal:
+            return view.contentSize.width
+        }
     }
-  }
-  
-  init?(
-    view: CollectionView,
-    currentPagingItem: PagingItem,
-    upcomingPagingItem: PagingItem,
-    visibleItems: PagingItems,
-    sizeCache: PagingSizeCache,
-    selectedScrollPosition: PagingSelectedScrollPosition,
-    layoutAttributes: [IndexPath: PagingCellLayoutAttributes],
-    navigationOrientation: PagingNavigationOrientation
-  ) {
-    guard
-      let upcomingIndexPath = visibleItems.indexPath(for: upcomingPagingItem),
-      let upcomingAttributes = layoutAttributes[upcomingIndexPath] else {
-        // When there is no upcomingIndexPath or any layout attributes
-        // for that item we have no way to determine the distance.
-        return nil
+
+    private var viewSize: CGFloat {
+        switch navigationOrientation {
+        case .vertical:
+            return view.bounds.height
+        case .horizontal:
+            return view.bounds.width
+        }
     }
-    
-    self.view = view
-    self.hasItemsBefore = visibleItems.hasItemsBefore
-    self.hasItemsAfter = visibleItems.hasItemsAfter
-    self.fromItem = currentPagingItem
-    self.toItem = upcomingPagingItem
-    self.toAttributes = upcomingAttributes
-    self.selectedScrollPosition = selectedScrollPosition
-    self.sizeCache = sizeCache
-    self.navigationOrientation = navigationOrientation
-    
-    if let currentIndexPath = visibleItems.indexPath(for: currentPagingItem),
-      let fromAttributes = layoutAttributes[currentIndexPath] {
-      self.fromAttributes = fromAttributes
-    } else {
-      self.fromAttributes = nil
+
+    private var viewCenter: CGFloat {
+        switch navigationOrientation {
+        case .vertical:
+            return view.bounds.midY
+        case .horizontal:
+            return view.bounds.midX
+        }
     }
-  }
-  
-  /// In order to get the menu items to scroll alongside the content
-  /// we create a transition struct to keep track of the initial
-  /// content offset and the distance to the upcoming item so that we
-  /// can update the content offset as the user is swiping.
-  func calculate() -> CGFloat {
-    var distance: CGFloat = 0
-    
-    switch (selectedScrollPosition) {
-    case .left:
-      distance = distanceLeft()
-    case .right:
-      distance = distanceRight()
-    case .preferCentered, .center:
-      distance = distanceCentered()
+
+    init?(
+        view: CollectionView,
+        currentPagingItem: PagingItem,
+        upcomingPagingItem: PagingItem,
+        visibleItems: PagingItems,
+        sizeCache: PagingSizeCache,
+        selectedScrollPosition: PagingSelectedScrollPosition,
+        layoutAttributes: [IndexPath: PagingCellLayoutAttributes],
+        navigationOrientation: PagingNavigationOrientation
+    ) {
+        guard
+            let upcomingIndexPath = visibleItems.indexPath(for: upcomingPagingItem),
+            let upcomingAttributes = layoutAttributes[upcomingIndexPath] else {
+            // When there is no upcomingIndexPath or any layout attributes
+            // for that item we have no way to determine the distance.
+            return nil
+        }
+
+        self.view = view
+        hasItemsBefore = visibleItems.hasItemsBefore
+        hasItemsAfter = visibleItems.hasItemsAfter
+        fromItem = currentPagingItem
+        toItem = upcomingPagingItem
+        toAttributes = upcomingAttributes
+        self.selectedScrollPosition = selectedScrollPosition
+        self.sizeCache = sizeCache
+        self.navigationOrientation = navigationOrientation
+
+        if let currentIndexPath = visibleItems.indexPath(for: currentPagingItem),
+            let fromAttributes = layoutAttributes[currentIndexPath] {
+            self.fromAttributes = fromAttributes
+        } else {
+            fromAttributes = nil
+        }
     }
-    
-    // Update the distance to account for cases where the user has
-    // scrolled all the way over to the other edge.
-    if view.near(edge: .left, clearance: -distance) && distance < 0 && hasItemsBefore == false {
-      distance = -(contentOffset + view.contentInset.left)
-    } else if view.near(edge: .right, clearance: distance) && distance > 0 && hasItemsAfter == false {
-      let originalDistance = distance
-      distance = contentSize - (contentOffset + viewSize)
-      
-      if sizeCache.implementsSizeDelegate {
-        let toWidth = sizeCache.itemWidthSelected(for: toItem)
-        distance += toWidth - toSize
-        
-        if let _ = fromAttributes {
-          let fromWidth = sizeCache.itemSize(for: fromItem)
-          distance -= fromSize - fromWidth
+
+    /// In order to get the menu items to scroll alongside the content
+    /// we create a transition struct to keep track of the initial
+    /// content offset and the distance to the upcoming item so that we
+    /// can update the content offset as the user is swiping.
+    func calculate() -> CGFloat {
+        var distance: CGFloat = 0
+
+        switch selectedScrollPosition {
+        case .left:
+            distance = distanceLeft()
+        case .right:
+            distance = distanceRight()
+        case .preferCentered, .center:
+            distance = distanceCentered()
         }
-        
-        // If the selected cells grows so much that it will move
-        // beyond the center of the view, we want to update the
-        // distance after all.
-        if selectedScrollPosition == .preferCentered {
-          let center = viewCenter
-          let centerAfterTransition = toCenter - distance
-          if centerAfterTransition < center {
-            distance = originalDistance
-          }
+
+        // Update the distance to account for cases where the user has
+        // scrolled all the way over to the other edge.
+        if view.near(edge: .left, clearance: -distance), distance < 0, hasItemsBefore == false {
+            distance = -(contentOffset + view.contentInset.left)
+        } else if view.near(edge: .right, clearance: distance), distance > 0, hasItemsAfter == false {
+            let originalDistance = distance
+            distance = contentSize - (contentOffset + viewSize)
+
+            if sizeCache.implementsSizeDelegate {
+                let toWidth = sizeCache.itemWidthSelected(for: toItem)
+                distance += toWidth - toSize
+
+                if let _ = fromAttributes {
+                    let fromWidth = sizeCache.itemSize(for: fromItem)
+                    distance -= fromSize - fromWidth
+                }
+
+                // If the selected cells grows so much that it will move
+                // beyond the center of the view, we want to update the
+                // distance after all.
+                if selectedScrollPosition == .preferCentered {
+                    let center = viewCenter
+                    let centerAfterTransition = toCenter - distance
+                    if centerAfterTransition < center {
+                        distance = originalDistance
+                    }
+                }
+            }
         }
-      }
+
+        return distance
     }
-    
-    return distance
-  }
-  
-  private func distanceLeft() -> CGFloat {
-    // Need to use the combination of center and size as the frame
-    // property will be affected by things like transforms etc.
-    let currentPosition = toCenter - (toSize / 2)
-    var distance = currentPosition - contentOffset
-    
-    // When scrolling forwards, subtract the difference between the
-    // current width and the new selected width. If we're scrolling
-    // backwards or the current item is scrolled out of view the
-    // difference doesn't matter as the change in frame of the current
-    // item won't have any affect on the position of the upcoming item.
-    if sizeCache.implementsSizeDelegate {
-      if let _ = fromAttributes {
-        if fromItem.isBefore(item: toItem) {
-          let fromWidth = sizeCache.itemSize(for: fromItem)
-          let fromDiff = fromSize - fromWidth
-          distance -= fromDiff
+
+    private func distanceLeft() -> CGFloat {
+        // Need to use the combination of center and size as the frame
+        // property will be affected by things like transforms etc.
+        let currentPosition = toCenter - (toSize / 2)
+        var distance = currentPosition - contentOffset
+
+        // When scrolling forwards, subtract the difference between the
+        // current width and the new selected width. If we're scrolling
+        // backwards or the current item is scrolled out of view the
+        // difference doesn't matter as the change in frame of the current
+        // item won't have any affect on the position of the upcoming item.
+        if sizeCache.implementsSizeDelegate {
+            if let _ = fromAttributes {
+                if fromItem.isBefore(item: toItem) {
+                    let fromWidth = sizeCache.itemSize(for: fromItem)
+                    let fromDiff = fromSize - fromWidth
+                    distance -= fromDiff
+                }
+            }
         }
-      }
+        return distance
     }
-    return distance
-  }
-  
-  private func distanceRight() -> CGFloat {
-    // Need to use the combination of center and size as the frame
-    // property will be affected by things like transforms etc.
-    let currentPosition = toCenter + (toSize / 2)
-    let width = contentOffset + viewSize
-    var distance = currentPosition - width
-    
-    if sizeCache.implementsSizeDelegate {
-      let toWidth = sizeCache.itemWidthSelected(for: toItem)
-      
-      // If we have layout attributes for the current item it means
-      // the item is visible and will affect the on the position of
-      // the upcoming item when we change its frame. We therefore need
-      // to subtract the difference of the size.
-      if let _ = fromAttributes {
-        if toItem.isBefore(item: fromItem) {
-          let toDiff = toWidth - toSize
-          distance += toDiff
-        } else {
-          let fromWidth = sizeCache.itemSize(for: fromItem)
-          let fromDiff = fromSize - fromWidth
-          let toDiff = toWidth - toSize
-          distance -= fromDiff
-          distance += toDiff
+
+    private func distanceRight() -> CGFloat {
+        // Need to use the combination of center and size as the frame
+        // property will be affected by things like transforms etc.
+        let currentPosition = toCenter + (toSize / 2)
+        let width = contentOffset + viewSize
+        var distance = currentPosition - width
+
+        if sizeCache.implementsSizeDelegate {
+            let toWidth = sizeCache.itemWidthSelected(for: toItem)
+
+            // If we have layout attributes for the current item it means
+            // the item is visible and will affect the on the position of
+            // the upcoming item when we change its frame. We therefore need
+            // to subtract the difference of the size.
+            if let _ = fromAttributes {
+                if toItem.isBefore(item: fromItem) {
+                    let toDiff = toWidth - toSize
+                    distance += toDiff
+                } else {
+                    let fromWidth = sizeCache.itemSize(for: fromItem)
+                    let fromDiff = fromSize - fromWidth
+                    let toDiff = toWidth - toSize
+                    distance -= fromDiff
+                    distance += toDiff
+                }
+            } else {
+                // If we don't have any attributes for the current item it
+                // means we have scrolled it out of view before selecting the
+                // upcoming item. We need to append the difference between the
+                // selected and none-selected with of the upcoming item.
+                distance += toWidth - toSize
+            }
         }
-      } else {
-        // If we don't have any attributes for the current item it
-        // means we have scrolled it out of view before selecting the
-        // upcoming item. We need to append the difference between the
-        // selected and none-selected with of the upcoming item.
-        distance += toWidth - toSize
-      }
+
+        return distance
     }
-    
-    return distance
-  }
-  
-  private func distanceCentered() -> CGFloat {
-    var distance = toCenter - viewCenter
-    
-    if let _ = fromAttributes {
-      let distanceToCenter = viewCenter - fromCenter
-      let distanceBetweenCells = toCenter - fromCenter
-      distance = distanceBetweenCells - distanceToCenter
-      
-      if sizeCache.implementsSizeDelegate {
-        let toWidth = sizeCache.itemWidthSelected(for: toItem)
-        let fromWidth = sizeCache.itemSize(for: fromItem)
-        
-        if toItem.isBefore(item: fromItem) {
-          distance = -(toSize + (fromCenter - (toCenter + (toSize / 2))) - (toWidth / 2)) - distanceToCenter
-        } else {
-          let toDiff = (toWidth - toSize) / 2
-          distance = fromWidth + (toCenter - (fromCenter + (fromSize / 2))) + toDiff - (fromSize / 2) - distanceToCenter
+
+    private func distanceCentered() -> CGFloat {
+        var distance = toCenter - viewCenter
+
+        if let _ = fromAttributes {
+            let distanceToCenter = viewCenter - fromCenter
+            let distanceBetweenCells = toCenter - fromCenter
+            distance = distanceBetweenCells - distanceToCenter
+
+            if sizeCache.implementsSizeDelegate {
+                let toWidth = sizeCache.itemWidthSelected(for: toItem)
+                let fromWidth = sizeCache.itemSize(for: fromItem)
+
+                if toItem.isBefore(item: fromItem) {
+                    distance = -(toSize + (fromCenter - (toCenter + (toSize / 2))) - (toWidth / 2)) - distanceToCenter
+                } else {
+                    let toDiff = (toWidth - toSize) / 2
+                    distance = fromWidth + (toCenter - (fromCenter + (fromSize / 2))) + toDiff - (fromSize / 2) - distanceToCenter
+                }
+            }
+        } else if sizeCache.implementsSizeDelegate {
+            let toWidth = sizeCache.itemWidthSelected(for: toItem)
+            let toDiff = toWidth - toSize
+            distance += toDiff / 2
         }
-      }
-    } else if sizeCache.implementsSizeDelegate {
-      let toWidth = sizeCache.itemWidthSelected(for: toItem)
-      let toDiff = toWidth - toSize
-      distance += toDiff / 2
+
+        return distance
     }
-    
-    return distance
-  }
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Structs/PagingIndexItem.swift b/OpenBook/Pods/Parchment/Parchment/Structs/PagingIndexItem.swift
index 2fde2ace..12749b7d 100644
--- a/OpenBook/Pods/Parchment/Parchment/Structs/PagingIndexItem.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Structs/PagingIndexItem.swift
@@ -4,23 +4,22 @@ import UIKit
 /// index and title of a given item. The index property is needed to
 /// make the `PagingItem` comparable.
 public struct PagingIndexItem: PagingItem, Hashable, Comparable {
-  
-  /// The index of the `PagingItem` instance
-  public let index: Int
-  
-  /// The title used in the menu cells.
-  public let title: String
-  
-  /// Creates an instance of `PagingIndexItem`
-  ///
-  /// Parameter index: The index of the `PagingItem`.
-  /// Parameter title: The title used in the menu cells.
-  public init(index: Int, title: String) {
-    self.index = index
-    self.title = title
-  }
-  
-  public static func <(lhs: PagingIndexItem, rhs: PagingIndexItem) -> Bool {
-    return lhs.index < rhs.index
-  }
+    /// The index of the `PagingItem` instance
+    public let index: Int
+
+    /// The title used in the menu cells.
+    public let title: String
+
+    /// Creates an instance of `PagingIndexItem`
+    ///
+    /// Parameter index: The index of the `PagingItem`.
+    /// Parameter title: The title used in the menu cells.
+    public init(index: Int, title: String) {
+        self.index = index
+        self.title = title
+    }
+
+    public static func < (lhs: PagingIndexItem, rhs: PagingIndexItem) -> Bool {
+        return lhs.index < rhs.index
+    }
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Structs/PagingIndicatorMetric.swift b/OpenBook/Pods/Parchment/Parchment/Structs/PagingIndicatorMetric.swift
index 3697f19a..36030e01 100644
--- a/OpenBook/Pods/Parchment/Parchment/Structs/PagingIndicatorMetric.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Structs/PagingIndicatorMetric.swift
@@ -2,38 +2,36 @@ import Foundation
 import UIKit
 
 struct PagingIndicatorMetric {
-  
-  enum Inset {
-    case left(CGFloat)
-    case right(CGFloat)
-    case both(CGFloat, CGFloat)
-    case none
-  }
-  
-  let frame: CGRect
-  let insets: Inset
-  let spacing: UIEdgeInsets
-  
-  var x: CGFloat {
-    switch insets {
-    case let .left(inset), let .both(inset, _):
-      return frame.origin.x + max(inset, spacing.left)
-    default:
-      return frame.origin.x + spacing.left
+    enum Inset {
+        case left(CGFloat)
+        case right(CGFloat)
+        case both(CGFloat, CGFloat)
+        case none
     }
-  }
-  
-  var width: CGFloat {
-    switch insets {
-    case let .left(inset):
-      return frame.size.width - max(inset, spacing.left) - spacing.right
-    case let .right(inset):
-      return frame.size.width - max(inset, spacing.right) - spacing.left
-    case let .both(insetLeft, insetRight):
-      return frame.size.width - max(insetRight, spacing.right) - max(insetLeft, spacing.left)
-    case .none:
-      return frame.size.width - spacing.left - spacing.right
+
+    let frame: CGRect
+    let insets: Inset
+    let spacing: UIEdgeInsets
+
+    var x: CGFloat {
+        switch insets {
+        case let .left(inset), let .both(inset, _):
+            return frame.origin.x + max(inset, spacing.left)
+        default:
+            return frame.origin.x + spacing.left
+        }
+    }
+
+    var width: CGFloat {
+        switch insets {
+        case let .left(inset):
+            return frame.size.width - max(inset, spacing.left) - spacing.right
+        case let .right(inset):
+            return frame.size.width - max(inset, spacing.right) - spacing.left
+        case let .both(insetLeft, insetRight):
+            return frame.size.width - max(insetRight, spacing.right) - max(insetLeft, spacing.left)
+        case .none:
+            return frame.size.width - spacing.left - spacing.right
+        }
     }
-  }
-  
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Structs/PagingItems.swift b/OpenBook/Pods/Parchment/Parchment/Structs/PagingItems.swift
index 414a218a..80babadf 100644
--- a/OpenBook/Pods/Parchment/Parchment/Structs/PagingItems.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Structs/PagingItems.swift
@@ -4,86 +4,83 @@ import Foundation
 /// methods for getting the index path for a given `PagingItem` and
 /// vice versa.
 public struct PagingItems {
-  
-  /// A sorted array of the currently visible `PagingItem`'s.
-  public let items: [PagingItem]
-  
-  let hasItemsBefore: Bool
-  let hasItemsAfter: Bool
-  private var cachedItems: [Int: PagingItem]
-  
-  init(items: [PagingItem], hasItemsBefore: Bool = false, hasItemsAfter: Bool = false) {
-    self.items = items
-    self.hasItemsBefore = hasItemsBefore
-    self.hasItemsAfter = hasItemsAfter
-    self.cachedItems = [:]
-    
-    for item in items {
-      cachedItems[item.identifier] = item
+    /// A sorted array of the currently visible `PagingItem`'s.
+    public let items: [PagingItem]
+
+    let hasItemsBefore: Bool
+    let hasItemsAfter: Bool
+    private var cachedItems: [Int: PagingItem]
+
+    init(items: [PagingItem], hasItemsBefore: Bool = false, hasItemsAfter: Bool = false) {
+        self.items = items
+        self.hasItemsBefore = hasItemsBefore
+        self.hasItemsAfter = hasItemsAfter
+        cachedItems = [:]
+
+        for item in items {
+            cachedItems[item.identifier] = item
+        }
+    }
+
+    /// The `IndexPath` for a given `PagingItem`. Returns nil if the
+    /// `PagingItem` is not in the `items` array.
+    ///
+    /// - Parameter pagingItem: A `PagingItem` instance
+    /// - Returns: The `IndexPath` for the given `PagingItem`
+    public func indexPath(for pagingItem: PagingItem) -> IndexPath? {
+        guard let index = items.firstIndex(where: { $0.isEqual(to: pagingItem) }) else { return nil }
+        return IndexPath(item: index, section: 0)
+    }
+
+    /// The `PagingItem` for a given `IndexPath`. This method will crash
+    /// if you pass in an `IndexPath` that is currently not visible in
+    /// the collection view.
+    ///
+    /// - Parameter indexPath: An `IndexPath` that is currently visible
+    /// - Returns: The `PagingItem` for the given `IndexPath`
+    public func pagingItem(for indexPath: IndexPath) -> PagingItem {
+        return items[indexPath.item]
     }
-  }
-  
-  /// The `IndexPath` for a given `PagingItem`. Returns nil if the
-  /// `PagingItem` is not in the `items` array.
-  ///
-  /// - Parameter pagingItem: A `PagingItem` instance
-  /// - Returns: The `IndexPath` for the given `PagingItem`
-  public func indexPath(for pagingItem: PagingItem) -> IndexPath? {
-    guard let index = items.firstIndex(where: { $0.isEqual(to: pagingItem) }) else { return nil }
-    return IndexPath(item: index, section: 0)
-  }
-  
-  /// The `PagingItem` for a given `IndexPath`. This method will crash
-  /// if you pass in an `IndexPath` that is currently not visible in
-  /// the collection view.
-  ///
-  /// - Parameter indexPath: An `IndexPath` that is currently visible
-  /// - Returns: The `PagingItem` for the given `IndexPath`
-  public func pagingItem(for indexPath: IndexPath) -> PagingItem {
-    return items[indexPath.item]
-  }
-  
-  /// The direction from a given `PagingItem` to another `PagingItem`.
-  /// If the `PagingItem`'s are equal the direction will be .none.
-  ///
-  /// - Parameter from: The current `PagingItem`
-  /// - Parameter to: The `PagingItem` being scrolled towards
-  /// - Returns: The `PagingDirection` for a given `PagingItem`
-  public func direction(from: PagingItem, to: PagingItem) -> PagingDirection {
-    if contains(from) == false {
-      return .none
-    } else if from.isBefore(item: to) {
-      return .forward(sibling: isSibling(from: from, to: to))
-    } else if to.isBefore(item: from) {
-      return .reverse(sibling: isSibling(from: from, to: to))
+
+    /// The direction from a given `PagingItem` to another `PagingItem`.
+    /// If the `PagingItem`'s are equal the direction will be .none.
+    ///
+    /// - Parameter from: The current `PagingItem`
+    /// - Parameter to: The `PagingItem` being scrolled towards
+    /// - Returns: The `PagingDirection` for a given `PagingItem`
+    public func direction(from: PagingItem, to: PagingItem) -> PagingDirection {
+        if from.isBefore(item: to) {
+            return .forward(sibling: isSibling(from: from, to: to))
+        } else if to.isBefore(item: from) {
+            return .reverse(sibling: isSibling(from: from, to: to))
+        }
+        return .none
+    }
+
+    func isSibling(from: PagingItem, to: PagingItem) -> Bool {
+        guard
+            let fromIndex = items.firstIndex(where: { $0.isEqual(to: from) }),
+            let toIndex = items.firstIndex(where: { $0.isEqual(to: to) })
+        else { return false }
+
+        if fromIndex == toIndex - 1 {
+            return true
+        } else if fromIndex - 1 == toIndex {
+            return true
+        } else {
+            return false
+        }
     }
-    return .none
-  }
-  
-  func isSibling(from: PagingItem, to: PagingItem) -> Bool {
-    guard
-      let fromIndex = items.firstIndex(where : { $0.isEqual(to: from) }),
-      let toIndex = items.firstIndex(where: { $0.isEqual(to: to) })
-      else { return false }
-    
-    if fromIndex == toIndex - 1 {
-      return true
-    } else if fromIndex - 1 == toIndex {
-      return true
-    } else {
-      return false
+
+    func contains(_ pagingItem: PagingItem) -> Bool {
+        return cachedItems[pagingItem.identifier] != nil ? true : false
+    }
+
+    func union(_ newItems: [PagingItem]) -> [PagingItem] {
+        let old = Set(items.map { AnyPagingItem(base: $0) })
+        let new = Set(newItems.map { AnyPagingItem(base: $0) })
+        return Array(old.union(new))
+            .map { $0.base }
+            .sorted(by: { $0.isBefore(item: $1) })
     }
-  }
-  
-  func contains(_ pagingItem: PagingItem) -> Bool {
-    return cachedItems[pagingItem.identifier] != nil ? true : false
-  }
-  
-  func union(_ newItems: [PagingItem]) -> [PagingItem] {
-    let old = Set(items.map { AnyPagingItem(base: $0) })
-    let new = Set(newItems.map { AnyPagingItem(base: $0) })
-    return Array(old.union(new))
-      .map({ $0.base })
-      .sorted(by: { $0.isBefore(item: $1) })
-  }
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Structs/PagingNavigationOrientation.swift b/OpenBook/Pods/Parchment/Parchment/Structs/PagingNavigationOrientation.swift
index e8c9c1be..ff39247f 100644
--- a/OpenBook/Pods/Parchment/Parchment/Structs/PagingNavigationOrientation.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Structs/PagingNavigationOrientation.swift
@@ -1,6 +1,6 @@
 import Foundation
 
 public enum PagingNavigationOrientation {
-  case vertical
-  case horizontal
+    case vertical
+    case horizontal
 }
diff --git a/OpenBook/Pods/Parchment/Parchment/Structs/PagingTransition.swift b/OpenBook/Pods/Parchment/Parchment/Structs/PagingTransition.swift
index 611fa6f6..2250bb16 100644
--- a/OpenBook/Pods/Parchment/Parchment/Structs/PagingTransition.swift
+++ b/OpenBook/Pods/Parchment/Parchment/Structs/PagingTransition.swift
@@ -1,10 +1,10 @@
 import UIKit
 
-struct PagingTransition : Equatable {
-  let contentOffset: CGPoint
-  let distance: CGFloat
-  
-  static func ==(lhs: PagingTransition, rhs: PagingTransition) -> Bool {
-    return (lhs.contentOffset == rhs.contentOffset && lhs.distance == rhs.distance)
-  }
+struct PagingTransition: Equatable {
+    let contentOffset: CGPoint
+    let distance: CGFloat
+
+    static func == (lhs: PagingTransition, rhs: PagingTransition) -> Bool {
+        return (lhs.contentOffset == rhs.contentOffset && lhs.distance == rhs.distance)
+    }
 }
diff --git a/OpenBook/Pods/Pods.xcodeproj/project.pbxproj b/OpenBook/Pods/Pods.xcodeproj/project.pbxproj
index 08cb0f54..dc8e3459 100644
--- a/OpenBook/Pods/Pods.xcodeproj/project.pbxproj
+++ b/OpenBook/Pods/Pods.xcodeproj/project.pbxproj
@@ -13,10 +13,10 @@
 			buildPhases = (
 			);
 			dependencies = (
-				64E00FE107C29DF6DC7C6D3B1E3B3695 /* PBXTargetDependency */,
-				6C21DA131B23F210375892E24E43DADE /* PBXTargetDependency */,
-				66CED50D9D38B339F81FDC38D9BC4BA4 /* PBXTargetDependency */,
-				7A8A35F2E12AA4817D3E9DE27C6DCAFB /* PBXTargetDependency */,
+				23523552EA94776A0C69E74497AF7A6E /* PBXTargetDependency */,
+				FB41D915EA2F54BF0373089877F0F03C /* PBXTargetDependency */,
+				0968F8641902A01278698925255FCDFF /* PBXTargetDependency */,
+				7B96554AE8CA19C8CA454612418D4C32 /* PBXTargetDependency */,
 			);
 			name = Firebase;
 		};
@@ -41,1727 +41,1739 @@
 		};
 		B53D977A951AFC38B21751B706C1DF83 /* GoogleAppMeasurement */ = {
 			isa = PBXAggregateTarget;
-			buildConfigurationList = 5C7819C35FDEA528C00DF6AD8D30B0AE /* Build configuration list for PBXAggregateTarget "GoogleAppMeasurement" */;
+			buildConfigurationList = 23BD99A55B6F31BF0C8D17BEB9875712 /* Build configuration list for PBXAggregateTarget "GoogleAppMeasurement" */;
 			buildPhases = (
-				53BAFEE0D19FA248ABA0C27E9E1FDCDD /* [CP] Copy XCFrameworks */,
+				D472146EB52FE5D475BE207C974FEFEF /* [CP] Copy XCFrameworks */,
 			);
 			dependencies = (
-				5DB005326AEDFB61612C41A125E2B7FF /* PBXTargetDependency */,
-				E7E4832FFA9519FE56AA7116821221D1 /* PBXTargetDependency */,
+				AD6EC7194A1CBEA2835D6DC1CCAE97E9 /* PBXTargetDependency */,
+				3F9ED6455F8C28CD4B76B9F0234E590B /* PBXTargetDependency */,
 			);
 			name = GoogleAppMeasurement;
 		};
 		C49E7A4D59E5C8BE8DE9FB1EFB150185 /* FirebaseAnalytics */ = {
 			isa = PBXAggregateTarget;
-			buildConfigurationList = 0AA81D98EFA5FCA28C5B7234F9722885 /* Build configuration list for PBXAggregateTarget "FirebaseAnalytics" */;
+			buildConfigurationList = 094031E521981B6BB6C6C9CDAA595208 /* Build configuration list for PBXAggregateTarget "FirebaseAnalytics" */;
 			buildPhases = (
-				9A4223F5A7539D6BF42BB8E3BBD4E6FF /* [CP] Copy XCFrameworks */,
+				4F89989CFE93248D1CF9D2386AD90C81 /* [CP] Copy XCFrameworks */,
 			);
 			dependencies = (
-				6D9E8B0663F3409283ECFB70748647EA /* PBXTargetDependency */,
-				F8D282ED9FE5B0888481596A8401D98F /* PBXTargetDependency */,
-				7D249492BC94A09A6402778374445802 /* PBXTargetDependency */,
-				6B522D8634E144B3FACF9E463DB7F229 /* PBXTargetDependency */,
-				DCE54C9E28376B12A71C550E4213ED3D /* PBXTargetDependency */,
+				FF0A5F24D6339C9DE56221DD0DAAA27B /* PBXTargetDependency */,
+				B950BC30DC8ABEDC0654E815BE4EC34A /* PBXTargetDependency */,
+				049A8EA4C222D3E92EF8BD7B141D42F6 /* PBXTargetDependency */,
+				36586AF73423C569D8BF682C3FF75308 /* PBXTargetDependency */,
+				CC68684BD3304F58BB65E027DE40F651 /* PBXTargetDependency */,
 			);
 			name = FirebaseAnalytics;
 		};
 /* End PBXAggregateTarget section */
 
 /* Begin PBXBuildFile section */
-		00713D7E680049E7A2570C0240CD7E6C /* infoIconLight.png in Resources */ = {isa = PBXBuildFile; fileRef = CE54166909992272EAD05AF846AF6A6E /* infoIconLight.png */; };
-		008C03111E9679C424CD05DE7E6B400B /* FBLPromise+All.h in Headers */ = {isa = PBXBuildFile; fileRef = 2FE6EDCF3CA3D4FFB7289288A1955D9E /* FBLPromise+All.h */; };
-		0098BF963EBE4769F401357C3348C96C /* FIRCrashlytics.m in Sources */ = {isa = PBXBuildFile; fileRef = BBC2D5ADBC6C94CD93F6F0F9ADB32AAD /* FIRCrashlytics.m */; };
-		00E22288D6B56A8C3148C841B5B94A55 /* GULAppDelegateSwizzler_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 9E0F9E6A74FCA87F3D48D63DE5EFA1E4 /* GULAppDelegateSwizzler_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		01CFF7913609C087F76DFCD4C743AACB /* FBLPromise+Race.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = E8863E0E4AB98E0D86A6F34C048527F4 /* FBLPromise+Race.h */; };
-		0226802787B1B7ACADBC199721E18F7D /* CTFooterViewController~ipad.xib in Resources */ = {isa = PBXBuildFile; fileRef = 494532F32B9EAFC1A885A73004BD5824 /* CTFooterViewController~ipad.xib */; };
-		02621C4B82398D0657F474E21493A3A2 /* HTTPMethod.swift in Sources */ = {isa = PBXBuildFile; fileRef = 99CD7F5F453DB76C5296C4CD35BB51F4 /* HTTPMethod.swift */; };
-		027EEAED2B05E69AB75DA0EB6E84CD05 /* SDWebImageCacheSerializer.m in Sources */ = {isa = PBXBuildFile; fileRef = 43FFBEDF61B2A8D8495ADD2DED349186 /* SDWebImageCacheSerializer.m */; };
-		02BFA5B05630A5C0A505F6ECB5E0FBB5 /* PassthroughView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 189F9D4EEE27F800B887EE1024AE6D14 /* PassthroughView.swift */; };
-		02D91E5792ACC199BE698B0DA7B87BDC /* FIRCoreDiagnostics.m in Sources */ = {isa = PBXBuildFile; fileRef = 8B9979F40822FBE74DC74DC854D21FB3 /* FIRCoreDiagnostics.m */; };
-		02DB462B121245593CE653B9B377F970 /* Protected.swift in Sources */ = {isa = PBXBuildFile; fileRef = 073D3BFEAD1B94A696D1FFD31588A6DB /* Protected.swift */; };
-		02EC79BBA61A2192D8E3D944BE69D0D7 /* CleverTapInboxViewController.xib in Resources */ = {isa = PBXBuildFile; fileRef = 197B7BB8FC6159F2916743A71E84FE38 /* CleverTapInboxViewController.xib */; };
-		031BE281773927DC4C370A915A43426E /* ButtonBarPagerTabStripViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = D5CE29E0909FD3C6E2E099F75761D1F4 /* ButtonBarPagerTabStripViewController.swift */; };
-		034DC884488547E8F643C3EAD643379C /* PagingTitleCell.swift in Sources */ = {isa = PBXBuildFile; fileRef = 28DB4E634BF452B4B1347C14E0CE7992 /* PagingTitleCell.swift */; };
-		0386CA79F2FA9666B4B607013C6F9565 /* GULNetworkURLSession.h in Headers */ = {isa = PBXBuildFile; fileRef = 85D3CC83CA98FE162EA3DD72E4211C56 /* GULNetworkURLSession.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		03A7A98F82D065A57EFC4CD7AB45EBA7 /* FIRComponentContainer.h in Headers */ = {isa = PBXBuildFile; fileRef = 374A41205A6DE1F9FD6435C5AAEE4E5F /* FIRComponentContainer.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		03B875F6DAA5D38BDFD44627372699A6 /* FIRCLSDemangleOperation.mm in Sources */ = {isa = PBXBuildFile; fileRef = 2C55438D2952F0DA8592598CA5CEA1CF /* FIRCLSDemangleOperation.mm */; };
-		03C223DAD8D1234BF47BECA39DE26209 /* GDTCORUploadBatch.h in Headers */ = {isa = PBXBuildFile; fileRef = 624F45663805D58CBE2ED940F81CBD5F /* GDTCORUploadBatch.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		04053EB30E68FF17359B98C21257B929 /* UIImage+ExtendedCacheData.h in Headers */ = {isa = PBXBuildFile; fileRef = 9D96A96964379EFFBFE3E75D31176CE0 /* UIImage+ExtendedCacheData.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		042A8238F5A1DDB329C14ADF6D143E5B /* FIRInteropParameterNames.h in Headers */ = {isa = PBXBuildFile; fileRef = 1E68EAA033829DAE37615FC8B4827292 /* FIRInteropParameterNames.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		043F74FDD5986EED97091F215635954C /* FIRCLSConstants.m in Sources */ = {isa = PBXBuildFile; fileRef = 4277502B0C1F3EFB75CF8B29425E069A /* FIRCLSConstants.m */; };
-		044E4EAF3671A3ADE80BAF4B67A94100 /* IQKeyboardManagerConstantsInternal.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3C468F87C05F6DC77B74BC647235050B /* IQKeyboardManagerConstantsInternal.swift */; };
-		04587DBB405ACA602B89E27113A01D1D /* FBLPromise+Catch.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = 7C13B5F523FFAA9CF31890D5AC33277A /* FBLPromise+Catch.h */; };
-		04C4C819922CF56742DB1CAB43449F2E /* GDTCOREventTransformer.h in Headers */ = {isa = PBXBuildFile; fileRef = 6F25AEED8CB554235070A5204C98CFF7 /* GDTCOREventTransformer.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		052D957211763B63F281A16D437CDAC4 /* FIRCLSProcess.c in Sources */ = {isa = PBXBuildFile; fileRef = FABA0656451D980CD2FC6856E1230D27 /* FIRCLSProcess.c */; };
-		05951171482DA12CC8CC190BBDAF0140 /* SegmentedPagerTabStripViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4AF0FDB86C1AE0D5B85FEC2B4A22BCFC /* SegmentedPagerTabStripViewController.swift */; };
-		065C3F90BB81FCC012328BCD5CFDC75D /* FIRMessagingAPNSInfo.m in Sources */ = {isa = PBXBuildFile; fileRef = EAFED567036441E98202813C3610FDA8 /* FIRMessagingAPNSInfo.m */; };
-		06BCE7D868AAA927C2A986874D381C84 /* FIRDependency.h in Headers */ = {isa = PBXBuildFile; fileRef = F4D647209369DF9A624DC0E7843DE313 /* FIRDependency.h */; settings = {ATTRIBUTES = (Private, ); }; };
-		06CE4092EF2D7AA472E781D6DDD476FF /* FirebaseCore-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = AD6666FFF9FE5A56BB871926AB7F04A1 /* FirebaseCore-dummy.m */; };
-		06DC032210E92055021F2568B20A959A /* FBLPromiseError.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = 56DD7FFAC0BCA8E9D06614C5CEA24354 /* FBLPromiseError.h */; };
-		06FE30E043EC211209A590E9AFD1DBEE /* FIRCLSReportAdapter_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 26B9DA3EAE82D0FD9B81064539417D6B /* FIRCLSReportAdapter_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		06FE46EBA75ED59FB426315F84B91D0E /* Parchment-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 065614BAC4B761DECC3AE82AF30F0A1A /* Parchment-dummy.m */; };
-		070865E896C9068E98202F77DE6ADE1B /* FIRExceptionModel.h in Headers */ = {isa = PBXBuildFile; fileRef = 16093C3D5DFCD00473524084A6361E0D /* FIRExceptionModel.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		07B39A8CA154D6313AB1BFE6D1CB37B1 /* FIRFirebaseUserAgent.h in Headers */ = {isa = PBXBuildFile; fileRef = 426A868951E38A1772B1A315EA010167 /* FIRFirebaseUserAgent.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		07F5124F2201E074D07AA86FCE537570 /* SDWebImageTransition.m in Sources */ = {isa = PBXBuildFile; fileRef = CFD7C088C888D97ED1B2964EF6B86FBD /* SDWebImageTransition.m */; };
-		08093427BD56099BD4B7C6C55E929E9F /* CTInterstitialImageViewController~iphoneport.xib in Resources */ = {isa = PBXBuildFile; fileRef = 54589BA49F7AF676119E363B14005BCD /* CTInterstitialImageViewController~iphoneport.xib */; };
-		080B162C169B2332706ACF0144FE752D /* Position.swift in Sources */ = {isa = PBXBuildFile; fileRef = 77A814124D5C92ED1CC98E882B5C81C5 /* Position.swift */; };
-		081DE5F9A30CC163C0DC5A4817420DCF /* FIROptions.h in Headers */ = {isa = PBXBuildFile; fileRef = 1C4E0BF8C759F8D1F2B6F92B078E65D7 /* FIROptions.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		0855A1CA585C6E169B8414314CEAE8AA /* CleverTap.m in Sources */ = {isa = PBXBuildFile; fileRef = 8C6FFA6506E7E6DCB794D03E632F694B /* CleverTap.m */; };
-		085C6AF04D9ADC7AC456B666DA5B2C77 /* SDImageGraphics.h in Headers */ = {isa = PBXBuildFile; fileRef = 7F13B05E1343F172F13E3F5A79EBEAC3 /* SDImageGraphics.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		086FE122ECD7F5EA3F570013FB5A9CE7 /* FIRApp.m in Sources */ = {isa = PBXBuildFile; fileRef = 9931F7F2DAA308FF821725944EB246D5 /* FIRApp.m */; };
-		08913F7605F4F3A090E38C671CFAEAD2 /* successIcon@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = 77305BBD431BE71B0CEC87444ACF6894 /* successIcon@2x.png */; };
-		0899313B3658312C6A9BDCEE8ED7EB8A /* FIRInstallationsIIDStore.m in Sources */ = {isa = PBXBuildFile; fileRef = DB3623DD41CE3B97ACA4B26EB8BC7767 /* FIRInstallationsIIDStore.m */; };
-		08B0BFA194875A0F7E632899B46CDC88 /* FIRMessagingTokenDeleteOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = 11C58EB6A1D7F90552CDE72AE878650E /* FIRMessagingTokenDeleteOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		094A08A9F96F30EDA2D0704566917B63 /* PagingViewControllerInfiniteDataSource.swift in Sources */ = {isa = PBXBuildFile; fileRef = B4EA01E664CC7E8BDDC0E30A06370EA0 /* PagingViewControllerInfiniteDataSource.swift */; };
-		0971D94F92A34326EA8F2B8B800E19A9 /* ic_pause@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = A9269AF6ACD3357BB517C432FC6D83FA /* ic_pause@2x.png */; };
-		097D55FEB2153F27BF6B269C05A3B210 /* FIRInstallationsStoredItem.h in Headers */ = {isa = PBXBuildFile; fileRef = 350FD92646F028FA2788263EE06F39BA /* FIRInstallationsStoredItem.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		09DFC02E8946CAD93A509E1A5C0B3F61 /* FBLPromise+Testing.m in Sources */ = {isa = PBXBuildFile; fileRef = 99CF8268005E0BEBC4A220184DAEDF4E /* FBLPromise+Testing.m */; };
-		0A37E8DF2AB17CF6F8F2B55639963DD0 /* FIRMessagingTokenInfo.m in Sources */ = {isa = PBXBuildFile; fileRef = 37E58D7C9FE14AB3F244215D21B01804 /* FIRMessagingTokenInfo.m */; };
-		0B399DCF32F8FE4F09B03B6E7B65E0D1 /* Alamofire-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 7478B459679964B2060A73FD82CD553D /* Alamofire-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		0C321E6D825B3332392B12A0525C4A91 /* FBLPromise+Catch.m in Sources */ = {isa = PBXBuildFile; fileRef = DBE945BF3FCE639292A78AB27166BB34 /* FBLPromise+Catch.m */; };
-		0C6BC3DA614AE33686EA6C98FC89FC30 /* GULNetwork.h in Headers */ = {isa = PBXBuildFile; fileRef = 3F1D6E0E65E4BCB1D7C2CE538B9A1296 /* GULNetwork.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		0CB3EA72A87FFAC3525DE12B29A3C883 /* successIconLight@3x.png in Resources */ = {isa = PBXBuildFile; fileRef = 9DF4657CCE1BA03932924366A4EDB8A5 /* successIconLight@3x.png */; };
-		0CBA4A6F875C2C95B68CDA3A41A74FAE /* ic_play@1x.png in Resources */ = {isa = PBXBuildFile; fileRef = 8F816475B58D1FC1B234E73F3A8AEE18 /* ic_play@1x.png */; };
-		0D08898C48D3764F8A74A89384539045 /* FIRCLSThreadState.h in Headers */ = {isa = PBXBuildFile; fileRef = 658D3FE121AC043D8C58C811B8AFFC99 /* FIRCLSThreadState.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		0D5CBE55518A62CFB9B5CFFBABD9F30F /* Transitioning.swift in Sources */ = {isa = PBXBuildFile; fileRef = C47C50BD6C1BB1F8EF0928E0F3608A71 /* Transitioning.swift */; };
-		0D70A40E2363D52D87B3AF12C0D8205B /* Weak.swift in Sources */ = {isa = PBXBuildFile; fileRef = 7E0C2719D067664A68653A76CF38FBB9 /* Weak.swift */; };
-		0D9C75EAE46145500C9284F1745CF5C7 /* FIRCLSDataCollectionToken.m in Sources */ = {isa = PBXBuildFile; fileRef = AAACBC6FA666DE1B5BADFB9DA21AD2E4 /* FIRCLSDataCollectionToken.m */; };
-		0DDF28AA89658F68C048B45B77B44295 /* SDImageIOAnimatedCoderInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 29390BB463B8ACC06DDAA33F6996B286 /* SDImageIOAnimatedCoderInternal.h */; settings = {ATTRIBUTES = (Private, ); }; };
-		0DF71F59F634309DCCAA196992FF2ECA /* FIRCLSMultipartMimeStreamEncoder.h in Headers */ = {isa = PBXBuildFile; fileRef = E8037344C3336D374EB394DA46345487 /* FIRCLSMultipartMimeStreamEncoder.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		0E0BF638A379C7F928701AC7A02178C9 /* FIRCLSURLBuilder.m in Sources */ = {isa = PBXBuildFile; fileRef = 159C80CACA54DFF8D6F74DEE7F831816 /* FIRCLSURLBuilder.m */; };
-		0E31683A3EDAA8245DC410A06595D17E /* FIRCLSCompactUnwind.c in Sources */ = {isa = PBXBuildFile; fileRef = A3E324633C044D4E7224E6E1F01BB0F1 /* FIRCLSCompactUnwind.c */; };
-		0E7553092686A196178606F66F337DAE /* SDAsyncBlockOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = F5EAB929C29D1B056B6470B0DB615E96 /* SDAsyncBlockOperation.h */; settings = {ATTRIBUTES = (Private, ); }; };
-		0E7E5734F9F20D25EA183EAE91E00CD9 /* FIRCLSDwarfExpressionMachine.c in Sources */ = {isa = PBXBuildFile; fileRef = 17778B90B1F840392420CED28D29C0A0 /* FIRCLSDwarfExpressionMachine.c */; };
-		0EBE5EF1C88ADC4F733AD2758629E54B /* CTHalfInterstitialViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 423492BE4BA6A6EFA2A8391D58D164CE /* CTHalfInterstitialViewController.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		0EDB6F2AFCFE8CFAE35446A388476550 /* IQInvocation.swift in Sources */ = {isa = PBXBuildFile; fileRef = 2F7B461E0B529278CBDC67EBC51E17D2 /* IQInvocation.swift */; };
-		0EDBB945D1A2E1D64DFD6FA03EA8526B /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
-		0F233FF5EBB7A90E0DD533C38B8AB5AC /* errorIcon.png in Resources */ = {isa = PBXBuildFile; fileRef = 6C12705F38B217C44452C374AEDC6705 /* errorIcon.png */; };
-		0F26FE9DA54D77F560868DF84BA8736C /* FIRCLSFABAsyncOperation_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 4C75AF81AC3B535E92A2A28B831E96A5 /* FIRCLSFABAsyncOperation_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		0FDD56DE4F06385068A9AC9ADA9750F2 /* SDImageHEICCoder.m in Sources */ = {isa = PBXBuildFile; fileRef = 4C883A782CA0F61C0CC8A1CC224CE189 /* SDImageHEICCoder.m */; };
-		104051285654F1D5206DF77009518828 /* FIRCLSMachException.h in Headers */ = {isa = PBXBuildFile; fileRef = 826F55875800C8CB6DA104A12F8B67B4 /* FIRCLSMachException.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		107DF30920400D95CF4238F0A8EAEF8B /* FirebaseInstallationsInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 71623D99B096A3A471223B894F59296C /* FirebaseInstallationsInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		111049762212946763C03128C074F33E /* GULSceneDelegateSwizzler.m in Sources */ = {isa = PBXBuildFile; fileRef = 6F2F9449F6FA5359270E434C659AF1B0 /* GULSceneDelegateSwizzler.m */; };
-		11194B5145F838D4DDE77CC0CD781D95 /* FIRInstallationsItem.h in Headers */ = {isa = PBXBuildFile; fileRef = 69C2FC1EE5D86D089AACC62662FD3683 /* FIRInstallationsItem.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		111CEFD08D2720E2B92B663FA39720D3 /* FIRMessagingLogger.h in Headers */ = {isa = PBXBuildFile; fileRef = 7D190753A1EA146A856C3ACAD5C5AB09 /* FIRMessagingLogger.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		113159383CF52057E0C9886051018F29 /* GDTCORFlatFileStorage+Promises.m in Sources */ = {isa = PBXBuildFile; fileRef = 3D3B31C95908D3899AD15600E12A10C8 /* GDTCORFlatFileStorage+Promises.m */; };
-		1143767A94273B73BDCB734974C5C67F /* FIRCLSInternalLogging.h in Headers */ = {isa = PBXBuildFile; fileRef = FCE268C04133AA492262F355DE05A015 /* FIRCLSInternalLogging.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		11495A808002CE973B79EAB056412AD1 /* CleverTapJSInterface.m in Sources */ = {isa = PBXBuildFile; fileRef = DBC80AA06E0B87E619A46B242BF54B18 /* CleverTapJSInterface.m */; };
-		11B271FCE5FFFFAD2CC348205DB7EAFA /* FIRCLSLaunchMarkerModel.h in Headers */ = {isa = PBXBuildFile; fileRef = 3B76C7F4F9F4E4FA768F02CF94CCBA06 /* FIRCLSLaunchMarkerModel.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		128BE8062760481941722A2B41DC3825 /* GDTCORUploadCoordinator.m in Sources */ = {isa = PBXBuildFile; fileRef = 076CC6811E354E7440DED1DA2E473694 /* GDTCORUploadCoordinator.m */; };
-		12A297ECFCF5AACB2E9461CC23336BCF /* FXPageControl.m in Sources */ = {isa = PBXBuildFile; fileRef = 9EFBABC49E653B4D35063042D6FBE755 /* FXPageControl.m */; };
-		1322BA7B18AE9DC62AC8F67F1426776F /* PhysicsPanHandler.swift in Sources */ = {isa = PBXBuildFile; fileRef = EFE4B31F03F05F2536FAB4C4817673AB /* PhysicsPanHandler.swift */; };
-		133FB6C493994DD98B828997B464FC36 /* NetworkActivityLogger.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0A25FC948B0CA0350AB1C031E15562D7 /* NetworkActivityLogger.swift */; };
-		13496330F4E36B390A0ECFCAAA1EA6EE /* AlamofireNetworkActivityLogger-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 79D9F07C90BE045C8C035600C20C276F /* AlamofireNetworkActivityLogger-dummy.m */; };
-		1355053D5E4C257AB780DF4638A4B5E6 /* TabView.xib in Resources */ = {isa = PBXBuildFile; fileRef = 5DE1BE167CE0A04556684A2C4FB351BA /* TabView.xib */; };
-		13D93E03DF62C13D0FE837A82F72E817 /* FIRMessaging_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 8BAD1FD418AE2B2DA06B844E1B9EF9A7 /* FIRMessaging_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		13DB1EEFFAA91DA161D13A0138383851 /* CTInterstitialViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 2A468032E4C58EDE9285A8280F3B2284 /* CTInterstitialViewController.m */; };
-		13E62623092B680C6A5C349D48B8A4FD /* CachedResponseHandler.swift in Sources */ = {isa = PBXBuildFile; fileRef = B101740E994BD1C030B5A4E9011BC7F5 /* CachedResponseHandler.swift */; };
-		14349838E95C276D5651D82ACDBD5D83 /* FIRHeartbeatInfo.h in Headers */ = {isa = PBXBuildFile; fileRef = FB70266A324C87CD78D07F8D8BFD852A /* FIRHeartbeatInfo.h */; settings = {ATTRIBUTES = (Private, ); }; };
-		14A9E0CA4DCE9BBA5730C58C44617605 /* FIRCLSNetworkResponseHandler.h in Headers */ = {isa = PBXBuildFile; fileRef = 4C0F0CB3980153ED08B6349A7898AFF3 /* FIRCLSNetworkResponseHandler.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		14AEBAD16F17C11C21429C57F4AEFC9A /* StatusLine.xib in Resources */ = {isa = PBXBuildFile; fileRef = 11728E04F5C96F8C3B9EF30BACF0E0A3 /* StatusLine.xib */; };
-		14BD134BED695932E1739F343B5508EC /* CTInterstitialViewController~iphoneport.xib in Resources */ = {isa = PBXBuildFile; fileRef = 59A17B0CE021306CF92FDB0B37E41F05 /* CTInterstitialViewController~iphoneport.xib */; };
-		14FE63774C6F7F14DF4D62675EA0320F /* PagingDiff.swift in Sources */ = {isa = PBXBuildFile; fileRef = FD0C75B4162E7EFCF4D173ECC8852BB9 /* PagingDiff.swift */; };
-		15335EDB116EA914722947E244C7B6D8 /* FIRInstallationsAPIService.m in Sources */ = {isa = PBXBuildFile; fileRef = 7D898A05E335F5579D54DC190DE6F5F0 /* FIRInstallationsAPIService.m */; };
-		15CC1B47203EDA66C02C2C567BA17D9F /* CTUriHelper.h in Headers */ = {isa = PBXBuildFile; fileRef = A7485948639937EE80EC1D5A957BCDF7 /* CTUriHelper.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		15E5E0456E12887C2C2235111FD13EC9 /* CleverTapDisplayUnit.m in Sources */ = {isa = PBXBuildFile; fileRef = 297D6B1B2DD3DDE427A4CE49DBF4703D /* CleverTapDisplayUnit.m */; };
-		15F45E4B4F7BD007B0C637B4A910B66C /* FIRComponentType.h in Headers */ = {isa = PBXBuildFile; fileRef = FC8C8F7AFA1D93D01CD2EF25F870E161 /* FIRComponentType.h */; settings = {ATTRIBUTES = (Private, ); }; };
-		165120D7146C5D635EAE232C0754991A /* CTFeatureFlagsController.h in Headers */ = {isa = PBXBuildFile; fileRef = 8E8B054C21340B1F9894D0AC04BD9E6B /* CTFeatureFlagsController.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		17355B43FF8C7626D8ACE84E4D708512 /* FIRInteropEventNames.h in Headers */ = {isa = PBXBuildFile; fileRef = C620389BB7A48EF31C6FD9C566AA2C5B /* FIRInteropEventNames.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		174616595037B5DF5773EC35D7050F41 /* SDWebImageDefine.h in Headers */ = {isa = PBXBuildFile; fileRef = 8270984355B406E62C5ADEABEF37E0EF /* SDWebImageDefine.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		175963558F81939854AF336DE341F48A /* SDDeviceHelper.m in Sources */ = {isa = PBXBuildFile; fileRef = 7EAABCFEE60DFBB16A63A2DA5CF86E93 /* SDDeviceHelper.m */; };
-		1773084DECF68CADD45567FBEC56036D /* Alamofire-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 00D82DCFAB14F3C6C3A2476170FF3F90 /* Alamofire-dummy.m */; };
-		17879D7C9794BCCB52B16559D7770B18 /* SystemConfiguration.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = DDC55D0CD2D15D3E411ACD99C6C289B5 /* SystemConfiguration.framework */; };
-		17B9DC2AF17B6520012CCB92594847F2 /* CTLocationManager.m in Sources */ = {isa = PBXBuildFile; fileRef = DC5E1C4D2B0D498BD74287207B6551DC /* CTLocationManager.m */; };
-		17C6A7F17D3A04B100F7957C31AC8950 /* GDTCORTransformer_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 05DFCB63F2DCC6364CE7342E8B732793 /* GDTCORTransformer_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		17F11791E50F22F1D757EE64E71A38E0 /* IQTextView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 708A1D597A391F09849EA505C1B81346 /* IQTextView.swift */; };
-		1818026599F3663E41C7A31177EAD99D /* GULNetworkConstants.h in Headers */ = {isa = PBXBuildFile; fileRef = 373F306F3A6AD2011B55B4BBC9AB0177 /* GULNetworkConstants.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		184046AB127852236E00F7F2CD32701D /* GULHeartbeatDateStorage.h in Headers */ = {isa = PBXBuildFile; fileRef = B0A6208547611AD9A08FA6CAD905E7EB /* GULHeartbeatDateStorage.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		18416FA0760939371D866DC221EB35D8 /* SDWebImageDownloaderRequestModifier.m in Sources */ = {isa = PBXBuildFile; fileRef = 0717FF6245B92E829137D7668EBB1246 /* SDWebImageDownloaderRequestModifier.m */; };
-		1877B2DE65849857B58E76C062E21D60 /* FIRCLSApplicationIdentifierModel.h in Headers */ = {isa = PBXBuildFile; fileRef = 5CFF3E912112E9C85236791474B56485 /* FIRCLSApplicationIdentifierModel.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		189E875F565BE6A9A42E8A83E80D7130 /* FirebaseMessaging-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 0B1DDE8FEB83CB45B8FD06ADBCF7B045 /* FirebaseMessaging-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		193901ADE45DEF76C5EA9619A9D6ECC5 /* FIRExceptionModel.m in Sources */ = {isa = PBXBuildFile; fileRef = 6F84DF94244E383042D706ADC1D00F6E /* FIRExceptionModel.m */; };
-		1942E46C6436A70A47BFD40901FE5D4C /* CTProfileBuilder.m in Sources */ = {isa = PBXBuildFile; fileRef = AB7C02CD704274009CDC25506ABECC3E /* CTProfileBuilder.m */; };
-		19471E7E2C7EFF1C83A8770DD5582FB2 /* FIRInstallationsIIDStore.h in Headers */ = {isa = PBXBuildFile; fileRef = 2FEB5F31BC0CC99074652C6D85FA5D01 /* FIRInstallationsIIDStore.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		19566CED5C43AB99F059D9DA194B80A7 /* OTPFieldView-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 6B3774F2C85143534603407C0FF8C0A2 /* OTPFieldView-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		19A3BB9C753EE1FA32A05953FA9F4019 /* FIRCLSSymbolResolver.h in Headers */ = {isa = PBXBuildFile; fileRef = 08AA4586A0C3CBDB6BD2C55CF515B528 /* FIRCLSSymbolResolver.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		19A806F8DB8431E1B9C47FD2E23B99C4 /* FIRInstallationsHTTPError.m in Sources */ = {isa = PBXBuildFile; fileRef = 1656CAE4D5704E7C6025E99D33DE4027 /* FIRInstallationsHTTPError.m */; };
-		19DF6A30FC3FD0E23E7B81972036F4DE /* IQKeyboardManagerSwift-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 9D70539784EC1076DB5A5694278C3DD9 /* IQKeyboardManagerSwift-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		19E69C8560B8AD8CBD8649CFF45D6529 /* ct_default_portrait_image.png in Resources */ = {isa = PBXBuildFile; fileRef = CEE2A726663496696FAFCE61E0F49D7C /* ct_default_portrait_image.png */; };
-		1A04ECB3C04F737EDE00385D642732B3 /* FirebaseMessaging.h in Headers */ = {isa = PBXBuildFile; fileRef = 787117CA07066D83A09EE6DE395463B4 /* FirebaseMessaging.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		1A5F7ADE4670FB811E37DB93F3F973BF /* SDGraphicsImageRenderer.m in Sources */ = {isa = PBXBuildFile; fileRef = A01F586FCC9B1508602A91929FD0D9D1 /* SDGraphicsImageRenderer.m */; };
-		1A9E40DAB3F41633C6732F1A2211A26C /* FIRMessagingTokenManager.h in Headers */ = {isa = PBXBuildFile; fileRef = AAE91F7E2427CD3DDF06C37A54FAD248 /* FIRMessagingTokenManager.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		1AA4F725ACAC38D27087E1F6177BF44E /* CTImageInAppViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = EACEF3C28EC3EFDCE1FAB43430D241CE /* CTImageInAppViewController.m */; };
-		1AB0BA6000FB838A861EF5DE06CE2781 /* FBLPromise+Recover.h in Headers */ = {isa = PBXBuildFile; fileRef = 16BED021AF23370BFDD1A3B2918042DC /* FBLPromise+Recover.h */; };
-		1B6E2352CFA9B126FB04DBA227F0E71E /* FBLPromise+Async.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = 182F29B97C01ECA6EC115310D214D410 /* FBLPromise+Async.h */; };
-		1BED289ADE32EDF39F9E609C3BF8CDFB /* UIView+WebCache.m in Sources */ = {isa = PBXBuildFile; fileRef = 59F0C0A013C5C87E1708530D64F047D7 /* UIView+WebCache.m */; };
-		1C63C3F9D2323C10339C67EE7D38F47A /* CTVideoThumbnailGenerator.h in Headers */ = {isa = PBXBuildFile; fileRef = E6DDDCAB7A440B3BA561926EE11E5539 /* CTVideoThumbnailGenerator.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		1C6CE883721C96BC012BAAE91E5EE978 /* CTMessageMO+CoreDataProperties.m in Sources */ = {isa = PBXBuildFile; fileRef = AE33F43AC9FB7D28E522A4E1558A8A05 /* CTMessageMO+CoreDataProperties.m */; };
-		1D17B83410DC98911D539F2BD5254C05 /* RequestTaskMap.swift in Sources */ = {isa = PBXBuildFile; fileRef = 75F5B3C66E2B3D7F850C7F7EC707E4B4 /* RequestTaskMap.swift */; };
-		1D581A3F8EB36D9CA7812DE6BA797185 /* IndicatorInfo.swift in Sources */ = {isa = PBXBuildFile; fileRef = F10E9870F8CA27A6FF69BDC61453839A /* IndicatorInfo.swift */; };
-		1D64306137F9063FDC59F6C766AEB714 /* PageViewManager.swift in Sources */ = {isa = PBXBuildFile; fileRef = 779D2029CCF5E5B39853F9E65484489C /* PageViewManager.swift */; };
-		1D8CE22CFF300ADF0A8FE0D2F55E7136 /* PageViewControllerDataSource.swift in Sources */ = {isa = PBXBuildFile; fileRef = 431D54C033B99364C15DB3C385C0F9AC /* PageViewControllerDataSource.swift */; };
-		1D958AAB4D74AFDE5BCECFE09F6E24F3 /* FIRLogger.h in Headers */ = {isa = PBXBuildFile; fileRef = 3B71F2C80874929D7CA6017610BEB67F /* FIRLogger.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		1DDAD8A0BF606A43FE8F6831F171188B /* errorIconSubtle.png in Resources */ = {isa = PBXBuildFile; fileRef = BB9F0624D8002399E818C9E453F05331 /* errorIconSubtle.png */; };
-		1DE0351E5329D0326F649E22C61FA2A6 /* PageViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = 316E57A07D6663C9041D2E1904582C61 /* PageViewController.swift */; };
-		1E1331EAC9DED7C55973B079A1FC426B /* FBLPromise+Retry.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = F7F5434EDDE96C02573821A2AA214235 /* FBLPromise+Retry.h */; };
-		1ED5610EC8AD2A34323121CF54C98BC2 /* errorIconSubtle@3x.png in Resources */ = {isa = PBXBuildFile; fileRef = BB873B0C48D9DB5373539A3D30C03B2A /* errorIconSubtle@3x.png */; };
-		1EDAB29C7A68F4C9D91AB72A45B9A656 /* PagingCellLayoutAttributes.swift in Sources */ = {isa = PBXBuildFile; fileRef = 6C5413BF1DAC53D78AE91ADE7FC77EEF /* PagingCellLayoutAttributes.swift */; };
-		1EE3DFD4FE83B37C0CB5E084AF209C59 /* FIRCLSReportManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 055DE2F6BD4008DEE5953730A437A661 /* FIRCLSReportManager.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		1F47C789B12AB07DB1D2A548DF1B6710 /* CTDisplayUnitController.h in Headers */ = {isa = PBXBuildFile; fileRef = 7CFFD8242DEBD1263960EC06A75789C9 /* CTDisplayUnitController.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		2060DDD1785D7B7C5BDF40E34F45890F /* CleverTapInboxViewControllerPrivate.h in Headers */ = {isa = PBXBuildFile; fileRef = 6342B3402BA98B8613171528F348901B /* CleverTapInboxViewControllerPrivate.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		20627C70D28E80BFDA1441871E9AA579 /* FIRCLSProfiling.c in Sources */ = {isa = PBXBuildFile; fileRef = 84A7A81D0D4B91641DACD30B4BBEDDFE /* FIRCLSProfiling.c */; };
-		2083F1AC6A119EAEB9C8A57DEF886C07 /* CTInboxSimpleMessageCell~land.xib in Resources */ = {isa = PBXBuildFile; fileRef = CB1A77E88850B1D902F3CDBA6571B7B3 /* CTInboxSimpleMessageCell~land.xib */; };
-		2092FF72E5EA7FEBBAE18815CB6895F3 /* FBLPromise.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = 12F5F1CE30E0E423EE4E479F3EFA2ED9 /* FBLPromise.h */; };
-		20A7F7A81D66E3C3E55734CC77F1E214 /* State.swift in Sources */ = {isa = PBXBuildFile; fileRef = FA36AA822046462CC6744F20DE6AE9F1 /* State.swift */; };
-		20D543DF73D5F832C509C48D92F6E138 /* FIRCoreDiagnostics.h in Headers */ = {isa = PBXBuildFile; fileRef = 9A69DF1ECA1CD488A88CD708A0B85C87 /* FIRCoreDiagnostics.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		20DD27BAADBA68AD78ECCA842840FECB /* FIRMessagingTokenStore.m in Sources */ = {isa = PBXBuildFile; fileRef = 67BC23996785C855441EC0991B0E75A8 /* FIRMessagingTokenStore.m */; };
-		21CC0FA67FEA20F5201FF5191B6B585C /* GULKeychainUtils.h in Headers */ = {isa = PBXBuildFile; fileRef = 7C3C0EBDDAF3A350054ED0598CB10786 /* GULKeychainUtils.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		21EF26EC58D710C6D39081FC957290ED /* BaseView.swift in Sources */ = {isa = PBXBuildFile; fileRef = D3114537C7124FEFDBC41DDACCFE34CF /* BaseView.swift */; };
-		22157E95B2988ADD9F213EF8141D2E05 /* ct_default_audio.png in Resources */ = {isa = PBXBuildFile; fileRef = 1E8F7E9683EC85A353E6A2D960C718FE /* ct_default_audio.png */; };
-		22DE2EE5C678595CE3559EC9DD4514E9 /* IQTitleBarButtonItem.swift in Sources */ = {isa = PBXBuildFile; fileRef = 5C42E34C2C748B6243FDE9BEEFAA9B71 /* IQTitleBarButtonItem.swift */; };
-		23338BF94881DA1EAA1DB753539F6E87 /* FIRMessagingPubSub.m in Sources */ = {isa = PBXBuildFile; fileRef = 9485D23C14C2058CF4E4AF7EDCC063B3 /* FIRMessagingPubSub.m */; };
-		2367A542AE72D37097FA7B5DD1CA74D0 /* FIRCLSHost.h in Headers */ = {isa = PBXBuildFile; fileRef = 18BCEB56EE9600B6931EC7B7BF317682 /* FIRCLSHost.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		2387C6279DF91ADFD23A461397C99B95 /* PagingMenuHorizontalAlignment.swift in Sources */ = {isa = PBXBuildFile; fileRef = 468B318DD1565006201C5BFCB9CBF53A /* PagingMenuHorizontalAlignment.swift */; };
-		238E90901A7C00AE436DBD4527285A6F /* FIRComponentContainer.h in Headers */ = {isa = PBXBuildFile; fileRef = B04BD3F902DB09F56E1391DBF4856700 /* FIRComponentContainer.h */; settings = {ATTRIBUTES = (Private, ); }; };
-		23ACAC0C48D2929D4732AB75C5D268AD /* FIRMessagingTopicOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = 21E37EFF498D5C1D33DE43B7504C78DE /* FIRMessagingTopicOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		2432C2F360A688C94ADE00703E5F931A /* FIRInstallationsIIDTokenStore.m in Sources */ = {isa = PBXBuildFile; fileRef = 167A5846E15CE9BC9E07724B324CA449 /* FIRInstallationsIIDTokenStore.m */; };
-		246B5305B91DA36E82E5D439B78A3354 /* FIRCoreDiagnosticsData.h in Headers */ = {isa = PBXBuildFile; fileRef = BB7113D45B7CA4D01D52DDDE4F438EA1 /* FIRCoreDiagnosticsData.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		248ADB533B8493A45AD527D0A0DBD40C /* FIRCLSApplication.h in Headers */ = {isa = PBXBuildFile; fileRef = 61398311EC1CF6F442FA19F1041B26E3 /* FIRCLSApplication.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		2490D4D490046FE8592DE44745962170 /* FBLPromises.h in Headers */ = {isa = PBXBuildFile; fileRef = E6B456D95207254195D61D2AD9EE88A6 /* FBLPromises.h */; };
-		249B85F7F9837CC2D5ED4EA6693909C0 /* SDDiskCache.h in Headers */ = {isa = PBXBuildFile; fileRef = 8476EBCE8FE72232211A2048FCF39A41 /* SDDiskCache.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		24C2CCB9063376EB8D968C081BB1165B /* SwiftMessages-SwiftMessages in Resources */ = {isa = PBXBuildFile; fileRef = 753DD909979478A0C1B33E0524504EF1 /* SwiftMessages-SwiftMessages */; };
-		24DBB9779EF8DC7F6E5894382F83D6E5 /* SDWebImageDownloaderOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = CCB741FA14DEE4C2163BA20E9690757F /* SDWebImageDownloaderOperation.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		2503B430D9C2E1C021A0BD48742EF153 /* FXPageControl.h in Headers */ = {isa = PBXBuildFile; fileRef = FEEFEA9EC603734A349BD48FD175E79D /* FXPageControl.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		2518EC531157C20043C49A1CF7120878 /* FIRInstallationsStatus.h in Headers */ = {isa = PBXBuildFile; fileRef = 9825BF1B7EF6CF5A6A814B6ABE0514D3 /* FIRInstallationsStatus.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		253F4767DA172A2CDD03035271F4AECC /* CleverTap+InAppNotifications.h in Headers */ = {isa = PBXBuildFile; fileRef = 5CEED2EBE72FA169950D1B0C6EA09768 /* CleverTap+InAppNotifications.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		254F71DD59C1492D58EFEBAC76C54A41 /* FBLPromise+Timeout.h in Headers */ = {isa = PBXBuildFile; fileRef = 405C56747BA8DB139278901283BAB728 /* FBLPromise+Timeout.h */; };
-		2550F0D474DE846FEC5C76CBE85F927E /* OperationQueue+Alamofire.swift in Sources */ = {isa = PBXBuildFile; fileRef = C27C55DAC0875ADBF8746087AF0A6722 /* OperationQueue+Alamofire.swift */; };
-		25EAA1DE137EADB4C7A64F8086E82F2B /* infoIconSubtle.png in Resources */ = {isa = PBXBuildFile; fileRef = 7A6520F836D83ACAB5994C3EB22EB43B /* infoIconSubtle.png */; };
-		26058180396BAC198BFA311E0F929E18 /* ct_default_video.png in Resources */ = {isa = PBXBuildFile; fileRef = B7D97B13EA1201A430CC35B10031F9E4 /* ct_default_video.png */; };
-		26173F3A69B8FB630AAC9049E1355AC6 /* FIRCLSDemangleOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = B92B8E8CCF020B4DFC0F9A5508BDD4B2 /* FIRCLSDemangleOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		2621DE78000CBF1D9E451D115AEAD251 /* NSBezierPath+SDRoundedCorners.m in Sources */ = {isa = PBXBuildFile; fileRef = 20249AACE2C5B66842F3999B5D8511B4 /* NSBezierPath+SDRoundedCorners.m */; };
-		2636335D1F5D1D62FD64DE1A3ED57B58 /* CTLocalDataStore.m in Sources */ = {isa = PBXBuildFile; fileRef = DAC8723A5053EFF298CE08388EB1956C /* CTLocalDataStore.m */; };
-		26DE93272A673BBA465FEB3B6D80707E /* FIRCLSSerializeSymbolicatedFramesOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = 4CD535D06120A3E587B7CDEF081963C5 /* FIRCLSSerializeSymbolicatedFramesOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		26F7C4BA207805D3CAAE6874EBE1E486 /* FIRComponent.m in Sources */ = {isa = PBXBuildFile; fileRef = 4E9DF00A88421BF8DEC41AE0A790694C /* FIRComponent.m */; };
-		273943CADFF3EE7B0FA8D29BD9F78350 /* GULHeartbeatDateStorable.h in Headers */ = {isa = PBXBuildFile; fileRef = 3C162DB4BDA8589FDF8B8C4494B89568 /* GULHeartbeatDateStorable.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		27720220C8BC48C0865BE1B2ADD6CF79 /* NSData+ImageContentType.m in Sources */ = {isa = PBXBuildFile; fileRef = 166159DA9B07652F3D5C527DEDE747B2 /* NSData+ImageContentType.m */; };
-		27F4AA5BF5F0A3047BF2D574B83A5A40 /* GDTCORTransport_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = F1CA2581134930FC69356E9C3CE0AC96 /* GDTCORTransport_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		28523A413868FFBE3740D2680EE00B84 /* FIRInstallationsItem+RegisterInstallationAPI.h in Headers */ = {isa = PBXBuildFile; fileRef = CCD53F74A28B58B81C4D6F2B0FC96CD8 /* FIRInstallationsItem+RegisterInstallationAPI.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		28F373C00C4737D7C93BF2DCD0FF33B7 /* FBLPromise.m in Sources */ = {isa = PBXBuildFile; fileRef = 1C280C2C42735CFD7D96214E3C0D624F /* FBLPromise.m */; };
-		298512D9E325D9DB962DA75D392C514E /* SDWebImageTransition.h in Headers */ = {isa = PBXBuildFile; fileRef = 74626D082CAB504E6EF569F6F8476070 /* SDWebImageTransition.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		298E7599A2C95BD723FCBBCC989F9C6D /* FIRAppInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 4878FC12D64EF094114984D0EABAD312 /* FIRAppInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		29C035E36C9E7A44BFCE7BD4F6B02C25 /* PagingMenuDataSource.swift in Sources */ = {isa = PBXBuildFile; fileRef = EFE7D08A301F6C78F989817B6203DCB1 /* PagingMenuDataSource.swift */; };
-		29C4B70F879FC5EAEE30CFF93B45ECC8 /* CoreTelephony.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = E59EBC47CDD888882ED048EC6F3B6265 /* CoreTelephony.framework */; };
-		2A0C48BB78CB3F8226578A930FF54056 /* FIRInstallationsErrors.h in Headers */ = {isa = PBXBuildFile; fileRef = 400B38F434CCCE0E68014B340E447A48 /* FIRInstallationsErrors.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		2A1AB10E48B76CB06AFB7F5A22954B0D /* NSButton+WebCache.m in Sources */ = {isa = PBXBuildFile; fileRef = 24CAA6539D0DC35004CB41DA8C53D804 /* NSButton+WebCache.m */; };
-		2A59F3F50BA073B3A93F66354A40E14F /* BackgroundViewable.swift in Sources */ = {isa = PBXBuildFile; fileRef = FFE38F6FDAF8E5B94E2C0BC8313355F0 /* BackgroundViewable.swift */; };
-		2AB9ADF6DBD24A979CAFB0ACD550B667 /* GDTCOREventDataObject.h in Headers */ = {isa = PBXBuildFile; fileRef = 5CDD428BE9E7A1E0C4C4034D60E425A3 /* GDTCOREventDataObject.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		2ACD2AF0A61FC91445A022FC7B11C514 /* CTKnownProfileFields.h in Headers */ = {isa = PBXBuildFile; fileRef = 062020530AD4DA94C922D8F49422FA31 /* CTKnownProfileFields.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		2AE8350330D3E67955678181D81A5004 /* CleverTapTrackedViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = B14052BDCE53C4B44B778BA3499F5386 /* CleverTapTrackedViewController.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		2B01479F8AC9AF3A1849275F77D0FC89 /* FIRCLSDwarfUnwind.c in Sources */ = {isa = PBXBuildFile; fileRef = 9809D78B778001C807DF70A70F275DBF /* FIRCLSDwarfUnwind.c */; };
-		2BA3F2B24DA08B1920ED31D43BA64D5E /* FBLPromise+Retry.h in Headers */ = {isa = PBXBuildFile; fileRef = F7F5434EDDE96C02573821A2AA214235 /* FBLPromise+Retry.h */; };
-		2BB4EB6CE6888D8AF022C2A186723553 /* FIRMessagingTokenOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = 0D1210CD4467F65AA89320DE34C5172D /* FIRMessagingTokenOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		2BB88E2E34F12D7C4887802B903F276E /* FIRCLSDataParsing.c in Sources */ = {isa = PBXBuildFile; fileRef = 2F5CAA735F02B20A7AEC1728768A9C40 /* FIRCLSDataParsing.c */; };
-		2BBAF6E3C8F29AC5B4F8B65AC0F4ED65 /* GULNSData+zlib.h in Headers */ = {isa = PBXBuildFile; fileRef = E0A78F2F6491748E2850BA2D0AC56B2C /* GULNSData+zlib.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		2BC844598E19107A0F0CA0E4330E4743 /* FIRCLSCompoundOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = 57EE38947BE9512096C1C281147DEF84 /* FIRCLSCompoundOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		2BD4E886E69EB70AC214FE7BFC9B66B7 /* FIRCLSThreadState.c in Sources */ = {isa = PBXBuildFile; fileRef = 3F78A0EAC2C948EDABC161D5154026B1 /* FIRCLSThreadState.c */; };
-		2BFAAFDA773AAC30366DE80F2FA8B69F /* FIRInstallationsHTTPError.h in Headers */ = {isa = PBXBuildFile; fileRef = D2C340CD09002D0A687E19E4792DB2F8 /* FIRInstallationsHTTPError.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		2C0097255B6B1B392980140EA5C86DD9 /* FIRCLSFABNetworkClient.m in Sources */ = {isa = PBXBuildFile; fileRef = BCB16C6BDF7364F9A45E87474A157C3D /* FIRCLSFABNetworkClient.m */; };
-		2C5F44B978FF1E6CA7E725FF219B37B1 /* FIRComponentType.m in Sources */ = {isa = PBXBuildFile; fileRef = B99952FFFFCCF1339CB4381C2B2FFD5F /* FIRComponentType.m */; };
-		2C64A3342FBCAEBB9D791779B02764B4 /* ic_pause@3x.png in Resources */ = {isa = PBXBuildFile; fileRef = 7DFF0FF2D841C95E0AC41E9B97CB3442 /* ic_pause@3x.png */; };
-		2CFC88831CD6DCB091A09E4886085FEE /* GULURLSessionDataResponse.h in Headers */ = {isa = PBXBuildFile; fileRef = 1642E0154D3E203C3D898AA1DA97DBF3 /* GULURLSessionDataResponse.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		2D34828C2AA65DDF45EB69E0F3531B42 /* CTCarouselMessageCell.h in Headers */ = {isa = PBXBuildFile; fileRef = 985924DD0E5E7A4597039E3D4F1767E7 /* CTCarouselMessageCell.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		2D6B5D270C6AD21B1328126C2F30E3BE /* FIRComponentType.h in Headers */ = {isa = PBXBuildFile; fileRef = C036B331555009735B7AE1B4A7BE9F9C /* FIRComponentType.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		2D794EF777B71E577F53B51958EBB688 /* GDTCORFlatFileStorage.h in Headers */ = {isa = PBXBuildFile; fileRef = 50829ABB877127D26B6A8B5EE8F32C02 /* GDTCORFlatFileStorage.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		2D994877DAA96911F24D94DAD14A9926 /* CTCarouselImageMessageCell~port.xib in Resources */ = {isa = PBXBuildFile; fileRef = 6FF9465C0188F8F49650CC14A2326B29 /* CTCarouselImageMessageCell~port.xib */; };
-		2E162C349BFFC75BEBDD90C6B3D68EE2 /* FIRConfigurationInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 64D895180BDF6A79C2AB32A704E39B9A /* FIRConfigurationInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		2E6B37C9DE8369E4822E8B3B861F5BD4 /* GDTCORAssert.h in Headers */ = {isa = PBXBuildFile; fileRef = 73A8D8A536F91AEF8955CA6F8062B3A6 /* GDTCORAssert.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		2EBD13505B3D9F7895649EF1CA931B39 /* SDWebImageCompat.m in Sources */ = {isa = PBXBuildFile; fileRef = A9718BBC57F84A21F024CCCC0B431585 /* SDWebImageCompat.m */; };
-		2ED36C3E3A907AF79C1F61FA7CA0C564 /* InvalidationState.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34CFF3C69ADF30594FDC658A5D5C43B3 /* InvalidationState.swift */; };
-		2EDA6B49DD7089D49895BCF55FC6420C /* CTInAppHTMLViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = EFB3F2C98B9D1A77CA1DCFF333FB533A /* CTInAppHTMLViewController.m */; };
-		2EEAE7D9116EDC49D0C5727CD8C4462B /* CTInterstitialViewController~ipad.xib in Resources */ = {isa = PBXBuildFile; fileRef = C890FDEF500580702ADB2DB8913765BC /* CTInterstitialViewController~ipad.xib */; };
-		2F034B0DD71A394E88E97B34920450A3 /* SDDeviceHelper.h in Headers */ = {isa = PBXBuildFile; fileRef = BA807E41EFBCEC6052E2AB4349831591 /* SDDeviceHelper.h */; settings = {ATTRIBUTES = (Private, ); }; };
-		2F5003EA6EFD58A43D4761138890E980 /* CleverTapInAppNotificationDelegate.h in Headers */ = {isa = PBXBuildFile; fileRef = B61CEB697DFBF15606B424CF5C89B00F /* CleverTapInAppNotificationDelegate.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		2F5B978438E8D8B0188EC4932B2CFDB9 /* GDTCORRegistrar_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 99059BDE8FA7C29DA77DE9E84F727FFD /* GDTCORRegistrar_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		2FBC023BA2571767F91CA68EEC44E087 /* FIRCLSMachOBinary.h in Headers */ = {isa = PBXBuildFile; fileRef = C0C10C1F39975002B7550267F7DAB512 /* FIRCLSMachOBinary.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		302788B32A2590C63B431692574340A2 /* ButtonCell.xib in Resources */ = {isa = PBXBuildFile; fileRef = F9642EB22F43196813478A247367864F /* ButtonCell.xib */; };
-		302B68E8CC775312CDD15CCD5FF5D1B8 /* ButtonBarViewCell.swift in Sources */ = {isa = PBXBuildFile; fileRef = 98E2F8AE46DF9D2BC1E4EEF80C13B1B0 /* ButtonBarViewCell.swift */; };
-		30744FF3852E702B14C90196FE753D88 /* FirebaseInstallationsInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 84905C0015E2703A1B6CA71B1434B68C /* FirebaseInstallationsInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		309FDC08AEC6B535A830670C59DB8F4A /* PageView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 52ACB911F426C86131423C7ECE786AB4 /* PageView.swift */; };
-		30A331CD9286145E92DB11D671664C63 /* MultipartUpload.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EB6DC31A1BD9A1EFFC59F54D95BE467 /* MultipartUpload.swift */; };
-		30DBCEE4E0FFDAC607CC9C3330BFAC57 /* CTCertificatePinning.m in Sources */ = {isa = PBXBuildFile; fileRef = BCA8A1D82F4DB1C41D38CC50053347DF /* CTCertificatePinning.m */; };
-		30EA04D777000B046D357D4B0B3EE534 /* UIView+CTToast.h in Headers */ = {isa = PBXBuildFile; fileRef = BF53FE4ECF5BD02A6858BE57469E473C /* UIView+CTToast.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		30FA32EA4D25087121320547820F6D12 /* FIRMessagingRemoteNotificationsProxy.h in Headers */ = {isa = PBXBuildFile; fileRef = 107B92BA5DCEFAF2424A82E5906DDFF3 /* FIRMessagingRemoteNotificationsProxy.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		31848DA8197308363AA9648EC6DA3EC5 /* PagingStaticDataSource.swift in Sources */ = {isa = PBXBuildFile; fileRef = E17237981E77E6F56A8462D0E7BD985F /* PagingStaticDataSource.swift */; };
-		31A158836CBFACDBBF32558A88449D28 /* FIRDiagnosticsData.h in Headers */ = {isa = PBXBuildFile; fileRef = 209E8BF76BA3E338E2E16EB9A8D391B0 /* FIRDiagnosticsData.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		31F26594E5A77599E13609714C46D4C0 /* FIRCLSExecutionIdentifierModel.m in Sources */ = {isa = PBXBuildFile; fileRef = 760BCD065C82519877CEEDDCF808CD52 /* FIRCLSExecutionIdentifierModel.m */; };
-		31F890B8574318662EBEBD183C964F15 /* FIRInstallationsStore.m in Sources */ = {isa = PBXBuildFile; fileRef = EF18EB8307AB1649D16BF0F16BF2C140 /* FIRInstallationsStore.m */; };
-		320867183789A75A3F9F0FB14100816C /* PagingFiniteDataSource.swift in Sources */ = {isa = PBXBuildFile; fileRef = EC8C15AE473EBE0B7A3A112D72727815 /* PagingFiniteDataSource.swift */; };
-		32599FD85EA406451D133F17C3D0E347 /* CleverTapSyncDelegate.h in Headers */ = {isa = PBXBuildFile; fileRef = 12ABE345D2EF7E7543D622A00009715D /* CleverTapSyncDelegate.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		32B6508B0B32A71A9CBFBBE98F85D8D5 /* FIRLoggerLevel.h in Headers */ = {isa = PBXBuildFile; fileRef = BED335FBAE7175751880FAB9331A608C /* FIRLoggerLevel.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		3353C5602EBA345674CC98AEECB08EE9 /* FIRMessagingPersistentSyncMessage.h in Headers */ = {isa = PBXBuildFile; fileRef = FB21D5B0FB4BAC9A316B9E8F5524CD89 /* FIRMessagingPersistentSyncMessage.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		33642971C3E756DDAA4F5C8B84DFA4DB /* FBLPromise+Race.m in Sources */ = {isa = PBXBuildFile; fileRef = F8DAE6B91D6DCFA18A620DB34F747BB7 /* FBLPromise+Race.m */; };
-		3371BE1E45C9C08C5A5944AD57AB04B5 /* CTCoverImageViewController~ipad.xib in Resources */ = {isa = PBXBuildFile; fileRef = C60C0C18E077BEEE2296990DFB3B1B4E /* CTCoverImageViewController~ipad.xib */; };
-		33802344D895631DD8821717E429175F /* FBLPromisePrivate.h in Copy . Private Headers */ = {isa = PBXBuildFile; fileRef = FFFB16B528650897EA28176A0457BF2A /* FBLPromisePrivate.h */; };
-		339C9F86FCEF766AB25FE1C7D758AB75 /* CTInboxBaseMessageCell.m in Sources */ = {isa = PBXBuildFile; fileRef = B1A38B1A7856F52025E1915547077366 /* CTInboxBaseMessageCell.m */; };
+		001204C61231E131065CD6FD7355507B /* FIRCurrentDateProvider.m in Sources */ = {isa = PBXBuildFile; fileRef = B34615E6A2780D3388056B237AB08A5E /* FIRCurrentDateProvider.m */; };
+		0027C510E1AF7A9E6729C944B5250869 /* SDDeviceHelper.h in Headers */ = {isa = PBXBuildFile; fileRef = 6BB8EE9920FB6D6BDA084E542D65798E /* SDDeviceHelper.h */; settings = {ATTRIBUTES = (Private, ); }; };
+		004FAFCECEDF2BE37FDC44388CFFCF91 /* FIRApp.m in Sources */ = {isa = PBXBuildFile; fileRef = A3F3BE757105AB7A600FE52AD68B917C /* FIRApp.m */; };
+		007A5EB77CEE0F841CB56798BEDDF989 /* FIRMessagingTokenStore.m in Sources */ = {isa = PBXBuildFile; fileRef = F2C9F0D283A9A14D5122F145DB258D24 /* FIRMessagingTokenStore.m */; };
+		008AC1F6A2330165EEE36FF54AFBE4EA /* SDImageIOCoder.m in Sources */ = {isa = PBXBuildFile; fileRef = 7BE69E55CCA4C73AAD30E53F324FBFB4 /* SDImageIOCoder.m */; };
+		00CAC772E4D2ED1312D5C9F7A7443363 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
+		01755A9B34CCE659DFFC19F21B4B62D6 /* GULKeychainUtils.h in Headers */ = {isa = PBXBuildFile; fileRef = C6A2961B2CC9F6787A17C0D08F45EDA3 /* GULKeychainUtils.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		01A8099851771A0B6C454808EC500127 /* FIRCLSDownloadAndSaveSettingsOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = 8821DEA526DB43990F96020E6436059D /* FIRCLSDownloadAndSaveSettingsOperation.m */; };
+		0226802787B1B7ACADBC199721E18F7D /* CTFooterViewController~ipad.xib in Resources */ = {isa = PBXBuildFile; fileRef = 8AF17ED36E1A3CCC7F5A67282180A96F /* CTFooterViewController~ipad.xib */; };
+		02621C4B82398D0657F474E21493A3A2 /* HTTPMethod.swift in Sources */ = {isa = PBXBuildFile; fileRef = 9B22FA8A6DDFFB53375A65F9A192BC02 /* HTTPMethod.swift */; };
+		028F3243F31F4BF617E448CB992DD5C4 /* FIRAnalyticsConfiguration.h in Headers */ = {isa = PBXBuildFile; fileRef = 3FFECE58EE77086345BC12B1FC3B5BBC /* FIRAnalyticsConfiguration.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		02AAE5E850E36E4A7275A5E3E27CE27D /* FIRCLSMultipartMimeStreamEncoder.m in Sources */ = {isa = PBXBuildFile; fileRef = BD9E974E79FD851E241F31C55472E31A /* FIRCLSMultipartMimeStreamEncoder.m */; };
+		02DB462B121245593CE653B9B377F970 /* Protected.swift in Sources */ = {isa = PBXBuildFile; fileRef = 31E88731FC2C5D10F6A4D7E323517384 /* Protected.swift */; };
+		02EC79BBA61A2192D8E3D944BE69D0D7 /* CleverTapInboxViewController.xib in Resources */ = {isa = PBXBuildFile; fileRef = EDAEF516303EF8FE0BD1061BA065515D /* CleverTapInboxViewController.xib */; };
+		031AEAC5A2C3D20EB805FAB27FE7DA93 /* FIRCrashlytics.h in Headers */ = {isa = PBXBuildFile; fileRef = 8F1E468A5E80D420613B5E955B518E07 /* FIRCrashlytics.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		031BE281773927DC4C370A915A43426E /* ButtonBarPagerTabStripViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = E26AEDFCEE10C9098FA3FBB6082711D9 /* ButtonBarPagerTabStripViewController.swift */; };
+		034DC884488547E8F643C3EAD643379C /* PagingTitleCell.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8A2501AF38D44C5004E8CB35E066D9AB /* PagingTitleCell.swift */; };
+		037854C7CDCA2B87DF5745938C4BF530 /* FIRCLSDwarfExpressionMachine.c in Sources */ = {isa = PBXBuildFile; fileRef = CAD1D3AE5623D405813457B8711A88D7 /* FIRCLSDwarfExpressionMachine.c */; };
+		03E2437A15980B4D610D505B6AF3BD7A /* FIRCLSHandler.m in Sources */ = {isa = PBXBuildFile; fileRef = 01E76AAE6418C25B817D7ACC73A39825 /* FIRCLSHandler.m */; };
+		041B655D7F5932F03A65C154BC02BDAA /* IQInvocation.swift in Sources */ = {isa = PBXBuildFile; fileRef = D8E9EDA86A46F78457366D6821012757 /* IQInvocation.swift */; };
+		046D7929B789545FD70FF115696F447D /* FIRCLSMultipartMimeStreamEncoder.h in Headers */ = {isa = PBXBuildFile; fileRef = 910DCC2263B4A4BC016B7E4F43C16E90 /* FIRCLSMultipartMimeStreamEncoder.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		048B6A5422D2BDF10695E926306FBB67 /* FIRCLSRecordIdentity.h in Headers */ = {isa = PBXBuildFile; fileRef = 5AB8B31A0435C61EC96CB0879B31536C /* FIRCLSRecordIdentity.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		04A03DC2B4D4914E3B11B06D04B6FF4E /* GULUserDefaults.m in Sources */ = {isa = PBXBuildFile; fileRef = BA0D3FECC53BE39845E9ECD6B61E2615 /* GULUserDefaults.m */; };
+		04B0884964D9592302CA654E0B67E80E /* IQUIView+Hierarchy.swift in Sources */ = {isa = PBXBuildFile; fileRef = EE23E1BF1A02EC37581EB928741B0816 /* IQUIView+Hierarchy.swift */; };
+		04D997749ACFF17DD18119CC0C1353F3 /* SDAssociatedObject.m in Sources */ = {isa = PBXBuildFile; fileRef = 013ED51D1FE5FC46AE9E5E43BDD25BBB /* SDAssociatedObject.m */; };
+		054D7C2EABEFB9101031D56167680F11 /* FBLPromise+Retry.h in Headers */ = {isa = PBXBuildFile; fileRef = DEABFC3FD1607EA55F70E8840A06580C /* FBLPromise+Retry.h */; };
+		05951171482DA12CC8CC190BBDAF0140 /* SegmentedPagerTabStripViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0085E7089EDB0543F08D0FB90A94DC98 /* SegmentedPagerTabStripViewController.swift */; };
+		05A821DC5313689691EDAB91A79CC9CD /* TabView.xib in Resources */ = {isa = PBXBuildFile; fileRef = 83EF2DBF3BF501A477ABF7E255C8603B /* TabView.xib */; };
+		064FE1EC4C1A8893AB93423320D68E24 /* UIImage+MultiFormat.m in Sources */ = {isa = PBXBuildFile; fileRef = 905812BF78DA7ECAC7EE8268A8B94114 /* UIImage+MultiFormat.m */; };
+		06702607519AA9E4BD376D8B359BD14A /* FIRCLSManagerData.m in Sources */ = {isa = PBXBuildFile; fileRef = BB1D70F3BB1D1BAD433DA9D3BE3E7EA8 /* FIRCLSManagerData.m */; };
+		06FE46EBA75ED59FB426315F84B91D0E /* Parchment-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 2D910114A8C3A716DDB409D6A96AA826 /* Parchment-dummy.m */; };
+		072BA312AB0F8899E6A064564FC3FDFF /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
+		072E4CD941B44109FDA696C352FE20AD /* GULReachabilityMessageCode.h in Headers */ = {isa = PBXBuildFile; fileRef = AB4E39DA261FED1805CC324D526E074F /* GULReachabilityMessageCode.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		0752FEE29003A147448D3AFAF223855B /* FBLPromise+Validate.m in Sources */ = {isa = PBXBuildFile; fileRef = 762642292C091B3CB4047404E6818F75 /* FBLPromise+Validate.m */; };
+		07CC3EC87D5B98D88D05B1A0DAEAB647 /* FIRCLSProcessReportOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = 49A74E3908131F729AA16FE2181655D0 /* FIRCLSProcessReportOperation.m */; };
+		08093427BD56099BD4B7C6C55E929E9F /* CTInterstitialImageViewController~iphoneport.xib in Resources */ = {isa = PBXBuildFile; fileRef = 40AF671E8606181D9BA6E631A23FADC5 /* CTInterstitialImageViewController~iphoneport.xib */; };
+		080B162C169B2332706ACF0144FE752D /* Position.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3F89C1EE9F0B125E3A3D207B71079083 /* Position.swift */; };
+		08107140946FA9287B2C63728BFABB2E /* SwiftMessages-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = B38DE103409B4D2D2B3BCA18176AFC45 /* SwiftMessages-dummy.m */; };
+		083D4AF6AF699DA42D961EE1611772C2 /* FIRLogger.h in Headers */ = {isa = PBXBuildFile; fileRef = F8DAA6E3AFF79DAD9D39EE600A314102 /* FIRLogger.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		0855A1CA585C6E169B8414314CEAE8AA /* CleverTap.m in Sources */ = {isa = PBXBuildFile; fileRef = C3C3EC08DF96B282D53BB925A57C0738 /* CleverTap.m */; };
+		0864B53B7B5CFA5758528A08B1D19DF7 /* FBLPromise+Race.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = 8A19BD3918328C434D43F37208AB6782 /* FBLPromise+Race.h */; };
+		08ADC699CA7BD63468744E25832498E9 /* FBLPromise+Await.h in Headers */ = {isa = PBXBuildFile; fileRef = 29BF7DFC5BAF79E32B0A511257A50791 /* FBLPromise+Await.h */; };
+		08B185E08278AE7EC55F8BBB19693AC5 /* IQKeyboardManager+OrientationNotification.swift in Sources */ = {isa = PBXBuildFile; fileRef = 7BD061EE78E4F468D393D20532287189 /* IQKeyboardManager+OrientationNotification.swift */; };
+		08E68A0062CB205F695CFA1CBDAB5FE2 /* FIRCoreDiagnosticsConnector.h in Headers */ = {isa = PBXBuildFile; fileRef = 747839390FEB32C0B31CDE1F1DE7173C /* FIRCoreDiagnosticsConnector.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		093252001D6333D034EF1C4095F58A7C /* errorIconSubtle.png in Resources */ = {isa = PBXBuildFile; fileRef = B46F1CF71B02E779BE0CE538EE606D5E /* errorIconSubtle.png */; };
+		094A08A9F96F30EDA2D0704566917B63 /* PagingViewControllerInfiniteDataSource.swift in Sources */ = {isa = PBXBuildFile; fileRef = DBB32652FD77C843803D38856981FB4C /* PagingViewControllerInfiniteDataSource.swift */; };
+		0971D94F92A34326EA8F2B8B800E19A9 /* ic_pause@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = E935BFB241DDABBFDD14491001995F80 /* ic_pause@2x.png */; };
+		097419C1E189EE880DF3195DCCA06E4D /* FBLPromiseError.m in Sources */ = {isa = PBXBuildFile; fileRef = 18C561958FDCA6637268BB7CC6067943 /* FBLPromiseError.m */; };
+		09FCC5919D5B167B4AF7EC1C1D7FCEC7 /* FIRCLSThreadState.c in Sources */ = {isa = PBXBuildFile; fileRef = 655C7A7A2D77D535F64B6ED73FC1D40D /* FIRCLSThreadState.c */; };
+		0A32D81865325E772B11B5501B3C163D /* FIRCLSFABNetworkClient.h in Headers */ = {isa = PBXBuildFile; fileRef = B989619D86415C94F6FA58D5B9033008 /* FIRCLSFABNetworkClient.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		0A36557C514A629195286BB636A7399F /* FIRMessagingPendingTopicsList.m in Sources */ = {isa = PBXBuildFile; fileRef = D991489D1C1029C5B84CC3093570F7B2 /* FIRMessagingPendingTopicsList.m */; };
+		0A463A1A375119AD242B723F9179B72C /* FIRDiagnosticsData.m in Sources */ = {isa = PBXBuildFile; fileRef = D76D8AB7C6C7DD72A29FFA7E2D12F3A3 /* FIRDiagnosticsData.m */; };
+		0AA89FD73E6962630FFACFA53F856DCB /* FIRCLSFile.h in Headers */ = {isa = PBXBuildFile; fileRef = 2E17639D7D0993B02F8358B47B2FEA0F /* FIRCLSFile.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		0B399DCF32F8FE4F09B03B6E7B65E0D1 /* Alamofire-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = AE49506FBF5EA47DD171595B89BC5921 /* Alamofire-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		0B5BA4AD39B8FEDEC559878B722B7EA1 /* FIRCLSUserLogging.m in Sources */ = {isa = PBXBuildFile; fileRef = 73B7CC9C89ED5CF7E6050A1B87F1204A /* FIRCLSUserLogging.m */; };
+		0BEC11846600E698ED0044C94E71BB2F /* FIRComponentContainer.h in Headers */ = {isa = PBXBuildFile; fileRef = 5DC2A5052482E78F537285D6B55C084B /* FIRComponentContainer.h */; settings = {ATTRIBUTES = (Private, ); }; };
+		0C80A0FE8729010EE69379C89C1FB7B1 /* SDImageHEICCoder.h in Headers */ = {isa = PBXBuildFile; fileRef = 131B67144BF1759067EFC857B8D3970B /* SDImageHEICCoder.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		0CB76160485F0E27CAC13EF8752996D8 /* GDTCORUploadCoordinator.h in Headers */ = {isa = PBXBuildFile; fileRef = 191046A623EC8FB55D720900BDE2B4F4 /* GDTCORUploadCoordinator.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		0CBA4A6F875C2C95B68CDA3A41A74FAE /* ic_play@1x.png in Resources */ = {isa = PBXBuildFile; fileRef = 0E70959CD60D842ACA6CE2B51D91E526 /* ic_play@1x.png */; };
+		0CD035B49B256D8BF6133A97F1C97E58 /* GDTCORConsoleLogger.m in Sources */ = {isa = PBXBuildFile; fileRef = 09435066C35E748BC86C398CFD9DA55C /* GDTCORConsoleLogger.m */; };
+		0CDC5C3218CBDCD0C9C2AF0731135A89 /* GDTCORFlatFileStorage+Promises.m in Sources */ = {isa = PBXBuildFile; fileRef = 5F7D3570204556D6137073AEBE000B7D /* GDTCORFlatFileStorage+Promises.m */; };
+		0CE08F42404524E6648D6B945CD8F13C /* GULNetworkLoggerProtocol.h in Headers */ = {isa = PBXBuildFile; fileRef = 4C58FF3F13881534CA9253878358C58B /* GULNetworkLoggerProtocol.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		0D2A933878BC4222B6E3AD8648FBBF4E /* SDImageCache.m in Sources */ = {isa = PBXBuildFile; fileRef = 842DFE1506CA6B19D1DAB42541A7BF59 /* SDImageCache.m */; };
+		0D4F7B3A6AC3ADBEBFED53C9740E63C5 /* FBLPromise+Any.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = 9A5D3DBD21753C092E20EFF97F4D4554 /* FBLPromise+Any.h */; };
+		0D5CBE55518A62CFB9B5CFFBABD9F30F /* Transitioning.swift in Sources */ = {isa = PBXBuildFile; fileRef = 2459F3DE93064D159BA5D1AB34EDE072 /* Transitioning.swift */; };
+		0D6BD4294C67F503A9E12D3E63A3A9EE /* successIconLight@3x.png in Resources */ = {isa = PBXBuildFile; fileRef = B26F7C70C74DDE71441AA961279A3DF5 /* successIconLight@3x.png */; };
+		0DB248513C548DE54D286199D092AFC5 /* SDFileAttributeHelper.h in Headers */ = {isa = PBXBuildFile; fileRef = 4E7BDB0266F380177C72601E23E5CE76 /* SDFileAttributeHelper.h */; settings = {ATTRIBUTES = (Private, ); }; };
+		0EBE5EF1C88ADC4F733AD2758629E54B /* CTHalfInterstitialViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 44256A54B73F65B50E959A6F29264A60 /* CTHalfInterstitialViewController.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		0EC57E963C6219B6E6BB68BEB589EDA3 /* SDWebImageCompat.h in Headers */ = {isa = PBXBuildFile; fileRef = E1C388AFF19C24CD736891675FCED3BD /* SDWebImageCompat.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		0F3F292BF29C383B3915EB35E2AA535C /* UIImage+MultiFormat.h in Headers */ = {isa = PBXBuildFile; fileRef = BCA50FDF0477D18B39E5996C5FF1C3D2 /* UIImage+MultiFormat.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		0F7D7FFDA27D197E35DCD253C8E7563B /* dwarf.h in Headers */ = {isa = PBXBuildFile; fileRef = 850A1FB83379528CECFAD5F02818CB5E /* dwarf.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		0F94B2449CA1ADA76AE79C0BF6A08549 /* IQKeyboardManagerConstantsInternal.swift in Sources */ = {isa = PBXBuildFile; fileRef = 6C2BAF5AB4973BE041CBF30E746A9053 /* IQKeyboardManagerConstantsInternal.swift */; };
+		0FAA2EFB68C3A639CE409802A18B4CDD /* SDWebImageManager.h in Headers */ = {isa = PBXBuildFile; fileRef = B6937A1363783BBDE2A241AD04E39E5C /* SDWebImageManager.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		106F31A5D2E0E5BA8808175438A9AF86 /* NSImage+Compatibility.m in Sources */ = {isa = PBXBuildFile; fileRef = FF350DB64D4EA35323BF19DD2713CD35 /* NSImage+Compatibility.m */; };
+		112161C0422D2740B8D31663A7BB67E6 /* warningIcon@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = D8AAA026E03241ECAA98E46CAEAEB9A4 /* warningIcon@2x.png */; };
+		11495A808002CE973B79EAB056412AD1 /* CleverTapJSInterface.m in Sources */ = {isa = PBXBuildFile; fileRef = ED70893AEE70AB0A0B5EFAA22FFCDFB5 /* CleverTapJSInterface.m */; };
+		115C35392510F61F9633F3061AFDE746 /* FIRCLSDownloadAndSaveSettingsOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = 2DD906771D49AB1BEB15661309905D9A /* FIRCLSDownloadAndSaveSettingsOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		118C4F889469F704406C293445B30949 /* SDAsyncBlockOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = F5B93F80EB0D3E7ACE657D6FCC269674 /* SDAsyncBlockOperation.m */; };
+		11C3DD5E67381BB452140288938B46B3 /* FIRMessagingAPNSInfo.m in Sources */ = {isa = PBXBuildFile; fileRef = FEA957E11426CB071871167383A07300 /* FIRMessagingAPNSInfo.m */; };
+		12A297ECFCF5AACB2E9461CC23336BCF /* FXPageControl.m in Sources */ = {isa = PBXBuildFile; fileRef = 015B439C22B52F3545D6EA7D4136D47A /* FXPageControl.m */; };
+		12A760CBBB37D966C29531BF63D7141F /* GDTCOREvent+GDTCCTSupport.m in Sources */ = {isa = PBXBuildFile; fileRef = 671EA038B2ED1401F11F037F7726F0DF /* GDTCOREvent+GDTCCTSupport.m */; };
+		12E705A266B839EC2370D2D02A2D9246 /* GDTCCTUploadOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = FC739BB479ECE278ADF62E3AB2B172F0 /* GDTCCTUploadOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		133FB6C493994DD98B828997B464FC36 /* NetworkActivityLogger.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34A9608E4495DE8784B6B2FDA489BB98 /* NetworkActivityLogger.swift */; };
+		13496330F4E36B390A0ECFCAAA1EA6EE /* AlamofireNetworkActivityLogger-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 619950B07F5483B8EA753C04FF0D08A1 /* AlamofireNetworkActivityLogger-dummy.m */; };
+		137EF15CD62928D2E8C32B18E35CDA84 /* SwiftMessagesSegue.swift in Sources */ = {isa = PBXBuildFile; fileRef = 2A82CE9A05B69EDF2BC415FA336EC762 /* SwiftMessagesSegue.swift */; };
+		13D24AE968317A33DB6A4921A05C4B79 /* FIRCLSDataParsing.h in Headers */ = {isa = PBXBuildFile; fileRef = 8A4E0AE7EF470ED5C78E27AC2BD0B7FD /* FIRCLSDataParsing.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		13DB1EEFFAA91DA161D13A0138383851 /* CTInterstitialViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 6F2365A0507828F4F82D50B35BE710F2 /* CTInterstitialViewController.m */; };
+		13E62623092B680C6A5C349D48B8A4FD /* CachedResponseHandler.swift in Sources */ = {isa = PBXBuildFile; fileRef = BCF32232117D9DABBF7DCC3F23632E0D /* CachedResponseHandler.swift */; };
+		13E816E07822D191361BA7B9652A0447 /* SDWebImage.h in Headers */ = {isa = PBXBuildFile; fileRef = 0450E338415A407E610D226965068CDB /* SDWebImage.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		140616ECABDC5C13178449C7C9433F08 /* FIRCLSBinaryImage.m in Sources */ = {isa = PBXBuildFile; fileRef = 4D4DA4CBB9DB8DFE391FF87354EDB81B /* FIRCLSBinaryImage.m */; };
+		143B3EC8A7A97DA3190EA4EE5FAE22EF /* FIRCLSAsyncOperation_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 42D81562815F6BBA281AE3E5BE7BE3B0 /* FIRCLSAsyncOperation_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		14BD134BED695932E1739F343B5508EC /* CTInterstitialViewController~iphoneport.xib in Resources */ = {isa = PBXBuildFile; fileRef = 69FF19D06CCDFDFA96C07F877D8BE2F2 /* CTInterstitialViewController~iphoneport.xib */; };
+		14FE63774C6F7F14DF4D62675EA0320F /* PagingDiff.swift in Sources */ = {isa = PBXBuildFile; fileRef = 2321C7692125F99F2B42DDE9D8D1B5CD /* PagingDiff.swift */; };
+		151C9075B23C4C58CFA9929663F17C99 /* FIRLibrary.h in Headers */ = {isa = PBXBuildFile; fileRef = BB986A7CD435F5F2CD388CADC8B6C1D3 /* FIRLibrary.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		15BBB671AB5F6686F79C708CB85258FD /* FIRCLSReportUploader.h in Headers */ = {isa = PBXBuildFile; fileRef = 8BAE39769DDA52C82BE369705404E0A5 /* FIRCLSReportUploader.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		15BD4FC4280BFFE4F62120DF324C1566 /* FIRMessagingAuthKeychain.h in Headers */ = {isa = PBXBuildFile; fileRef = 93E7AB46E2511D25D9AF79D1E812E057 /* FIRMessagingAuthKeychain.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		15CC1B47203EDA66C02C2C567BA17D9F /* CTUriHelper.h in Headers */ = {isa = PBXBuildFile; fileRef = 27DAE611403FDED1CAC48B2F760DB079 /* CTUriHelper.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		15E5E0456E12887C2C2235111FD13EC9 /* CleverTapDisplayUnit.m in Sources */ = {isa = PBXBuildFile; fileRef = 609DAA51432A0B744386D3FC98E1901C /* CleverTapDisplayUnit.m */; };
+		1607B2039FE01325054E180CC5E8B2E3 /* SDImageIOAnimatedCoder.h in Headers */ = {isa = PBXBuildFile; fileRef = 8AD62AA1AFA5EB5550B63F704960B934 /* SDImageIOAnimatedCoder.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		1642DF0271994EF5CD8458E048439D60 /* SDImageCoderHelper.h in Headers */ = {isa = PBXBuildFile; fileRef = A225015DDE6D3C950FE011A063C839D3 /* SDImageCoderHelper.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		165120D7146C5D635EAE232C0754991A /* CTFeatureFlagsController.h in Headers */ = {isa = PBXBuildFile; fileRef = 097D48545465F63FE424FA9880FB74CE /* CTFeatureFlagsController.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		1740CBB33D469AEDD5D7291A9268FA97 /* IQToolbar.swift in Sources */ = {isa = PBXBuildFile; fileRef = D2D785FCC6C97DC6D690DB97C42DD3EA /* IQToolbar.swift */; };
+		1773084DECF68CADD45567FBEC56036D /* Alamofire-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 36B096A6E6CD60F2D1D99666B4426B47 /* Alamofire-dummy.m */; };
+		17AA1AC36F8BD089023D28807026B3BF /* FIRDiagnosticsData.h in Headers */ = {isa = PBXBuildFile; fileRef = 7AEAA0DB2BC4D4FD8EF27B6A56436111 /* FIRDiagnosticsData.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		17B9DC2AF17B6520012CCB92594847F2 /* CTLocationManager.m in Sources */ = {isa = PBXBuildFile; fileRef = A8AA2E4F9732DA578BD598BD91C4CA96 /* CTLocationManager.m */; };
+		17BE40A57EC267DDDA575FF34619E73C /* FirebaseInstallations.h in Headers */ = {isa = PBXBuildFile; fileRef = 900AA697B5A35B02A8FDC9EE42406422 /* FirebaseInstallations.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		17CB8F8C857AC674120EF0CD86AB0ED2 /* FIRMessagingExtensionHelper.m in Sources */ = {isa = PBXBuildFile; fileRef = D952E5AE5E8F99516FAF4C1095AFED9C /* FIRMessagingExtensionHelper.m */; };
+		19154D167A21D9D08F12A3DB75DE8383 /* FIRInstallationsLogger.m in Sources */ = {isa = PBXBuildFile; fileRef = 3A27377063A864B846BCFB821EAB6C26 /* FIRInstallationsLogger.m */; };
+		192F4E36BBCCD0725301478107C44D21 /* FIRMessagingBackupExcludedPlist.h in Headers */ = {isa = PBXBuildFile; fileRef = 7CA2DA0805D1A3856588886B5EB8BA9E /* FIRMessagingBackupExcludedPlist.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		1942E46C6436A70A47BFD40901FE5D4C /* CTProfileBuilder.m in Sources */ = {isa = PBXBuildFile; fileRef = 4250111C6AF98F257FA51BA7FAFEA6F1 /* CTProfileBuilder.m */; };
+		194C90CA54E2F0CB414B70C1D3DE9E7E /* FIRInstallationsIIDTokenStore.m in Sources */ = {isa = PBXBuildFile; fileRef = A05A33EB539E0FB09313F605D32DA638 /* FIRInstallationsIIDTokenStore.m */; };
+		19566CED5C43AB99F059D9DA194B80A7 /* OTPFieldView-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 403FCE563BB10DA0DDA90847C606FD61 /* OTPFieldView-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		19C0A8185AEFCC0F8EBC433387E1B676 /* SDWebImageDownloaderResponseModifier.h in Headers */ = {isa = PBXBuildFile; fileRef = 6FB00B23DF0B51440A195F03DEF46339 /* SDWebImageDownloaderResponseModifier.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		19C18D0ED5447926576DFF3ABB327B22 /* FIRCLSAsyncOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = 5A85FAB4E757C7AB105A7CE740D1401D /* FIRCLSAsyncOperation.m */; };
+		19E69C8560B8AD8CBD8649CFF45D6529 /* ct_default_portrait_image.png in Resources */ = {isa = PBXBuildFile; fileRef = EDED5021C6D904082B244DE47F3151AF /* ct_default_portrait_image.png */; };
+		1A4ECFEEF88F8B3732753841CC659BAB /* FIRInstallationsLogger.h in Headers */ = {isa = PBXBuildFile; fileRef = 3F97B2F6835BC1198D338DFEF623D71E /* FIRInstallationsLogger.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		1A9B9579E46EFBA63C5F57A6B17B5ECA /* IQKeyboardManagerSwift-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = FBDB061C15D8B2DFB47EC27B48C3E283 /* IQKeyboardManagerSwift-dummy.m */; };
+		1AA4F725ACAC38D27087E1F6177BF44E /* CTImageInAppViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 66A58A540C05E615DB4F42EDB0DD3D9A /* CTImageInAppViewController.m */; };
+		1B2DBED4B00A56EA04FF7FAF196BEC97 /* FIRCLSFABAsyncOperation_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = B3D6F9C340E055D31D157832905C0EE0 /* FIRCLSFABAsyncOperation_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		1B4999E14D2C030324B1AF6F9600A707 /* FIRAnalyticsInterop.h in Headers */ = {isa = PBXBuildFile; fileRef = 78BDDDD68F7B11012F2AC398E69730A0 /* FIRAnalyticsInterop.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		1BAE7545321E7B5D426BD4F3226B5AE0 /* FIRCLSDemangleOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = 55AD4ADCD1AA1110F584DB80C648D33A /* FIRCLSDemangleOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		1BDF12B46956F9924A64162FE774C67F /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
+		1BEAEEE6C51D497AE0EBB6FD41992C32 /* FIRComponent.h in Headers */ = {isa = PBXBuildFile; fileRef = 4D7403BA9BDF02D00EE41F01A2048F3A /* FIRComponent.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		1C00640917904CC482412A574FC8589A /* SDDiskCache.h in Headers */ = {isa = PBXBuildFile; fileRef = 1745F3708F561ED94635701ED78E5D97 /* SDDiskCache.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		1C0AFF132E7BFF1B8DA0596658868063 /* FIRInstallationsAuthTokenResult.h in Headers */ = {isa = PBXBuildFile; fileRef = 7CBA9F017FB12EF747D1533FF5CD3B16 /* FIRInstallationsAuthTokenResult.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		1C63C3F9D2323C10339C67EE7D38F47A /* CTVideoThumbnailGenerator.h in Headers */ = {isa = PBXBuildFile; fileRef = 10693E03B70C5AAB19817C2D49D4E946 /* CTVideoThumbnailGenerator.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		1C6CE883721C96BC012BAAE91E5EE978 /* CTMessageMO+CoreDataProperties.m in Sources */ = {isa = PBXBuildFile; fileRef = 3CC92207A688836CC8E931A67DE9E73F /* CTMessageMO+CoreDataProperties.m */; };
+		1D17B83410DC98911D539F2BD5254C05 /* RequestTaskMap.swift in Sources */ = {isa = PBXBuildFile; fileRef = C707200F796DC80FA2DF53E9E7D2D40A /* RequestTaskMap.swift */; };
+		1D581A3F8EB36D9CA7812DE6BA797185 /* IndicatorInfo.swift in Sources */ = {isa = PBXBuildFile; fileRef = 6C0549C770D4674B5386FC6252D9F5F4 /* IndicatorInfo.swift */; };
+		1D6268519EDE2BDB6EF179B6A98B7B9F /* SDImageCodersManager.m in Sources */ = {isa = PBXBuildFile; fileRef = 921C0511E5F26C5AC0A2FE3AE08ADB84 /* SDImageCodersManager.m */; };
+		1D64306137F9063FDC59F6C766AEB714 /* PageViewManager.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8A67A6A29D9BE4A6E0FA38EE5E429F8 /* PageViewManager.swift */; };
+		1D8031C86A94D32E00ED55B80428A0F3 /* IQKeyboardManager+Toolbar.swift in Sources */ = {isa = PBXBuildFile; fileRef = AB9FDADC9CEE9F6124F18DC7FC7767D9 /* IQKeyboardManager+Toolbar.swift */; };
+		1D8CE22CFF300ADF0A8FE0D2F55E7136 /* PageViewControllerDataSource.swift in Sources */ = {isa = PBXBuildFile; fileRef = 5B03FE29D20B833C09F6F9C7CC61D478 /* PageViewControllerDataSource.swift */; };
+		1DA2C263FDF00E45C0F60204DA21E4BD /* FBLPromisePrivate.h in Copy . Private Headers */ = {isa = PBXBuildFile; fileRef = AFAABCA5AD134D7B13A55DA86748F1F5 /* FBLPromisePrivate.h */; };
+		1DA883EEA7879FCAF60BA02114973206 /* UIImage+ForceDecode.h in Headers */ = {isa = PBXBuildFile; fileRef = 6FFA542398080E443CEE883BED840042 /* UIImage+ForceDecode.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		1DE0351E5329D0326F649E22C61FA2A6 /* PageViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = D5DF4EAF4F357894D9BDCADE136CFB68 /* PageViewController.swift */; };
+		1E1EF607BAB1DC33D37D24AD9E3FCDA7 /* GDTCORDirectorySizeTracker.m in Sources */ = {isa = PBXBuildFile; fileRef = AE458D12347582753E6CDBB2F7FF70A3 /* GDTCORDirectorySizeTracker.m */; };
+		1EDAB29C7A68F4C9D91AB72A45B9A656 /* PagingCellLayoutAttributes.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1778DDCBBD78B2323FE9A2C43E8E4C8E /* PagingCellLayoutAttributes.swift */; };
+		1EEBEB3E8E43888EFF440D810F4FE61F /* Weak.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4BBFC7D490C140218BC95AA8CA0E64B1 /* Weak.swift */; };
+		1F1B795E2B4C7CC74CD30675F05A2ECE /* UIView+WebCache.m in Sources */ = {isa = PBXBuildFile; fileRef = 02B752827D9E378365B62DDC2D7511F6 /* UIView+WebCache.m */; };
+		1F47C789B12AB07DB1D2A548DF1B6710 /* CTDisplayUnitController.h in Headers */ = {isa = PBXBuildFile; fileRef = 7F8093B2B1E1DDFA8228657F4507F898 /* CTDisplayUnitController.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		1F727CB62A71B2ABE2CA4FBDC563A4A1 /* UIViewController+Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = F4A14662FF086D38E0A9D7D68738ECCE /* UIViewController+Extensions.swift */; };
+		1F9C96FFDE2087CA00194A93F474641F /* FIRLogger.h in Headers */ = {isa = PBXBuildFile; fileRef = 83B46FCF91548D15150A98E66F009016 /* FIRLogger.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		1FB15906A44CCD7C1D8FCF8C91A89A9A /* FIRMessagingTokenFetchOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = 7FAF71FBC938AF2E65DF089170227F59 /* FIRMessagingTokenFetchOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		202532FACCA9DBD55FB360DAE26E9F1C /* FIRLibrary.h in Headers */ = {isa = PBXBuildFile; fileRef = 5EB36D703D88F16708F2D7F83DA4858A /* FIRLibrary.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		20473D1B54B44C0E2A91114EBDDB3D97 /* FIRComponentType.h in Headers */ = {isa = PBXBuildFile; fileRef = D9BABE432AAD6C34D64ADD6FC67E5FF9 /* FIRComponentType.h */; settings = {ATTRIBUTES = (Private, ); }; };
+		2060DDD1785D7B7C5BDF40E34F45890F /* CleverTapInboxViewControllerPrivate.h in Headers */ = {isa = PBXBuildFile; fileRef = AAB430493CE26ACB75C9037AD5316891 /* CleverTapInboxViewControllerPrivate.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		20616A47873318F80BFFEABAC9730122 /* IQTitleBarButtonItem.swift in Sources */ = {isa = PBXBuildFile; fileRef = 25F875350EDACB672EC7B4CF866DCD9D /* IQTitleBarButtonItem.swift */; };
+		2083F1AC6A119EAEB9C8A57DEF886C07 /* CTInboxSimpleMessageCell~land.xib in Resources */ = {isa = PBXBuildFile; fileRef = 13DA60524A8C07279D7AE42F239BAA37 /* CTInboxSimpleMessageCell~land.xib */; };
+		20894B13256D96007A5F77CF67A80D3E /* GULHeartbeatDateStorage.m in Sources */ = {isa = PBXBuildFile; fileRef = 48862458A4A0A4DE9AB4F870B8F2E777 /* GULHeartbeatDateStorage.m */; };
+		20A7F7A81D66E3C3E55734CC77F1E214 /* State.swift in Sources */ = {isa = PBXBuildFile; fileRef = 420BDE5FFE2FB1A9302AF687E5BCBC29 /* State.swift */; };
+		210F8AF656043B3D9DB8B27ECCC6E5E6 /* infoIconLight@3x.png in Resources */ = {isa = PBXBuildFile; fileRef = 8FCF6F6EA2F77476F21C81B459D196CB /* infoIconLight@3x.png */; };
+		218A00691B290E6FFABB7644DD20193B /* FIRCLSProcess.h in Headers */ = {isa = PBXBuildFile; fileRef = 2D50576FB84AF3B5FD8AE7EDBE6157E8 /* FIRCLSProcess.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		21AD3C1723AE820771AE1AD06E037ED4 /* FIRCLSSignal.h in Headers */ = {isa = PBXBuildFile; fileRef = A376990628CA5ACEB2316F138309F5E0 /* FIRCLSSignal.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		22157E95B2988ADD9F213EF8141D2E05 /* ct_default_audio.png in Resources */ = {isa = PBXBuildFile; fileRef = 7454FA163F52B12515744F83B0EF8BD5 /* ct_default_audio.png */; };
+		2281E8A1845B703E2F41FF733F939F03 /* cct.nanopb.c in Sources */ = {isa = PBXBuildFile; fileRef = F84F68DCC4A2960956D200031AB77072 /* cct.nanopb.c */; };
+		22B2B145664C2C9BF42079863125D707 /* FIRMessagingPubSub.m in Sources */ = {isa = PBXBuildFile; fileRef = F61808C23FA4500A10D6C72217DCBC94 /* FIRMessagingPubSub.m */; };
+		233B9C1751480C2E115798BC8B989C68 /* FIRInteropEventNames.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ADD2FA6B3DDDC7AF7485F2EBB4E0E82 /* FIRInteropEventNames.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		2378B0171409F8603209AECF15D1ED40 /* FIRCoreDiagnosticsConnector.h in Headers */ = {isa = PBXBuildFile; fileRef = 0F1A555B1EAA77D7ACFAEF676BE85AA6 /* FIRCoreDiagnosticsConnector.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		2387C6279DF91ADFD23A461397C99B95 /* PagingMenuHorizontalAlignment.swift in Sources */ = {isa = PBXBuildFile; fileRef = 38067080E934240A05B4E487843C08BB /* PagingMenuHorizontalAlignment.swift */; };
+		24140584691B21E82A807B9EB3084F39 /* FIRMessagingContextManagerService.h in Headers */ = {isa = PBXBuildFile; fileRef = 0764B9CD746C8F73AE46E691D1C2F0F8 /* FIRMessagingContextManagerService.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		2432701A7C4A79619FDE97FBC5CAB768 /* FIRInstallationsStatus.h in Headers */ = {isa = PBXBuildFile; fileRef = 7CA6813EE4F976B65FECCB56747E7B37 /* FIRInstallationsStatus.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		2437A2EDCA106850F69BDDB2EF449E33 /* FBLPromise+Validate.h in Headers */ = {isa = PBXBuildFile; fileRef = 55A8D51C3918D86A609057423BCF0597 /* FBLPromise+Validate.h */; };
+		24EC44FF102C2635A476CEF7567F89DA /* IQPreviousNextView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 44C602C79A47C739FD70AE92E0BA2A81 /* IQPreviousNextView.swift */; };
+		2503B430D9C2E1C021A0BD48742EF153 /* FXPageControl.h in Headers */ = {isa = PBXBuildFile; fileRef = 9A26B21CFC64A56D095561C9959DC848 /* FXPageControl.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		253F4767DA172A2CDD03035271F4AECC /* CleverTap+InAppNotifications.h in Headers */ = {isa = PBXBuildFile; fileRef = 108E35351046A0DD394C1AD68BAA0D5F /* CleverTap+InAppNotifications.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		2550F0D474DE846FEC5C76CBE85F927E /* OperationQueue+Alamofire.swift in Sources */ = {isa = PBXBuildFile; fileRef = EF6EC3CCC63811003787D0F48418DF44 /* OperationQueue+Alamofire.swift */; };
+		25CF3A1F09666920B730748941FB785B /* NSBezierPath+SDRoundedCorners.m in Sources */ = {isa = PBXBuildFile; fileRef = 2C98CE1EF7635D4BC9827060C89ECF35 /* NSBezierPath+SDRoundedCorners.m */; };
+		26058180396BAC198BFA311E0F929E18 /* ct_default_video.png in Resources */ = {isa = PBXBuildFile; fileRef = A520A6D5E883724F3E3E76F3C2590F10 /* ct_default_video.png */; };
+		260B1D2CBE38791EA260B7957DE4822A /* FIRMessagingTokenInfo.m in Sources */ = {isa = PBXBuildFile; fileRef = EC244EC35F6EB66D6E545E9E83FFE436 /* FIRMessagingTokenInfo.m */; };
+		26244B56C38F8968B93223C7B5337EDF /* GULNetworkConstants.m in Sources */ = {isa = PBXBuildFile; fileRef = DF86B36F1AC668226F3955B575CE887F /* GULNetworkConstants.m */; };
+		2626D9A7FAB2D319F560316B6AA90D54 /* FirebaseCoreInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = F77290C81C9F0FD9C1A5DFEB3C516F50 /* FirebaseCoreInternal.h */; settings = {ATTRIBUTES = (Private, ); }; };
+		2633EC20941DD80E4C398C5C3F8C8B09 /* SDWebImageDownloaderResponseModifier.m in Sources */ = {isa = PBXBuildFile; fileRef = CA8A6578E42953ABB8D18BBCC3976634 /* SDWebImageDownloaderResponseModifier.m */; };
+		2636335D1F5D1D62FD64DE1A3ED57B58 /* CTLocalDataStore.m in Sources */ = {isa = PBXBuildFile; fileRef = 37DFB75A09D5AF98A8821876B8FC67C8 /* CTLocalDataStore.m */; };
+		267387933278F5A432BA3C3CE30353AA /* FIRCLSFileManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 1C324AF75439C9F991BB7AB266737095 /* FIRCLSFileManager.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		2676E3D558912EB6790E0886AAAC1E4C /* FIRInstallationsIIDStore.h in Headers */ = {isa = PBXBuildFile; fileRef = 3C48D4DD697A3A1A97C0F3B07B918AED /* FIRInstallationsIIDStore.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		26A9A1D5029BDEB2C0AF0ECFE65ECBB6 /* BackgroundViewable.swift in Sources */ = {isa = PBXBuildFile; fileRef = 63148198B708E46DC7635789681B8376 /* BackgroundViewable.swift */; };
+		27024204303EEB7BDCFB73495FD2A495 /* FBLPromisePrivate.h in Headers */ = {isa = PBXBuildFile; fileRef = AFAABCA5AD134D7B13A55DA86748F1F5 /* FBLPromisePrivate.h */; };
+		273E0625AF984410DFE30D96C7FE7012 /* FIRCLSNetworkOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = CFABA037DB556675C7CB42C4682E148B /* FIRCLSNetworkOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		2778955A0BD1BACE976E96CAE422E32A /* FIRInstallationsHTTPError.m in Sources */ = {isa = PBXBuildFile; fileRef = 0D413554D9DE58E68E04AFCE8A6E77D4 /* FIRInstallationsHTTPError.m */; };
+		2812375D2FC92418241E38E7687FAA8E /* FIRLogger.h in Headers */ = {isa = PBXBuildFile; fileRef = D20286FEBC452E86DC4EAC8EF5722CB7 /* FIRLogger.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		28AB03F5DD84411D737A717E7F6112C6 /* FirebaseCoreInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 99083F1111E52B93CB0D75C2F36CED13 /* FirebaseCoreInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		294CE8B2750EEF54A93501EF5268C811 /* GDTCOREvent+GDTCCTSupport.h in Headers */ = {isa = PBXBuildFile; fileRef = 8127F67ED29059568E5D4EBA4FACC4BD /* GDTCOREvent+GDTCCTSupport.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		29C035E36C9E7A44BFCE7BD4F6B02C25 /* PagingMenuDataSource.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8612893FD2EE151350A0A0F7B84D3029 /* PagingMenuDataSource.swift */; };
+		2A44FC42DA4E309A6CD0C23845E62FDD /* MaskingView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 70F895F9280EB9DF8809A6BDEA2C7B36 /* MaskingView.swift */; };
+		2A9872CEABAC1045112AA8627EE598B8 /* FirebaseCore-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 32DF9595FC9B1042F0F2076193C692A6 /* FirebaseCore-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		2AA74CEA4ADC363991DA784735C1C306 /* FIRInstallationsHTTPError.h in Headers */ = {isa = PBXBuildFile; fileRef = 39366A8616AFAF0C5DED1ED80CC8D7F5 /* FIRInstallationsHTTPError.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		2ACA0812BF2AD50E81459A43EA4BF222 /* GDTCCTUploadOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = 2D9E463C6F51026E0E48327FF4B620C6 /* GDTCCTUploadOperation.m */; };
+		2ACD2AF0A61FC91445A022FC7B11C514 /* CTKnownProfileFields.h in Headers */ = {isa = PBXBuildFile; fileRef = 37572FD8BA9D1CD9094005DCBF0CFBD9 /* CTKnownProfileFields.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		2AE8350330D3E67955678181D81A5004 /* CleverTapTrackedViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 7D930E572AA8419DE7E020E638D4F6DE /* CleverTapTrackedViewController.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		2B2EB50B394770F867DF870BB0BF438B /* pb.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A0B8567851D82A974B37215FE2CFA3D /* pb.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		2B5BB4CA939177104797DB06E9EEFFCE /* FIRDependency.m in Sources */ = {isa = PBXBuildFile; fileRef = 7B247E27A8ECCBAF86D722F73C11E4EE /* FIRDependency.m */; };
+		2BAC82154B7E42172B9C562ADBFE1017 /* FIRCLSHandler.h in Headers */ = {isa = PBXBuildFile; fileRef = 2FAC58CEB535CFDC22B457618105E8E2 /* FIRCLSHandler.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		2BD4F3884FA9882DD1BED337F7891850 /* SDImageFrame.h in Headers */ = {isa = PBXBuildFile; fileRef = 906D5B9D0103EBE1A117A73B96FFA89E /* SDImageFrame.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		2BF2572DAB153D76E5CDF25B94111787 /* FBLPromise+All.h in Headers */ = {isa = PBXBuildFile; fileRef = 43C85DC02AD81F8F1DFFB4EEE8F68DB2 /* FBLPromise+All.h */; };
+		2C03CD53FFA98034479CE4D7E6C72D86 /* FIRCLSMachO.h in Headers */ = {isa = PBXBuildFile; fileRef = F96FEB77F17EA3AC27E03F2F1F84499D /* FIRCLSMachO.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		2C517811512ECD93BA245023A85D695B /* successIconSubtle.png in Resources */ = {isa = PBXBuildFile; fileRef = FD6C74CF3087016A3C69D31D7AFD74CD /* successIconSubtle.png */; };
+		2C64A3342FBCAEBB9D791779B02764B4 /* ic_pause@3x.png in Resources */ = {isa = PBXBuildFile; fileRef = A074965257F6045BE96CD46CA1DF36DB /* ic_pause@3x.png */; };
+		2C88DC1158AB89AF00632DBD8ED2B28B /* ButtonCell.xib in Resources */ = {isa = PBXBuildFile; fileRef = F5D65F0003BE540987A8109BD50F9BB3 /* ButtonCell.xib */; };
+		2C8DEBB5FA19D21BC06C3340DBF4DA3A /* FIRMessagingCheckinPreferences.h in Headers */ = {isa = PBXBuildFile; fileRef = DC5EC58FD95B2EFCF832658EBD57B4D7 /* FIRMessagingCheckinPreferences.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		2CA0B3B43A972DF3AD79F58092E3403E /* IQKeyboardManager+Internal.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8C7BE4FD0EFB1CAC40B559E9F55E06DC /* IQKeyboardManager+Internal.swift */; };
+		2CA772C9B374697B0B5622FA71741362 /* infoIcon.png in Resources */ = {isa = PBXBuildFile; fileRef = DFCC6FE0A3CF1DE8539E5EDF04AED321 /* infoIcon.png */; };
+		2CB6DEE77D00D0AFD1B2C725C1CD6E76 /* SDWeakProxy.h in Headers */ = {isa = PBXBuildFile; fileRef = F330AC164C455AB9D6EDF133C1BA346F /* SDWeakProxy.h */; settings = {ATTRIBUTES = (Private, ); }; };
+		2CDD1385DB4E94B72AA923A2DB34D030 /* MarginAdjustable.swift in Sources */ = {isa = PBXBuildFile; fileRef = 31D94D4BA23E040B9D4B68FEB3BA19CF /* MarginAdjustable.swift */; };
+		2CE3EF19823718F2CD6766B6F3BCCDA2 /* FIRCLSCompactUnwind_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = BF779B2BD7C91D3BAF599B26EE2410CE /* FIRCLSCompactUnwind_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		2D0B274BE424C5C5410C9518B08638E7 /* GDTCCTNanopbHelpers.h in Headers */ = {isa = PBXBuildFile; fileRef = 32711DB6DC148C7BE5A985A1B84DBF29 /* GDTCCTNanopbHelpers.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		2D1524AB1A48390AE4D8857E73C50A25 /* GDTCORReachability.h in Headers */ = {isa = PBXBuildFile; fileRef = 976E2ECDF89D2C0F32FE82DF42FE4AB4 /* GDTCORReachability.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		2D34828C2AA65DDF45EB69E0F3531B42 /* CTCarouselMessageCell.h in Headers */ = {isa = PBXBuildFile; fileRef = 63997407C61817869F00568B253D6CCB /* CTCarouselMessageCell.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		2D994877DAA96911F24D94DAD14A9926 /* CTCarouselImageMessageCell~port.xib in Resources */ = {isa = PBXBuildFile; fileRef = 3D42DBB05050C87AC3399564CE109739 /* CTCarouselImageMessageCell~port.xib */; };
+		2DDBD69F0B2C30A41C214BA39B0BE99A /* FIRCLSSymbolicationOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = 2F59B7C2727A790A171107F0A2A86D0A /* FIRCLSSymbolicationOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		2DE15B96D1E4A8D316017483FCCF6C89 /* me.nanopb.h in Headers */ = {isa = PBXBuildFile; fileRef = 14B2E5E8C0FA89DCDBC939D7D8D0E000 /* me.nanopb.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		2DE1640DD2DD9CF57077CF161D850A99 /* SDAnimatedImage.h in Headers */ = {isa = PBXBuildFile; fileRef = 37E89C1DAA5CE245080969A6AF47AD1F /* SDAnimatedImage.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		2E5138271A6C79BDA3C0835F2596219B /* UIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 544065BA7D1202329397F6CEE19EB5A2 /* UIKit.framework */; };
+		2E86EC8897D1B2DBC77CF4400E548ED7 /* FIRCLSSettingsManager.h in Headers */ = {isa = PBXBuildFile; fileRef = C32D4F35505CE6EB1749562DC5BBFEC3 /* FIRCLSSettingsManager.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		2EC96162DD6740ECE67FF38B8400A7C5 /* IQKeyboardManager+Debug.swift in Sources */ = {isa = PBXBuildFile; fileRef = D2FCF0078787A22262357EA1C300309E /* IQKeyboardManager+Debug.swift */; };
+		2ED36C3E3A907AF79C1F61FA7CA0C564 /* InvalidationState.swift in Sources */ = {isa = PBXBuildFile; fileRef = D02568CA0FC7B31B5BD91EB46A0FA223 /* InvalidationState.swift */; };
+		2EDA6B49DD7089D49895BCF55FC6420C /* CTInAppHTMLViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 6917FBBB1634CC3EB2A77177319BD91B /* CTInAppHTMLViewController.m */; };
+		2EEAE7D9116EDC49D0C5727CD8C4462B /* CTInterstitialViewController~ipad.xib in Resources */ = {isa = PBXBuildFile; fileRef = E6F9DE15B3A3C15AF0F3610DC0009FA4 /* CTInterstitialViewController~ipad.xib */; };
+		2F35E46EF8916C9FC7227F3F472E9799 /* SDImageCodersManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 6910098C40B2CE9C8161B771D61F3CE7 /* SDImageCodersManager.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		2F39188025B6431F82AEFF74CEAD9E4C /* FBLPromise.h in Headers */ = {isa = PBXBuildFile; fileRef = B2B942EA18BC89BCAEACBF54F1A70AB2 /* FBLPromise.h */; };
+		2F3F0EEFAA3F2C8CF27F97052BBF5651 /* FIRMessagingConstants.m in Sources */ = {isa = PBXBuildFile; fileRef = FE0647581948836CE76D00D75594E72E /* FIRMessagingConstants.m */; };
+		2F5003EA6EFD58A43D4761138890E980 /* CleverTapInAppNotificationDelegate.h in Headers */ = {isa = PBXBuildFile; fileRef = 73F0AD6C9701EA1D57564E339C059ACB /* CleverTapInAppNotificationDelegate.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		2F8D1F743F470A7B3F4DBE22363B3DFE /* FIRMessagingTokenOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = 309B93B54AB8C2B2A9B760EBE5689E18 /* FIRMessagingTokenOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		302B68E8CC775312CDD15CCD5FF5D1B8 /* ButtonBarViewCell.swift in Sources */ = {isa = PBXBuildFile; fileRef = CB6D984B7D32094D8F6EE83AB66DF472 /* ButtonBarViewCell.swift */; };
+		3053A5E14B7703F4EA48903170FECCB1 /* FBLPromises.h in Headers */ = {isa = PBXBuildFile; fileRef = 1E552F6029DB590EA4CF6D58B9AEDA14 /* FBLPromises.h */; };
+		309A26627A236C4BA4F692F05DFD7278 /* successIcon@3x.png in Resources */ = {isa = PBXBuildFile; fileRef = 1FD2A88FDDD9529AE715525D297E848E /* successIcon@3x.png */; };
+		309FDC08AEC6B535A830670C59DB8F4A /* PageView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8F5A8569D6E87FAA12F400B5AF6A9CE4 /* PageView.swift */; };
+		30A331CD9286145E92DB11D671664C63 /* MultipartUpload.swift in Sources */ = {isa = PBXBuildFile; fileRef = C843D97D17CF8D4DBC31E4274FF6C93E /* MultipartUpload.swift */; };
+		30DBCEE4E0FFDAC607CC9C3330BFAC57 /* CTCertificatePinning.m in Sources */ = {isa = PBXBuildFile; fileRef = 22E0B7C90030547311F67AB73C837797 /* CTCertificatePinning.m */; };
+		30EA04D777000B046D357D4B0B3EE534 /* UIView+CTToast.h in Headers */ = {isa = PBXBuildFile; fileRef = 760C0A7EA500745AFCABBA8558A238D7 /* UIView+CTToast.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		317E58983C8117F4E2605A942A08CBEE /* FIRCLSUnwind_arm.c in Sources */ = {isa = PBXBuildFile; fileRef = A6E77C1D23954B2EDD7504B81A9BF821 /* FIRCLSUnwind_arm.c */; };
+		31848DA8197308363AA9648EC6DA3EC5 /* PagingStaticDataSource.swift in Sources */ = {isa = PBXBuildFile; fileRef = C56CB6D9716847074976C6696925DD56 /* PagingStaticDataSource.swift */; };
+		31D4E3FA4C9125DD525CF85BA2DB2CBD /* FIRInstallationsStoredAuthToken.m in Sources */ = {isa = PBXBuildFile; fileRef = E8C40A551AFB485658AC4646F2D1B32B /* FIRInstallationsStoredAuthToken.m */; };
+		320867183789A75A3F9F0FB14100816C /* PagingFiniteDataSource.swift in Sources */ = {isa = PBXBuildFile; fileRef = 43E7F56B404E7EBB75E5235A8CD5108A /* PagingFiniteDataSource.swift */; };
+		3222691873473961980209ADE35B1C15 /* FIRInstallationsStoredAuthToken.h in Headers */ = {isa = PBXBuildFile; fileRef = 89B00168907F9E9A59D299AC67D71873 /* FIRInstallationsStoredAuthToken.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		32599FD85EA406451D133F17C3D0E347 /* CleverTapSyncDelegate.h in Headers */ = {isa = PBXBuildFile; fileRef = D875F9B74796AB6D4382A1EF152783D1 /* CleverTapSyncDelegate.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		333CB9B3469B72279695DDC5A7251586 /* FIRCLSMetricKitManager.h in Headers */ = {isa = PBXBuildFile; fileRef = A59258BE5C497F70043B12CE440BFB95 /* FIRCLSMetricKitManager.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		33634B64A37F709874AB14578331B98D /* Presenter.swift in Sources */ = {isa = PBXBuildFile; fileRef = 133347D6FC613AF1EF7654DDA29A783F /* Presenter.swift */; };
+		3371BE1E45C9C08C5A5944AD57AB04B5 /* CTCoverImageViewController~ipad.xib in Resources */ = {isa = PBXBuildFile; fileRef = 7190E30191BF9A241C04AD969B9C624B /* CTCoverImageViewController~ipad.xib */; };
+		33767CB4C895DA734F8D9E3AEC14579F /* GULSceneDelegateSwizzler_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 4D9B615C3328AA3EE6062F04D3DAB5E4 /* GULSceneDelegateSwizzler_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		3395804472846F05943B8D3576AB24B4 /* errorIconLight.png in Resources */ = {isa = PBXBuildFile; fileRef = 78101452E375C73DC363DFB7A00D9F9E /* errorIconLight.png */; };
+		339C9F86FCEF766AB25FE1C7D758AB75 /* CTInboxBaseMessageCell.m in Sources */ = {isa = PBXBuildFile; fileRef = 4E0BE61455AEB434673F99B0B7D30EFF /* CTInboxBaseMessageCell.m */; };
 		33F86FAB918B148A63A1575667F9B570 /* CFNetwork.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ACED0CAC917CE6072D247179FADEFA37 /* CFNetwork.framework */; };
-		33FD42900DFFDF929E11FB24135F7D31 /* GULReachabilityChecker.m in Sources */ = {isa = PBXBuildFile; fileRef = DF0E987A139B78C7B92480381B799F31 /* GULReachabilityChecker.m */; };
-		3440C72F4A9193E764BF994E669A39DB /* FirebaseMessaging-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 398A3459F964EB3F2A862E0D4ED3C8B2 /* FirebaseMessaging-dummy.m */; };
-		34A88FD2A24C6D425EECA780D51ACC2D /* CTPreferences.h in Headers */ = {isa = PBXBuildFile; fileRef = 9F902DAE4A28172F9BD7D2DA2075C437 /* CTPreferences.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		34C44C881DA42E777631E18B717475A9 /* CTInboxMessageActionView.h in Headers */ = {isa = PBXBuildFile; fileRef = 37052EF03CE624C9FC2D17CB43C2E8A7 /* CTInboxMessageActionView.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		34EB0DF2DBEF0EDB954E878E0A142F8E /* FIRInstallationsAuthTokenResultInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 1AC6F18356BD79350CCC1A8CADBAF5C1 /* FIRInstallationsAuthTokenResultInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		352CFC99C52639425DDC19CF4756F5AE /* FIRStackFrame_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = F17BBBAA46C5E73B8852F599E280BC8D /* FIRStackFrame_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		352DAB5E38C887907A9D52DD37EFCABB /* CTVideoThumbnailGenerator.m in Sources */ = {isa = PBXBuildFile; fileRef = 2A240A2C201EB5724A7B1079CEC978AC /* CTVideoThumbnailGenerator.m */; };
-		352FFD6786741F145C9B9C8D4BE94A6F /* PagingMenuView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0C8E84F5AC012914ABC92DE689919448 /* PagingMenuView.swift */; };
-		353B5A0FBCA6355EC81BB0B119AAF7E9 /* CleverTapInboxStyleConfig.m in Sources */ = {isa = PBXBuildFile; fileRef = 719CE6BEB5A7CE0F73FD19932D929736 /* CleverTapInboxStyleConfig.m */; };
-		355CCF68660AAE34D5B46463F4655139 /* PageViewControllerDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = 69667D18EC612E71AB1F6A12C0C21778 /* PageViewControllerDelegate.swift */; };
-		357067F1B68FD3AE446F7FD07DBFABDB /* FIRCLSUserLogging.m in Sources */ = {isa = PBXBuildFile; fileRef = AB869C87291579008E99BAF00D8BEA56 /* FIRCLSUserLogging.m */; };
-		359240A6CC6FB0C4BCD065DF41F0FC98 /* SwipeDirection.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8B1F42A93F025F7076545B461EB4145E /* SwipeDirection.swift */; };
-		359BAA441CD6114ED2853E0701A314A3 /* GDTCORStorageEventSelector.h in Headers */ = {isa = PBXBuildFile; fileRef = 44385940B84797CBECB92A6A82D9A818 /* GDTCORStorageEventSelector.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		362D9CF73A3A08D532DC85986014DC70 /* PagingMenuItemSize.swift in Sources */ = {isa = PBXBuildFile; fileRef = C46D837C0E9A07F1DC29CBB9A06517F3 /* PagingMenuItemSize.swift */; };
-		367230AA9069FDDD910A939AA9E4E351 /* FIRDiagnosticsData.m in Sources */ = {isa = PBXBuildFile; fileRef = 14A0154549BC6B9D723CF3CD21AD757E /* FIRDiagnosticsData.m */; };
-		3695775058E573DF62768CE95D4B851C /* CTCarouselImageView.m in Sources */ = {isa = PBXBuildFile; fileRef = 9ED58F6564654DBCFD4CB1FD7AF4B244 /* CTCarouselImageView.m */; };
-		36960A68C549087FC10C93560B74F632 /* FBLPromise+Wrap.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = 4B1636178F27590E832F7380FE0820AA /* FBLPromise+Wrap.h */; };
-		36A3D1824555484715A06000C01491B1 /* SDWeakProxy.h in Headers */ = {isa = PBXBuildFile; fileRef = 9692C8A23221BF6AA4A81656705FA829 /* SDWeakProxy.h */; settings = {ATTRIBUTES = (Private, ); }; };
-		3728C8335C98498C670174ECEEA344B1 /* warningIconLight@3x.png in Resources */ = {isa = PBXBuildFile; fileRef = 57F2269C07C2D4E6C56C6C45E7356B9D /* warningIconLight@3x.png */; };
-		3748C8AFCE3AEE0E942333FEDFAAAC9E /* GULReachabilityChecker.h in Headers */ = {isa = PBXBuildFile; fileRef = BA0DF4012A80B1DCC3B101C6A9A0963C /* GULReachabilityChecker.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		3765CB20A1673F50A9DA45FDE0D1D5A9 /* successIconLight.png in Resources */ = {isa = PBXBuildFile; fileRef = 6C9810BEA45EF4B270DA3A935D3EFD5E /* successIconLight.png */; };
-		376803E5C1039566154740932DDE7E6F /* FIRCLSUserLogging.h in Headers */ = {isa = PBXBuildFile; fileRef = 6C715D8139473324EAF522E1DFCDD168 /* FIRCLSUserLogging.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		37A9CDD19B545D3308AEFC1316ABB61F /* warningIconSubtle@3x.png in Resources */ = {isa = PBXBuildFile; fileRef = 14299BD462CF9AE53F47C742D3CD9333 /* warningIconSubtle@3x.png */; };
-		383951C9416B1EF89209B57573F65F32 /* CTUtils.h in Headers */ = {isa = PBXBuildFile; fileRef = 5D7661D27B5533D9866E33519FB723E3 /* CTUtils.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		383A0A1ABD9BF0155904B59F4BA7769A /* CTLocalDataStore.h in Headers */ = {isa = PBXBuildFile; fileRef = D6A896B929B4E1199DDEB688197E415A /* CTLocalDataStore.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		38522770F5ED60FEB8E483AE49BC31FE /* CTEventBuilder.h in Headers */ = {isa = PBXBuildFile; fileRef = 0243E4B8C5E44A37475382041C51D033 /* CTEventBuilder.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		38BF33103E487F8F978B2AB96C5F7BE9 /* FIRCLSDataCollectionToken.h in Headers */ = {isa = PBXBuildFile; fileRef = 37395FE61CFBF0FA975183FEBE95C450 /* FIRCLSDataCollectionToken.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		38F61A96B7DAB7ED440D377B646220E5 /* TopBottomAnimation.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1256ABC3DE99710E71FDF92D801E9391 /* TopBottomAnimation.swift */; };
-		3A03A52C2494733F11E440BD8D610DD6 /* CTSwipeView.h in Headers */ = {isa = PBXBuildFile; fileRef = A36FEC3990DB96B50E820C3095A6D56C /* CTSwipeView.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		3A456B91C5A9ADA481FAC5A59B9E8F6D /* successIconLight@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = F9FB0BC3721AB0B00DC540D85FADD119 /* successIconLight@2x.png */; };
-		3A544D7B6551FB6C3A40E26B12785B95 /* FIRComponentContainer.h in Headers */ = {isa = PBXBuildFile; fileRef = 15363AA9CDA2D555A3610017BC9EB631 /* FIRComponentContainer.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		3A9A8E8326A3CB79E263C26692FB145D /* FIROptions.m in Sources */ = {isa = PBXBuildFile; fileRef = 4E4D5D90E76C74F2C708058345FD047E /* FIROptions.m */; };
-		3AA0FDC8575CEF669DDD9BA4AC903201 /* MarginAdjustable+Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = DD5EDAB4513FBA0EA2891E3201B6E26D /* MarginAdjustable+Extensions.swift */; };
-		3AAC8217EF49195232361BBA77441ADE /* UIImageView+HighlightedWebCache.m in Sources */ = {isa = PBXBuildFile; fileRef = 8A469C9723F7490FE5E742E00D883686 /* UIImageView+HighlightedWebCache.m */; };
-		3B255CCDA9EC357B45A7FE0BDAC67BD3 /* MarginAdjustable.swift in Sources */ = {isa = PBXBuildFile; fileRef = B664672DF9AAEA47420CBE49AF2463D4 /* MarginAdjustable.swift */; };
-		3B4E8B854038111049965A0BB303DC19 /* Identifiable.swift in Sources */ = {isa = PBXBuildFile; fileRef = ED09012BDCA76AF2BA49EBF5D2B89E30 /* Identifiable.swift */; };
-		3B5737DF55C9C56772AA907D1F74C8E0 /* FIRCLSInstallIdentifierModel.m in Sources */ = {isa = PBXBuildFile; fileRef = 23F6AB44A94D4C239126538D3A8F6006 /* FIRCLSInstallIdentifierModel.m */; };
-		3B66D545ADAB80AD16FE297E71585050 /* FIRConfiguration.h in Headers */ = {isa = PBXBuildFile; fileRef = D1CDA44F925BA90B928EED7A147D9D50 /* FIRConfiguration.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		3BAD465093BAD15FB70B74EA86388B3E /* FIRCLSFeatures.h in Headers */ = {isa = PBXBuildFile; fileRef = 016B516493389158C66D8E36094D25A1 /* FIRCLSFeatures.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		3BD1B57A5E811AC65941EAAF908C89D5 /* Animator.swift in Sources */ = {isa = PBXBuildFile; fileRef = 324D942F88994301DBEFD80991F1C549 /* Animator.swift */; };
-		3C09E2DADAAAE3AE9A238D20DEBAF52A /* GULNetworkInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 41DD0F8FF072A5A436B61567F9493612 /* GULNetworkInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		3C730938D46EFDD5000EC8D9632CE44C /* IQNSArray+Sort.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0B8054FD53D362CEEE988C629D5E0FF3 /* IQNSArray+Sort.swift */; };
-		3CD03E13DFBBAE610011275C4FD759C0 /* FBLPromise+Validate.h in Headers */ = {isa = PBXBuildFile; fileRef = 4699A6BBB86F5F56CACEB8AAB80DF09E /* FBLPromise+Validate.h */; };
-		3D20E883E18C3BA81F88F7BB04D25B3D /* FBLPromise+Await.h in Headers */ = {isa = PBXBuildFile; fileRef = 917E0E3B4EABA4BC5D66B3716EF570AF /* FBLPromise+Await.h */; };
-		3D440ECB290FA4541DDFE3BA29845C9D /* CleverTap+ProductConfig.h in Headers */ = {isa = PBXBuildFile; fileRef = 877C5A5FEEFE802A183B3B7974721719 /* CleverTap+ProductConfig.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		3DAB9B8ACA346601215FD9821E78A091 /* QuartzCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 838750511E8B5BB64F45DC607A98C2F4 /* QuartzCore.framework */; };
-		3DACAEBF059FD9C83D065510502F73D2 /* UIImage+MemoryCacheCost.m in Sources */ = {isa = PBXBuildFile; fileRef = 9F02746315F1386A921B85E0DD2BE3BE /* UIImage+MemoryCacheCost.m */; };
-		3DB91C587EAA9EBBA80732CC0A8A7554 /* FIRCLSOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = 5727434255A7500465236A155BE8CF9E /* FIRCLSOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		3DD19434AD362B3068A93DDDA451C9B0 /* SDImageCachesManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 7FDFF3BF94A1E41BB053B847BCCF5AE2 /* SDImageCachesManager.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		3E77D113CEB479C910AA66A8E79B69BA /* FIRCLSURLBuilder.h in Headers */ = {isa = PBXBuildFile; fileRef = 0A6FB2B46D409A82C6DA37ED976F44B4 /* FIRCLSURLBuilder.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		3463A7F424D5405C4FA5B2C02075AB2D /* FIRComponentContainer.h in Headers */ = {isa = PBXBuildFile; fileRef = D76CC009E1C55B9BE4D8B57695ACB977 /* FIRComponentContainer.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		34A88FD2A24C6D425EECA780D51ACC2D /* CTPreferences.h in Headers */ = {isa = PBXBuildFile; fileRef = 3DD325BEC0B36E64359F1D37FA58018A /* CTPreferences.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		34C39BDBFE7A2CC585787F5AFCA39FDE /* IQUIView+IQKeyboardToolbar.swift in Sources */ = {isa = PBXBuildFile; fileRef = E9AA3CFBBDE1AF54675E3F3A991DF582 /* IQUIView+IQKeyboardToolbar.swift */; };
+		34C44C881DA42E777631E18B717475A9 /* CTInboxMessageActionView.h in Headers */ = {isa = PBXBuildFile; fileRef = ACA65376FF075BA0B56D5D290F3F13E9 /* CTInboxMessageActionView.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		352DAB5E38C887907A9D52DD37EFCABB /* CTVideoThumbnailGenerator.m in Sources */ = {isa = PBXBuildFile; fileRef = 59752C7F2EFD0A278A396686B9E086AA /* CTVideoThumbnailGenerator.m */; };
+		352FFD6786741F145C9B9C8D4BE94A6F /* PagingMenuView.swift in Sources */ = {isa = PBXBuildFile; fileRef = D90D1BA869EE55E72DF9AE07781DA40D /* PagingMenuView.swift */; };
+		353B5A0FBCA6355EC81BB0B119AAF7E9 /* CleverTapInboxStyleConfig.m in Sources */ = {isa = PBXBuildFile; fileRef = 1EB1BE857FD93E9ECD857C021C28B7F0 /* CleverTapInboxStyleConfig.m */; };
+		355CCF68660AAE34D5B46463F4655139 /* PageViewControllerDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = 18D517B442F61ED4B06E857E8E93E899 /* PageViewControllerDelegate.swift */; };
+		359240A6CC6FB0C4BCD065DF41F0FC98 /* SwipeDirection.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81C32EB162B887200E3435F4655794E7 /* SwipeDirection.swift */; };
+		359AD31A646C35DF6B9CCA1ECAAC6A95 /* GDTCCTNanopbHelpers.m in Sources */ = {isa = PBXBuildFile; fileRef = 18C62BAC207A85F82B6941F737B372A4 /* GDTCCTNanopbHelpers.m */; };
+		35F1AA8A6453C1654382D05A356FA1A4 /* SDWebImageDownloaderOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = CA58C08AD34B9E83B33D4235F8CDD612 /* SDWebImageDownloaderOperation.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		360FFA72A8AA557EC4C5BD2952497FCF /* FIRInstallationsItem+RegisterInstallationAPI.h in Headers */ = {isa = PBXBuildFile; fileRef = 14C7D79312B17BF119150D041531E333 /* FIRInstallationsItem+RegisterInstallationAPI.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		362D9CF73A3A08D532DC85986014DC70 /* PagingMenuItemSize.swift in Sources */ = {isa = PBXBuildFile; fileRef = E60043E3743DC02B9CEA6A2BCD6783E6 /* PagingMenuItemSize.swift */; };
+		3682ECEC7FE4D45C51F1A43417B47CBC /* FIRCLSRecordBase.m in Sources */ = {isa = PBXBuildFile; fileRef = AF62F773E2ABCA7554D0DEF7545929B4 /* FIRCLSRecordBase.m */; };
+		3695775058E573DF62768CE95D4B851C /* CTCarouselImageView.m in Sources */ = {isa = PBXBuildFile; fileRef = 87BF32056B130A2164EA410EB6CEDB89 /* CTCarouselImageView.m */; };
+		3712DD614FE2E64260709204D2BC77D4 /* GDTCORPlatform.m in Sources */ = {isa = PBXBuildFile; fileRef = A43F9351E9C47590B5DF954F3C5E1725 /* GDTCORPlatform.m */; };
+		373147F46CDC3E372A06B590DCED9FBC /* FIRAnalyticsConfiguration.m in Sources */ = {isa = PBXBuildFile; fileRef = E6BE83CFCE0F7A4AB35123BC2D0F813B /* FIRAnalyticsConfiguration.m */; };
+		373791498F928FEAA36D115B3099DA3D /* GDTCORReachability.m in Sources */ = {isa = PBXBuildFile; fileRef = 29B195C5CC4D32A049CE478854EC49A9 /* GDTCORReachability.m */; };
+		37AA59E29AF46485B01995BFC6B23C20 /* FIRMessagingTokenInfo.h in Headers */ = {isa = PBXBuildFile; fileRef = D631E522FA7225175474F78AD8CC4CB3 /* FIRMessagingTokenInfo.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		37ADD068D935DE0B5D7F763A45B02485 /* UIButton+WebCache.m in Sources */ = {isa = PBXBuildFile; fileRef = F8EBCCF651724976E05B1F87CD4F90A4 /* UIButton+WebCache.m */; };
+		383951C9416B1EF89209B57573F65F32 /* CTUtils.h in Headers */ = {isa = PBXBuildFile; fileRef = 7B75BF0F03E3798DBA62A4B46B2E83F9 /* CTUtils.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		383A0A1ABD9BF0155904B59F4BA7769A /* CTLocalDataStore.h in Headers */ = {isa = PBXBuildFile; fileRef = 8666B444C8BE8A77C385E2A83A6427E0 /* CTLocalDataStore.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		38522770F5ED60FEB8E483AE49BC31FE /* CTEventBuilder.h in Headers */ = {isa = PBXBuildFile; fileRef = 477D028BCF1A258A3AA0A7A2259A5DFA /* CTEventBuilder.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		38628DE14E1F379BB43ED610C0800965 /* FIRCLSThreadArrayOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = 9E10F9480FB9A06F6745A36A4DB58380 /* FIRCLSThreadArrayOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		3999CE951D693C5C8617205992158B1E /* UIImage+Metadata.h in Headers */ = {isa = PBXBuildFile; fileRef = BBCFC2FA53F5D7599F000308309A1E7C /* UIImage+Metadata.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		39E199EDD9F217683BF8534DA025C0DF /* FIRCLSSymbolResolver.h in Headers */ = {isa = PBXBuildFile; fileRef = 7B89A1C90EA3B4A508C1263744B58035 /* FIRCLSSymbolResolver.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		3A03A52C2494733F11E440BD8D610DD6 /* CTSwipeView.h in Headers */ = {isa = PBXBuildFile; fileRef = DBA69AB4DC238003B15B502AEBFBD56B /* CTSwipeView.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		3A7B58A017C892073AF1B0104A85B199 /* GoogleDataTransport-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 63608B743866BBC20999279228C08F4F /* GoogleDataTransport-dummy.m */; };
+		3A8E633D3C88509F6FF40FDB6BE1B609 /* FIRMessagingAPNSInfo.h in Headers */ = {isa = PBXBuildFile; fileRef = 9E7F1C2ED4DACAE60D6A0C567621179E /* FIRMessagingAPNSInfo.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		3A8F213D5315D582C054E3B9C6950D21 /* GDTCCTUploader.m in Sources */ = {isa = PBXBuildFile; fileRef = 20F7A70C7B17835EC9792A2A2599997C /* GDTCCTUploader.m */; };
+		3B15A93DF7DB1A3C7897C7312E4A57C8 /* FBLPromise+Testing.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = 27B50D8766515747D9635EB33CDB8CDF /* FBLPromise+Testing.h */; };
+		3B18739ECA6F3986AC2A2BD0DC54DF6E /* FIRMessagingInterop.h in Headers */ = {isa = PBXBuildFile; fileRef = 9515D774425CFBF73EBE142666EB89CD /* FIRMessagingInterop.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		3B35A6B1899C93E9D68AD8D50868BC8C /* UIView+WebCacheOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = 70B1A5237C3912D676A52F61570BA198 /* UIView+WebCacheOperation.m */; };
+		3C8AB6C0E8D260F04DA1DC6BD30B8AEE /* FIRCLSProcess.c in Sources */ = {isa = PBXBuildFile; fileRef = 59EA141399384AEAC894DAB13B0F6F55 /* FIRCLSProcess.c */; };
+		3D111CA64D15918415A4C5FD4243130E /* FirebaseCrashlytics.h in Headers */ = {isa = PBXBuildFile; fileRef = 2406AB64850D320660C8A9D88ECFFF69 /* FirebaseCrashlytics.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		3D440ECB290FA4541DDFE3BA29845C9D /* CleverTap+ProductConfig.h in Headers */ = {isa = PBXBuildFile; fileRef = 832FB13474AC09FBA89ACF4DF632BB34 /* CleverTap+ProductConfig.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		3D9380D9ADB719A0E8F7A68021172C51 /* MessageView.xib in Resources */ = {isa = PBXBuildFile; fileRef = 5998C2E65EB243AC008B30FB9E66E1D5 /* MessageView.xib */; };
+		3D9CB98EAB964DBA9D7099F4919A1C95 /* FIROptionsInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 18D13EE67EF6BAFCB2797EA55CB33541 /* FIROptionsInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		3DBF5BFC16AA60D5A4917C3FC367A467 /* GULHeartbeatDateStorage.h in Headers */ = {isa = PBXBuildFile; fileRef = 0652AC1445390A74E3B7F76EF2E711DD /* GULHeartbeatDateStorage.h */; settings = {ATTRIBUTES = (Public, ); }; };
 		3EBFA96E13B47ECED0B9164D8FE19ABE /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
-		3F229C534E86BFDABC301745F76781EC /* GDTCOREvent_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = C5DB1C51337BCC893796386425FE6125 /* GDTCOREvent_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		3F30DF9AAA9FE86DE42B12688D62F44B /* CTInboxIconMessageCell~port.xib in Resources */ = {isa = PBXBuildFile; fileRef = 886CF9E5C57438EB2106F241D558079D /* CTInboxIconMessageCell~port.xib */; };
-		3F4329E53B9D1852BD7C9438A13DA65F /* FIRCLSDwarfUnwind.h in Headers */ = {isa = PBXBuildFile; fileRef = 28857D698E78757FD553C713327FF1BD /* FIRCLSDwarfUnwind.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		3F626CD1CDCD9FA1580CFCDFEB8C1F39 /* FIRMessagingCheckinService.m in Sources */ = {isa = PBXBuildFile; fileRef = A11D908D175E3FC81E1F5B7F01245C4E /* FIRMessagingCheckinService.m */; };
-		3FAFF09EBE53F88BE2ADBEF321E11239 /* FIRCLSProcess.h in Headers */ = {isa = PBXBuildFile; fileRef = 7568F7FE4F07602CA9A872F9363899C4 /* FIRCLSProcess.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		40102A6417497FEE6E2C78F644D8145B /* CTLogger.m in Sources */ = {isa = PBXBuildFile; fileRef = 8B990EA3DDD0D58C9F3EB3CFD921D68B /* CTLogger.m */; };
-		403A6B5EBD57A157D5869A90AE2BC76B /* UIImage+Transform.h in Headers */ = {isa = PBXBuildFile; fileRef = F08567D0E83DC1661A873F1CB6DF7932 /* UIImage+Transform.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		4045C06BB1657EBCC71D8E34991A3152 /* FIRMessagingRmqManager.m in Sources */ = {isa = PBXBuildFile; fileRef = 02C83CDF1FFE1D5CACA77878723C29E0 /* FIRMessagingRmqManager.m */; };
-		404F3D0187DCF8E38F0B33E0B3EC9B05 /* CTInboxController.h in Headers */ = {isa = PBXBuildFile; fileRef = 348C2ED69F01A72ABD8627B905B583AE /* CTInboxController.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		407030D422D0877349252753D2AA0AF7 /* UIImage+Metadata.m in Sources */ = {isa = PBXBuildFile; fileRef = CC26A8E447AAB7CF51FEF426E335CB3F /* UIImage+Metadata.m */; };
-		40FDCFE88F4BAAEE59F1606CE66F373E /* CornerRoundingView.swift in Sources */ = {isa = PBXBuildFile; fileRef = F14309300ECA326DB7E64023954D7586 /* CornerRoundingView.swift */; };
-		4104F050D2CA24C95BC35A680048BA18 /* CTProductConfigController.m in Sources */ = {isa = PBXBuildFile; fileRef = 9165DB006FDEABE5B7F62C3B6C24D65F /* CTProductConfigController.m */; };
-		415FFB2282D4B1569F4C2B545D02A266 /* FIRCLSAnalyticsManager.m in Sources */ = {isa = PBXBuildFile; fileRef = 4EE0F503DFEC30FB0A82D1E990D1C7D9 /* FIRCLSAnalyticsManager.m */; };
-		41A105A1FE54CDBF8A0D219D7FAAABCC /* FIRMessagingExtensionHelper.m in Sources */ = {isa = PBXBuildFile; fileRef = 7F54A22CBA30E804ABDBB1B07783A24A /* FIRMessagingExtensionHelper.m */; };
-		42015AFB5EBD72021DB58887C4ACE1AA /* UIEdgeInsets+Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = 17B0FBFE565BF9282BC15F8E77A34CEB /* UIEdgeInsets+Extensions.swift */; };
-		4221AD42163A2508C2AFABD6FD6FBF41 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
-		428C37F95279CE3815B1D57E7BBB1C27 /* GULMutableDictionary.m in Sources */ = {isa = PBXBuildFile; fileRef = DA2F9D2985A2956174705BDDCB1B872C /* GULMutableDictionary.m */; };
-		4290283791CDD340B36C6726BAC2CC90 /* CTCoverImageViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 2A29105CBDDC6799339760C16C17EF36 /* CTCoverImageViewController.m */; };
-		42A3F77C043A99B5571CF45F89F1FBBA /* CTInboxBaseMessageCell.h in Headers */ = {isa = PBXBuildFile; fileRef = 321C4E2EDC0B481BC8B678BA00E666F3 /* CTInboxBaseMessageCell.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		42A8FBF0E5BD42CF05154B08B4EB01B2 /* NSURLSession+GULPromises.h in Headers */ = {isa = PBXBuildFile; fileRef = 18451D9F8E8F33AC383644EF757B22BF /* NSURLSession+GULPromises.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		42F38EDB8D75E44B4D5C37BBA8A85E96 /* CTHalfInterstitialImageViewController~iphoneport.xib in Resources */ = {isa = PBXBuildFile; fileRef = 8BB27E0FAEF358C73C44E246A95F64E9 /* CTHalfInterstitialImageViewController~iphoneport.xib */; };
-		436AFD2CBA4582805A4CF00EFCAA7B4D /* UIImageView+HighlightedWebCache.h in Headers */ = {isa = PBXBuildFile; fileRef = 0A96216375C22E0634AD2031EC6466A0 /* UIImageView+HighlightedWebCache.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		43959C0F59671CF3650E26FE44E86A26 /* FIRMessagingExtensionHelper.h in Headers */ = {isa = PBXBuildFile; fileRef = C3954D0B6904DE628FC5CA3EA946EDB4 /* FIRMessagingExtensionHelper.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		43C2CA6E171B897785FE86268FE3F94D /* firebasecore.nanopb.c in Sources */ = {isa = PBXBuildFile; fileRef = C968FF2570A9B9B1003219C89BEB7616 /* firebasecore.nanopb.c */; };
-		43EFFD6DFFE27FB7A6B267713286B39A /* SDWebImageManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 755180C0315E923E5652A4F2576DD5A3 /* SDWebImageManager.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		444E5A8665A173C3B0609C81041948B0 /* ScrollingFollowView-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = BD7CC3D4767C35B2E2A928F17EF10F05 /* ScrollingFollowView-dummy.m */; };
-		448F32011A59FC1956C4A34D81BAF7FA /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
-		44E3703CD58106D1091140294186CB63 /* FIRComponent.h in Headers */ = {isa = PBXBuildFile; fileRef = 55A0DE0A80D35402C4F28849F2E4DC92 /* FIRComponent.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		4505B14B0F83672851D6DAC0A1756A1A /* infoIconLight@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = 2A5DEF72FA299A00A8A010DD4A04F737 /* infoIconLight@2x.png */; };
-		4543CF3D614018AF1B8A2C8877AC393C /* CTHeaderViewController~ipad.xib in Resources */ = {isa = PBXBuildFile; fileRef = 0C05F0670F7C2D8BD68C978389E33058 /* CTHeaderViewController~ipad.xib */; };
-		4550F29B3061E300F5614F37D1EDA89B /* FirebaseInstallations-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 664817FD8F5F848F85464D9AD2E37123 /* FirebaseInstallations-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		4583C9D7A6468C758CB500173938C00F /* NSData+ImageContentType.h in Headers */ = {isa = PBXBuildFile; fileRef = 9F59C1668C1D78A23B2369824B939414 /* NSData+ImageContentType.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		458AAE7F3E8C4CE55EA11C4E110D98DB /* FIRMessagingCheckinPreferences.m in Sources */ = {isa = PBXBuildFile; fileRef = 216F961413BA124B8A75C8DD36349352 /* FIRMessagingCheckinPreferences.m */; };
-		458CEFB863D105C46592E18A636CB099 /* FBLPromise+Catch.h in Headers */ = {isa = PBXBuildFile; fileRef = 7C13B5F523FFAA9CF31890D5AC33277A /* FBLPromise+Catch.h */; };
-		45AA9765A1A61F9615A543B11BE838F9 /* FIRComponent.h in Headers */ = {isa = PBXBuildFile; fileRef = 678C8641BDE5A8270185739D7B020641 /* FIRComponent.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		45B0EBCFF52F94FB0D9327B64F2F4D3F /* FIRInstallationsSingleOperationPromiseCache.h in Headers */ = {isa = PBXBuildFile; fileRef = D51BB0685B2ABC7190E64CD9893D3BD1 /* FIRInstallationsSingleOperationPromiseCache.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		45EEA0A9FEB680603C90A97A7815B285 /* FIRBundleUtil.h in Headers */ = {isa = PBXBuildFile; fileRef = 0F1A0DE016A8B297595285D0F5470758 /* FIRBundleUtil.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		45F18822DBEA6AA64873AFF67D091A4D /* FIRInstallationsLogger.m in Sources */ = {isa = PBXBuildFile; fileRef = 4FAE11DB7B7FF4F5F841088051D76E80 /* FIRInstallationsLogger.m */; };
-		4634BA717BFCE522E5B42304C6A78B5D /* ParameterEncoding.swift in Sources */ = {isa = PBXBuildFile; fileRef = 5682CBAD9E6B6533E38D36E50A44299E /* ParameterEncoding.swift */; };
-		46867832FC086B70B8EE19D8DBD42721 /* FIRCLSManagerData.h in Headers */ = {isa = PBXBuildFile; fileRef = 2AA1C2AD577F2E8BBD17F90B554E95C1 /* FIRCLSManagerData.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		468BF083377C383C8EB2B2363795D941 /* infoIconLight@3x.png in Resources */ = {isa = PBXBuildFile; fileRef = C205FCB6C3CDFA83FAC19623D3C217B2 /* infoIconLight@3x.png */; };
-		46B28C9AA5B98C199C80418D8CA98668 /* CTFooterViewController~iphoneport.xib in Resources */ = {isa = PBXBuildFile; fileRef = BCB9FED070EBA3AE0A9A26634E70DF3D /* CTFooterViewController~iphoneport.xib */; };
-		46D00F9FC6EF7E4D73A8DC9A2FDC7A7C /* CTDismissButton.m in Sources */ = {isa = PBXBuildFile; fileRef = 8C8073138FD1BE6B579712D8DB109407 /* CTDismissButton.m */; };
-		46EA2E491D462CA917EAFC183B3EF2B7 /* GDTCORFlatFileStorage+Promises.h in Headers */ = {isa = PBXBuildFile; fileRef = 889E27D4D711F55471A5C798809CD161 /* GDTCORFlatFileStorage+Promises.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		471611F482CDC15BF464E3BA9CB83968 /* Notifications.swift in Sources */ = {isa = PBXBuildFile; fileRef = C946F86246FA4CD309365664A5E15AB1 /* Notifications.swift */; };
-		472929AF36F19DC790DE853730F19076 /* CTKnownProfileFields.m in Sources */ = {isa = PBXBuildFile; fileRef = 84D7B50AC994E625AD273ECC9465472D /* CTKnownProfileFields.m */; };
-		4741E06C24F806063F34B94C4FA650FC /* SDWebImageDownloaderRequestModifier.h in Headers */ = {isa = PBXBuildFile; fileRef = 5F518A7682685E5A6A70B34D30DAA51F /* SDWebImageDownloaderRequestModifier.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		4758FB97CB203A67AC9E03ACB13DF7E9 /* FIRCLSFileManager.h in Headers */ = {isa = PBXBuildFile; fileRef = F6CCB830B848A97FC3CF7B0C805B885C /* FIRCLSFileManager.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		4762D0A3217D60D92719701EC1C7FD0D /* UIView+WebCacheOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = 2B114CA94B5F791F4184389E70D0CC2B /* UIView+WebCacheOperation.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		47A59DF034EC67CEC685DB274E57D2FC /* CTEventBuilder.m in Sources */ = {isa = PBXBuildFile; fileRef = F6CC46F4158AD630047081D6F004E07F /* CTEventBuilder.m */; };
-		47D0D99F5EFD8FCA9BD8CC84DCA46ADD /* FIRCLSUserDefaults.h in Headers */ = {isa = PBXBuildFile; fileRef = 88EA3748DF0ECF35456D56123BD1059B /* FIRCLSUserDefaults.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		484B1A0130DBC69FF158F9F80CEE202F /* SDWebImage.h in Headers */ = {isa = PBXBuildFile; fileRef = 387B0559982BAC72C5860C97D84F2B8C /* SDWebImage.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		485128B6E3BA6F3AB82ECEEFC53470B3 /* FirebaseCrashlytics-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 89FA258287F0704599FF690DA1AE180C /* FirebaseCrashlytics-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		485DED0B0AD49B8218A57C803D850D14 /* FIRCLSHandler.h in Headers */ = {isa = PBXBuildFile; fileRef = 3497A89EC94BD4B72659A486D59C79D1 /* FIRCLSHandler.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		486ACC777D201D4B360D44EEC3BADB78 /* PagingIndicatorLayoutAttributes.swift in Sources */ = {isa = PBXBuildFile; fileRef = D6D4544A4AF61D8A2B889910E7D62B45 /* PagingIndicatorLayoutAttributes.swift */; };
-		48F83B970249BC1A5DD83C70C9C04AFF /* successIconSubtle.png in Resources */ = {isa = PBXBuildFile; fileRef = 993E60C6D9CA6206CE06289C4899B641 /* successIconSubtle.png */; };
-		4A550082F80F70049D1C86432E795025 /* FIRCLSNotificationManager.h in Headers */ = {isa = PBXBuildFile; fileRef = F467FC7BE95BECA00A57FED5303DDFAA /* FIRCLSNotificationManager.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		4A8302D4217225D733A57186901C75FE /* FloatingPanel-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = E605C334687A21BC2A128D763C688DE1 /* FloatingPanel-dummy.m */; };
-		4B4FB7F91DD4BCC5810E858A55FA3EC9 /* SDWebImageDownloader.m in Sources */ = {isa = PBXBuildFile; fileRef = CA1CE06F528FAF5306DC64C769AC38DC /* SDWebImageDownloader.m */; };
-		4BED578A718C912B74C420BD4EB831D2 /* PagerTabStripError.swift in Sources */ = {isa = PBXBuildFile; fileRef = 27916AAFE54B43E36C7D40691D9DDAE7 /* PagerTabStripError.swift */; };
-		4C034C2E0BB08AB6504BC382E95BEE19 /* youtube-ios-player-helper-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 5DC9064FB2DDAF05EC6E92E8FD019B94 /* youtube-ios-player-helper-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		4C35CDA9DCBD1B0335C34661C939C45A /* GULHeartbeatDateStorageUserDefaults.m in Sources */ = {isa = PBXBuildFile; fileRef = EA5C706367B65467F6D1BE1AE32AA2ED /* GULHeartbeatDateStorageUserDefaults.m */; };
-		4C97A5482C42336B848F01BEA30EDBFD /* GDTCORUploadCoordinator.h in Headers */ = {isa = PBXBuildFile; fileRef = 6255482EC00536C98D20A09A8B6B45FD /* GDTCORUploadCoordinator.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		4C99231B90F4045C1AEF3EF5779B7787 /* SDInternalMacros.h in Headers */ = {isa = PBXBuildFile; fileRef = EF09F0E150492AD999579D2F32372115 /* SDInternalMacros.h */; settings = {ATTRIBUTES = (Private, ); }; };
-		4CD0F7DAEECE00723926A117424CCBAF /* CTDeviceInfo.h in Headers */ = {isa = PBXBuildFile; fileRef = 671EE3F9D5C02E2464E3FAF1F6D1B777 /* CTDeviceInfo.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		4D05A3C2AC3151DA8B382D5A01D9A3D9 /* Logger.swift in Sources */ = {isa = PBXBuildFile; fileRef = D99698AE74FE7B4168A28BE6F16418F8 /* Logger.swift */; };
-		4D5C42CA295C8D267E66102ACBC81E55 /* IQUIView+IQKeyboardToolbar.swift in Sources */ = {isa = PBXBuildFile; fileRef = 756F769010C936D6B55A0773AADC2E82 /* IQUIView+IQKeyboardToolbar.swift */; };
-		4DC120110112869C45B25CB997BC8FD0 /* SDImageCoderHelper.h in Headers */ = {isa = PBXBuildFile; fileRef = AB298F77943B429A4B74693E34040AA3 /* SDImageCoderHelper.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		4DE09CBE104350D330F5F5603A1FE00D /* CleverTapEventDetail.h in Headers */ = {isa = PBXBuildFile; fileRef = C68612371C3345685BE0D3657382192C /* CleverTapEventDetail.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		4E0096C060DDB1026C7C404D172FD5B8 /* GULApplication.h in Headers */ = {isa = PBXBuildFile; fileRef = E4C123308546C3ACE890F20B448B1C81 /* GULApplication.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		4E11E85EC872BE67C2AC0D4534789B42 /* SDWebImageCacheKeyFilter.h in Headers */ = {isa = PBXBuildFile; fileRef = 335F088E79987EEA6D68186FDB791FC9 /* SDWebImageCacheKeyFilter.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		4E59B6B01774335307C707647FB0FC30 /* ic_play@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = A3BF925A217EFA01ED33C93857697B46 /* ic_play@2x.png */; };
-		4E901168D6178165B8B7430C3B9115F3 /* CTInboxSimpleMessageCell.m in Sources */ = {isa = PBXBuildFile; fileRef = F90777A2B706BDF9B6AC2E27AFCE65CD /* CTInboxSimpleMessageCell.m */; };
-		4EA4C9BF1B527E4C4E68435805B2B30C /* SDAnimatedImageView.m in Sources */ = {isa = PBXBuildFile; fileRef = C01E39F6A9F1F8B96313AA88D8B66336 /* SDAnimatedImageView.m */; };
-		4ED5358875030C4DC39865E4AB0796C8 /* FIRHeartbeatInfo.h in Headers */ = {isa = PBXBuildFile; fileRef = 5089C8E81AE751D889F4D4D67AA2DAA5 /* FIRHeartbeatInfo.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		4F708FB40B1432842B08EC68A1E8351A /* FIRCLSInternalReport.h in Headers */ = {isa = PBXBuildFile; fileRef = AE974509C2D33D80776CF805E088CD72 /* FIRCLSInternalReport.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		4FCA14D0DEE6E0946CD2725206C2C79C /* SDWebImage-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 0897BC433DC4D731856A853AB40E6499 /* SDWebImage-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		4FE0108CFAE4B77C4041D5C1A4C45B8D /* FirebaseInstallations.h in Headers */ = {isa = PBXBuildFile; fileRef = D7641BAF92288D74962C3D96BF381580 /* FirebaseInstallations.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		500E6E644051237F5616A281B1C639E4 /* FIRLogger.h in Headers */ = {isa = PBXBuildFile; fileRef = 036F378CE7ED27A9C21B5FBC9E57B410 /* FIRLogger.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		50180D61836726F0A20219BFCE184776 /* FIRMessagingAnalytics.h in Headers */ = {isa = PBXBuildFile; fileRef = 28B09390DE866603BDDD1128649CDA85 /* FIRMessagingAnalytics.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		50A052DB21DC36BE3EFB65CCE74F21B3 /* FIRInteropParameterNames.h in Headers */ = {isa = PBXBuildFile; fileRef = 7083693CC7EBCD34C761ADC817B359C1 /* FIRInteropParameterNames.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		50C6151815958C84EFB59494234426DD /* PagingMenuPosition.swift in Sources */ = {isa = PBXBuildFile; fileRef = 2E4B8BB37AFF14EA25EF75BA3575CB65 /* PagingMenuPosition.swift */; };
-		50DDC2A2E6D0D587819126BB18F25488 /* FIRCLSFile.h in Headers */ = {isa = PBXBuildFile; fileRef = D722630077484106904B5D32BDD292FF /* FIRCLSFile.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		50ED594713EEF28983AB210E60D4F31F /* SDImageIOCoder.h in Headers */ = {isa = PBXBuildFile; fileRef = 6EB0D7D4A5F54018D43C41257496959A /* SDImageIOCoder.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		5111F5249BD094399F7428388618081C /* GDTCORTransport.m in Sources */ = {isa = PBXBuildFile; fileRef = A4C44169D7B3D53241CE2982F560F1D0 /* GDTCORTransport.m */; };
-		512FAFBD71830F126224C033B6C45F4E /* RetryPolicy.swift in Sources */ = {isa = PBXBuildFile; fileRef = 55DA021BA2AF3FB8303DB83DCA84E493 /* RetryPolicy.swift */; };
-		515F9802DD9593AB3D4B4CCF770B48E1 /* SDImageAPNGCoder.m in Sources */ = {isa = PBXBuildFile; fileRef = FF5F99B764232941E3A548BEB0EC46A7 /* SDImageAPNGCoder.m */; };
-		5184DB86D36580BC8D11D31E20F140F6 /* ImageIO.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 586DFA51695907453FC2C9865DC0FF45 /* ImageIO.framework */; };
-		51E42E1975662488CCBBA593142D7249 /* FIROptionsInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 32D08FC6F767C591D2F01CAD2B99D0CA /* FIROptionsInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		5242FB2C69E6F60A1DCA8CE721189421 /* FIRCLSFile.m in Sources */ = {isa = PBXBuildFile; fileRef = C8617530BEC7B9D9725FCA23B90C21F1 /* FIRCLSFile.m */; };
-		52BE6F747C26DF2A24532458E55DC10F /* HTTPHeaders.swift in Sources */ = {isa = PBXBuildFile; fileRef = B630050E88D825BE7E5E7086BBAAA640 /* HTTPHeaders.swift */; };
-		52C248BA2E633DB09C731AD17C4AAF5F /* Theme.swift in Sources */ = {isa = PBXBuildFile; fileRef = 9052D0467EA3D3C93681E0B89A55D2A6 /* Theme.swift */; };
+		3F01EED6380B596E1D0C1497CBCF9B95 /* IQUITextFieldView+Additions.swift in Sources */ = {isa = PBXBuildFile; fileRef = 66AE1CA9000E3F4B8789D0D8DEC0CD52 /* IQUITextFieldView+Additions.swift */; };
+		3F2A05263D1FD93945D8518145AAD014 /* FIRCLSApplicationIdentifierModel.m in Sources */ = {isa = PBXBuildFile; fileRef = 9A565055D27D9CE403117510F6A244A3 /* FIRCLSApplicationIdentifierModel.m */; };
+		3F30DF9AAA9FE86DE42B12688D62F44B /* CTInboxIconMessageCell~port.xib in Resources */ = {isa = PBXBuildFile; fileRef = 593D8432FF014CFBE3C6C22EC3D7BBE2 /* CTInboxIconMessageCell~port.xib */; };
+		3F4166AAD474112D257614AD729D5B8C /* FIRCrashlytics.m in Sources */ = {isa = PBXBuildFile; fileRef = 9EFDDA7BFF6A4FF5882F190C1DDE30E4 /* FIRCrashlytics.m */; };
+		3F5C548D717C3676A9FE69F4A7788C36 /* FIRInstallationsIIDStore.m in Sources */ = {isa = PBXBuildFile; fileRef = A62F813215EE670424BAB999A770252E /* FIRInstallationsIIDStore.m */; };
+		3FB5466B477EF5D0757899F9477BF984 /* GULLoggerCodes.h in Headers */ = {isa = PBXBuildFile; fileRef = 2BEE04978047BE2335C22AF512A995E9 /* GULLoggerCodes.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		3FB71051A2F6BF51A9361EE6D446972B /* GDTCORClock.m in Sources */ = {isa = PBXBuildFile; fileRef = 92501A38D36200C2F9623F245A4788FC /* GDTCORClock.m */; };
+		40102A6417497FEE6E2C78F644D8145B /* CTLogger.m in Sources */ = {isa = PBXBuildFile; fileRef = FCE7F696C0F0024888D87CD2CB6F5CDF /* CTLogger.m */; };
+		401EB237F9FCB1313BEF0B225FC15645 /* FIRCLSUtility.m in Sources */ = {isa = PBXBuildFile; fileRef = 296BAC8CCDF29E1F2578A076FF0F326E /* FIRCLSUtility.m */; };
+		40233613DD959C689C6C97293D1636D6 /* FirebaseCoreInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 1A9D29D53F9B58E97CB18081989D3AF1 /* FirebaseCoreInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		4024C6641C64FDAB434C158CEBB2C066 /* successIconSubtle@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = 548B9AE5A9B717FC7AA8567D4F0F8B05 /* successIconSubtle@2x.png */; };
+		403A6754ABF90008A14E4C0E46EBC7CB /* GULNetwork.m in Sources */ = {isa = PBXBuildFile; fileRef = 7CE80FB43381B929002E704471D37209 /* GULNetwork.m */; };
+		404F3D0187DCF8E38F0B33E0B3EC9B05 /* CTInboxController.h in Headers */ = {isa = PBXBuildFile; fileRef = EC794600E2E08595155A89148ABA7E6D /* CTInboxController.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		4104F050D2CA24C95BC35A680048BA18 /* CTProductConfigController.m in Sources */ = {isa = PBXBuildFile; fileRef = DA9ACD7051A080A89BD6F2D28F6C6FC7 /* CTProductConfigController.m */; };
+		4120DD0DC646BEB7B5F38578E898FF47 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
+		41CD40F5713CD71AD5AB1471E81C97E1 /* IQBarButtonItem.swift in Sources */ = {isa = PBXBuildFile; fileRef = 7000F81E483D701478C188DCA5600175 /* IQBarButtonItem.swift */; };
+		4227CDE7D2587A53BFF12343977BF1C9 /* GDTCORClock.h in Headers */ = {isa = PBXBuildFile; fileRef = C0BD82E7C8294EF017901B2316BEEE88 /* GDTCORClock.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		427D20811BF4DF851FC6F356C732E02B /* FIROptionsInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 47A9BCECE3286C6F623A834C9407CA00 /* FIROptionsInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		4290283791CDD340B36C6726BAC2CC90 /* CTCoverImageViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 3CF20D4CDA4E5E07F73B942F67A7E1F8 /* CTCoverImageViewController.m */; };
+		42A3F77C043A99B5571CF45F89F1FBBA /* CTInboxBaseMessageCell.h in Headers */ = {isa = PBXBuildFile; fileRef = 102FEB917074560B516FCF246347CFDC /* CTInboxBaseMessageCell.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		42F38EDB8D75E44B4D5C37BBA8A85E96 /* CTHalfInterstitialImageViewController~iphoneport.xib in Resources */ = {isa = PBXBuildFile; fileRef = 52565D54E73967345E1E0E95476379E6 /* CTHalfInterstitialImageViewController~iphoneport.xib */; };
+		438D6803050580432EFA30FFF98B87AC /* FIRCLSSettings.h in Headers */ = {isa = PBXBuildFile; fileRef = A54AA84DD5AB6B276E0D51214B4DC9EC /* FIRCLSSettings.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		444E5A8665A173C3B0609C81041948B0 /* ScrollingFollowView-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 6135A5B940448D22239E9E06C8CDCEDF /* ScrollingFollowView-dummy.m */; };
+		4499DCF0EF5C8057E7FA32E02142CD4D /* SDImageFrame.m in Sources */ = {isa = PBXBuildFile; fileRef = BDC070F9E9D17369DA255E60ADA1F57A /* SDImageFrame.m */; };
+		4543CF3D614018AF1B8A2C8877AC393C /* CTHeaderViewController~ipad.xib in Resources */ = {isa = PBXBuildFile; fileRef = C9D81382570A20230DAAFBEEC2F367A4 /* CTHeaderViewController~ipad.xib */; };
+		4576F187CE8BA80C49868707B019184F /* FirebaseCrashlytics-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 581CF8EB713B8BDD38D4FBD00D06228A /* FirebaseCrashlytics-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		4634BA717BFCE522E5B42304C6A78B5D /* ParameterEncoding.swift in Sources */ = {isa = PBXBuildFile; fileRef = 59620E32181DC5A4206291E838B08366 /* ParameterEncoding.swift */; };
+		468FE02B98781F157C8EE78593237B1C /* GULKeychainUtils.m in Sources */ = {isa = PBXBuildFile; fileRef = 8D4308628EC5B4294723917C0223D0F1 /* GULKeychainUtils.m */; };
+		46B28C9AA5B98C199C80418D8CA98668 /* CTFooterViewController~iphoneport.xib in Resources */ = {isa = PBXBuildFile; fileRef = C8B8E1808EEDD9E0DA6643BC7F437BC8 /* CTFooterViewController~iphoneport.xib */; };
+		46D00F9FC6EF7E4D73A8DC9A2FDC7A7C /* CTDismissButton.m in Sources */ = {isa = PBXBuildFile; fileRef = FFC22044353ED377A82035FCB3916800 /* CTDismissButton.m */; };
+		471611F482CDC15BF464E3BA9CB83968 /* Notifications.swift in Sources */ = {isa = PBXBuildFile; fileRef = 294AED6B8CCC7A8D918B6B946CE3196D /* Notifications.swift */; };
+		472929AF36F19DC790DE853730F19076 /* CTKnownProfileFields.m in Sources */ = {isa = PBXBuildFile; fileRef = 89C7672D1CFC10457CAB96C3D527FFCB /* CTKnownProfileFields.m */; };
+		478D16767AA403D5EA718F86E8E9FBC9 /* NSData+ImageContentType.h in Headers */ = {isa = PBXBuildFile; fileRef = 4C83DA1C01C00C0FB921DC109BF13DDD /* NSData+ImageContentType.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		47A59DF034EC67CEC685DB274E57D2FC /* CTEventBuilder.m in Sources */ = {isa = PBXBuildFile; fileRef = FAFE350031CD727CA2840569DA7046D9 /* CTEventBuilder.m */; };
+		4860D5077260FBDDBD55A5A200D512CC /* SDImageIOCoder.h in Headers */ = {isa = PBXBuildFile; fileRef = B1FF5313AFD3914607BA94D9192ECDF5 /* SDImageIOCoder.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		4866FF3D66E61C995A48BAD9B8B4DCF9 /* FIRCLSReportAdapter_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 382FF818196B494E3B5A986C69DFBFA2 /* FIRCLSReportAdapter_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		486ACC777D201D4B360D44EEC3BADB78 /* PagingIndicatorLayoutAttributes.swift in Sources */ = {isa = PBXBuildFile; fileRef = 502B01691F65390017C4AB52583CC8C6 /* PagingIndicatorLayoutAttributes.swift */; };
+		487BADF0C907F08C69F3CCA9702A4F47 /* FIRCoreDiagnosticsConnector.h in Headers */ = {isa = PBXBuildFile; fileRef = EC07E020F1E33BA16C3E45096712A0C0 /* FIRCoreDiagnosticsConnector.h */; settings = {ATTRIBUTES = (Private, ); }; };
+		4890E5EB90D733296F8D30E4C20AA386 /* FIRMessagingKeychain.h in Headers */ = {isa = PBXBuildFile; fileRef = 1BF0227D80A76E307AA95D415FD11D8D /* FIRMessagingKeychain.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		4923120D0F6F1384D1307D8D07E2C672 /* FIRCLSThreadArrayOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = 4B97EEECB18AB4F359E111BD75F9678F /* FIRCLSThreadArrayOperation.m */; };
+		492609DD1A56EB940DFC27FEBA007333 /* FIRCLSFABHost.h in Headers */ = {isa = PBXBuildFile; fileRef = 1F688594575CE5C6D474B5F70D71DF18 /* FIRCLSFABHost.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		493D3AB11378BF32FB041CA582234BCD /* FBLPromise+Timeout.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = 5B4D537D0A79E63DA68FEA8E02E9DD89 /* FBLPromise+Timeout.h */; };
+		49BE486508B18069466304564A2A905C /* FIRComponentContainer.h in Headers */ = {isa = PBXBuildFile; fileRef = 02ADC8DFEC05062D4573522CF7C9FACD /* FIRComponentContainer.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		49EA56186ADD4985676712F281A4B64F /* Security.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 05720C608590E305E32A22FE9BDFD55B /* Security.framework */; };
+		4A6F0B00E7D1C5264A12AF864291BE75 /* FirebaseCoreDiagnostics-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 4698442353C2B02DD2E2933B2C6C4075 /* FirebaseCoreDiagnostics-dummy.m */; };
+		4A809112C10EA202C6BE54D6C6DFB71C /* FBLPromise+Then.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = 9E3B409662DD2BF2C57414A31366CB21 /* FBLPromise+Then.h */; };
+		4A8302D4217225D733A57186901C75FE /* FloatingPanel-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 4BDD14D586BD0C7598E989E0A5C559D4 /* FloatingPanel-dummy.m */; };
+		4B2C9929C6B63F596072DCD704B1E62B /* errorIcon@3x.png in Resources */ = {isa = PBXBuildFile; fileRef = 4A6EBB8F119B3054BE6427E05058C6A6 /* errorIcon@3x.png */; };
+		4B877E0FD18EAB2E6B85D21411236B42 /* FIRInstallationsAPIService.m in Sources */ = {isa = PBXBuildFile; fileRef = DE8DD21FAA5C67FF4EC1E7205405F33C /* FIRInstallationsAPIService.m */; };
+		4BDCF4F9E2A020D7B353D3F2FA006A5A /* GDTCOREndpoints_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 0CC4C350AA4CA1D6AE47768675A838EC /* GDTCOREndpoints_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		4BED578A718C912B74C420BD4EB831D2 /* PagerTabStripError.swift in Sources */ = {isa = PBXBuildFile; fileRef = 203D83893E92910F68A1A048229DBF19 /* PagerTabStripError.swift */; };
+		4C034C2E0BB08AB6504BC382E95BEE19 /* youtube-ios-player-helper-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = CD124BEBF5B56CF682F73506F5A5D258 /* youtube-ios-player-helper-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		4CD0F7DAEECE00723926A117424CCBAF /* CTDeviceInfo.h in Headers */ = {isa = PBXBuildFile; fileRef = F617BA335DB637959ABC34BEE503B833 /* CTDeviceInfo.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		4D05A3C2AC3151DA8B382D5A01D9A3D9 /* Logger.swift in Sources */ = {isa = PBXBuildFile; fileRef = EB68F7D262037653E9B07007B9702F3A /* Logger.swift */; };
+		4D269097B3E54FC9933B3B5802EEEABB /* FIRCLSByteUtility.h in Headers */ = {isa = PBXBuildFile; fileRef = D850A6AC3756EC6C167502B52461CF73 /* FIRCLSByteUtility.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		4D8AF7B93F36764229DE31E07240BF2F /* SDImageGraphics.m in Sources */ = {isa = PBXBuildFile; fileRef = 821F94D67D5E22AF10988F62A49DCF29 /* SDImageGraphics.m */; };
+		4DBA4429CDC0401E13BA12A593C4111F /* FBLPromise+All.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = 43C85DC02AD81F8F1DFFB4EEE8F68DB2 /* FBLPromise+All.h */; };
+		4DE09CBE104350D330F5F5603A1FE00D /* CleverTapEventDetail.h in Headers */ = {isa = PBXBuildFile; fileRef = A4D1868AF28247465DE1AE281F1C7B06 /* CleverTapEventDetail.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		4E0C3A0F08235A896FDDA190841714F3 /* GULSceneDelegateSwizzler.m in Sources */ = {isa = PBXBuildFile; fileRef = 111264B8DD3ECAC5F1147910FE2C7257 /* GULSceneDelegateSwizzler.m */; };
+		4E1EC5D85866DBA8CBE74C46AA6CB1BC /* SDWebImageCacheSerializer.m in Sources */ = {isa = PBXBuildFile; fileRef = 6A6BBCC3DDA24A2FBA30A7E0EA41A29C /* SDWebImageCacheSerializer.m */; };
+		4E59B6B01774335307C707647FB0FC30 /* ic_play@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = 961516AE4170E2690DE2EFFBDC5CF0B4 /* ic_play@2x.png */; };
+		4E7B96686D6C8EA40084FB0C771B9D95 /* SDAsyncBlockOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = CEE7A87436FDB285C80A56AD8AC8F023 /* SDAsyncBlockOperation.h */; settings = {ATTRIBUTES = (Private, ); }; };
+		4E901168D6178165B8B7430C3B9115F3 /* CTInboxSimpleMessageCell.m in Sources */ = {isa = PBXBuildFile; fileRef = 34F561CC68CBFECA3E4FE1189DB0DF62 /* CTInboxSimpleMessageCell.m */; };
+		4F3DF97DE1F4444DD36D0C2A313E246D /* GULAppDelegateSwizzler_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = FF6D29EA4D448E1430FE43BE269575BD /* GULAppDelegateSwizzler_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		4FF70E51BF45CA90F0764E888E3F3DFE /* FIRCLSLaunchMarkerModel.h in Headers */ = {isa = PBXBuildFile; fileRef = 155F0B63DD2275CFEBFCACEB4971D7A5 /* FIRCLSLaunchMarkerModel.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		4FFD6170D28A40D65035E072111AA914 /* FIRCLSCallStackTree.m in Sources */ = {isa = PBXBuildFile; fileRef = CD1C1C23F916B41334AC9BF081872423 /* FIRCLSCallStackTree.m */; };
+		50350C2F41891079B99E766AB5DA18E6 /* warningIconSubtle@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = 5DDB004CA87387B8317BFF5604824FAD /* warningIconSubtle@2x.png */; };
+		5039AA2899CEC521300BCA6543BE8BC9 /* GULNetworkURLSession.h in Headers */ = {isa = PBXBuildFile; fileRef = F8B9927BEC8338FECDDA5F60E9E79AA6 /* GULNetworkURLSession.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		505C3F3059E007E6FB88D786D5D29FB3 /* GULAppDelegateSwizzler.m in Sources */ = {isa = PBXBuildFile; fileRef = 0D53E675F7CB22E401B3AD432D761B79 /* GULAppDelegateSwizzler.m */; };
+		506FF7751ED4FEE7BD0F11D08A050280 /* FIRMessagingTopicsCommon.h in Headers */ = {isa = PBXBuildFile; fileRef = 7EBD86F4B1E4291FD8DC8558F94F0BD3 /* FIRMessagingTopicsCommon.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		507212665F9FB9D5122B3E57395560A8 /* FIRVersion.m in Sources */ = {isa = PBXBuildFile; fileRef = 72EEECCB5CA8BFDBC19EFDD0600CF909 /* FIRVersion.m */; };
+		5080262715B8B0A2EC710511A4A4CEA2 /* FIRStackFrame.h in Headers */ = {isa = PBXBuildFile; fileRef = C731E6387D356C31F8840C687B8BDF0E /* FIRStackFrame.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		50C6151815958C84EFB59494234426DD /* PagingMenuPosition.swift in Sources */ = {isa = PBXBuildFile; fileRef = 78854ED4BAFD39A4BFB32B34CA94DD0E /* PagingMenuPosition.swift */; };
+		50EAFA66E0CD2F3B596797CFBA47152E /* UIImage+Transform.m in Sources */ = {isa = PBXBuildFile; fileRef = A1C4D4B232B6C8A3F3800687B9E94F9C /* UIImage+Transform.m */; };
+		511A23BAE9F9002F887D5509438EBD38 /* SDWebImageDownloader.m in Sources */ = {isa = PBXBuildFile; fileRef = 088CF2F643EC76EA1D3936A18EB75DB6 /* SDWebImageDownloader.m */; };
+		512FAFBD71830F126224C033B6C45F4E /* RetryPolicy.swift in Sources */ = {isa = PBXBuildFile; fileRef = 7FAF43665F9F949DCF5F45A7ED10134B /* RetryPolicy.swift */; };
+		51B3E831E9B07D3669C41932C7BB82D2 /* FIRFirebaseUserAgent.h in Headers */ = {isa = PBXBuildFile; fileRef = 2DDEEF09EC88550BE515F220A39446B9 /* FIRFirebaseUserAgent.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		51BF130C8273622920FA2AAD38218CFB /* PromisesObjC-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 7C6DEA778DA7892977E16C88B95320C2 /* PromisesObjC-dummy.m */; };
+		51E7B704838308C0951A94A4FE5B00F7 /* UIView+WebCacheOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = 645AC5BA1D0DAF3767A9A58913E80A81 /* UIView+WebCacheOperation.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		5281EF8573D0E735A3E1DBE9CD71EAA2 /* SDMemoryCache.h in Headers */ = {isa = PBXBuildFile; fileRef = 7DB942B6CD3D39B695ACB5FD6E2F5B41 /* SDMemoryCache.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		52BE6F747C26DF2A24532458E55DC10F /* HTTPHeaders.swift in Sources */ = {isa = PBXBuildFile; fileRef = D16955C627887E38128334E1D824FADF /* HTTPHeaders.swift */; };
 		53054838A47F6674E6B91E2E89085F46 /* Pods-OpenBook-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = F456B1C22603F72A697F88E3EB9AF8D5 /* Pods-OpenBook-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		5320E8269BDC4C097BE8EEE326AF2E33 /* FIRCLSReportManager.m in Sources */ = {isa = PBXBuildFile; fileRef = DC01FD9FC5B2A81600B1FE53A5C0CBF0 /* FIRCLSReportManager.m */; };
-		5330D3C08FFBC78B7775222678E1828B /* LayoutReferences.swift in Sources */ = {isa = PBXBuildFile; fileRef = EFDBC240A0B86A8D4F6C768A433BA564 /* LayoutReferences.swift */; };
-		533BF0749CE780A19BF57048F97D09E8 /* CTCoverImageViewController~ipadland.xib in Resources */ = {isa = PBXBuildFile; fileRef = A1D929390EEA9740F8803DE24F7349E6 /* CTCoverImageViewController~ipadland.xib */; };
-		53A97759B4B454D68029D45DCEDF21AA /* FIRInstallationsItem+RegisterInstallationAPI.m in Sources */ = {isa = PBXBuildFile; fileRef = D35E0AB0A9A63A7C53635D8FB47F6F90 /* FIRInstallationsItem+RegisterInstallationAPI.m */; };
-		53B1BE023F32ACF91958E821F558BECD /* GDTCORLifecycle.m in Sources */ = {isa = PBXBuildFile; fileRef = AD6A09900EE7DB3C372F0809ED70D95D /* GDTCORLifecycle.m */; };
-		53C4E03612B796B95E4755FF84BF670D /* SDImageFrame.h in Headers */ = {isa = PBXBuildFile; fileRef = CBCB9ADBA97088291F8E154B4FE36AB2 /* SDImageFrame.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		5415576DAED2E82B9C15FA95B2DFDDD3 /* ScrollingFollowView.swift in Sources */ = {isa = PBXBuildFile; fileRef = FDDF3B62B9803BA1CCE292AD87E8785F /* ScrollingFollowView.swift */; };
-		5427FEE05CF3F297D37913E277B5BB70 /* CTInterstitialImageViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 52AEE033B337B9BB6BB02E486448FCD6 /* CTInterstitialImageViewController.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		546FA85F6DAE6B4CB2FE8124555867A0 /* FirebaseInstallationsInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = DBB4B40B6951F0E68B1940FC566C4336 /* FirebaseInstallationsInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		5485DDFC8DE7ADEE96DA54D395C391E0 /* GULAppDelegateSwizzler.h in Headers */ = {isa = PBXBuildFile; fileRef = 272BEBC2D5522FAFADEA7D24E588EE67 /* GULAppDelegateSwizzler.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		54CE358C4D3451F1DB8D54FE911DEB26 /* FIRComponentContainer.h in Headers */ = {isa = PBXBuildFile; fileRef = E6459998EE334D1511F26509690E48ED /* FIRComponentContainer.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		550AEBB75513134322BA0F96D3C400E9 /* PagingIndexItem.swift in Sources */ = {isa = PBXBuildFile; fileRef = 21DE60D8DE9B1929CC15F3DFBCA551B1 /* PagingIndexItem.swift */; };
-		55148DBCC0111F4BBCD7A807C7092758 /* FIRDependency.h in Headers */ = {isa = PBXBuildFile; fileRef = 93C71324FE90163B975465235FE4A8F1 /* FIRDependency.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		551EF3D26CCC60A0F7DC33E66CE6223B /* FIRInstallationsLogger.h in Headers */ = {isa = PBXBuildFile; fileRef = 356D85B515E7B2819CD5D4AA21838F83 /* FIRInstallationsLogger.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		55248F7D773DEF7A5CBA8880B53471EE /* GDTCORDirectorySizeTracker.h in Headers */ = {isa = PBXBuildFile; fileRef = F98EA63EA8AF8F9D72EAD3FEE1EC44BC /* GDTCORDirectorySizeTracker.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		5560B890471678D43C65BBC8BCD20893 /* SDImageLoader.m in Sources */ = {isa = PBXBuildFile; fileRef = 8885565B95BA312BD6FBC3FB399B1541 /* SDImageLoader.m */; };
-		556E3025B45C2C9A6932B4498F651E85 /* ct_volume_off.png in Resources */ = {isa = PBXBuildFile; fileRef = 1687117408592C51A70B7734E3083D1F /* ct_volume_off.png */; };
-		55A0FCE8E8C1DA257554615F2D22F04F /* FIRCLSMultipartMimeStreamEncoder.m in Sources */ = {isa = PBXBuildFile; fileRef = B3EAD0E383C7B51C63828663256064DB /* FIRCLSMultipartMimeStreamEncoder.m */; };
-		55AC6FAB1877C1DC6664B281976C5196 /* UIImage+MemoryCacheCost.h in Headers */ = {isa = PBXBuildFile; fileRef = A4B3D3CA6C08BC8963F680585851E999 /* UIImage+MemoryCacheCost.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		567F403B1E11C0F5E34DF63104E19337 /* FIRCLSCrashedMarkerFile.c in Sources */ = {isa = PBXBuildFile; fileRef = 1F8D7ED361F5D094EEDF1CBDF09864C7 /* FIRCLSCrashedMarkerFile.c */; };
-		568175B7C5A110601E394381CF908AF9 /* FIRCLSReportManager_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 34345EF94B52EA533BD4324975B259AD /* FIRCLSReportManager_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		56F39EDF8846AC681F870342D40A90BA /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
-		57720307C8B872E76240EC1285DB212C /* SwiftMessages.Config+Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0262B5E3ED1695C61FD01C64379D03A4 /* SwiftMessages.Config+Extensions.swift */; };
-		57B936AA9D1CC6EF6B3ED38CD6A60A64 /* CTHalfInterstitialViewController~ipadland.xib in Resources */ = {isa = PBXBuildFile; fileRef = 22123EE5D81D9E7216828BBB359EDC27 /* CTHalfInterstitialViewController~ipadland.xib */; };
-		5801B2E94FC1C5C30C96DA5782FAC9B5 /* PagingLayout.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3B81F1DD99A4C4281B57C0B0F180BA49 /* PagingLayout.swift */; };
-		580B98B740FA2766D2513F3FDE9A1FBF /* FIRMessagingCheckinStore.h in Headers */ = {isa = PBXBuildFile; fileRef = E102DD3A26330F6A315AC46087129022 /* FIRMessagingCheckinStore.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		59013C4310AB62D2BD9AAC4544D613BA /* CTSwipeView.m in Sources */ = {isa = PBXBuildFile; fileRef = 4A8BE3F03BD3A82B25491EC3FD14ABD5 /* CTSwipeView.m */; };
-		597BD072F72CCED54D8296DCD06A476E /* FIRHeartbeatInfo.h in Headers */ = {isa = PBXBuildFile; fileRef = C02D5C472AFAD6490490FF1B3B5284F7 /* FIRHeartbeatInfo.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		5982210772F5EFB5E1D62BD30FC4A3D9 /* FBLPromise+Do.m in Sources */ = {isa = PBXBuildFile; fileRef = DB8E86495B5AB3557AFFD516490AAA1F /* FBLPromise+Do.m */; };
-		59A9EC97FF15B2AEAFBDA3C292DCB69B /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
-		59C9953D769791B69DFE3B3DF2370C37 /* GULNetwork.m in Sources */ = {isa = PBXBuildFile; fileRef = 9F83A3363A53A1BBB42DC24B4260BD91 /* GULNetwork.m */; };
-		59D0EDCB70ED0127A3FF39ACF43182F6 /* GULOriginalIMPConvenienceMacros.h in Headers */ = {isa = PBXBuildFile; fileRef = D5AF3179F596FE686FED66656AA52E66 /* GULOriginalIMPConvenienceMacros.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		5A0AC22DA0D8334EFC6D1EA273053F4E /* GDTCORLifecycle.h in Headers */ = {isa = PBXBuildFile; fileRef = 59A4BF2C0A4C98FCFAED5C4F9D804E97 /* GDTCORLifecycle.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		5A1E98568E26445F55FFC505DDB746F0 /* PagingState.swift in Sources */ = {isa = PBXBuildFile; fileRef = 482E5877A48E4162371EFDF236CDF51A /* PagingState.swift */; };
-		5AB385D67DB51931D5CDD5A9DED10635 /* FIRMessagingPendingTopicsList.m in Sources */ = {isa = PBXBuildFile; fileRef = 3E75295555D002A00EC336DA1AEF1C8A /* FIRMessagingPendingTopicsList.m */; };
-		5B2584C7AD1F0FFC18968442DF7E15CC /* DigiCertSHA2SecureServerCA.crt in Resources */ = {isa = PBXBuildFile; fileRef = 7296C85693271B7CC3B4BC37EFD1D153 /* DigiCertSHA2SecureServerCA.crt */; };
-		5BB6C998883944658EC371AA095F917F /* GULUserDefaults.m in Sources */ = {isa = PBXBuildFile; fileRef = A39B28332C0C49D5AC0AB09F3EA8F5F6 /* GULUserDefaults.m */; };
-		5BE02EE8AA767C96902CA72DFE0AFA18 /* CleverTapInboxViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 522DAB12AA163A8EEF934307D77C590C /* CleverTapInboxViewController.m */; };
-		5CBA7663F32F5A5E2D1E55868C293BBD /* GULSecureCoding.h in Headers */ = {isa = PBXBuildFile; fileRef = 29990F7A92DD856E5E8A125390FA6F85 /* GULSecureCoding.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		5CD3EDA44DF62CCA8D22B803B76D4EDC /* FIRInstallationsErrorUtil.h in Headers */ = {isa = PBXBuildFile; fileRef = 1633D12251D0DF55487F686928C7DC47 /* FIRInstallationsErrorUtil.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		5D60D68830ADE8D6879C631403B966E2 /* FIRCLSSignal.h in Headers */ = {isa = PBXBuildFile; fileRef = 7A7F9FA718C68D82A114B0D40ACE04BF /* FIRCLSSignal.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		5D830E0696B43F2BAC39C31A33595213 /* FBLPromise+Any.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = 411BE640A1619C7D17CE3DF010BBFF3A /* FBLPromise+Any.h */; };
-		5DB1F608CD3B2668CBD7FAF61DC91C0A /* SDImageCoderHelper.m in Sources */ = {isa = PBXBuildFile; fileRef = 59EC1CA5CD6D1B4165F9F6676852A5D5 /* SDImageCoderHelper.m */; };
-		5DE0656DBBFCA007CA2E877CACAE4DDF /* FIRCLSDwarfUnwindRegisters.h in Headers */ = {isa = PBXBuildFile; fileRef = D5739AAB9E2EFAEE8D4D793FBF9C4A82 /* FIRCLSDwarfUnwindRegisters.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		5DECCBD688F0EE490468C2BC56471947 /* FIRMessagingCheckinService.h in Headers */ = {isa = PBXBuildFile; fileRef = 5D0460FD32FF65CA5139639F0B129CE0 /* FIRMessagingCheckinService.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		5E594FA3290D3D70F500572D0AC100DB /* URLConvertible+URLRequestConvertible.swift in Sources */ = {isa = PBXBuildFile; fileRef = 9676D41170DC2498D22F5CE285AB5532 /* URLConvertible+URLRequestConvertible.swift */; };
-		5EA087A2154184CDEB17DCA216C11FAE /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
-		5EC9A03EC70FC19622381C1CDD8305E6 /* CleverTapFeatureFlags.m in Sources */ = {isa = PBXBuildFile; fileRef = 47A37E3EDBEF51DE67B2CA831887612C /* CleverTapFeatureFlags.m */; };
-		5F43F4492FE37DB0824F308ADA214E90 /* CleverTap-iOS-SDK-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 788BA2FFC52FB77B68DE39E6C6E19DFB /* CleverTap-iOS-SDK-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		5FF3D178469D860742547F70F8FE9749 /* CTDismissButton.h in Headers */ = {isa = PBXBuildFile; fileRef = C1637780844F15EBBB583D5A0C97F8CF /* CTDismissButton.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		607E7279D581DDEC585508BA1816788A /* FIRMessagingLogger.m in Sources */ = {isa = PBXBuildFile; fileRef = BF56C48CA3C04A987EF9C7987B2293BF /* FIRMessagingLogger.m */; };
-		60D4450C2D8B9379A97B6A8814B22B23 /* FIRMessagingPersistentSyncMessage.m in Sources */ = {isa = PBXBuildFile; fileRef = 484B224EB43646D7F1BD4A603A864213 /* FIRMessagingPersistentSyncMessage.m */; };
-		60D5F4FBBBE1FA04D372CCEA67331D39 /* FIRCLSManagerData.m in Sources */ = {isa = PBXBuildFile; fileRef = 00B03A97A8D13987C3DB33BEB8298934 /* FIRCLSManagerData.m */; };
-		61201ADA3F69FFF42BD21EBF895978EB /* FBLPromise+Await.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = 917E0E3B4EABA4BC5D66B3716EF570AF /* FBLPromise+Await.h */; };
-		6123CC535FC863F5C098B6B5D13BBB06 /* SDWeakProxy.m in Sources */ = {isa = PBXBuildFile; fileRef = 579A58FA4FDD9B1D14A60A6217921F62 /* SDWeakProxy.m */; };
-		617F9A8CB793974C0E6F935D8A6B9148 /* ct_default_landscape_image.png in Resources */ = {isa = PBXBuildFile; fileRef = A63AEC1C2E0D76A49C48A3240D09D990 /* ct_default_landscape_image.png */; };
-		61834E6BB964F824592C84E2F56DC9A1 /* FIRMessaging.h in Headers */ = {isa = PBXBuildFile; fileRef = 2B245B41F35E16A534CBDCB35B0EAE13 /* FIRMessaging.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		6195A638DC0FE8005F99B71FB735B251 /* FIRCLSBinaryImage.h in Headers */ = {isa = PBXBuildFile; fileRef = EEA27F98791E62DEC63436FFCE1D7E3B /* FIRCLSBinaryImage.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		61DC44A14AD8485CC724D217A0E589B6 /* GDTCCTUploader.h in Headers */ = {isa = PBXBuildFile; fileRef = 3A17CB29D198B1FFCEEDCDE6EBD4FD3F /* GDTCCTUploader.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		624D9DE318DA02BADB3CEF0FADCA7995 /* SDImageFrame.m in Sources */ = {isa = PBXBuildFile; fileRef = 2F90C9417332A47B81D68187F6FB910C /* SDImageFrame.m */; };
-		62577D3A00EB8A281B81C11F15771137 /* FIRHeartbeatInfo.m in Sources */ = {isa = PBXBuildFile; fileRef = 4BBC9A071E733C77C628A0792CB1A83E /* FIRHeartbeatInfo.m */; };
-		628E3E9D808C4E27783CADFD321CDFCC /* PassthroughWindow.swift in Sources */ = {isa = PBXBuildFile; fileRef = 62C58E049003EFF6B9A139522A9F70EE /* PassthroughWindow.swift */; };
-		629DF7E0F7B1573C0FB2D1ADC256D494 /* TwitterPagerTabStripViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = 9D9CF029929AF09A237A05FB114F8E0A /* TwitterPagerTabStripViewController.swift */; };
-		62D6540648BB5B2733C840BA8CCB65B9 /* IQUIView+Hierarchy.swift in Sources */ = {isa = PBXBuildFile; fileRef = 11FFF457A29411BE38FE4F31DB24A748 /* IQUIView+Hierarchy.swift */; };
-		62EDC01A39865C0AAB420FBFC1A8DFF9 /* CTInterstitialViewController~ipadland.xib in Resources */ = {isa = PBXBuildFile; fileRef = E69FED45813A1900B4D7E59A87AE735A /* CTInterstitialViewController~ipadland.xib */; };
-		634DA8ED9847FACDC8D12B37DAC1BD0A /* CTCarouselImageMessageCell.m in Sources */ = {isa = PBXBuildFile; fileRef = 39038016635A847AFC0852BAD5646167 /* CTCarouselImageMessageCell.m */; };
-		63C1466D4080D48764D338ED04E52C0B /* GDTCORReachability.m in Sources */ = {isa = PBXBuildFile; fileRef = 2B4EEB08C9CD0ACC4A29026E7725F61D /* GDTCORReachability.m */; };
-		644A1788B6CAA8BEE9FCD4809009B8AE /* SDWebImageOptionsProcessor.m in Sources */ = {isa = PBXBuildFile; fileRef = 0E36B9C8CB9E449C5A9E8E3E2206A0C9 /* SDWebImageOptionsProcessor.m */; };
-		646CE1480E1227BBD8868F9DB1C0E782 /* ScrollingFollowView-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = B49D36688B4E2CC488F9617586137363 /* ScrollingFollowView-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		64B38E84A7A18C8F75E800346704088C /* PagingMenuDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = FAF5FF32B5D142C60E3422565B03425B /* PagingMenuDelegate.swift */; };
-		64C4523822AE0F3CC51A0C8B9F96B83F /* CleverTapInstanceConfigPrivate.h in Headers */ = {isa = PBXBuildFile; fileRef = 274F9CC775AEE92A0294645384547E0C /* CleverTapInstanceConfigPrivate.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		64D35B389DDF91FF2CABF7E71EFC7784 /* FIRBundleUtil.m in Sources */ = {isa = PBXBuildFile; fileRef = 9D9AB9070F0810A2C6FAA6E838D11628 /* FIRBundleUtil.m */; };
-		64ED52180CCDC29EF766F18AF2512ACF /* FIRMessagingRmqManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 354E7C97250C40109A07600886EB506E /* FIRMessagingRmqManager.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		6509A25995FFD6E038CC3D7E58FACEF6 /* CleverTapConfigValue.m in Sources */ = {isa = PBXBuildFile; fileRef = 2E4D7AEFCE70AF6449B485DEC57964BC /* CleverTapConfigValue.m */; };
-		654D7DACFEA378DCEB1E2C8CB7A4B3C3 /* FBLPromise+Always.m in Sources */ = {isa = PBXBuildFile; fileRef = DF832D1BC0ABF51598B6E608C3831051 /* FBLPromise+Always.m */; };
-		66A178D8239147EBB95C410E3CDA5292 /* SDWebImageCacheSerializer.h in Headers */ = {isa = PBXBuildFile; fileRef = 57A1418379F5A271083E84F8D8B8ED56 /* SDWebImageCacheSerializer.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		66DCC6FCEB388734551A0B62F3C0A7D0 /* CleverTapUTMDetail.m in Sources */ = {isa = PBXBuildFile; fileRef = B739D9595B02A6543342082ACE2A4636 /* CleverTapUTMDetail.m */; };
-		66E28546EE9173427AE3655323AA9AF0 /* SDImageLoader.h in Headers */ = {isa = PBXBuildFile; fileRef = 315AEBBC56D8FBF6C3DB986951E65A07 /* SDImageLoader.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		670753BE5C790DB0E1DDB5C269BEDA1F /* CTMessageMO.m in Sources */ = {isa = PBXBuildFile; fileRef = 31BBF7EA1FFDA5E1717DF17E4D912E1C /* CTMessageMO.m */; };
-		6732C6F2ECEDB38E727EB1FD50B84184 /* IQPreviousNextView.swift in Sources */ = {isa = PBXBuildFile; fileRef = A73B4EE21629A51D50E84FEB84089F02 /* IQPreviousNextView.swift */; };
-		67443F2F20380C3105001E90F048D0AC /* FirebaseCrashlytics-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = AEE4A180E9700369FD8C9B1F2EEA519D /* FirebaseCrashlytics-dummy.m */; };
-		67AFB0CDF18A44E9DE3900C2A857BF27 /* NSError+FIRMessaging.h in Headers */ = {isa = PBXBuildFile; fileRef = 379891073BF4054C98867F6316762BD0 /* NSError+FIRMessaging.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		67F2871D04BED2FCBA06E1AD051A26B2 /* CTCoverImageViewController~iphoneland.xib in Resources */ = {isa = PBXBuildFile; fileRef = 11822A28AB3249915A6B6BCA0F5FC6B3 /* CTCoverImageViewController~iphoneland.xib */; };
-		682945790CB2B1285AEEF763ED3E53DA /* FIRCLSUtility.m in Sources */ = {isa = PBXBuildFile; fileRef = FFE1B6031AD5399E369E0F17C1C52361 /* FIRCLSUtility.m */; };
-		688337B18659C4BF722F87AFC4FEEF81 /* SessionDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = 30448D9146397EF03EA616DC60F6800A /* SessionDelegate.swift */; };
-		6886B48E5FB83C0A729545A5D0A2DDA9 /* ButtonBarView.swift in Sources */ = {isa = PBXBuildFile; fileRef = FD90F1CE703A72FBE7D96157140270B3 /* ButtonBarView.swift */; };
-		6903BE748F3916AC2F884A1A565A0E64 /* CTPreferences.m in Sources */ = {isa = PBXBuildFile; fileRef = 1EA5C65CD6FB5CEE7179681880E31BE9 /* CTPreferences.m */; };
-		695A6A2F2A97D398E74F9C7561DC1D16 /* FIRInstallationsIIDTokenStore.h in Headers */ = {isa = PBXBuildFile; fileRef = 53BBE600F6DD52F89A90F05AD16D93A7 /* FIRInstallationsIIDTokenStore.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		6998505ED04E8353D27CDE658FE451E1 /* FIRInstallationsBackoffController.m in Sources */ = {isa = PBXBuildFile; fileRef = ABF2E3CF2B928FAF975CE0F53D309CDD /* FIRInstallationsBackoffController.m */; };
-		69EB9743F1BB7F94A5F3C1D247C64B53 /* PagingBorderOptions.swift in Sources */ = {isa = PBXBuildFile; fileRef = 9F7D1D4E6535122668AC67BAAECD0997 /* PagingBorderOptions.swift */; };
-		6A15696300FCF1254C1CD15CF88DA4DC /* SDImageCodersManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 9566B492619F64B3A722F10FF9EF00D1 /* SDImageCodersManager.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		6A380D2ADF5580E9EA48282738BB0394 /* FIRCLSSignal.c in Sources */ = {isa = PBXBuildFile; fileRef = D9C26A0E67ADE324B0DFEB9B94B907BA /* FIRCLSSignal.c */; };
-		6A4C9AAB19D8F35C3F87388B82C561BA /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
-		6AB9CA701C92CA31FDC07E20727F2D39 /* CleverTap+SSLPinning.h in Headers */ = {isa = PBXBuildFile; fileRef = C12C155811E12F969887E1AF566F9FA4 /* CleverTap+SSLPinning.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		6AC411A15B3BE25E51B0864367D07FD3 /* FIROptionsInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 3734099B3F815C203E502344F9569CAD /* FIROptionsInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		6AE7FCC676E85D3B7C2EB585C2CE40A2 /* FIRCLSCrashedMarkerFile.h in Headers */ = {isa = PBXBuildFile; fileRef = DB2F0C61F3F586E74B89D2D35918087F /* FIRCLSCrashedMarkerFile.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		6B044B23F13A79BBB96C41F9979CFD80 /* CTLocationManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 616B5C3063F1AEE193358A55CC584631 /* CTLocationManager.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		6B0585093AC857FFD5B4755F3811A3CB /* CTFooterViewController~ipadland.xib in Resources */ = {isa = PBXBuildFile; fileRef = F03D1D75E30F1EB86C730B3A06BF856B /* CTFooterViewController~ipadland.xib */; };
-		6B7806F42C7F74405024FAB14A283759 /* pb_decode.h in Headers */ = {isa = PBXBuildFile; fileRef = D2CA7E85155AA6B0A38D4083D39AE918 /* pb_decode.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		6B7E02F66DEAC9E54E7F61553D15A20E /* CleverTapDisplayUnitContent.m in Sources */ = {isa = PBXBuildFile; fileRef = 8FE4C240C4F6FCC7608FDC4FA941F7A7 /* CleverTapDisplayUnitContent.m */; };
-		6BE323925FC27BEEDE3927B2B4C516C0 /* DigiCertGlobalRootCA.crt in Resources */ = {isa = PBXBuildFile; fileRef = DA358F561373EA86A3B359CEB7151769 /* DigiCertGlobalRootCA.crt */; };
-		6C78ACF536F9202C376F44A67B60AAAA /* FIRMessagingRemoteNotificationsProxy.m in Sources */ = {isa = PBXBuildFile; fileRef = 8BEFB5D072EBDBECDC26E36B44F2380C /* FIRMessagingRemoteNotificationsProxy.m */; };
-		6CA64AEBE91787E0DD41B572C614764C /* SDAnimatedImageRep.m in Sources */ = {isa = PBXBuildFile; fileRef = FAAA1B4D5726F29174B7EC02D41E663B /* SDAnimatedImageRep.m */; };
-		6CA8999C4C4D1CBB25231B3E0271A10E /* FIRCLSInternalReport.m in Sources */ = {isa = PBXBuildFile; fileRef = 6B06CD7E8CA42D15A110B5217CEE2ED7 /* FIRCLSInternalReport.m */; };
-		6CE8BD010DE0C19EF98B409A7ACA8416 /* CTCarouselImageView.xib in Resources */ = {isa = PBXBuildFile; fileRef = 97E7A867A0C5A6EFF322E9C95D2B3E34 /* CTCarouselImageView.xib */; };
-		6D196F802C7581B1C3A3A8A3B0EB2B6B /* FIRCLSRecordIdentity.m in Sources */ = {isa = PBXBuildFile; fileRef = 35680BCB70050FE504D6900B2BE70BF6 /* FIRCLSRecordIdentity.m */; };
-		6D4DB7AC4C17C056267560F18B5E1725 /* CTHalfInterstitialImageViewController~ipadland.xib in Resources */ = {isa = PBXBuildFile; fileRef = C7CF2A927325D677C74A1252DDF9DBD8 /* CTHalfInterstitialImageViewController~ipadland.xib */; };
-		6D7931185F6EF8FC953CD4FE081905A3 /* GoogleUtilities-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 478AF7FF9C8A5D2CDA6C0BA25D966DF2 /* GoogleUtilities-dummy.m */; };
-		6D96A9F6F0596134AEA33B14E20BCA60 /* GDTCCTUploadOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = 5C71605760E808C2DA00F475E83D6FBF /* GDTCCTUploadOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		6DA5FEEA8F43D1AA16219FAF59A944E2 /* FIRMessagingTokenDeleteOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = 9697FCED8695506B1265039952431D29 /* FIRMessagingTokenDeleteOperation.m */; };
-		6DC596FC143D3F0C4D654E1B3F67CFAB /* FIRCLSCompoundOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = 1AB7829E59DB142E1CE334E8EA5FF044 /* FIRCLSCompoundOperation.m */; };
-		6DF94A8D0CE257DAB9113CB3B83EA6F9 /* FIRCLSCompactUnwind_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 9827847E378C4738FBBC77F51BA71E73 /* FIRCLSCompactUnwind_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		6E4C16F6A55EEE40AA7B0DBF1BD8C0CA /* SDImageAWebPCoder.m in Sources */ = {isa = PBXBuildFile; fileRef = 0E2B1309B5D983FED7C88BECE37A1785 /* SDImageAWebPCoder.m */; };
-		6E808734C1AD97611C3A6D0080C9018C /* UIButton+WebCache.m in Sources */ = {isa = PBXBuildFile; fileRef = A7B924FE4984B477990FD67919155416 /* UIButton+WebCache.m */; };
-		6EACA2A5018AE8D792CB82B5E3BFF722 /* CTInboxMessageActionView.m in Sources */ = {isa = PBXBuildFile; fileRef = 61ED8CFA697531876B8504349AAFADC8 /* CTInboxMessageActionView.m */; };
-		6EBFBC6B423C97088816DF8C02E8FEAD /* FIRCLSDataCollectionArbiter.m in Sources */ = {isa = PBXBuildFile; fileRef = FA0A7317ADA57F0683612AFA5ED673CA /* FIRCLSDataCollectionArbiter.m */; };
-		6EE27B160F815258E58D818230BC6754 /* SDAnimatedImageView.h in Headers */ = {isa = PBXBuildFile; fileRef = 696063D6CB86EA8EA472E8E99C09054C /* SDAnimatedImageView.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		6F5FA64DDE44104D3162784ED9AD3226 /* YTPlayerView.m in Sources */ = {isa = PBXBuildFile; fileRef = 2FC58CE50509D6A39E235D15B7E419E6 /* YTPlayerView.m */; };
-		6FCD225AAA86E1EE00D641197A3842F8 /* errorIconLight.png in Resources */ = {isa = PBXBuildFile; fileRef = 9561A529D797E84B7343430455F6CC7A /* errorIconLight.png */; };
-		6FD9CB26001FEF43EDA12C8345DF7C18 /* pb_decode.c in Sources */ = {isa = PBXBuildFile; fileRef = EC25B665DCA4BD7B33979CC3C8C09193 /* pb_decode.c */; settings = {COMPILER_FLAGS = "-fno-objc-arc -fno-objc-arc"; }; };
-		700920ED0228D06DC4BCD12AB79F3EE6 /* CTBaseHeaderFooterViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 69F64AE6EB6B3E3EB5BD78E868EFE258 /* CTBaseHeaderFooterViewController.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		707B82D6648FA559FB9D5C31F02F1311 /* PagingDirection.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3E8AB86990E2620958C65E6290910BC8 /* PagingDirection.swift */; };
-		708D5896D75D20FAB5BFD704CF28D03B /* WindowViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = 2B2ED8054213F80B551DCF925324AAAB /* WindowViewController.swift */; };
-		70CAFA52468150C51652B95253CE20F8 /* FIRCLSDownloadAndSaveSettingsOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = 656B24099E7A1FD2BC425BEB2DE9C366 /* FIRCLSDownloadAndSaveSettingsOperation.m */; };
-		71442E3F000895B059B2F223ECE54817 /* NSDictionary+FIRMessaging.h in Headers */ = {isa = PBXBuildFile; fileRef = 912E04A442516622BB0AE2A760CEC600 /* NSDictionary+FIRMessaging.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		5330D3C08FFBC78B7775222678E1828B /* LayoutReferences.swift in Sources */ = {isa = PBXBuildFile; fileRef = ACE21E0B86B22799E14B4AFC681E7416 /* LayoutReferences.swift */; };
+		533BF0749CE780A19BF57048F97D09E8 /* CTCoverImageViewController~ipadland.xib in Resources */ = {isa = PBXBuildFile; fileRef = 43C44639ED8724B8CC445A280E5512D3 /* CTCoverImageViewController~ipadland.xib */; };
+		536AA8F9B32ABFFCD06E6AFFFE4B6611 /* CardView.xib in Resources */ = {isa = PBXBuildFile; fileRef = 5A62EE8BDBCB74A29388D5E8860AAF62 /* CardView.xib */; };
+		54031B8BA424F5744F43AB4F486C3941 /* SDImageLoadersManager.m in Sources */ = {isa = PBXBuildFile; fileRef = D362FE958256ACE5DF9B0E3FC038FD37 /* SDImageLoadersManager.m */; };
+		5415576DAED2E82B9C15FA95B2DFDDD3 /* ScrollingFollowView.swift in Sources */ = {isa = PBXBuildFile; fileRef = CD2B58AC1B5C433F32A32019B7EC2689 /* ScrollingFollowView.swift */; };
+		5427FEE05CF3F297D37913E277B5BB70 /* CTInterstitialImageViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = EC652EBBFBA51810EE9DFD3906776D14 /* CTInterstitialImageViewController.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		543963F02DBDC29E98B09D5954237F37 /* SDWebImageDownloaderDecryptor.h in Headers */ = {isa = PBXBuildFile; fileRef = C9F2DC920BDD22F20D92E26E5DBACF6B /* SDWebImageDownloaderDecryptor.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		547AEAED382892D9DD1C10FD43DE8DEB /* FIRCLSCallStackTree.h in Headers */ = {isa = PBXBuildFile; fileRef = 7E2BF31DE2A8F1494A25954A8227A263 /* FIRCLSCallStackTree.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		550AEBB75513134322BA0F96D3C400E9 /* PagingIndexItem.swift in Sources */ = {isa = PBXBuildFile; fileRef = 572A32411CDBD2F851D1E96F9B90DD54 /* PagingIndexItem.swift */; };
+		556E3025B45C2C9A6932B4498F651E85 /* ct_volume_off.png in Resources */ = {isa = PBXBuildFile; fileRef = AED9F50E1917C372E6C3A39E0EB70D99 /* ct_volume_off.png */; };
+		55D24DA36847419ABE6DCC188FFA4706 /* GDTCORReachability_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = DC28A7FFF68840F0B0052ADE81499CE3 /* GDTCORReachability_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		5607426FAEA79922FECD484BE3B7EDE3 /* SDImageAPNGCoder.m in Sources */ = {isa = PBXBuildFile; fileRef = 10F1CBAAD39297482929C00743C27E5E /* SDImageAPNGCoder.m */; };
+		560843488F16807AC3FB72EDEEC3D063 /* FIRInteropParameterNames.h in Headers */ = {isa = PBXBuildFile; fileRef = 9A7C79C9C27E5C3E4C0171376F3F20D4 /* FIRInteropParameterNames.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		563752E0CE58CF5537F3159C9F921762 /* SDWebImageOptionsProcessor.m in Sources */ = {isa = PBXBuildFile; fileRef = E48CEB803BFDD3DE7394EA9A0774BD57 /* SDWebImageOptionsProcessor.m */; };
+		565589D00D3D6FF522CB4F52CF312B48 /* GULAppEnvironmentUtil.m in Sources */ = {isa = PBXBuildFile; fileRef = AA3D6E0F92D2A446F8F18EAE586B6CFC /* GULAppEnvironmentUtil.m */; };
+		56654EDA6C3B71DF80989C2907383975 /* infoIconLight@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = C38C87978E84A87BC1DC43B13AB2624D /* infoIconLight@2x.png */; };
+		56EDF07E1459353323EFCD07A336E9E1 /* FBLPromise+Retry.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = DEABFC3FD1607EA55F70E8840A06580C /* FBLPromise+Retry.h */; };
+		57B936AA9D1CC6EF6B3ED38CD6A60A64 /* CTHalfInterstitialViewController~ipadland.xib in Resources */ = {isa = PBXBuildFile; fileRef = 1B071E3F432B79EB83E6DB5484A1DF84 /* CTHalfInterstitialViewController~ipadland.xib */; };
+		57B97669CF065327AABDDD50D6EB60B8 /* FBLPromise+Catch.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = E0A1FF0CCA3916F8D83DCCC1EBA6F181 /* FBLPromise+Catch.h */; };
+		57FDE1E0364144D2A6B1336F92D1BB41 /* UIImageView+WebCache.m in Sources */ = {isa = PBXBuildFile; fileRef = C8FBE79C44CF1CAA093B8023CECE8428 /* UIImageView+WebCache.m */; };
+		5801B2E94FC1C5C30C96DA5782FAC9B5 /* PagingLayout.swift in Sources */ = {isa = PBXBuildFile; fileRef = 53B6B417DFD80C4FFD7FFFC67FE2BF0E /* PagingLayout.swift */; };
+		581168F91CD3B5EFCB6AB3B8E0DFC069 /* FBLPromise+Testing.m in Sources */ = {isa = PBXBuildFile; fileRef = F5F7924F65CD3C3531A1A872067A83DE /* FBLPromise+Testing.m */; };
+		583FA4F590546C81F838E4AC7EED0BDB /* GULURLSessionDataResponse.m in Sources */ = {isa = PBXBuildFile; fileRef = 4F9C558075BCF3BA467A34D145DED2FE /* GULURLSessionDataResponse.m */; };
+		584740ADCD624A6DF63A6B7A5772903D /* FIRCLSReportUploader.m in Sources */ = {isa = PBXBuildFile; fileRef = C8FE442AA7FBA8DBE2E67DE62C2A75E1 /* FIRCLSReportUploader.m */; };
+		58685DC6460E898205F8BAA48DB225CE /* NSURLSession+GULPromises.h in Headers */ = {isa = PBXBuildFile; fileRef = 4E874F721614ECD1328D5A44D663AA19 /* NSURLSession+GULPromises.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		587AEE35A8FA2B681BD1FB13B18CDCC5 /* FIRCLSSymbolResolver.m in Sources */ = {isa = PBXBuildFile; fileRef = 8BD7F9AF9C5F163A766986934462E26F /* FIRCLSSymbolResolver.m */; };
+		59013C4310AB62D2BD9AAC4544D613BA /* CTSwipeView.m in Sources */ = {isa = PBXBuildFile; fileRef = 609D948B372B5FDD3A11A23FE893B308 /* CTSwipeView.m */; };
+		596372F51661D51195C13AB79452ED77 /* FIRInstallations.m in Sources */ = {isa = PBXBuildFile; fileRef = 1CB77FD782BE533E2DA2FD90F89D54D4 /* FIRInstallations.m */; };
+		5989257BC1F369F03E83FEBFADCCDA6E /* GDTCCTCompressionHelper.h in Headers */ = {isa = PBXBuildFile; fileRef = 186BC538B6E17052FFAEE93AA20E3243 /* GDTCCTCompressionHelper.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		599485E0DB6372C909CBBE0480628C22 /* FIRMessagingExtensionHelper.h in Headers */ = {isa = PBXBuildFile; fileRef = FAA4CA171F4FB06376C131A790888FA8 /* FIRMessagingExtensionHelper.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		59C80E23253A09A0E6E0319348E2C3D9 /* FIRLibrary.h in Headers */ = {isa = PBXBuildFile; fileRef = 21586DF84D5543CE0A6453DA656AF4A7 /* FIRLibrary.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		59DF4543076F4817DE6428ED50CD9461 /* FIRCLSFABAsyncOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = 807ABE3ED4CBDCAAF00262B5461AF595 /* FIRCLSFABAsyncOperation.m */; };
+		5A03B6030F1B755AE7BD8CCE19B18A0D /* SDImageAWebPCoder.h in Headers */ = {isa = PBXBuildFile; fileRef = 8C70B5BEC06679A03EE0B1420B43D534 /* SDImageAWebPCoder.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		5A1E98568E26445F55FFC505DDB746F0 /* PagingState.swift in Sources */ = {isa = PBXBuildFile; fileRef = 2E16D904D4180FC7EF71F35F8EB2BF48 /* PagingState.swift */; };
+		5A401262D27638EB922D7C83D9BBE51C /* GDTCORTransformer.m in Sources */ = {isa = PBXBuildFile; fileRef = D21C8CFE4842E7FB10D16A900903D0A0 /* GDTCORTransformer.m */; };
+		5A60BD227B42B07DF672D88A6EB8DC29 /* pb_decode.c in Sources */ = {isa = PBXBuildFile; fileRef = 91F9CE9E532A10DF6F7FA69C598A0FB1 /* pb_decode.c */; settings = {COMPILER_FLAGS = "-fno-objc-arc -fno-objc-arc"; }; };
+		5A7C98167A083049181DD326280F2B5E /* FIRMessagingTokenStore.h in Headers */ = {isa = PBXBuildFile; fileRef = 37C4618AA2E8113FA4C024192E171623 /* FIRMessagingTokenStore.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		5ACA5B8B04BD669CB5F84C7D715081BD /* FIRCLSProcessReportOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = 82D41435B03D4AF1236F9A7A826ABB30 /* FIRCLSProcessReportOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		5B01A85165F883B820D0C5959C88F7CE /* FIRLogger.m in Sources */ = {isa = PBXBuildFile; fileRef = 3B2DD11DA850D245E6195111E1FAC804 /* FIRLogger.m */; };
+		5B2584C7AD1F0FFC18968442DF7E15CC /* DigiCertSHA2SecureServerCA.crt in Resources */ = {isa = PBXBuildFile; fileRef = 5D5C44382B6B2C5CFEF6E835B0572600 /* DigiCertSHA2SecureServerCA.crt */; };
+		5BE02EE8AA767C96902CA72DFE0AFA18 /* CleverTapInboxViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 7CC354E905EBAEA58982A67562A49595 /* CleverTapInboxViewController.m */; };
+		5C1BE2FF90DC3D7AE0484AB1805805AA /* FIRCLSFeatures.h in Headers */ = {isa = PBXBuildFile; fileRef = 0EE36995E04DC26BB8F7055BD9447034 /* FIRCLSFeatures.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		5C42E94EB92662A1EE5B7C84D961276D /* FIRMessagingRmqManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 25144FB4C541F618E196565696C9270F /* FIRMessagingRmqManager.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		5C482FE34F36D00B9286BE6473B64CB8 /* FIRCLSProfiling.c in Sources */ = {isa = PBXBuildFile; fileRef = 09870467C5FE392DA2F75C51048A1D1F /* FIRCLSProfiling.c */; };
+		5C88B796CCD495CF951D4852A17D810C /* SDImageCacheConfig.h in Headers */ = {isa = PBXBuildFile; fileRef = 31B20FC9900A8F4DCE001EAE89CC83A8 /* SDImageCacheConfig.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		5C8D11BB639AEBBEBA3008427F1A8C83 /* FBLPromise+Reduce.m in Sources */ = {isa = PBXBuildFile; fileRef = 340552C5B976118EB85BBD8DC208644A /* FBLPromise+Reduce.m */; };
+		5CB589C7E77BD5DE4E6F48F957964FC7 /* FIRCLSProfiling.h in Headers */ = {isa = PBXBuildFile; fileRef = 505F626652833F2B8E2F23076B20DD18 /* FIRCLSProfiling.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		5CDCD7C23FF4B539E00B0A036188B2D3 /* FIRInstallationsSingleOperationPromiseCache.m in Sources */ = {isa = PBXBuildFile; fileRef = 9A13B1575F6CEC6ED85D507AE89E58AD /* FIRInstallationsSingleOperationPromiseCache.m */; };
+		5DB13832F7B416F8CC7C7939EE904F25 /* FIRMessagingRemoteNotificationsProxy.m in Sources */ = {isa = PBXBuildFile; fileRef = EB0B91B6D44640FF990C229622D4F7AD /* FIRMessagingRemoteNotificationsProxy.m */; };
+		5DB6A3C7604D800AF0A3C29ECE6938C9 /* GULHeartbeatDateStorageUserDefaults.h in Headers */ = {isa = PBXBuildFile; fileRef = 37F9FEFCBEBE428AC5629F0271D35B25 /* GULHeartbeatDateStorageUserDefaults.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		5E138E279AF3A96130B6CA44D3127A2A /* FIRCrashlyticsReport_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = B5C951E580F57F50F8E1AA4C7B8E7169 /* FIRCrashlyticsReport_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		5E4F0DB4903BDC9253C0E2C40FE04686 /* FIROptions.h in Headers */ = {isa = PBXBuildFile; fileRef = C272FD52F06D48EE30858AFC6E94C1C1 /* FIROptions.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		5E594FA3290D3D70F500572D0AC100DB /* URLConvertible+URLRequestConvertible.swift in Sources */ = {isa = PBXBuildFile; fileRef = 52305295B3648E312C7426ECF8336F8E /* URLConvertible+URLRequestConvertible.swift */; };
+		5EC9A03EC70FC19622381C1CDD8305E6 /* CleverTapFeatureFlags.m in Sources */ = {isa = PBXBuildFile; fileRef = 45CF5401BC6AD0B0E50BAA2978172E2E /* CleverTapFeatureFlags.m */; };
+		5ED20B68F171B30791CFB12A80789514 /* FIRStackFrame.m in Sources */ = {isa = PBXBuildFile; fileRef = 12317699BE712AB944F1D70D70FF486B /* FIRStackFrame.m */; };
+		5F10A08A161FCD044693D0E793103505 /* SDWebImageDownloader.h in Headers */ = {isa = PBXBuildFile; fileRef = B2C5D4287559880143C3CD4104E5C2DB /* SDWebImageDownloader.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		5F43F4492FE37DB0824F308ADA214E90 /* CleverTap-iOS-SDK-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 57163559F68783F9E30DD03AF90F15DF /* CleverTap-iOS-SDK-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		5F7029C78CBBC0D26A818E0AF744446E /* FIRCLSContext.m in Sources */ = {isa = PBXBuildFile; fileRef = 8D2D1FAA36D637015F09312D3F89E024 /* FIRCLSContext.m */; };
+		5F7AFC8780D8D71481A1F5CACE0C3F4C /* GDTCORTransformer_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 994F5CD467B359E644267D90E1B1D5D3 /* GDTCORTransformer_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		5FCA064CA072375E9ACF19E16A02E707 /* FIRCLSReportManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 5946337CB950C243ACA1FC968E968FAE /* FIRCLSReportManager.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		5FD4B4F817243403577C4EE9120F08DA /* FIRCLSMachOBinary.h in Headers */ = {isa = PBXBuildFile; fileRef = AD26AB3B6DFB83733A15190591100CBC /* FIRCLSMachOBinary.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		5FF3D178469D860742547F70F8FE9749 /* CTDismissButton.h in Headers */ = {isa = PBXBuildFile; fileRef = 05747ECF98BBC2E7F8B97536E577EB9A /* CTDismissButton.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		603E0C553DA1201E396629A03140CBE2 /* GULApplication.h in Headers */ = {isa = PBXBuildFile; fileRef = 1CE8F8E8FB03E480E746F4D291CBFEB6 /* GULApplication.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		60BFD086FD3A0C2E6DA2DEDF3C80C6D2 /* infoIconSubtle.png in Resources */ = {isa = PBXBuildFile; fileRef = 250ED9616B8844969FB62C9CA4AFAB72 /* infoIconSubtle.png */; };
+		60C6606FF8176EE5A38870CFD9F649C8 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
+		60CD96144F2366049A8E1B81A36A4365 /* FIRCLSLaunchMarkerModel.m in Sources */ = {isa = PBXBuildFile; fileRef = 1C5143128154E98083F9CCC38E887DD2 /* FIRCLSLaunchMarkerModel.m */; };
+		6114A6E52B8C02CE46CED665D12CBC0F /* FIRInstallationsErrors.h in Headers */ = {isa = PBXBuildFile; fileRef = 6D24F5227F017C41F04B0B438AB421B9 /* FIRInstallationsErrors.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		6162747A865B8EA7F8461AE841C3A4E2 /* NSData+ImageContentType.m in Sources */ = {isa = PBXBuildFile; fileRef = CBA3E6FCD323CA2F046030EE273CF168 /* NSData+ImageContentType.m */; };
+		617F9A8CB793974C0E6F935D8A6B9148 /* ct_default_landscape_image.png in Resources */ = {isa = PBXBuildFile; fileRef = 3B132563B0EDE9325C098E7EFA3977A4 /* ct_default_landscape_image.png */; };
+		61EE88764F632A61E99C6073060B50C1 /* FBLPromise+Reduce.h in Headers */ = {isa = PBXBuildFile; fileRef = 464DE511D4131515782F462353325762 /* FBLPromise+Reduce.h */; };
+		62362C812A0D55006BE4607F2EC6B54C /* FIRInteropParameterNames.h in Headers */ = {isa = PBXBuildFile; fileRef = 3092AB062A361EF8D432396BE2C79CD4 /* FIRInteropParameterNames.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		626C082313A6825B02D3D13FC6C16A1C /* GDTCCTUploader.h in Headers */ = {isa = PBXBuildFile; fileRef = 8812E545356454B705FC9AE2141F5087 /* GDTCCTUploader.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		629DF7E0F7B1573C0FB2D1ADC256D494 /* TwitterPagerTabStripViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = 2B14DD2A535B061F0CD9F1CCF0D5A23C /* TwitterPagerTabStripViewController.swift */; };
+		62AC1B8F805050CD3EEB4DB2DB4DA183 /* GDTCORUploadBatch.h in Headers */ = {isa = PBXBuildFile; fileRef = B1E93004743319B728BB3C3E2A8B8D85 /* GDTCORUploadBatch.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		62CD7DA597976D4395750C0379B0DC09 /* GULOriginalIMPConvenienceMacros.h in Headers */ = {isa = PBXBuildFile; fileRef = 81C97557B8F1734FD4BCCAB7B8457A67 /* GULOriginalIMPConvenienceMacros.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		62EDC01A39865C0AAB420FBFC1A8DFF9 /* CTInterstitialViewController~ipadland.xib in Resources */ = {isa = PBXBuildFile; fileRef = 7DF4A53A8A3E75C8D42C491EC9BAF1FA /* CTInterstitialViewController~ipadland.xib */; };
+		6309303466719EF3C1FD0150105DD59E /* GDTCORTransport.h in Headers */ = {isa = PBXBuildFile; fileRef = C727E9EAA23402382A843AF24F8DCF95 /* GDTCORTransport.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		6310A0D6A7259EC2F6E85326A0955BD9 /* FIRCLSExistingReportManager.m in Sources */ = {isa = PBXBuildFile; fileRef = 930EA3CC4D4A792B4D2F74D75FEC2FAE /* FIRCLSExistingReportManager.m */; };
+		631785B92A65C4D0F3E7FAE72F5AB25A /* FIRMessagingCheckinStore.h in Headers */ = {isa = PBXBuildFile; fileRef = F0AFBA6E4ACD46F2CB7E103C47ACAB5D /* FIRMessagingCheckinStore.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		6319E7EBA2D2DCF5F0EBE23387F99793 /* SDImageCachesManager.h in Headers */ = {isa = PBXBuildFile; fileRef = EDFCCAE7AD51409F5EFD17618414D666 /* SDImageCachesManager.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		634DA8ED9847FACDC8D12B37DAC1BD0A /* CTCarouselImageMessageCell.m in Sources */ = {isa = PBXBuildFile; fileRef = ADBA061B2123719621518556ACF6B9E9 /* CTCarouselImageMessageCell.m */; };
+		63927F226673CA5F6832F98261D18CD0 /* Security.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 05720C608590E305E32A22FE9BDFD55B /* Security.framework */; };
+		63B1522168DDDD26ED7825732584071F /* FIRCLSDataCollectionArbiter.h in Headers */ = {isa = PBXBuildFile; fileRef = AF0172D538670EEB5B18C87AEE7AB54A /* FIRCLSDataCollectionArbiter.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		643DEAD6BE801C5DF1A49BB359696DC9 /* FBLPromises.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = 1E552F6029DB590EA4CF6D58B9AEDA14 /* FBLPromises.h */; };
+		645463E624115A42FE45DD945C41DB40 /* Theme.swift in Sources */ = {isa = PBXBuildFile; fileRef = A081898EB902DE6398A74CA4FCEAAAC0 /* Theme.swift */; };
+		646CE1480E1227BBD8868F9DB1C0E782 /* ScrollingFollowView-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = B8A7E4909001B056B4FC6ADAFEBD45F8 /* ScrollingFollowView-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		6473A02B7A00F2A395F7CBD9C6DAA5C0 /* FIRCoreDiagnostics.m in Sources */ = {isa = PBXBuildFile; fileRef = 719B504E36D0A9E6BE09C8226378C90F /* FIRCoreDiagnostics.m */; };
+		64A897370773FCD48DE3C3960D61C23A /* SDWebImageOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = F9CF206F7AA3AB8B90D23918980EDFFD /* SDWebImageOperation.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		64B16076E98993DA0909149D9DD0DC22 /* nanopb-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = D29F93B9F07A90FA23C8B1EBB37676BC /* nanopb-dummy.m */; };
+		64B38E84A7A18C8F75E800346704088C /* PagingMenuDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = 130BCF25F8EFB0AAF794C70B9BD843A7 /* PagingMenuDelegate.swift */; };
+		64C4523822AE0F3CC51A0C8B9F96B83F /* CleverTapInstanceConfigPrivate.h in Headers */ = {isa = PBXBuildFile; fileRef = 89D2ABE67FA0B9803ACCD8A4E0F015D0 /* CleverTapInstanceConfigPrivate.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		6509A25995FFD6E038CC3D7E58FACEF6 /* CleverTapConfigValue.m in Sources */ = {isa = PBXBuildFile; fileRef = 5B3EC699426A74EC7891730C5BC7F61E /* CleverTapConfigValue.m */; };
+		664A9C0F034A3FD20F0D0358E0BB1A33 /* FBLPromise+Wrap.m in Sources */ = {isa = PBXBuildFile; fileRef = 2AACC34FF14DAE5B30CF6E4272C0267D /* FBLPromise+Wrap.m */; };
+		665FE1FFFCB8A73D1815298AC5EF1343 /* FIRInstallations.h in Headers */ = {isa = PBXBuildFile; fileRef = 5959E942BB092F1A124425A20036ABAE /* FIRInstallations.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		66C73435A25432365B0C273CD10EFE46 /* FIRCLSFABNetworkClient.m in Sources */ = {isa = PBXBuildFile; fileRef = 8FFD5A06BF3897955B2D589F6B8CC017 /* FIRCLSFABNetworkClient.m */; };
+		66DCC6FCEB388734551A0B62F3C0A7D0 /* CleverTapUTMDetail.m in Sources */ = {isa = PBXBuildFile; fileRef = 7E966BAF1557E2838242B2A4667C553A /* CleverTapUTMDetail.m */; };
+		670753BE5C790DB0E1DDB5C269BEDA1F /* CTMessageMO.m in Sources */ = {isa = PBXBuildFile; fileRef = C099E7F5D5840C3BDB3FA7FD602F34F9 /* CTMessageMO.m */; };
+		670DABF58D869BDB3498FB82C868992C /* FIRMessagingRmqManager.m in Sources */ = {isa = PBXBuildFile; fileRef = EAA4B35385D2E6FECDE30E6B5F03CF15 /* FIRMessagingRmqManager.m */; };
+		672290F38E8E46ECC281BBB3163589C8 /* GDTCORRegistrar.h in Headers */ = {isa = PBXBuildFile; fileRef = 8FF77F66E3D37F506ECB88297BFA161D /* GDTCORRegistrar.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		674D051040C14BF613BA207697542966 /* FIRCoreDiagnosticsData.h in Headers */ = {isa = PBXBuildFile; fileRef = 35F7C8F2AE1AD4DBB5FAC408343AC455 /* FIRCoreDiagnosticsData.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		676187E9F22789C89C314A5176CA6149 /* GDTCOREventTransformer.h in Headers */ = {isa = PBXBuildFile; fileRef = 11E74AE378217B59F28F9B33D336E63E /* GDTCOREventTransformer.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		678B35EFD51F61A22B72242D4A26FD17 /* FBLPromise+Delay.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = 9EA10FE8174E6D08E0E3E4E3D15092FD /* FBLPromise+Delay.h */; };
+		67C20763A23305D9605D5C0712DF55CE /* SDImageCachesManagerOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = 9DBE220FF4F6A09718E89D30711663C7 /* SDImageCachesManagerOperation.h */; settings = {ATTRIBUTES = (Private, ); }; };
+		67F2871D04BED2FCBA06E1AD051A26B2 /* CTCoverImageViewController~iphoneland.xib in Resources */ = {isa = PBXBuildFile; fileRef = ADCCE7F86F38610580152D664B579B3D /* CTCoverImageViewController~iphoneland.xib */; };
+		688337B18659C4BF722F87AFC4FEEF81 /* SessionDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = D04535DBF8AD873EB79E73E13E8C95CF /* SessionDelegate.swift */; };
+		6886B48E5FB83C0A729545A5D0A2DDA9 /* ButtonBarView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 7FEEA7A60DEF3B4DCA68E7387D457AA7 /* ButtonBarView.swift */; };
+		68AEDBD0EE9BF67DB1D6FC6541CED5F7 /* FIRExceptionModel_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 3C3D834396245AAEB78273B9C3AC73B5 /* FIRExceptionModel_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		6903BE748F3916AC2F884A1A565A0E64 /* CTPreferences.m in Sources */ = {isa = PBXBuildFile; fileRef = 7BCD620DD6A5E6B62B5DA5D1164E882B /* CTPreferences.m */; };
+		694A075D64AB6271E66EF9E62D71E7D0 /* warningIconLight@3x.png in Resources */ = {isa = PBXBuildFile; fileRef = EEBC24ADD24050B7EE7CC4428E941A02 /* warningIconLight@3x.png */; };
+		6951FE0CC94812DEC9F84D61C9FCD52A /* FIROptions.m in Sources */ = {isa = PBXBuildFile; fileRef = 13DFA9E0C535E4E85F9B007F38EB6120 /* FIROptions.m */; };
+		6963D611007DCCBFD41BB438C4AD23CF /* FIRCLSCrashedMarkerFile.h in Headers */ = {isa = PBXBuildFile; fileRef = EA2913C4AEAF5398E93DE7EA0F8F59AB /* FIRCLSCrashedMarkerFile.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		698A4C417928CEBB43942C1F75E559EA /* FBLPromise+Timeout.m in Sources */ = {isa = PBXBuildFile; fileRef = 937741281C8DD41A313A176A915F48AA /* FBLPromise+Timeout.m */; };
+		69A39E2DCEE7140DF3654C581C401637 /* KeyboardTrackingView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 815BD71E117B44F96659FC0009FC0F27 /* KeyboardTrackingView.swift */; };
+		69EB9743F1BB7F94A5F3C1D247C64B53 /* PagingBorderOptions.swift in Sources */ = {isa = PBXBuildFile; fileRef = 7282A29AF98EDCB2629552B3D9989414 /* PagingBorderOptions.swift */; };
+		6A7DB13545ED0AC10769282078BD0192 /* FIRMessaging.h in Headers */ = {isa = PBXBuildFile; fileRef = 2AB3B59068B5A070B1148F92011D7D88 /* FIRMessaging.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		6AB9CA701C92CA31FDC07E20727F2D39 /* CleverTap+SSLPinning.h in Headers */ = {isa = PBXBuildFile; fileRef = EF66DFE2368BE8344BAE8F89BA7A1DDB /* CleverTap+SSLPinning.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		6AD6D0F694C709B79B5CD602C238DFA3 /* errorIconSubtle@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = B0F63AA0457B4688CB2AED57F4A199D4 /* errorIconSubtle@2x.png */; };
+		6B044B23F13A79BBB96C41F9979CFD80 /* CTLocationManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 93EFA7BB758C54E43D006C8692587986 /* CTLocationManager.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		6B0585093AC857FFD5B4755F3811A3CB /* CTFooterViewController~ipadland.xib in Resources */ = {isa = PBXBuildFile; fileRef = A1F011913EF4A13CE973C72080D6D646 /* CTFooterViewController~ipadland.xib */; };
+		6B181AB39618C59813E550B158B37DBE /* FIRInstallationsStoredItem.m in Sources */ = {isa = PBXBuildFile; fileRef = 752787D4D5E2ADC44F9DCB12A5AE7D4F /* FIRInstallationsStoredItem.m */; };
+		6B3626EA14AF710A2C72AECD58E55B3E /* FIRCLSExistingReportManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 1B6F2061D025B719C7A44CDAC34893CE /* FIRCLSExistingReportManager.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		6B60128BF181756B5A05576C6068566F /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
+		6B7E02F66DEAC9E54E7F61553D15A20E /* CleverTapDisplayUnitContent.m in Sources */ = {isa = PBXBuildFile; fileRef = 2A2D6DF114ABB89068967721AD05EE5A /* CleverTapDisplayUnitContent.m */; };
+		6B95B24CF7205C54B35C0827B44B6830 /* GDTCOREvent.h in Headers */ = {isa = PBXBuildFile; fileRef = 542EC7867C0E5DE2E34AD904FB677276 /* GDTCOREvent.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		6BE323925FC27BEEDE3927B2B4C516C0 /* DigiCertGlobalRootCA.crt in Resources */ = {isa = PBXBuildFile; fileRef = AA44E189CDA52D7B615513D6CACF1480 /* DigiCertGlobalRootCA.crt */; };
+		6C4C53377507F9D77E67A19F3B0DAE69 /* Identifiable.swift in Sources */ = {isa = PBXBuildFile; fileRef = 77B61DDEB4547953A6B9A8A50A4A5520 /* Identifiable.swift */; };
+		6C54556A24DD698C5561940DECF9DB80 /* FIRCLSSerializeSymbolicatedFramesOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = 4F0EBFEF8768EC58C84D9D5C252267B4 /* FIRCLSSerializeSymbolicatedFramesOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		6C6C8113F7476DE935954DBC03566DBA /* FIRExceptionModel.h in Headers */ = {isa = PBXBuildFile; fileRef = 1F6F99B0F847574EB4517CCBA2A820E4 /* FIRExceptionModel.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		6C96FD27196F22286B0AC175632DD1E2 /* FIRCLSUserDefaults_private.h in Headers */ = {isa = PBXBuildFile; fileRef = 0102F6E9A39690B86E155198543130B5 /* FIRCLSUserDefaults_private.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		6CE8BD010DE0C19EF98B409A7ACA8416 /* CTCarouselImageView.xib in Resources */ = {isa = PBXBuildFile; fileRef = A3CF6E3318AD8E81A9CDC8C7A7239EA3 /* CTCarouselImageView.xib */; };
+		6D4780BFBE31FC07F0FA6197A78ED1E6 /* FBLPromise+All.m in Sources */ = {isa = PBXBuildFile; fileRef = C94D200368610897A527880B0F55B295 /* FBLPromise+All.m */; };
+		6D4DB7AC4C17C056267560F18B5E1725 /* CTHalfInterstitialImageViewController~ipadland.xib in Resources */ = {isa = PBXBuildFile; fileRef = B3305D8FD81E0ABEB906AE18B8B397BB /* CTHalfInterstitialImageViewController~ipadland.xib */; };
+		6DA28EC96C35A26E54C48645B228EF29 /* SDWeakProxy.m in Sources */ = {isa = PBXBuildFile; fileRef = 80A435F15E725B3B1B09DC2133C17486 /* SDWeakProxy.m */; };
+		6E5BC0F0DF1D4D4C3A81A3B1ABEB2E52 /* SwiftMessages-SwiftMessages in Resources */ = {isa = PBXBuildFile; fileRef = 753DD909979478A0C1B33E0524504EF1 /* SwiftMessages-SwiftMessages */; };
+		6E6D857FD256BA6C9DF94AD5B2BEAC8A /* FIRCLSMachException.h in Headers */ = {isa = PBXBuildFile; fileRef = A4D09DD7955FFF33CB085240804572C0 /* FIRCLSMachException.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		6EAA04C091066A1CDA225EF05814B70A /* FBLPromise+Recover.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = B5CABFCCB55360EEADD3B61E2CB7EF4B /* FBLPromise+Recover.h */; };
+		6EACA2A5018AE8D792CB82B5E3BFF722 /* CTInboxMessageActionView.m in Sources */ = {isa = PBXBuildFile; fileRef = 99AB2186CE97C4A6E68A30A8276A39FF /* CTInboxMessageActionView.m */; };
+		6F5FA64DDE44104D3162784ED9AD3226 /* YTPlayerView.m in Sources */ = {isa = PBXBuildFile; fileRef = DBC94E7FE9490FAD3BA7ABEC83465D6E /* YTPlayerView.m */; };
+		6F9DBD2AFC1C68C92006286A67D927D2 /* FIRCLSAllocate.c in Sources */ = {isa = PBXBuildFile; fileRef = 43099DAF55DFB4B165A671EDEBA81648 /* FIRCLSAllocate.c */; };
+		6FACB52E576829DEB0328F491D1B42A8 /* errorIconLight@3x.png in Resources */ = {isa = PBXBuildFile; fileRef = 48992D6CB52E93F6FA9C68F8766CFC81 /* errorIconLight@3x.png */; };
+		700920ED0228D06DC4BCD12AB79F3EE6 /* CTBaseHeaderFooterViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = B6DA84841AE0CBE101E4CE4B1B2CF0A8 /* CTBaseHeaderFooterViewController.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		7031BD7AEC98460DFD44A6A9D6E49465 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
+		707B82D6648FA559FB9D5C31F02F1311 /* PagingDirection.swift in Sources */ = {isa = PBXBuildFile; fileRef = 88F132F2EFEA5887B1CD32757CF7D692 /* PagingDirection.swift */; };
+		70CB35CAB5D19EFB12771F192302B15F /* pb_decode.h in Headers */ = {isa = PBXBuildFile; fileRef = 2C20374EBDF806478C3B593001CC6E09 /* pb_decode.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		71567958FD6B6DCE5EFF4F3B3913C011 /* FIRCLSUserDefaults.h in Headers */ = {isa = PBXBuildFile; fileRef = E388BEB052637D4A214069F8DFFAB1D0 /* FIRCLSUserDefaults.h */; settings = {ATTRIBUTES = (Project, ); }; };
 		716F1AB371C1DBC5A91F85053DE427FD /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
-		71974B759CB428F649CF9D1EC40BE65B /* FIRCLSUserDefaults.m in Sources */ = {isa = PBXBuildFile; fileRef = 65586851C5B163BC0B663B861D998777 /* FIRCLSUserDefaults.m */; };
-		71B3387BB6DBFFFC20F39745F2C2CBF0 /* FIRMessagingTokenInfo.h in Headers */ = {isa = PBXBuildFile; fileRef = CA5ED9824AB0FE290C87D118069781E3 /* FIRMessagingTokenInfo.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		71BA20D34B18193C961CFA98DCEB5A54 /* GDTCCTCompressionHelper.m in Sources */ = {isa = PBXBuildFile; fileRef = 1C43354A61438F96FA62BA716DF82B72 /* GDTCCTCompressionHelper.m */; };
-		71F3C6CEBAA38F885422B341506238BE /* FIRCLSProfiling.h in Headers */ = {isa = PBXBuildFile; fileRef = E3FE1C9E86679E0513BCBEC34B287E69 /* FIRCLSProfiling.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		71FD91B8ED24510B4D2B81F26A2DB95B /* CleverTapInboxMessageContent.m in Sources */ = {isa = PBXBuildFile; fileRef = 89D1F3E559544561EE3ADD29D1AEF250 /* CleverTapInboxMessageContent.m */; };
-		728A2CC5C9029DCDF47F6008013F92E2 /* FBLPromise+All.m in Sources */ = {isa = PBXBuildFile; fileRef = 65AE7A120F479FFD5829B7E3D1C8AC34 /* FBLPromise+All.m */; };
-		72CC1CBDADC9927B0B87669518202CC6 /* PageViewManagerDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = B347D8DF8F8047ED97696A2C1D59DFB6 /* PageViewManagerDelegate.swift */; };
-		736F4B96B9B9FB5628D6F51D393CD99C /* FIRCLSMachOSlice.m in Sources */ = {isa = PBXBuildFile; fileRef = 1DC1355A4201A117D7690FEE298FDFAD /* FIRCLSMachOSlice.m */; };
-		738B24966BDB38CF720021F42D026CE0 /* CTCoverViewController~ipad.xib in Resources */ = {isa = PBXBuildFile; fileRef = 5118A213EEE546D5223ED8065CAEB551 /* CTCoverViewController~ipad.xib */; };
-		7421A17768FA6915B7DD5F310601124E /* FIRCLSRecordHost.m in Sources */ = {isa = PBXBuildFile; fileRef = BE927A70AEB4C69DCE02FB0522907B23 /* FIRCLSRecordHost.m */; };
-		74A31D9F1FD5F17C2112F303099B6B98 /* FIRInstallations.m in Sources */ = {isa = PBXBuildFile; fileRef = 7F4F668C8866F21B6D1E05E2F415F32E /* FIRInstallations.m */; };
-		74B101FF95A6707CCA1CB622659CFAF4 /* CTUserMO.h in Headers */ = {isa = PBXBuildFile; fileRef = 57FCE11FDBBE8F95121B58B797CA2782 /* CTUserMO.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		75113A3A540D04FBD9F9AB37505675B4 /* crashlytics.nanopb.c in Sources */ = {isa = PBXBuildFile; fileRef = AD552BC080B93D2D90744D1B98BE3472 /* crashlytics.nanopb.c */; };
-		75140A5D77D00CA80647300A1FB990AC /* GULNetworkLoggerProtocol.h in Headers */ = {isa = PBXBuildFile; fileRef = 608EE03031A94391261EBE3D9545491B /* GULNetworkLoggerProtocol.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		751640AF34BC2687F3C03DF96395FD3E /* warningIcon.png in Resources */ = {isa = PBXBuildFile; fileRef = 222632A66FAF0BE5AB02F1451FB6FD47 /* warningIcon.png */; };
-		751F9B759A15AA6709BE458E9DC6F2BF /* BarPagerTabStripViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = CAE4355C71122E92E7FE27BCE22075DC /* BarPagerTabStripViewController.swift */; };
-		754EF60588A54DD769DBC667B31F21A7 /* GULHeartbeatDateStorage.m in Sources */ = {isa = PBXBuildFile; fileRef = FD8AFB80EFD26F8FC736866043AF4BCE /* GULHeartbeatDateStorage.m */; };
-		755FBE2832D2B4740DD7C75E4B252262 /* FIRVersion.h in Headers */ = {isa = PBXBuildFile; fileRef = 6368CB0B70E79D3B060047C9BA8DC493 /* FIRVersion.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		766CB6844844E590B78F48ECFA19A59A /* PagingCollectionViewLayout.swift in Sources */ = {isa = PBXBuildFile; fileRef = FB3338DE3385FD65504593A424C2DED7 /* PagingCollectionViewLayout.swift */; };
-		769C1B3C55B9A53858B75AB1A4D1C0E5 /* SDAnimatedImagePlayer.m in Sources */ = {isa = PBXBuildFile; fileRef = 40CCF6FE6D0AEA5FA86A03AB6D017CE5 /* SDAnimatedImagePlayer.m */; };
-		76C90129AD7B5ADB9B586A37FEC7D5A7 /* FIRCLSContext.m in Sources */ = {isa = PBXBuildFile; fileRef = 55DC76677AF5A69494B1C8A4FE869FEF /* FIRCLSContext.m */; };
-		7710872EF59C44450E1F77B4FBD39FCA /* Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = 5F0DB71E436B5DF4B447A58D6AF6C1DB /* Extensions.swift */; };
-		7734F26FA6B1EC53A666F8502713D06A /* FIRCLSSettingsManager.m in Sources */ = {isa = PBXBuildFile; fileRef = 3EEEEF56439F25153402BB64DA6C0EDB /* FIRCLSSettingsManager.m */; };
-		77393FBB7001EDF1D008727982FB0943 /* UIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 544065BA7D1202329397F6CEE19EB5A2 /* UIKit.framework */; };
-		77892BFB8817DDC5E469D0FCAFD89C68 /* CTSwizzle.m in Sources */ = {isa = PBXBuildFile; fileRef = A94A253D9632B76609D7EDE2905703AB /* CTSwizzle.m */; };
-		778D379DA472B7960C3AD5793AC46BE0 /* OTPFieldView.h in Headers */ = {isa = PBXBuildFile; fileRef = C249D796D2C7B67F92E96A300FBDB866 /* OTPFieldView.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		779EF0D5E46FC57F6F1D0A6E22D58156 /* FIRStackFrame.h in Headers */ = {isa = PBXBuildFile; fileRef = 8F576B8745941F0B9576451A8502BAD5 /* FIRStackFrame.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		77C44B7462CC9F53B22514DA252FD2D4 /* FIRComponentType.h in Headers */ = {isa = PBXBuildFile; fileRef = A8337D8F717E66217894DE6286F19AC3 /* FIRComponentType.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		77CC43A35EA202D060F930D9EE457AA2 /* FBLPromise+Async.m in Sources */ = {isa = PBXBuildFile; fileRef = D2EB30295978AB2D2DEEA3483B393044 /* FBLPromise+Async.m */; };
-		784D91CAFCE068799FFF7FB29210E783 /* GULSwizzler.h in Headers */ = {isa = PBXBuildFile; fileRef = F7ED4941776C5F7F841E154033F59E68 /* GULSwizzler.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		78641E302EBA8FEEC279014988B97087 /* FIRComponent.h in Headers */ = {isa = PBXBuildFile; fileRef = 66771A7B5101D0CE83D1385C5359480C /* FIRComponent.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		78A65D6FFCA986A049CD2DD537B6FE57 /* GULKeychainUtils.m in Sources */ = {isa = PBXBuildFile; fileRef = 077877AA70D97E19333356C8BD9C10FB /* GULKeychainUtils.m */; };
-		78AB37B6F36E125BC6F27C0EFB544890 /* CTNotificationButton.h in Headers */ = {isa = PBXBuildFile; fileRef = 04A8F8FE4F2045DFC907FDDDB636CCD2 /* CTNotificationButton.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		78BD876BFB18AB60628F9F73C6B53CCB /* CTCarouselMessageCell~land.xib in Resources */ = {isa = PBXBuildFile; fileRef = C37742B99752EFDAFF2B53668ADEAF2F /* CTCarouselMessageCell~land.xib */; };
-		78CAEECE6C8ECBA595CD945579900A20 /* GDTCORStorageEventSelector.m in Sources */ = {isa = PBXBuildFile; fileRef = D1D4B9A118D6E7132E914D8E3DD32FE1 /* GDTCORStorageEventSelector.m */; };
-		7913EFBF1B434706B13644BFAFCB3226 /* FIRCLSSerializeSymbolicatedFramesOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = 90BB666EC5201F2FA54312EAC22809A3 /* FIRCLSSerializeSymbolicatedFramesOperation.m */; };
-		79C32B64C95E829252FDEB8FB506ACC6 /* FIRMessagingUtilities.h in Headers */ = {isa = PBXBuildFile; fileRef = 5C4F756CD1EB9EB5C132FB36C1496634 /* FIRMessagingUtilities.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		79D94903B5B6A1C4DE3879F69C17C710 /* SDImageGIFCoder.h in Headers */ = {isa = PBXBuildFile; fileRef = A6AA74BF3D050FC80D88C8CE01725718 /* SDImageGIFCoder.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		79EBFFCA0F1A148D6B9ED3F68A76BB9B /* FIRCLSUnwind_arm.c in Sources */ = {isa = PBXBuildFile; fileRef = 363C7E9A8FBF9B3D75A63FEEF1C07E08 /* FIRCLSUnwind_arm.c */; };
-		79F53EA53133D43CAE0E49B8BB12286C /* NSImage+Compatibility.h in Headers */ = {isa = PBXBuildFile; fileRef = 818D9AB4C1E64600C9B3F0AF19FB3B29 /* NSImage+Compatibility.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		7A5F0F600E4D4CD0087983C45B8A27D1 /* SDImageCacheConfig.h in Headers */ = {isa = PBXBuildFile; fileRef = 039634B2810524CB58834CDFDDA903FD /* SDImageCacheConfig.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		7AB0A64516EFED90875F1F2E67DA8A73 /* GDTCORConsoleLogger.m in Sources */ = {isa = PBXBuildFile; fileRef = 628BD629D941706AE4E2AF8BFFBF65D8 /* GDTCORConsoleLogger.m */; };
-		7B6D61D3AB077E8F14416EBFFC7EA679 /* FIRCLSMachO.m in Sources */ = {isa = PBXBuildFile; fileRef = C4B1F0FA204CB08919ACF3C8D211ABEE /* FIRCLSMachO.m */; };
-		7BDFA35EE848B87A8ABFB85E071A1E6C /* CTInterstitialImageViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = ACB47AAD35A3872B37372819081F7DFA /* CTInterstitialImageViewController.m */; };
-		7BE2833986613379EB0637E639F0F2D4 /* UIImage+GIF.h in Headers */ = {isa = PBXBuildFile; fileRef = 59C1E8BF6D2F7663ADB43041D6D9E523 /* UIImage+GIF.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		7CAA0F4C8A1F7B4B6ED2D6DD48B051E9 /* dwarf.h in Headers */ = {isa = PBXBuildFile; fileRef = D10E696D15691811DA86347980DFAE92 /* dwarf.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		7CD4BAB9C26C33C382C3FDDEF6A27CCD /* CTMessageMO+CoreDataProperties.h in Headers */ = {isa = PBXBuildFile; fileRef = 802B7339CC68A24D3C90DCB8D98DEDB9 /* CTMessageMO+CoreDataProperties.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		7CE208463E083936EB475F708FFF392B /* GULMutableDictionary.h in Headers */ = {isa = PBXBuildFile; fileRef = ED39822DDB11D20FDE7BD2C5CE635B74 /* GULMutableDictionary.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		7CF0403B68E6B870A6DB2B9D45AFA6EA /* FIRCLSReportAdapter.h in Headers */ = {isa = PBXBuildFile; fileRef = 5EFBDFFCEB582EFAE7688314A06B64BC /* FIRCLSReportAdapter.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		71CA7A38E4F468E6C0D9419EA1E5CF79 /* GDTCCTCompressionHelper.m in Sources */ = {isa = PBXBuildFile; fileRef = 4F049D6AD2EEAF811F6FC75FB21501C0 /* GDTCCTCompressionHelper.m */; };
+		71FD91B8ED24510B4D2B81F26A2DB95B /* CleverTapInboxMessageContent.m in Sources */ = {isa = PBXBuildFile; fileRef = B8CE77F2FECAAF1B074BFF49D897441A /* CleverTapInboxMessageContent.m */; };
+		72377F374F0474DCC4749277DEB1148B /* FirebaseMessaging.h in Headers */ = {isa = PBXBuildFile; fileRef = 1DFFA7DA4F922EA77956124FC176D320 /* FirebaseMessaging.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		7291498C578A06BAE482934CBED2E34E /* FIRExceptionModel.m in Sources */ = {isa = PBXBuildFile; fileRef = 5F7A636703BA71803F18A70D1069FF09 /* FIRExceptionModel.m */; };
+		72CC1CBDADC9927B0B87669518202CC6 /* PageViewManagerDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = CF18F0708393816E830C8C896394312C /* PageViewManagerDelegate.swift */; };
+		72D5AFD3BB8D91302C6D47CDCBDE79CC /* FIRCLSDataCollectionToken.m in Sources */ = {isa = PBXBuildFile; fileRef = 660CE1D13BE6A891D26775384BB8B152 /* FIRCLSDataCollectionToken.m */; };
+		72E9F025260883608C63360DF8D3A4A8 /* FIRAppInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 904B9657904509D35CC8C93DC541F3F8 /* FIRAppInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		730B27A4F901DC8834B1AC0721A65153 /* FIRComponent.h in Headers */ = {isa = PBXBuildFile; fileRef = FCA48A10ECA2067C0CAAC574673BDFAC /* FIRComponent.h */; settings = {ATTRIBUTES = (Private, ); }; };
+		738B24966BDB38CF720021F42D026CE0 /* CTCoverViewController~ipad.xib in Resources */ = {isa = PBXBuildFile; fileRef = 3DAA1F0FF36A6B57F0299313F69014B1 /* CTCoverViewController~ipad.xib */; };
+		7392A26A5B39E5AC678625829ED4C24A /* FIRInstallationsItem.h in Headers */ = {isa = PBXBuildFile; fileRef = 919D4992262B4EA21193C1B1B7372411 /* FIRInstallationsItem.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		73CC700D977B966F06DE5697973959BC /* SDImageCacheDefine.m in Sources */ = {isa = PBXBuildFile; fileRef = F90A3E8E0A85D2C05FC5C668D85B9789 /* SDImageCacheDefine.m */; };
+		747DF9F905C7D905B4103505BAD2C91F /* NSDictionary+FIRMessaging.m in Sources */ = {isa = PBXBuildFile; fileRef = E633ACCA005798F5A7B651288910CFB1 /* NSDictionary+FIRMessaging.m */; };
+		74B101FF95A6707CCA1CB622659CFAF4 /* CTUserMO.h in Headers */ = {isa = PBXBuildFile; fileRef = EC1AC7799753937B966CFDD579689734 /* CTUserMO.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		750873761D4C696850E2B96D03D06CE8 /* SDWebImageDownloaderConfig.h in Headers */ = {isa = PBXBuildFile; fileRef = 99D6D1B737590FB6E8EDF5B8C882C66A /* SDWebImageDownloaderConfig.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		751F9B759A15AA6709BE458E9DC6F2BF /* BarPagerTabStripViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = 6921B53F6F2D536240E3875A0F3F68BC /* BarPagerTabStripViewController.swift */; };
+		75240B35A5337C0362A81BA4E19C50A8 /* UIWindow+Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = 9011CD99A7594C717B50614473A5BE32 /* UIWindow+Extensions.swift */; };
+		75A9DAF75470D10278229C65F0442759 /* FIRDependency.h in Headers */ = {isa = PBXBuildFile; fileRef = 46B26F62E9AABE87BD017CD954153172 /* FIRDependency.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		760BE3F4C975ECE6B3AFDB55F66F0A78 /* UIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 544065BA7D1202329397F6CEE19EB5A2 /* UIKit.framework */; };
+		766CB6844844E590B78F48ECFA19A59A /* PagingCollectionViewLayout.swift in Sources */ = {isa = PBXBuildFile; fileRef = 30AFCAFEAF0927A792D4EA02A8502130 /* PagingCollectionViewLayout.swift */; };
+		76AC761205328FEFD3077EB6D1C7E58A /* FIRCLSContext.h in Headers */ = {isa = PBXBuildFile; fileRef = 73431BE418F7294C6578F0ECB34A11C8 /* FIRCLSContext.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		76DC71BB358DBE3722C24833F638BC77 /* FIRCLSRecordApplication.h in Headers */ = {isa = PBXBuildFile; fileRef = CE75A2F6F3A6B53F9FF8B5020AFCC05E /* FIRCLSRecordApplication.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		7710872EF59C44450E1F77B4FBD39FCA /* Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = B879EC1C1AE9F5A79D7B0D2F62F5F9E7 /* Extensions.swift */; };
+		772028C48F9B457848C7A1FE67EE3F93 /* SDImageGraphics.h in Headers */ = {isa = PBXBuildFile; fileRef = 56BCD35B8F352A8517F060325851669D /* SDImageGraphics.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		7731185DDAF42D278EA3153DBF37C011 /* GULUserDefaults.h in Headers */ = {isa = PBXBuildFile; fileRef = A4F4C099F6382321262B3DE0289FF4A9 /* GULUserDefaults.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		77892BFB8817DDC5E469D0FCAFD89C68 /* CTSwizzle.m in Sources */ = {isa = PBXBuildFile; fileRef = CAF03610D17B9C263036CED3BACF3388 /* CTSwizzle.m */; };
+		778D379DA472B7960C3AD5793AC46BE0 /* OTPFieldView.h in Headers */ = {isa = PBXBuildFile; fileRef = 25B25D4858321861FB66920B0C80626C /* OTPFieldView.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		78008C9B9C5422F079288991BED4C417 /* FIRCLSAllocate.h in Headers */ = {isa = PBXBuildFile; fileRef = 28DBA0C1B8435CD694C302E196800326 /* FIRCLSAllocate.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		7894D1BED38E54126B92AC17822C0448 /* FIRCLSConstants.h in Headers */ = {isa = PBXBuildFile; fileRef = 95A11A2F98D798B4C88693ACDEC66670 /* FIRCLSConstants.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		78A7F2A26C4DFEEDB528E665DE6FC605 /* SDFileAttributeHelper.m in Sources */ = {isa = PBXBuildFile; fileRef = 913C860DB6D228EB89CE6D9D9A202AFF /* SDFileAttributeHelper.m */; };
+		78AB37B6F36E125BC6F27C0EFB544890 /* CTNotificationButton.h in Headers */ = {isa = PBXBuildFile; fileRef = 133258E16B62920DD098E69077213EA9 /* CTNotificationButton.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		78BD876BFB18AB60628F9F73C6B53CCB /* CTCarouselMessageCell~land.xib in Resources */ = {isa = PBXBuildFile; fileRef = 899A27D877296BCEAAA70B967DC15BCA /* CTCarouselMessageCell~land.xib */; };
+		7904DCE8B30745AA050B56A92334AA96 /* SDImageCachesManagerOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = 97145410F0E6B675B42873449AE71350 /* SDImageCachesManagerOperation.m */; };
+		7947B831C0A0B1D6E01E862603BB6369 /* Animator.swift in Sources */ = {isa = PBXBuildFile; fileRef = 2708A54799DBC2FC9619EF81ADA80456 /* Animator.swift */; };
+		79B1709CE0971F06C276E859204F25BA /* FIRHeartbeatInfo.m in Sources */ = {isa = PBXBuildFile; fileRef = 6549897108C17BCC06880FEE925C8636 /* FIRHeartbeatInfo.m */; };
+		79DAF6ABF9F6F0189BBD7B86EBB1C2E7 /* GULHeartbeatDateStorageUserDefaults.m in Sources */ = {isa = PBXBuildFile; fileRef = 8008DC799F95A945AAA2A9EB5D53F25A /* GULHeartbeatDateStorageUserDefaults.m */; };
+		7A21456A072E91C06DC1E92F4ECE2BB8 /* FIRCLSMetricKitManager.m in Sources */ = {isa = PBXBuildFile; fileRef = EA6444E2D780213117CE1F1B67DBEB34 /* FIRCLSMetricKitManager.m */; };
+		7A512EFFFAD2ADA8CEF55F373E7DDE17 /* SDImageIOAnimatedCoderInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 0F48EDA3114DA9925E10DE51D1FC22E1 /* SDImageIOAnimatedCoderInternal.h */; settings = {ATTRIBUTES = (Private, ); }; };
+		7A5320B15F6789F272E61C44F9F4DBB0 /* SwiftMessages.Config+Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0B64AE9167872042E428F7D883D85F3D /* SwiftMessages.Config+Extensions.swift */; };
+		7A5CFE9F3A3302AF0638F62F8CC2747B /* FBLPromise+Any.h in Headers */ = {isa = PBXBuildFile; fileRef = 9A5D3DBD21753C092E20EFF97F4D4554 /* FBLPromise+Any.h */; };
+		7AC995F567A776FC1A80A9FA0733F3D1 /* IQNSArray+Sort.swift in Sources */ = {isa = PBXBuildFile; fileRef = F157AB646D2F7289B78AAD499BB95C8C /* IQNSArray+Sort.swift */; };
+		7BDFA35EE848B87A8ABFB85E071A1E6C /* CTInterstitialImageViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = AF600171DA5571A20A288CE4788087DF /* CTInterstitialImageViewController.m */; };
+		7BF48F0CDC03C76944609D5F67459062 /* UIImage+Transform.h in Headers */ = {isa = PBXBuildFile; fileRef = 18992E27AE700F56B5DB705B655F0F52 /* UIImage+Transform.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		7C0E885F2B33980C0BB35CAFD9DB3F10 /* errorIcon.png in Resources */ = {isa = PBXBuildFile; fileRef = F67B75C703FC4FA4EF6D45C2B0D2DDA9 /* errorIcon.png */; };
+		7C653612684DCF640A36D497B96E18D9 /* FirebaseInstallationsInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 177C4F6E9757398ACB98C4840D964A48 /* FirebaseInstallationsInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		7CA1B6FBF36476C11F7103DC01011F27 /* FIRMessagingLogger.h in Headers */ = {isa = PBXBuildFile; fileRef = 16FD9A38AA901B7278757CA810C37BDE /* FIRMessagingLogger.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		7CB02E4D89B2C677EC29D958E908CD92 /* FIRCLSApplicationIdentifierModel.h in Headers */ = {isa = PBXBuildFile; fileRef = D4AB846F7A0DB298D5AFA5851CC0FE5B /* FIRCLSApplicationIdentifierModel.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		7CD4BAB9C26C33C382C3FDDEF6A27CCD /* CTMessageMO+CoreDataProperties.h in Headers */ = {isa = PBXBuildFile; fileRef = ACF43001C088A976C6DE8B5CE34C3450 /* CTMessageMO+CoreDataProperties.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		7D31CBEF9A879F8AD7806EEF2E7B78D2 /* SDImageAPNGCoder.h in Headers */ = {isa = PBXBuildFile; fileRef = 871C9D15B4CF04F255E71D7D250BEB86 /* SDImageAPNGCoder.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		7D401C0F14C650A4EBE9EDDC05C17FFA /* FBLPromise+Recover.h in Headers */ = {isa = PBXBuildFile; fileRef = B5CABFCCB55360EEADD3B61E2CB7EF4B /* FBLPromise+Recover.h */; };
 		7D6533AA7E911EC19BE804F1E35F84B8 /* UIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 544065BA7D1202329397F6CEE19EB5A2 /* UIKit.framework */; };
-		7D777863DCF90F0154327370EF59F04D /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
-		7DAE3600C5AAF89B0F7026593C0C061C /* GDTCOREndpoints.h in Headers */ = {isa = PBXBuildFile; fileRef = A055960F42A5D25BFEF6917BFF9BBFAC /* GDTCOREndpoints.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		7DED5937D10DEEA844B3238B5B36338A /* SDWebImageError.m in Sources */ = {isa = PBXBuildFile; fileRef = 235F36BD15EDB534D4F7316788691B27 /* SDWebImageError.m */; };
-		7E04C6F3601AFA2D10EC233D6B5857A7 /* CleverTapPushNotificationDelegate.h in Headers */ = {isa = PBXBuildFile; fileRef = 3A76A8A571811625E8C3E63958B0A218 /* CleverTapPushNotificationDelegate.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		7E4A4D0EB163243ECE3AFABE1195BD0C /* pb_common.c in Sources */ = {isa = PBXBuildFile; fileRef = E991D622C40E76B70D2D189BCD72FC63 /* pb_common.c */; settings = {COMPILER_FLAGS = "-fno-objc-arc -fno-objc-arc -fno-objc-arc"; }; };
-		7EBAD86C185764DCB62BE395ABA259C5 /* CTInterstitialViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 3B2F662597A2EBEFAA53C7EA5E8186B9 /* CTInterstitialViewController.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		7F112B73EED48FC4BD77250AB05EA188 /* FBLPromise+Race.h in Headers */ = {isa = PBXBuildFile; fileRef = E8863E0E4AB98E0D86A6F34C048527F4 /* FBLPromise+Race.h */; };
-		7F355D21946C6C9048D02ADAB74915FF /* CoreGraphics.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1AB92E1A348B19D65DA69C7F0DAC8F11 /* CoreGraphics.framework */; };
-		7F41F8C8AEEFE29BB34105154215119C /* warningIcon@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = EFD95CF9BFB00C4D7022332AE8B700A8 /* warningIcon@2x.png */; };
-		802859A858E7FD17EF7FA3546E7B4792 /* IQKeyboardReturnKeyHandler.swift in Sources */ = {isa = PBXBuildFile; fileRef = 7F53103EE456620E8551DE4198710519 /* IQKeyboardReturnKeyHandler.swift */; };
-		802E42278FDD31DCC4DBDE78608E3965 /* PagingViewControllerDataSource.swift in Sources */ = {isa = PBXBuildFile; fileRef = 9A4986A40B6980684145409300DE696E /* PagingViewControllerDataSource.swift */; };
-		808A353132FD99B4E1942C9A9C8D4ED2 /* SDAnimatedImageView+WebCache.m in Sources */ = {isa = PBXBuildFile; fileRef = 7A83EAAED9E524396B455FEFC76F052E /* SDAnimatedImageView+WebCache.m */; };
-		80E9409FD10C1478EBD4D65348AF1E21 /* CTInAppNotification.h in Headers */ = {isa = PBXBuildFile; fileRef = E2FAB24C9EFAAE21DAB2D6F469B3B96B /* CTInAppNotification.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		811206475EDA13A7A674FD39ACD535A4 /* CleverTapProductConfig.m in Sources */ = {isa = PBXBuildFile; fileRef = A4466E4714FA30E1D83D5DEF20BF491A /* CleverTapProductConfig.m */; };
-		8122195B09E3EE709B12C9540EECF8F3 /* FIRMessagingTokenFetchOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = FEE2EB4FA78F37BEAA281ADBF2ED4FB1 /* FIRMessagingTokenFetchOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		817371E07E965B2D7EF2808E9111E3E1 /* FBLPromise+Then.h in Headers */ = {isa = PBXBuildFile; fileRef = C9D2DD8BA626C50B702D0CF3B4089851 /* FBLPromise+Then.h */; };
-		81973EC37E3F93D769AC67B4E6DB7AB7 /* FirebaseCoreInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = BD81C09B15F101B235C2A45BEE1339E7 /* FirebaseCoreInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		81ADFCFB860FA37B8CD72466083736F1 /* SDImageGIFCoder.m in Sources */ = {isa = PBXBuildFile; fileRef = 16947967B3C830BE2415845243AAD805 /* SDImageGIFCoder.m */; };
-		8214777A74D6B9F54CE785B468327C24 /* FIRMessagingAnalytics.m in Sources */ = {isa = PBXBuildFile; fileRef = 4D298BB1CA2DE09E32B418233BE7937F /* FIRMessagingAnalytics.m */; };
-		823FAB85E5B7B9AC41BED31229B020DE /* CTInAppFCManager.m in Sources */ = {isa = PBXBuildFile; fileRef = 65404EB6DDE823D6EE46638E3FD11F55 /* CTInAppFCManager.m */; };
-		828210A978AF1F92B65D5566716E29CC /* FIRCLSExecutionIdentifierModel.h in Headers */ = {isa = PBXBuildFile; fileRef = 31785E78D23EE508F9A53BC95375A720 /* FIRCLSExecutionIdentifierModel.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		82E2C64BB279525291C61E48E3CD2303 /* SDMemoryCache.m in Sources */ = {isa = PBXBuildFile; fileRef = 700C267616DA118338875B315AB6AF23 /* SDMemoryCache.m */; };
-		8318B93B2AC1A4CBAD7BE9955D53CC8E /* FIRInstallationsAuthTokenResult.h in Headers */ = {isa = PBXBuildFile; fileRef = 6ABEF729F6524C8D5A99059A015271FB /* FIRInstallationsAuthTokenResult.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		839109801AA96E1C8CE6AE1D95681312 /* CardView.xib in Resources */ = {isa = PBXBuildFile; fileRef = C9BCF3C46016439498328D0C3342FDEB /* CardView.xib */; };
-		83A820E232690B67321884F590B27B44 /* PromisesObjC-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 7F13DABDD01C960E2CD79E1ACDCBA0F7 /* PromisesObjC-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		83B015502666C971E22A5485F7E4E976 /* FIRLibrary.h in Headers */ = {isa = PBXBuildFile; fileRef = 274CE0CF16368739A7F818F99FD6C5F6 /* FIRLibrary.h */; settings = {ATTRIBUTES = (Private, ); }; };
-		83B2B62EC728656499CF3EA3D3E84F2B /* Tween.swift in Sources */ = {isa = PBXBuildFile; fileRef = 96FA9E3EEA03333F3658A39E9F4BEFD7 /* Tween.swift */; };
-		83D39FD24123D044E0BB6B1131044B41 /* SDImageCodersManager.m in Sources */ = {isa = PBXBuildFile; fileRef = B54D7C4933120FE1208FFD70EB56C3DC /* SDImageCodersManager.m */; };
-		83E0B27AC96EAA333CCC2CDC82FA0308 /* FIRInstallations.h in Headers */ = {isa = PBXBuildFile; fileRef = C6DD7DCCAFCE1A20C07D96E91B4A4436 /* FIRInstallations.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		840DA98A675086D3353CF9C3AAE83F43 /* CTInboxController.m in Sources */ = {isa = PBXBuildFile; fileRef = 2FD8FC254BC2F17D163A72B4B8C38EE5 /* CTInboxController.m */; };
-		840F5F3A1DC99104C70DDDE418DB9672 /* BaseButtonBarPagerTabStripViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = E31865E711FDC9A3E6EC61C5CF8660CF /* BaseButtonBarPagerTabStripViewController.swift */; };
-		84E24C8868A892A187981196FA436770 /* GULAppEnvironmentUtil.m in Sources */ = {isa = PBXBuildFile; fileRef = 0E4F0E2804CD32F9F985A8131A1D882A /* GULAppEnvironmentUtil.m */; };
-		850B95CAFCA7B038234CEDA38FEB81BB /* GULReachabilityMessageCode.h in Headers */ = {isa = PBXBuildFile; fileRef = FB2D0E09FA88BE3AB95F94333DF76A4B /* GULReachabilityMessageCode.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		8534324BA0501321B9251AA6AA5039D9 /* UIColor+interpolation.swift in Sources */ = {isa = PBXBuildFile; fileRef = F9751716552BC5A0EA3F840BFD65CD11 /* UIColor+interpolation.swift */; };
-		858136FE628C604AD8D4BAAC20AA8A43 /* warningIcon@3x.png in Resources */ = {isa = PBXBuildFile; fileRef = D0CDB7129E8BC265EF3C533EEB332272 /* warningIcon@3x.png */; };
-		859EC38B225E881CBC0F301B22012A63 /* PagingIndicatorMetric.swift in Sources */ = {isa = PBXBuildFile; fileRef = 9231E31B41DA869B29BCA0E5F3335487 /* PagingIndicatorMetric.swift */; };
-		859ECF984801B1938E5780504A0B624B /* warningIconSubtle@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = 9AB99E0AA0FB268DD001E20CCCC49EB6 /* warningIconSubtle@2x.png */; };
-		85C6B7315BC7A3905CA03C41FAD7A985 /* PromisesObjC-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = F570B429E4C673A409F19D1C3115AD28 /* PromisesObjC-dummy.m */; };
-		85FC8DE2B437A9C9FF0BF0C73D46EBA4 /* CTInboxUtils.m in Sources */ = {isa = PBXBuildFile; fileRef = F1C38274A3F6FC3983ECEFCF7ACCD355 /* CTInboxUtils.m */; };
-		863497031D18FB0DA22323D66EDC9DF1 /* FBLPromiseError.m in Sources */ = {isa = PBXBuildFile; fileRef = 6D3BD5FEA5AD94E88DF03D4D71B70F75 /* FBLPromiseError.m */; };
-		86A48CD0D1EA36E18E58FEDADAF9CBB2 /* CTBaseHeaderFooterViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 8188DDB43C025E0E3CDA638C06789DD0 /* CTBaseHeaderFooterViewController.m */; };
-		86A55DF9896BE6EF9166E0529F6797F7 /* cct.nanopb.c in Sources */ = {isa = PBXBuildFile; fileRef = 7538EF8DEF0292A516861C0429EC9279 /* cct.nanopb.c */; };
-		8785CCFBAB3778DD3636FE0FD26D46F0 /* KeyboardTrackingView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 7B811F777909A902B640AAB8B8E1AF20 /* KeyboardTrackingView.swift */; };
-		878A5D9F442754295D2D883ADC2DFDD5 /* FIRCLSUnwind_x86.c in Sources */ = {isa = PBXBuildFile; fileRef = CA451C5D09C7D317C3FDAAEE98A21093 /* FIRCLSUnwind_x86.c */; };
-		879420CFFFB1F94660D2F5516D7A3AE4 /* MessageView.xib in Resources */ = {isa = PBXBuildFile; fileRef = E9746C7D95991947E02339799B2B0BAD /* MessageView.xib */; };
-		87E563A41F923F9C9F3DB8BB1746D4B5 /* FIRCLSThreadArrayOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = C21CDF5DEE8144AC10518D874970659F /* FIRCLSThreadArrayOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		881167702D8D75997D27CDBFDDD2DAB4 /* FirebaseCore-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 426C7E252375112F2391A079A6F0C643 /* FirebaseCore-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		88A6CF5082770229B0B4F12E27931BE4 /* SurfaceView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 738ABC6EB266AF2C57773B6CEAA731E4 /* SurfaceView.swift */; };
-		88BC5775E47FB65A52B65E83C76E1957 /* GDTCORTransformer.m in Sources */ = {isa = PBXBuildFile; fileRef = 4E31A80B073D35AB305E882CBF919A25 /* GDTCORTransformer.m */; };
-		890C0C3E5AFCBC176143ED22F26589F2 /* FIRCLSApplication.m in Sources */ = {isa = PBXBuildFile; fileRef = BB96493DB80BC929B0C4953144A2EFD1 /* FIRCLSApplication.m */; };
-		897F7228B2F44EF00268D583F9963D81 /* FIRCLSProcessReportOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = 2CC5217A3DA772F8A728C96FA72B1FE2 /* FIRCLSProcessReportOperation.m */; };
-		899D899387EBCF56B8CF923FDDD67C78 /* PagingItem.swift in Sources */ = {isa = PBXBuildFile; fileRef = B0A35EE1E6FF5F15A43AF04760C54B9E /* PagingItem.swift */; };
-		89B8C4249EFBB031E7401EDD7ED0D48B /* FIRExceptionModel_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 452897816E60A9C8FFF8BD9C9D7F97DC /* FIRExceptionModel_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		89F607685125373F4C657794D1A8D0CA /* FBLPromise.h in Headers */ = {isa = PBXBuildFile; fileRef = 12F5F1CE30E0E423EE4E479F3EFA2ED9 /* FBLPromise.h */; };
-		8A4BC69E15919505A6F89191F0945C91 /* FIRCoreDiagnosticsConnector.h in Headers */ = {isa = PBXBuildFile; fileRef = 75FBA4C8CAFB900A6AB5946D068EFCFC /* FIRCoreDiagnosticsConnector.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		8A70E704B622ABC6C32C6CC42C53BB79 /* PagingTransition.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06636A73A530F38765377706E8AD25D9 /* PagingTransition.swift */; };
-		8B01661451E4939639ABD26C7C817485 /* FBLPromise+Retry.m in Sources */ = {isa = PBXBuildFile; fileRef = 4A044776FA869FD9B80DCA52437BD0C9 /* FBLPromise+Retry.m */; };
-		8B6BEC68223AD4BD450BE8A160AB491F /* SDAssociatedObject.h in Headers */ = {isa = PBXBuildFile; fileRef = C06F55269FE297F8B9A981B1E0A9C70D /* SDAssociatedObject.h */; settings = {ATTRIBUTES = (Private, ); }; };
-		8B9CDBE3FFD712120CD66DD8B06C44E4 /* ParameterEncoder.swift in Sources */ = {isa = PBXBuildFile; fileRef = E31664BE47B2C3497D11F647DF59069A /* ParameterEncoder.swift */; };
-		8BAF2CB4A5C4A040CA1266BB9D84DA56 /* CTCoverViewController~ipadland.xib in Resources */ = {isa = PBXBuildFile; fileRef = 3371FB9572DC79D6092E8EA2966E32F4 /* CTCoverViewController~ipadland.xib */; };
-		8BB57FC2CDE9C6DFA0CEF1280BC4415E /* IQUITextFieldView+Additions.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1DF7E75690C0D039194B91B8CBA8A13A /* IQUITextFieldView+Additions.swift */; };
-		8BEB733ABB5199365D51253F42943BE7 /* FIRInstallationsBackoffController.h in Headers */ = {isa = PBXBuildFile; fileRef = 37E30B3BC5A5B7A6006AF72B82D33B83 /* FIRInstallationsBackoffController.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		8BFA45ACC5AE73A4CF753AD239DDEE7D /* FIRCrashlyticsReport.m in Sources */ = {isa = PBXBuildFile; fileRef = 7394484066B32499D3E818FEBF2854DB /* FIRCrashlyticsReport.m */; };
-		8C2C4CB578E2405EA4424CC45145AB0B /* FirebaseCrashlytics.h in Headers */ = {isa = PBXBuildFile; fileRef = 5CBBF3D4CE3AF56685D6134DCFD93BEE /* FirebaseCrashlytics.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		7D7AAE9DC4E068C03E46BF311B28D548 /* FBLPromise.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = B2B942EA18BC89BCAEACBF54F1A70AB2 /* FBLPromise.h */; };
+		7E04C6F3601AFA2D10EC233D6B5857A7 /* CleverTapPushNotificationDelegate.h in Headers */ = {isa = PBXBuildFile; fileRef = DFA08B716A8E4805E05ABD578C564025 /* CleverTapPushNotificationDelegate.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		7E08A94F10299EADB052CAE34F2BFA00 /* TopBottomAnimation.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4A288F4D11318E672F918E1C5C6FA39E /* TopBottomAnimation.swift */; };
+		7E3EB531C9943E7CB3E16B5FB75D107B /* GDTCORFlatFileStorage.m in Sources */ = {isa = PBXBuildFile; fileRef = FC93A0A8DF4A56459DD6232B5715ACEB /* GDTCORFlatFileStorage.m */; };
+		7E91073609F81D6E7E8DFD8CA25B6828 /* FIRBundleUtil.m in Sources */ = {isa = PBXBuildFile; fileRef = E6CD202B2186830E9B5B88003916264D /* FIRBundleUtil.m */; };
+		7E98E18B747F60326E4BA87E15839F29 /* UIEdgeInsets+Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = 85AAE72414FAD59ECE4074D8D39C447A /* UIEdgeInsets+Extensions.swift */; };
+		7EBAD86C185764DCB62BE395ABA259C5 /* CTInterstitialViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = BEE034AAF1B23D5E08D0338E82541CE1 /* CTInterstitialViewController.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		7F05F15FDF81403B56A7CF0890F69169 /* FIRMessagingContextManagerService.m in Sources */ = {isa = PBXBuildFile; fileRef = F638A5DDF8C847FA5A744A156E48C50D /* FIRMessagingContextManagerService.m */; };
+		7F21315404037A67C803D2D0DDF065F2 /* FIRCLSFileManager.m in Sources */ = {isa = PBXBuildFile; fileRef = 8677B938A7B82A80A82B426E298CDED9 /* FIRCLSFileManager.m */; };
+		7F8921F44408464EC830415C1612025C /* FIRMessagingTokenManager.m in Sources */ = {isa = PBXBuildFile; fileRef = 045D7C318D3BE9148C6FA3F9BFC63D51 /* FIRMessagingTokenManager.m */; };
+		7FDFB25E51BE52A48A49D3C661B0223E /* GULNetworkInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 8A41C3706BB80D823399D02A6F597B1A /* GULNetworkInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		802A2BC11D010ED5E4DE922296F94819 /* FBLPromise+Then.h in Headers */ = {isa = PBXBuildFile; fileRef = 9E3B409662DD2BF2C57414A31366CB21 /* FBLPromise+Then.h */; };
+		802E42278FDD31DCC4DBDE78608E3965 /* PagingViewControllerDataSource.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8E63827255DEB5C62D6F7CCD45C675C8 /* PagingViewControllerDataSource.swift */; };
+		80C07E14D26CD0AB31A816F786B2EE10 /* GDTCORStorageEventSelector.m in Sources */ = {isa = PBXBuildFile; fileRef = 169518FA227FE4644FA62E929600D37C /* GDTCORStorageEventSelector.m */; };
+		80E0986CDA0DFE08B078FE0581B0A6F5 /* GULNetworkConstants.h in Headers */ = {isa = PBXBuildFile; fileRef = F130B5FA55ABF6D4CF62A78EFC8861DE /* GULNetworkConstants.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		80E9409FD10C1478EBD4D65348AF1E21 /* CTInAppNotification.h in Headers */ = {isa = PBXBuildFile; fileRef = 55254199CDD0DC8A98D31B63DE6A42CF /* CTInAppNotification.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		80F81710BF822F1A62F835208FA219CC /* NSError+FIRMessaging.m in Sources */ = {isa = PBXBuildFile; fileRef = E409B55582C666D4707D4172EDFB4BE4 /* NSError+FIRMessaging.m */; };
+		811206475EDA13A7A674FD39ACD535A4 /* CleverTapProductConfig.m in Sources */ = {isa = PBXBuildFile; fileRef = D6969F1699DFD7D2AE65096976CF1ED6 /* CleverTapProductConfig.m */; };
+		812F84F891D5631C43317DD462F981E5 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
+		81B30AB6EE771D5C3BB92F8E063935EE /* FIRDependency.h in Headers */ = {isa = PBXBuildFile; fileRef = E476AC1C3D8DF310FE134E01AC0B0602 /* FIRDependency.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		81C0BCDC6CC17D4F0517646F1920E146 /* FIRInstallationsIIDTokenStore.h in Headers */ = {isa = PBXBuildFile; fileRef = 4FD367005B662FDDAD905941D9A32DF7 /* FIRInstallationsIIDTokenStore.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		823535C7BF9A319C83F8D6C2332CDA96 /* FIRInstallationsItem.m in Sources */ = {isa = PBXBuildFile; fileRef = AFD7FF7AD188A2E32715996C287FB500 /* FIRInstallationsItem.m */; };
+		823FAB85E5B7B9AC41BED31229B020DE /* CTInAppFCManager.m in Sources */ = {isa = PBXBuildFile; fileRef = CA58B3CE3D831F501FC6C61EE42A1D37 /* CTInAppFCManager.m */; };
+		82618045E4AB4C7BEACCD177557E0325 /* SDGraphicsImageRenderer.h in Headers */ = {isa = PBXBuildFile; fileRef = BF9482696EBE0CFFF7D442C652781D9C /* SDGraphicsImageRenderer.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		82636249DC8B2150E918444CD6553428 /* FIRCLSSerializeSymbolicatedFramesOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = 2596D0B4A54BA72440B5D8D6A45E3E24 /* FIRCLSSerializeSymbolicatedFramesOperation.m */; };
+		829CB80EA4E8E88BF0AF6A4BABD28C0F /* FirebaseCoreInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 9427C0C5EE54092D8C85D46DD228BB66 /* FirebaseCoreInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		82CB9E4F10715547BD21B9186E0DCEFA /* FIRCoreDiagnostics.h in Headers */ = {isa = PBXBuildFile; fileRef = 7FC162E2C7133D351C2899E8FD257538 /* FIRCoreDiagnostics.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		831A1A4EB504567F4D8410A45146FAD1 /* GoogleDataTransport.h in Headers */ = {isa = PBXBuildFile; fileRef = 29F45F731D1185D4B2B51E432440D735 /* GoogleDataTransport.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		83B2B62EC728656499CF3EA3D3E84F2B /* Tween.swift in Sources */ = {isa = PBXBuildFile; fileRef = 162678BFCC1CB8F74EB24AF27C602B45 /* Tween.swift */; };
+		840DA98A675086D3353CF9C3AAE83F43 /* CTInboxController.m in Sources */ = {isa = PBXBuildFile; fileRef = 05C4F5AD14860990D4427A47C647846A /* CTInboxController.m */; };
+		840F5F3A1DC99104C70DDDE418DB9672 /* BaseButtonBarPagerTabStripViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = E49568E0429B2A2B1F4815729744253E /* BaseButtonBarPagerTabStripViewController.swift */; };
+		843666F349D56CFCAA9094F318BE540A /* FIRAppInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = F35EEB79894EDA6A75723A67A459A175 /* FIRAppInternal.h */; settings = {ATTRIBUTES = (Private, ); }; };
+		84669F8865BB677B0D8BB05EECCD2187 /* FIROptionsInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 0E0468412EF820D639BE54469632A91C /* FIROptionsInternal.h */; settings = {ATTRIBUTES = (Private, ); }; };
+		8534324BA0501321B9251AA6AA5039D9 /* UIColor+interpolation.swift in Sources */ = {isa = PBXBuildFile; fileRef = 148B695EA098BF5DD231693DD2946588 /* UIColor+interpolation.swift */; };
+		859C963484876683987910FD42EECB4C /* FIRCLSInstallIdentifierModel.m in Sources */ = {isa = PBXBuildFile; fileRef = 73DCC30A0975CF8EC7D374DC264B75C6 /* FIRCLSInstallIdentifierModel.m */; };
+		859EC38B225E881CBC0F301B22012A63 /* PagingIndicatorMetric.swift in Sources */ = {isa = PBXBuildFile; fileRef = D268C1181FED7843260369844E7EAFF8 /* PagingIndicatorMetric.swift */; };
+		85C702AF38BF752887DAB839FF0541D3 /* FIRCLSDemangleOperation.mm in Sources */ = {isa = PBXBuildFile; fileRef = E17DDFFA2040EE80A995DBF526A6C13B /* FIRCLSDemangleOperation.mm */; };
+		85CC33FEEF24F9B55BDA71F686144752 /* FIRMessaging.m in Sources */ = {isa = PBXBuildFile; fileRef = 992383111143FE844CF9DE6025C34787 /* FIRMessaging.m */; };
+		85F13B069B06ADF2B6DCA622E4645110 /* IQKeyboardManagerConstants.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8C48377EA077671A39B5574C3FCADEEB /* IQKeyboardManagerConstants.swift */; };
+		85FC8DE2B437A9C9FF0BF0C73D46EBA4 /* CTInboxUtils.m in Sources */ = {isa = PBXBuildFile; fileRef = 9374EC2B1FC9846AC5348C44358EAD6F /* CTInboxUtils.m */; };
+		86A03DE9366D1BE94EB99AA387EACD1F /* IQKeyboardManager.swift in Sources */ = {isa = PBXBuildFile; fileRef = 930CF5ECEDCB86BFF9BC29BD048F88C8 /* IQKeyboardManager.swift */; };
+		86A48CD0D1EA36E18E58FEDADAF9CBB2 /* CTBaseHeaderFooterViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = B7E7CEBCCC3961A8F387BCFB258C5C3F /* CTBaseHeaderFooterViewController.m */; };
+		8767D9BD222FC9FF9947529A98A23006 /* FIRInstallationsIDController.h in Headers */ = {isa = PBXBuildFile; fileRef = 78307D57ABD9E31903729F7F3326348F /* FIRInstallationsIDController.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		87E48F37449E30E126777A000BFA7400 /* FIRCLSApplication.h in Headers */ = {isa = PBXBuildFile; fileRef = 6F52B54A15572161B60F4185F519BD12 /* FIRCLSApplication.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		87F04A3EA18F7C251F989A042052A45C /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
+		8826B02725FE95E5655E4020A86921A4 /* FBLPromise+Await.m in Sources */ = {isa = PBXBuildFile; fileRef = 792E6BC26BD4A63ABBE9107A874D57D4 /* FBLPromise+Await.m */; };
+		88A6CF5082770229B0B4F12E27931BE4 /* SurfaceView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1220F0AEBD402990A094A56E5519B252 /* SurfaceView.swift */; };
+		89462FBE70EF4D60D6B81989D00E4211 /* FIRMessagingAuthService.h in Headers */ = {isa = PBXBuildFile; fileRef = 7708A2B7CDA55281214684B732DDBE1E /* FIRMessagingAuthService.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		8973C7EC9AFBFD8F4BE56CD6FFFBAB59 /* NSImage+Compatibility.h in Headers */ = {isa = PBXBuildFile; fileRef = 350A7FFB43A7D07F8495A4C694AEB331 /* NSImage+Compatibility.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		898FE9B1DB371B29D1E5487C0FBFA6AE /* FIRCLSExistingReportManager_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 5B78F3209CA839471013A2D38D81E3B0 /* FIRCLSExistingReportManager_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		899D899387EBCF56B8CF923FDDD67C78 /* PagingItem.swift in Sources */ = {isa = PBXBuildFile; fileRef = D026C995A40EB0333C541D13D45A31A4 /* PagingItem.swift */; };
+		89CFF1424E05E99923C24C9EB400C8CE /* UIImage+Metadata.m in Sources */ = {isa = PBXBuildFile; fileRef = FB66BB6227D040E60504E6114B2F8ADB /* UIImage+Metadata.m */; };
+		8A55F620072EC751FE9F4D65766FB1B8 /* SDWebImageCacheKeyFilter.m in Sources */ = {isa = PBXBuildFile; fileRef = 7F842FD28DB8C393443BACAC674D713C /* SDWebImageCacheKeyFilter.m */; };
+		8A70E704B622ABC6C32C6CC42C53BB79 /* PagingTransition.swift in Sources */ = {isa = PBXBuildFile; fileRef = B96887F917A1A6F204BA5504597642A5 /* PagingTransition.swift */; };
+		8A7DD42DE2D9F28ADFE90D47B5F75545 /* SDImageCoderHelper.m in Sources */ = {isa = PBXBuildFile; fileRef = FAA3E4A383368B6CF5E734BDD46B288F /* SDImageCoderHelper.m */; };
+		8A84899363D0A2125C4D593BB84E00AC /* GDTCORFlatFileStorage+Promises.h in Headers */ = {isa = PBXBuildFile; fileRef = 239E3D57A3C472059A5752A8DB6F765A /* GDTCORFlatFileStorage+Promises.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		8A8CF4AF6A9E839F8D6AC8E8A7B7C63A /* FIRCLSRecordApplication.m in Sources */ = {isa = PBXBuildFile; fileRef = B672DD1F47ADD7BB6AAE8A75E6118078 /* FIRCLSRecordApplication.m */; };
+		8AA303821890FC122C667B14CC70E8BD /* FIRCLSFABHost.m in Sources */ = {isa = PBXBuildFile; fileRef = 3DB8FF34B98217A38B079D05F3D9C911 /* FIRCLSFABHost.m */; };
+		8AF999CCB198F34068E9AC558864262D /* Error.swift in Sources */ = {isa = PBXBuildFile; fileRef = B79CB94D58DB7969CB483288F070EC32 /* Error.swift */; };
+		8B890EA37AB43BEC8B85DFEBFCE45D56 /* FIRMessagingTopicOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = 2B6872F6A9338C05654C2CCAD2957788 /* FIRMessagingTopicOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		8B9CDBE3FFD712120CD66DD8B06C44E4 /* ParameterEncoder.swift in Sources */ = {isa = PBXBuildFile; fileRef = FE88BB7F42598792778C7AC682DE78B6 /* ParameterEncoder.swift */; };
+		8BAF2CB4A5C4A040CA1266BB9D84DA56 /* CTCoverViewController~ipadland.xib in Resources */ = {isa = PBXBuildFile; fileRef = DE6FA8F46B37ECECFE85979B3D216A24 /* CTCoverViewController~ipadland.xib */; };
+		8BCBC20BDAFCE06A3785FFC4DB8AA26C /* NSDictionary+FIRMessaging.h in Headers */ = {isa = PBXBuildFile; fileRef = 41616E9CCD4D12F366F56952B914D600 /* NSDictionary+FIRMessaging.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		8C1EE33948C6992C7FB59CA0DB8CFD56 /* PromisesObjC-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = B3D38EBE8AB93F9244F766EC1644C2A6 /* PromisesObjC-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		8C230A669695FEA245561E7F0FF81525 /* SystemConfiguration.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = DDC55D0CD2D15D3E411ACD99C6C289B5 /* SystemConfiguration.framework */; };
+		8C2A2ABAA196AD49D78F684700502EAF /* GULNetworkMessageCode.h in Headers */ = {isa = PBXBuildFile; fileRef = A26D4BCC11F327801F3D688FCB65EB65 /* GULNetworkMessageCode.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		8CB225B687648069D61F6097FEA7EE0D /* FIRDependency.h in Headers */ = {isa = PBXBuildFile; fileRef = D0F318D8AFA2870D8A87CF0BD4FB6612 /* FIRDependency.h */; settings = {ATTRIBUTES = (Project, ); }; };
 		8D158FB7773B86AAE9F81A3DFF8F7275 /* UIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 544065BA7D1202329397F6CEE19EB5A2 /* UIKit.framework */; };
-		8D38B201BAC6C3502BF22ADCCEF57C67 /* GULUserDefaults.h in Headers */ = {isa = PBXBuildFile; fileRef = D369BA43E19F3583F4E55252030A1516 /* GULUserDefaults.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		8D39E5503F765E123AF9DEFE33847B49 /* CTPinnedNSURLSessionDelegate.h in Headers */ = {isa = PBXBuildFile; fileRef = 9CBACED061EFFA1429437A81091E9A64 /* CTPinnedNSURLSessionDelegate.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		8D5AEFDE581B4F14A9F27EFB3ECC025A /* warningIconLight.png in Resources */ = {isa = PBXBuildFile; fileRef = 72F370F1CB968143725F10FA1B9848E1 /* warningIconLight.png */; };
-		8DAABF2486A345CE74E7F94672ECAA3E /* FIRMessagingBackupExcludedPlist.m in Sources */ = {isa = PBXBuildFile; fileRef = FAEEC09AD67161899ECE61B427DD4836 /* FIRMessagingBackupExcludedPlist.m */; };
-		8DB236E7BCE38E7D23669853E1D5326C /* UIImageView+WebCache.h in Headers */ = {isa = PBXBuildFile; fileRef = 16A1EB6B7DDC93422EFB234A02E1893C /* UIImageView+WebCache.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		8DDCEFDEA90164023A97179B5761D1C0 /* cct.nanopb.h in Headers */ = {isa = PBXBuildFile; fileRef = 28221462FA0FCF4EEFAA22D797C0B0FA /* cct.nanopb.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		8DDD88BF51F82A2B8C60B4FB41E2933B /* UIButton+WebCache.h in Headers */ = {isa = PBXBuildFile; fileRef = 15C6A36B6E99431DE86A48313DD6C352 /* UIButton+WebCache.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		8E113DD76344E4773338DA354ADD8CDD /* GDTCOREvent.h in Headers */ = {isa = PBXBuildFile; fileRef = FB8620FB34C1FD3A4BEED9A8F97D2F0C /* GDTCOREvent.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		8E4DF1246722F4F7FF3D91E2BA556361 /* SDWebImage-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 0C78FF2E2A7F1D844A45F6E84F7BDFBD /* SDWebImage-dummy.m */; };
-		8E630F479B165EE06F0353D4B27D7D81 /* SDWebImageOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = B2597CDB1FE651972477EDEC65B66C70 /* SDWebImageOperation.m */; };
-		8E6448C2246F51E201C6389287E8C9D4 /* FIRInstallationsIDController.h in Headers */ = {isa = PBXBuildFile; fileRef = 0D06BA4CF26161ABF9D97B1A7F61DAEB /* FIRInstallationsIDController.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		8E7265CB1829E7341A48771CF135B795 /* FIRCLSMachOBinary.m in Sources */ = {isa = PBXBuildFile; fileRef = 7088FC2DBC965B8F024B483857067DF8 /* FIRCLSMachOBinary.m */; };
-		8EBEA4AEFE15E9311E281BF588FB7BD0 /* CTCarouselImageMessageCell.h in Headers */ = {isa = PBXBuildFile; fileRef = DEBF385E3523B08F8CA8E1635BF40412 /* CTCarouselImageMessageCell.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		8ED24F369A278CB054814C9C27648C6D /* FIRComponentContainerInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 3BF437B3A106575D16E74D8CE7221EBD /* FIRComponentContainerInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		8EDB69B939407D391DA66A06BBA6F5CE /* PagingOptions.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8A8A168C6765675B3DA33C8F05F27563 /* PagingOptions.swift */; };
-		8F06181F47B9D71CF77F97261BA6C452 /* YTPlayerView.h in Headers */ = {isa = PBXBuildFile; fileRef = 7AE13F62F63F0793892128446B79B076 /* YTPlayerView.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		8F6CA588FA4C82A681ABABD2518A7F5C /* CTCertificatePinning.h in Headers */ = {isa = PBXBuildFile; fileRef = 90033078E7C78E82A34D4E0788C963F5 /* CTCertificatePinning.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		8F97352B2E3B42951F6F153099E9EE31 /* FIRCoreDiagnosticsConnector.h in Headers */ = {isa = PBXBuildFile; fileRef = F2A7E303B90CBA1A05BADCF4BFF61546 /* FIRCoreDiagnosticsConnector.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		8F9E1EEF2FE52E3231A769722D5C4148 /* ServerTrustEvaluation.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0CF771E147DAA3F457883DAFF60DAB84 /* ServerTrustEvaluation.swift */; };
-		8FA44AB5DC9F9C4D8B63032C6D89033E /* FIRCLSSettingsManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 5490CA538BA9A830F1E9D856640557AA /* FIRCLSSettingsManager.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		8FC09D3EE441FA247CA07D88DF5D8B49 /* SDMemoryCache.h in Headers */ = {isa = PBXBuildFile; fileRef = 358B2E45089C6522C6B74D44DCBCDF15 /* SDMemoryCache.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		8FCB91EC633FB70A0075982DB24D1AD0 /* GULURLSessionDataResponse.m in Sources */ = {isa = PBXBuildFile; fileRef = 62B2D24D82EC3B7249BF77C3CEE96AA1 /* GULURLSessionDataResponse.m */; };
-		8FD684EA3B49F79A5FF9BBA1B665F819 /* SDImageCoder.h in Headers */ = {isa = PBXBuildFile; fileRef = 7743516977969390EB004AEDA9585F78 /* SDImageCoder.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		8FEE9EFFCD4D176E132AC69156FCE810 /* successIconSubtle@3x.png in Resources */ = {isa = PBXBuildFile; fileRef = 5A48EF2750C860328430143A27412AB9 /* successIconSubtle@3x.png */; };
-		904A1363A87F9CE0D626854FB7E4E4A6 /* FIRInteropEventNames.h in Headers */ = {isa = PBXBuildFile; fileRef = 38CA2CA645F401BAA1A1479D045338D0 /* FIRInteropEventNames.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		905D8D61B9B6205C02268DE1185AB949 /* FIRCrashlyticsReport.h in Headers */ = {isa = PBXBuildFile; fileRef = 906CCED1F94B2364B9573CF09FB7ECA4 /* FIRCrashlyticsReport.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		906E8DDA5D806EEBC9C1CE3DBB3C9AFF /* CALayer+Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = 65110ECEDD0D7DB2CEC87956D7EE9EFF /* CALayer+Extensions.swift */; };
-		90A3CF1639FEA6C9334E4604D236DF4F /* CTFooterViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = BE25C259424B1D8032D0F1442C0CA5FB /* CTFooterViewController.m */; };
-		90C1EA8DE26FAF49D56B98E8BC572223 /* SDAnimatedImageRep.h in Headers */ = {isa = PBXBuildFile; fileRef = 674A086658963014EDFED481D6C8748E /* SDAnimatedImageRep.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		90CC4CEF9975CEF02E7DB59F17A1D9BA /* CTInAppHTMLViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 57ABB6AF9A3DD75EDD42A880F20E8D71 /* CTInAppHTMLViewController.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		90D0634B7EBC96D6DC874D14CFF8D5E7 /* FBLPromise+Validate.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = 4699A6BBB86F5F56CACEB8AAB80DF09E /* FBLPromise+Validate.h */; };
-		9102091CD8CC7935F99E2A75A212A461 /* FIRInstallationsStoredAuthToken.h in Headers */ = {isa = PBXBuildFile; fileRef = D29FBC2C73DFA113D0DD6ECB71C54757 /* FIRInstallationsStoredAuthToken.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		91053ABDE90E3E78651A12B877C8E89B /* GDTCOREvent.m in Sources */ = {isa = PBXBuildFile; fileRef = CF47E5863ACCD5ADA6A6B8FD9D33A5FC /* GDTCOREvent.m */; };
-		91463CCD2AA4087E56230D6683BA4B9D /* CTConstants.h in Headers */ = {isa = PBXBuildFile; fileRef = D1B5CD2E0D9E11C4EC651FDA7013A707 /* CTConstants.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		9153082A96A7AE83C4037EBAD7AEEFCF /* PagingMenuTransition.swift in Sources */ = {isa = PBXBuildFile; fileRef = D101B83461490F776773691B17685682 /* PagingMenuTransition.swift */; };
-		91627E18E88F3E6A82294AA5A1709BA5 /* FBLPromise+Async.h in Headers */ = {isa = PBXBuildFile; fileRef = 182F29B97C01ECA6EC115310D214D410 /* FBLPromise+Async.h */; };
-		917D1BFB4EDC715949C8957F681E95BC /* CleverTapTrackedViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 75E7D06D46E3A476A2BD6FD433AF8BC7 /* CleverTapTrackedViewController.m */; };
-		92880D301E51E4BD597FD0FC7414B969 /* GDTCORReachability_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = F683079EFA9BFD4160D7FEB0C9B82862 /* GDTCORReachability_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		92B78D5E218668C31EAE99EB494E4BB1 /* GoogleDataTransport-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 84ACC7C4B995CDEB3D9D4E3EEF718793 /* GoogleDataTransport-dummy.m */; };
-		930697468DE92743249DA71268154857 /* SDWebImageDownloader.h in Headers */ = {isa = PBXBuildFile; fileRef = 260ED9A9A1873567E85EF22CC9760E28 /* SDWebImageDownloader.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		931182EE544BE21CDA68DCAFF537045B /* IQUIScrollView+Additions.swift in Sources */ = {isa = PBXBuildFile; fileRef = F5FFB783658B3F782BDC4BFDDC435429 /* IQUIScrollView+Additions.swift */; };
-		9326B0039E2776133189FC4A3A7B8357 /* FIRMessagingUtilities.m in Sources */ = {isa = PBXBuildFile; fileRef = 5B2ADC9FFFE49A441972C3719ECC4ACC /* FIRMessagingUtilities.m */; };
-		9339CC59CDAB3A1602198382D560D3BF /* SwiftMessagesSegue.swift in Sources */ = {isa = PBXBuildFile; fileRef = 21D030149566CC0E372BD730FF791FB8 /* SwiftMessagesSegue.swift */; };
-		9398F7F88D1306301C9729DC80439FDD /* FIRInstallationsIDController.m in Sources */ = {isa = PBXBuildFile; fileRef = AF1B2FA2CA5C721AF347832886C886E3 /* FIRInstallationsIDController.m */; };
-		93D2354D4524FD634610850598D605F2 /* GDTCCTUploadOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = E23AFD6EB5110F52EA6774AD27972780 /* GDTCCTUploadOperation.m */; };
-		94152C7851DAEFA6BCB14A2EC2D1FFCD /* FIRCLSGlobals.h in Headers */ = {isa = PBXBuildFile; fileRef = 4798DD54280F349B57D7444D138CD618 /* FIRCLSGlobals.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		941822CDF68EB8F4D49F150457A82616 /* ResponseSerialization.swift in Sources */ = {isa = PBXBuildFile; fileRef = 6A1EF3569B9392CB4AF990C02F433818 /* ResponseSerialization.swift */; };
-		9452EBC28AB57E02CC3C7D3441E30D40 /* NSURLSession+GULPromises.m in Sources */ = {isa = PBXBuildFile; fileRef = 7348B9F38C5BC51DC40308F3D4DA54A2 /* NSURLSession+GULPromises.m */; };
-		9456D22BBCF0BFD209D8279451BE5F05 /* FIRMessagingContextManagerService.h in Headers */ = {isa = PBXBuildFile; fileRef = 2AFA75272A21F9BF924A76DEA8F4E703 /* FIRMessagingContextManagerService.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		9461A95481D5FBD40C2F99E49E18476B /* CTInAppFCManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 370CB0E566ED22BBF5A7DEC514B14504 /* CTInAppFCManager.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		94AB0DCE02D9BCC7D731D5EE243F741B /* FIRCLSRecordApplication.h in Headers */ = {isa = PBXBuildFile; fileRef = 97684A5DE6686ACDBBE735803B590387 /* FIRCLSRecordApplication.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		94FCFA53258A257D8B71066C76035492 /* FIRCLSReportUploader.m in Sources */ = {isa = PBXBuildFile; fileRef = 21101B505C8C360FC7F359C9F8D38317 /* FIRCLSReportUploader.m */; };
-		95C25495AD5DF7A2C17F8DFCD68B7EF2 /* FIRCLSAnalyticsManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 05B80D758033189483F6A7D85EE5E52D /* FIRCLSAnalyticsManager.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		965050D141F84C97DF9FB046727B7C7C /* FIRCLSFABAsyncOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = D62DF06B22B5183E2998695AD67765D5 /* FIRCLSFABAsyncOperation.m */; };
-		9693CA731896DB8D7BD4033BFCFD8C32 /* FirebaseMessaging.h in Headers */ = {isa = PBXBuildFile; fileRef = 1E611AA309EDC5CFFCBAAD9EA043A664 /* FirebaseMessaging.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		969C3CB7A4815E207A65605B4FFF40D8 /* CTUriHelper.m in Sources */ = {isa = PBXBuildFile; fileRef = E7DEDD864858B0FC1893DAC80EF8A568 /* CTUriHelper.m */; };
-		97584BC08D2B494417BDEE268CFF38C9 /* Combine.swift in Sources */ = {isa = PBXBuildFile; fileRef = 66049DAF9DCDDB04D15D1D80E0EF5135 /* Combine.swift */; };
-		9760F80B509F0257569A92F34F892598 /* FIRInstallationsItem.m in Sources */ = {isa = PBXBuildFile; fileRef = C917C8933A49E50D23B3566695681715 /* FIRInstallationsItem.m */; };
-		9786A091B5B9A5274C90C93C434E379C /* FIRMessagingAuthKeychain.h in Headers */ = {isa = PBXBuildFile; fileRef = DED4985C501479E8B3D2DC9E801396CD /* FIRMessagingAuthKeychain.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		9797C2E8AE2E6AE1D6AFDB95B8BA40A8 /* FIRCLSCompactUnwind.h in Headers */ = {isa = PBXBuildFile; fileRef = 090741E6974046F8BB1660CFC0828EAD /* FIRCLSCompactUnwind.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		979FD85B7F49107432D0D45CB3192A26 /* PagingController.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06D6BBFE106E7283DC112E5D72BFFAB7 /* PagingController.swift */; };
-		97BF06E9279EE2B532008D0E5E08545C /* FIRCLSRecordBase.m in Sources */ = {isa = PBXBuildFile; fileRef = CA57BCE42C48DD1B5C5BC938F40144E2 /* FIRCLSRecordBase.m */; };
-		97D0DDE0C4300CC08CB99635343EBE52 /* FBLPromisePrivate.h in Headers */ = {isa = PBXBuildFile; fileRef = FFFB16B528650897EA28176A0457BF2A /* FBLPromisePrivate.h */; };
-		97F8E0145A9B876B2CE4427B63190875 /* FIRCrashlyticsReport_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = B21201B1748C7C26A24CFB9848F95A16 /* FIRCrashlyticsReport_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		983D58C554FB5709EE4B3DDF4373EFCA /* SDWebImageOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = 8E03D74B551468D06B5BC2534B94B1F7 /* SDWebImageOperation.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		985E86035328E060DC3DBDC430B05938 /* BarView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 88871A0385DA9AAD9FC3FF1AEC5A2D57 /* BarView.swift */; };
-		98636CBA005410E53A332D12B06A4181 /* FIRCrashlytics.h in Headers */ = {isa = PBXBuildFile; fileRef = 5081D6438478235FFCB109B7F513F504 /* FIRCrashlytics.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		987B5529E2D4B366AB923F8DAAE6E1D2 /* FIRCLSHandler.m in Sources */ = {isa = PBXBuildFile; fileRef = FF3A30ED734CED8336FEC73971C751D2 /* FIRCLSHandler.m */; };
-		98B5D71C7BD6F124F91415D6A5B8F45C /* FIRCLSNetworkOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = 88C1448212EFBDAF7C588A9C5C5D41EC /* FIRCLSNetworkOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		98D17874271D7B90A9B61EA070FC1D19 /* CTAlertViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = D4EEC25DF2E4B22F64CAE6AC5D18F934 /* CTAlertViewController.m */; };
-		98F11908C5F20A2D39D57C1E321CC36D /* PagingIndicatorOptions.swift in Sources */ = {isa = PBXBuildFile; fileRef = EE69027FE7A0C3FF74BD20CCC28400D4 /* PagingIndicatorOptions.swift */; };
-		991CD99E93550748D515CEF78B3BEFD8 /* FIRMessagingCheckinPreferences.h in Headers */ = {isa = PBXBuildFile; fileRef = 906EFA98705B9C2B9A78A45F348042D2 /* FIRMessagingCheckinPreferences.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		995647663CA44842946B4A8908E1038F /* UIColor+SDHexString.h in Headers */ = {isa = PBXBuildFile; fileRef = 57A1092BA4F39540045C4D5992ABF776 /* UIColor+SDHexString.h */; settings = {ATTRIBUTES = (Private, ); }; };
-		99ECDB76B594E712B4AE48267ADDB808 /* UIView+WebCacheOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = 987E4DDB2428B6DB57707688E66009C9 /* UIView+WebCacheOperation.m */; };
-		9A2E63E8AFB6C98512F97B74A4629F80 /* GDTCOREvent+GDTCCTSupport.h in Headers */ = {isa = PBXBuildFile; fileRef = BEA5821C1BFCD6DD6B1DC05E8FFBDFA9 /* GDTCOREvent+GDTCCTSupport.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		9A454C265CFCCEBEC7B625F3C906147E /* SDImageCacheDefine.h in Headers */ = {isa = PBXBuildFile; fileRef = 573B3725941D6C19A925B318E8122F2C /* SDImageCacheDefine.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		9ACADAC0AA9BE2E13353D7AC901945B6 /* GDTCORClock.h in Headers */ = {isa = PBXBuildFile; fileRef = EFD2824386A2C366E0A2780060C4149F /* GDTCORClock.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		8D21DDBC78FAB09F930A72F52E8EC9B7 /* FIRCLSURLBuilder.h in Headers */ = {isa = PBXBuildFile; fileRef = 7A0DCDF4EE5E096A2825164D0E7F8427 /* FIRCLSURLBuilder.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		8D2346AF2F3D1FC67706AED5DF99EE04 /* SDImageCache.h in Headers */ = {isa = PBXBuildFile; fileRef = D7C512953A24F96C992714A723185686 /* SDImageCache.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		8D39E5503F765E123AF9DEFE33847B49 /* CTPinnedNSURLSessionDelegate.h in Headers */ = {isa = PBXBuildFile; fileRef = F9D76A5468A8BA6763DEC7225D47267A /* CTPinnedNSURLSessionDelegate.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		8D597D683D4D11596362E69C2293AE49 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
+		8D6B813903B4EEB00D7FF1464F1BBE16 /* FIRComponentContainerInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 35C0680FEF1E6F03D9C31B28AFBCCE84 /* FIRComponentContainerInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		8D7777E27B9FC2FC2DF2336BADFF6C62 /* FIRCLSUserLogging.h in Headers */ = {isa = PBXBuildFile; fileRef = 050A3467B6E9069F36478579008CE452 /* FIRCLSUserLogging.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		8DFA00019358DD2ECD70B279E5CB0149 /* GULNSData+zlib.h in Headers */ = {isa = PBXBuildFile; fileRef = C12FCD8CC2CA85CB5C152778FB1EE717 /* GULNSData+zlib.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		8E2E45C23703FFECDF0EDF9FA1672A8C /* NSButton+WebCache.h in Headers */ = {isa = PBXBuildFile; fileRef = FDEDE7BB9D7235BC541FF2208A155929 /* NSButton+WebCache.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		8E73FEBE00118102ACEA89EE68624A37 /* UIButton+WebCache.h in Headers */ = {isa = PBXBuildFile; fileRef = AF6224C5CE6EA91F3373AC8E64389806 /* UIButton+WebCache.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		8E9FBCF847419B887F834635A2B7A432 /* FIRMessagingAnalytics.h in Headers */ = {isa = PBXBuildFile; fileRef = 7450D9CE4694B6A115DBC5294D2B733B /* FIRMessagingAnalytics.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		8EBEA4AEFE15E9311E281BF588FB7BD0 /* CTCarouselImageMessageCell.h in Headers */ = {isa = PBXBuildFile; fileRef = 375D9D9FE3DD850DA84BA4C3D575E991 /* CTCarouselImageMessageCell.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		8EDB69B939407D391DA66A06BBA6F5CE /* PagingOptions.swift in Sources */ = {isa = PBXBuildFile; fileRef = AC1EAA01471A7E530CD3DEC57973F9C2 /* PagingOptions.swift */; };
+		8F06181F47B9D71CF77F97261BA6C452 /* YTPlayerView.h in Headers */ = {isa = PBXBuildFile; fileRef = EDDBBBA95E76D1D831B86321E819CD42 /* YTPlayerView.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		8F6CA588FA4C82A681ABABD2518A7F5C /* CTCertificatePinning.h in Headers */ = {isa = PBXBuildFile; fileRef = CA572FE1B888500AAC417ADB8D939CB5 /* CTCertificatePinning.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		8F9E1EEF2FE52E3231A769722D5C4148 /* ServerTrustEvaluation.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8FC981347811B8BC0F5538970C3CBF75 /* ServerTrustEvaluation.swift */; };
+		8FC4DF504776F41D6BCDC4A543E17A02 /* SDWebImagePrefetcher.h in Headers */ = {isa = PBXBuildFile; fileRef = 33C63E3EAA4FDC03CC10B972A85C0329 /* SDWebImagePrefetcher.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		900CDD0F9B9706260E5EED636F81BA66 /* GDTCORUploadBatch.m in Sources */ = {isa = PBXBuildFile; fileRef = 8C1250CF093D3709E588E88E530AE8F6 /* GDTCORUploadBatch.m */; };
+		906119A09CB5A4635767E44FC4E41E08 /* FIRComponentContainer.m in Sources */ = {isa = PBXBuildFile; fileRef = 788FB7545C6CE038423F7C7441DAF8B1 /* FIRComponentContainer.m */; };
+		90A3CF1639FEA6C9334E4604D236DF4F /* CTFooterViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 4D460C8077A403C03767144B5DAA7688 /* CTFooterViewController.m */; };
+		90CC4CEF9975CEF02E7DB59F17A1D9BA /* CTInAppHTMLViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = A2F09130F4013AFFC7DA4D62B6262878 /* CTInAppHTMLViewController.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		90D87659FB85A1393C5963EAD9BB7F2B /* FIRCLSReportManager.m in Sources */ = {isa = PBXBuildFile; fileRef = 388E5B7BC08650529411FBBD7823F88A /* FIRCLSReportManager.m */; };
+		90DCB4CDAA261F44EE4400B874A60FD4 /* FIRMessagingCheckinStore.m in Sources */ = {isa = PBXBuildFile; fileRef = DF78B795B57F80582BA190162C91F3F0 /* FIRMessagingCheckinStore.m */; };
+		91463CCD2AA4087E56230D6683BA4B9D /* CTConstants.h in Headers */ = {isa = PBXBuildFile; fileRef = 522619785402161F1071952C7BAEA407 /* CTConstants.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		9153082A96A7AE83C4037EBAD7AEEFCF /* PagingMenuTransition.swift in Sources */ = {isa = PBXBuildFile; fileRef = C9EA946C13353D9489395B1946FDD738 /* PagingMenuTransition.swift */; };
+		917D1BFB4EDC715949C8957F681E95BC /* CleverTapTrackedViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 630C2D12DD25A08A9D84B40F1391C3DF /* CleverTapTrackedViewController.m */; };
+		9196ABC52C1B0885EB15BC1564D74DAA /* FBLPromiseError.h in Headers */ = {isa = PBXBuildFile; fileRef = 4EF61E36C3D717165439919E9A7341DD /* FBLPromiseError.h */; };
+		91DD9EDE8281B1E2A3B50316A26B2FF5 /* FIRConfiguration.h in Headers */ = {isa = PBXBuildFile; fileRef = 9C835A170A029CF8EB7AA5F2B16BAB07 /* FIRConfiguration.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		923E272471BFC25CCFC5687258BE0862 /* FIRMessagingAuthService.m in Sources */ = {isa = PBXBuildFile; fileRef = 095D2CE347D3EDE7166CEDE9D4199284 /* FIRMessagingAuthService.m */; };
+		92C805AF2437F3E81EBD6C749DA22EC5 /* GULNetwork.h in Headers */ = {isa = PBXBuildFile; fileRef = CD7914D44479CE4E2EDFC7E1F48DEB1A /* GULNetwork.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		93427084C7854C572B84FF0C78CAD7C5 /* PassthroughWindow.swift in Sources */ = {isa = PBXBuildFile; fileRef = CF0428472B09C1CB36630E2000609937 /* PassthroughWindow.swift */; };
+		939471720004ACFFA7A7F7E3B1DFA35C /* SDImageCachesManager.m in Sources */ = {isa = PBXBuildFile; fileRef = 5BFEEA18DEE94E0508C802D6640DCD7D /* SDImageCachesManager.m */; };
+		941822CDF68EB8F4D49F150457A82616 /* ResponseSerialization.swift in Sources */ = {isa = PBXBuildFile; fileRef = 68DE76508BDA559739A3D4CF2E2696FE /* ResponseSerialization.swift */; };
+		9425F4A168B0B63B3E663A46C8FC8A23 /* SDImageTransformer.h in Headers */ = {isa = PBXBuildFile; fileRef = BE35C6ED2D0716C6000AC37D258AE0D2 /* SDImageTransformer.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		942AE552381B434ED6501C86D339C145 /* FBLPromise+Always.m in Sources */ = {isa = PBXBuildFile; fileRef = 3B4E8062C0A904E711E7755801C2E9F5 /* FBLPromise+Always.m */; };
+		9461A95481D5FBD40C2F99E49E18476B /* CTInAppFCManager.h in Headers */ = {isa = PBXBuildFile; fileRef = F6349EAD9C4533C5CE55881033DAFEFC /* CTInAppFCManager.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		950B57DAE8E0BB34C37FBB1CBBE31215 /* FBLPromise+Do.h in Headers */ = {isa = PBXBuildFile; fileRef = B57A24CE4FB67F9F1242DF33E05A408B /* FBLPromise+Do.h */; };
+		95D83FADB4E81B51BBB2AA478BBB6872 /* FIRMessagingPersistentSyncMessage.h in Headers */ = {isa = PBXBuildFile; fileRef = 5C4C1A6EF4E83D7593576DC343AE3774 /* FIRMessagingPersistentSyncMessage.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		960D6BA650F7B55920205C92E5E9E53C /* FIRCLSMachOSlice.m in Sources */ = {isa = PBXBuildFile; fileRef = C062DAC18FA57B20568C60F79D33DBE6 /* FIRCLSMachOSlice.m */; };
+		969C3CB7A4815E207A65605B4FFF40D8 /* CTUriHelper.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A31901570543C709EE2DCBC5047489A /* CTUriHelper.m */; };
+		97425E10752F617CC526C9C00E5D6842 /* FirebaseCoreDiagnostics-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 30BD6F3B06CBF548344CF0A21618B001 /* FirebaseCoreDiagnostics-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		97584BC08D2B494417BDEE268CFF38C9 /* Combine.swift in Sources */ = {isa = PBXBuildFile; fileRef = 52BA99414E0D7634F434771659661C12 /* Combine.swift */; };
+		9783BA30E04B35533AB616E9F6DD2319 /* SDAssociatedObject.h in Headers */ = {isa = PBXBuildFile; fileRef = D2003C43102EF434911A22C498E7CFD0 /* SDAssociatedObject.h */; settings = {ATTRIBUTES = (Private, ); }; };
+		979FD85B7F49107432D0D45CB3192A26 /* PagingController.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8FBE86D2ECED64F9BC72628D808964CF /* PagingController.swift */; };
+		97E3078D16A891C1D8426227C6A34A2A /* successIcon@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = AE2AEC160DD5E5B784415F2C907626DA /* successIcon@2x.png */; };
+		985E86035328E060DC3DBDC430B05938 /* BarView.swift in Sources */ = {isa = PBXBuildFile; fileRef = E8E9DF5247C5BAB10D24729432CC9889 /* BarView.swift */; };
+		98D17874271D7B90A9B61EA070FC1D19 /* CTAlertViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 5A0604B1BE78F6A792F1DD029CBEE413 /* CTAlertViewController.m */; };
+		98F11908C5F20A2D39D57C1E321CC36D /* PagingIndicatorOptions.swift in Sources */ = {isa = PBXBuildFile; fileRef = 7CFE9934C6354CBC9666B1554A1555EF /* PagingIndicatorOptions.swift */; };
+		995A6F68C06D0CBD793F5323982DC021 /* FIRCoreDiagnosticsInterop.h in Headers */ = {isa = PBXBuildFile; fileRef = 3975B9FE2A799125C4900233AB3A69F3 /* FIRCoreDiagnosticsInterop.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		99611703D9A7F07DF7A55961967D0CCE /* GDTCORTransport_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 95F4F21376B82FD388597D5D7E11A69B /* GDTCORTransport_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		99E9829745AEAC42DE774741CE56F1A9 /* FIRMessagingKeychain.m in Sources */ = {isa = PBXBuildFile; fileRef = E6E519122CDB4052CD2F3E97AE6A13CF /* FIRMessagingKeychain.m */; };
+		9A05CD0DC4869706C20FFAFD8B76BD42 /* errorIcon@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = 2FDB4306972569BE0F827037274207D7 /* errorIcon@2x.png */; };
+		9A16AFBAFC0A71C6693F90CE67D50591 /* SDWebImageDownloaderRequestModifier.h in Headers */ = {isa = PBXBuildFile; fileRef = A4E6564E69E7A92F5272508055BDD56A /* SDWebImageDownloaderRequestModifier.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		9AAE373657DC5ADA5E572FC389F05A0B /* SDWebImageCacheKeyFilter.h in Headers */ = {isa = PBXBuildFile; fileRef = CA29C6CDDEDF4EB295AA25CC25645812 /* SDWebImageCacheKeyFilter.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		9ACFDFE69C26E9B2EBBD699FC3095150 /* CenteredView.xib in Resources */ = {isa = PBXBuildFile; fileRef = 822399CFB5FC8428DC3EE2286B7DB9B0 /* CenteredView.xib */; };
+		9AF0D8418E91FC0E799BB6247974E7B7 /* FBLPromise+Race.h in Headers */ = {isa = PBXBuildFile; fileRef = 8A19BD3918328C434D43F37208AB6782 /* FBLPromise+Race.h */; };
 		9B06F1AB828E639BDEE2022CB881734A /* XLPagerTabStrip-XLPagerTabStrip in Resources */ = {isa = PBXBuildFile; fileRef = 78BA4BB1A553AB4136F879792D99C87D /* XLPagerTabStrip-XLPagerTabStrip */; };
-		9B98E8EE6EB3E0FA6BEC37DB3269C0B0 /* CTInterstitialImageViewController~ipadland.xib in Resources */ = {isa = PBXBuildFile; fileRef = 1A90B298AF9187CAEBD82971511622CE /* CTInterstitialImageViewController~ipadland.xib */; };
-		9BE15B602141BD810A01F5BD497D7026 /* CTCoverViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = A0A755A9C675F27F2936D9F7EB47644B /* CTCoverViewController.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		9B3BE396EC4DFB45D9EB27EF140E5110 /* FirebaseInstallations-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 3BDAE877776519BED573C6A61454DBAB /* FirebaseInstallations-dummy.m */; };
+		9B84FC704A9111568E8F6B1E412C0165 /* FBLPromise+Timeout.h in Headers */ = {isa = PBXBuildFile; fileRef = 5B4D537D0A79E63DA68FEA8E02E9DD89 /* FBLPromise+Timeout.h */; };
+		9B8AD56A0E358856E5199AB4678FE0CC /* UIImageView+HighlightedWebCache.h in Headers */ = {isa = PBXBuildFile; fileRef = 16782505DCDD1F2BA192551BE6531142 /* UIImageView+HighlightedWebCache.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		9B98E8EE6EB3E0FA6BEC37DB3269C0B0 /* CTInterstitialImageViewController~ipadland.xib in Resources */ = {isa = PBXBuildFile; fileRef = FCAB837CF55F31E0BB2953675374CBF0 /* CTInterstitialImageViewController~ipadland.xib */; };
+		9BE15B602141BD810A01F5BD497D7026 /* CTCoverViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = F1F75EA49F1474D60F49B2AF96894E84 /* CTCoverViewController.h */; settings = {ATTRIBUTES = (Project, ); }; };
 		9C0BE8FA0030B2BC1DF7C159FA059389 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
-		9C74AFDFB52D8A8DD6A522672D75E5F9 /* infoIconSubtle@3x.png in Resources */ = {isa = PBXBuildFile; fileRef = 3F6AB2D28A44600666DE5EF800F2B582 /* infoIconSubtle@3x.png */; };
-		9CAC70966D8F0B617246FFD585F29A1D /* SwiftMessages-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = AFB887168D5B1E5E77CDC1D569F4BF17 /* SwiftMessages-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		9CFDA7C92E0EEA31F709663B0E727ABA /* EventMonitor.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0A8900AE4D2664CF72C6E0CAE143C525 /* EventMonitor.swift */; };
-		9D66E8AD3A20F55B92E6CB49F089C3C2 /* Controller.swift in Sources */ = {isa = PBXBuildFile; fileRef = CBA2F9D2D3F8169AFD2FD52EB9676ACA /* Controller.swift */; };
-		9DB4CBDFE92F4E8ED8DEF17B0D55548B /* OTPTextField.swift in Sources */ = {isa = PBXBuildFile; fileRef = EC1FB0C242C138B995F03D7C032EFD3A /* OTPTextField.swift */; };
-		9E363928539AD4823DB6032750FD59CF /* PagerTabStripBehaviour.swift in Sources */ = {isa = PBXBuildFile; fileRef = D415BC8949433C47B853ED0D8BC7037F /* PagerTabStripBehaviour.swift */; };
-		9E647FDA64D5A78DBE1A66B16D8C2125 /* SDImageIOCoder.m in Sources */ = {isa = PBXBuildFile; fileRef = B5BD97286C8C7B42CBC1496E96A541CB /* SDImageIOCoder.m */; };
-		9ECFC5122FF6DCAF1EAA969514B802D7 /* FIRDependency.h in Headers */ = {isa = PBXBuildFile; fileRef = E5C3168052191C61CCCEC7294643C46C /* FIRDependency.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		9EECE8C38201AEA8EA757CE5C1337873 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
-		9F1C6E635976F9ABB7DF64F63E9F1B12 /* FIRMessagingBackupExcludedPlist.h in Headers */ = {isa = PBXBuildFile; fileRef = 9B30BE11411E25C5FB9070D4F7E9137D /* FIRMessagingBackupExcludedPlist.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		9F567970373BF6E53238FF77846315B2 /* CTFooterViewController~iphoneland.xib in Resources */ = {isa = PBXBuildFile; fileRef = 8E3EA6A4C5E939BD5B8B625072B294BD /* CTFooterViewController~iphoneland.xib */; };
-		9FBF57080B669A216AC777B726EE75EC /* SDWebImageManager.m in Sources */ = {isa = PBXBuildFile; fileRef = AD8C5F5EEB4BF34AAA7A49BDF51F6C05 /* SDWebImageManager.m */; };
-		9FC66F7AC1FC0A6434FCCEB2A8EF6AD2 /* IQKeyboardManagerConstants.swift in Sources */ = {isa = PBXBuildFile; fileRef = 5E28F0DF903CEDEDF0FB366CACB8CADE /* IQKeyboardManagerConstants.swift */; };
-		9FE69D557D98E90C72FB821457E06096 /* CTHeaderViewController~iphoneport.xib in Resources */ = {isa = PBXBuildFile; fileRef = D03FA28EAB024423FFA09524FD4C3883 /* CTHeaderViewController~iphoneport.xib */; };
-		A001150A130B5719FF2802CE0D70CC08 /* FIRMessagingSyncMessageManager.h in Headers */ = {isa = PBXBuildFile; fileRef = D8BB2E0F0D297231C1A2BD3CA4EFA86F /* FIRMessagingSyncMessageManager.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		A0F6419E0B2954CD17B8C0281E245A35 /* XLPagerTabStrip-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 9983C076CB57126DAEF0E41E63D02226 /* XLPagerTabStrip-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		A18C8D196AD77930DEAC1D1E4058D99F /* GDTCOREndpoints.m in Sources */ = {isa = PBXBuildFile; fileRef = 8377150BB08B6742FD664B31A822BB61 /* GDTCOREndpoints.m */; };
-		A1AA227D38F8E2CF2E58470E25294DB8 /* FIRCoreDiagnosticsConnector.m in Sources */ = {isa = PBXBuildFile; fileRef = 95FB18E80F52F61760B032ADE7865B35 /* FIRCoreDiagnosticsConnector.m */; };
+		9C5A32F1A2135F9EE4F58AF762CD4AEC /* SDWebImageIndicator.m in Sources */ = {isa = PBXBuildFile; fileRef = 435E6E76DCAD9166F6D5A8C4CF5CDC62 /* SDWebImageIndicator.m */; };
+		9C6078083DC66F843363A1B0D191DFD1 /* FIRMessagingTokenFetchOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = 7C02DAF75A9C5E4B5ADCA840BAC111B9 /* FIRMessagingTokenFetchOperation.m */; };
+		9C864E73D4F77D723186D86864051221 /* FIRCLSCodeMapping.m in Sources */ = {isa = PBXBuildFile; fileRef = 077968B5BAF4DE780FC29D3FB93261CA /* FIRCLSCodeMapping.m */; };
+		9C960807EC038766C1D9CD825FA9454C /* UIImage+ExtendedCacheData.h in Headers */ = {isa = PBXBuildFile; fileRef = 388966DF89AFC74FA305CCB536E2F03A /* UIImage+ExtendedCacheData.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		9CAEC876C0401FD68769781148DFEFFC /* FBLPromise+Catch.m in Sources */ = {isa = PBXBuildFile; fileRef = DFFF7CAD884E0262D9B3A6C9946925C3 /* FBLPromise+Catch.m */; };
+		9CE264448CBFE3C838AEAD72F18667BD /* GDTCORAssert.h in Headers */ = {isa = PBXBuildFile; fileRef = 91F1F6539E33D21751BDD85CA7734F83 /* GDTCORAssert.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		9CE2B10EC544EB6A2B75CD99EDD30824 /* SDWebImageDefine.m in Sources */ = {isa = PBXBuildFile; fileRef = 344990280ACFBDBBCF7F58D26D942E86 /* SDWebImageDefine.m */; };
+		9CE83AE15DFCD8EC33FFDE1287FFFC01 /* warningIconLight@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = 52682AD0B63497B536C42A85B469CD47 /* warningIconLight@2x.png */; };
+		9CE86FD885ACE9C8166FF04326481E68 /* errorIconSubtle@3x.png in Resources */ = {isa = PBXBuildFile; fileRef = CC03923835F8DBECFA9DE8B7A62ABC5C /* errorIconSubtle@3x.png */; };
+		9CFDA7C92E0EEA31F709663B0E727ABA /* EventMonitor.swift in Sources */ = {isa = PBXBuildFile; fileRef = E63DC0AE3046405C467519A2374EDF2B /* EventMonitor.swift */; };
+		9D3497DFB21C5BF88C060A7D22811BA0 /* FIRCLSUnwind_x86.c in Sources */ = {isa = PBXBuildFile; fileRef = 3FF4DC6E298E60173B0206188C93A48A /* FIRCLSUnwind_x86.c */; };
+		9D66E8AD3A20F55B92E6CB49F089C3C2 /* Controller.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4094B9E7B37298A0960ECEB0FDC57B69 /* Controller.swift */; };
+		9D7F8AB03690A2F7ABB460BC9EF3A92D /* FIRCLSManagerData.h in Headers */ = {isa = PBXBuildFile; fileRef = 3AB0CE84191CF69A2EE36D3973B7C603 /* FIRCLSManagerData.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		9DB4CBDFE92F4E8ED8DEF17B0D55548B /* OTPTextField.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1FAC360532955C22D3DCF2A47C2C2FCC /* OTPTextField.swift */; };
+		9E363928539AD4823DB6032750FD59CF /* PagerTabStripBehaviour.swift in Sources */ = {isa = PBXBuildFile; fileRef = 215A668931837EB071D66CECDE4447F1 /* PagerTabStripBehaviour.swift */; };
+		9E477C3FB90022F4816F0DDFFCEA8FCF /* FIRCLSFile.m in Sources */ = {isa = PBXBuildFile; fileRef = 0C43C6D098D5F27300519E2ACB18CC94 /* FIRCLSFile.m */; };
+		9E713D676A7D0C70904E5A33785B3CBB /* cct.nanopb.h in Headers */ = {isa = PBXBuildFile; fileRef = A3F272AA1CDC6BB1DB55A0BC7BF90BED /* cct.nanopb.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		9EDDB3644A92A8565E01AA615C869377 /* successIconSubtle@3x.png in Resources */ = {isa = PBXBuildFile; fileRef = C9F5C546497A4DC863BCC2A91FC316E2 /* successIconSubtle@3x.png */; };
+		9F567970373BF6E53238FF77846315B2 /* CTFooterViewController~iphoneland.xib in Resources */ = {isa = PBXBuildFile; fileRef = 8325E877A8C0F7BB10F4511725950CF1 /* CTFooterViewController~iphoneland.xib */; };
+		9F679D8ECCAE56283A7A73811D8E88DC /* SDImageCoder.m in Sources */ = {isa = PBXBuildFile; fileRef = E7D008D364D7488E854AB57A40C3936B /* SDImageCoder.m */; };
+		9F7F738FCDD36EED241DE93CC2424AFB /* FBLPromise+Always.h in Headers */ = {isa = PBXBuildFile; fileRef = ECCA8E0C743BB77CD8B16B5FC777942A /* FBLPromise+Always.h */; };
+		9FA9394164BD37F7D79AEC899995AE52 /* SDImageGIFCoder.m in Sources */ = {isa = PBXBuildFile; fileRef = 1C3136CBA42B04A5564E47B14415870A /* SDImageGIFCoder.m */; };
+		9FD59361E123CD945A146C1167062D35 /* FIRMessagingTokenManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 40A07F18A18B961EC8330AAABC21AD61 /* FIRMessagingTokenManager.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		9FE69D557D98E90C72FB821457E06096 /* CTHeaderViewController~iphoneport.xib in Resources */ = {isa = PBXBuildFile; fileRef = 071135E06560B0B235007A7EF036CD98 /* CTHeaderViewController~iphoneport.xib */; };
+		A06EB13DACEE78CB29284D1B5867BE80 /* infoIconSubtle@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = 03722917D809BDDB44DD062A7C300854 /* infoIconSubtle@2x.png */; };
+		A0A1521261FD37471891FFDB89DBD66A /* FIRCLSRecordHost.m in Sources */ = {isa = PBXBuildFile; fileRef = CDF8FE99445B840794168CC99558CA56 /* FIRCLSRecordHost.m */; };
+		A0B6E0AA693A16E1441046E2BD075B77 /* SDImageCacheDefine.h in Headers */ = {isa = PBXBuildFile; fileRef = 365B05CFE810EA3862DF945A04040CCC /* SDImageCacheDefine.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		A0EB469F0E90EE4201D37EA70009A159 /* FBLPromiseError.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = 4EF61E36C3D717165439919E9A7341DD /* FBLPromiseError.h */; };
+		A0F6419E0B2954CD17B8C0281E245A35 /* XLPagerTabStrip-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 4343D0438A075688F834C50E6B066A21 /* XLPagerTabStrip-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		A119091FC1621E40EE0E3742A5FF10AE /* FIRMessagingSyncMessageManager.m in Sources */ = {isa = PBXBuildFile; fileRef = B11CA7D0465BA46A6855E5424B2A2554 /* FIRMessagingSyncMessageManager.m */; };
+		A122D2A3C925C48C11A200271047323E /* WindowViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = B4D06E82E649EFD16EFA1623522AAB09 /* WindowViewController.swift */; };
+		A1AE3463161D11943FE25BEE068360F4 /* NSBezierPath+SDRoundedCorners.h in Headers */ = {isa = PBXBuildFile; fileRef = 7D3F59D4E1525AAE0497DF7607D0B12A /* NSBezierPath+SDRoundedCorners.h */; settings = {ATTRIBUTES = (Private, ); }; };
+		A1B661D8B0AE5C6B6BCDD0370E34F4A8 /* SDWebImageOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = 0FD60F0891EE026947C37C7CB0D9BC38 /* SDWebImageOperation.m */; };
+		A1D3F0B48F45057C5A3BD8083299E45E /* FIRMessagingTokenDeleteOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = 7E66765019894D3036AE0C813011F2B4 /* FIRMessagingTokenDeleteOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
 		A1DAA5DC5C8B22EF310C8201F5B3463F /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
-		A200B5251D9A1C77573E33175836D227 /* FIRCLSUUID.h in Headers */ = {isa = PBXBuildFile; fileRef = D0B437121779F5521D8ADC71D733366D /* FIRCLSUUID.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		A224F339E3B3C3DF53E45B21C506D934 /* SDWebImageDownloaderOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = 7203B59682BADF2A519317E7A9DD9079 /* SDWebImageDownloaderOperation.m */; };
-		A227B3B2D6FC9C7FD6EC6D2DC372D150 /* FIRAppInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 582B2C9E7BDF1AC55577071A28BD5F10 /* FIRAppInternal.h */; settings = {ATTRIBUTES = (Private, ); }; };
-		A22F6B2DE0ADED8C4611747101396295 /* CTHalfInterstitialImageViewController~iphoneland.xib in Resources */ = {isa = PBXBuildFile; fileRef = 342FF1566987BBE67A0F59D9B7AFC4EF /* CTHalfInterstitialImageViewController~iphoneland.xib */; };
-		A24475730DF5525845B98C4F8F2D291F /* UIImage+MultiFormat.h in Headers */ = {isa = PBXBuildFile; fileRef = 0521BA931EF90FE2E0C3FF4D665E9C33 /* UIImage+MultiFormat.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		A26539CED4A0ABF80D597F2ECE22FF9B /* FBLPromise+Always.h in Headers */ = {isa = PBXBuildFile; fileRef = 2B8502B549CC51AE1485F9530A1BD8EC /* FBLPromise+Always.h */; };
-		A27F57E8E2A365AD7FF2B1546DE75029 /* PagingCell.swift in Sources */ = {isa = PBXBuildFile; fileRef = 58EDFFCC387A91F5AD809835986A4FBD /* PagingCell.swift */; };
-		A2A3A6121F2902A3B1D4AB9FD19D2F17 /* CleverTapUTMDetail.h in Headers */ = {isa = PBXBuildFile; fileRef = B36F53CA1F8B2A0A9D5695DF7DEB9B9E /* CleverTapUTMDetail.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		A2B33F7BDDF0289CD15F6EA8816CB072 /* pb_encode.c in Sources */ = {isa = PBXBuildFile; fileRef = BA19AA33BA511990A545A2B0152E25E5 /* pb_encode.c */; settings = {COMPILER_FLAGS = "-fno-objc-arc -fno-objc-arc"; }; };
+		A2283F16C8D2E22ACE7C3C07A9875913 /* FIRCLSFABAsyncOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = 17BD192FABF82ADEEA0C5FD796E9A785 /* FIRCLSFABAsyncOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		A22F6B2DE0ADED8C4611747101396295 /* CTHalfInterstitialImageViewController~iphoneland.xib in Resources */ = {isa = PBXBuildFile; fileRef = AC8BA51F09AE7B4FBAEBBD8EEF72944E /* CTHalfInterstitialImageViewController~iphoneland.xib */; };
+		A243029B1CB0F5A2C9F0673348DD941C /* nanopb-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 979FD5785D9976152F580CACD9C43802 /* nanopb-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		A254731673EBD08C9F66638F6D015D4F /* FBLPromise+Reduce.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = 464DE511D4131515782F462353325762 /* FBLPromise+Reduce.h */; };
+		A266A08D5863FFA98A6DC02A6E7080B9 /* FIRCLSLogger.m in Sources */ = {isa = PBXBuildFile; fileRef = 71D285A1878E9D22AD352EBC9A3EC28D /* FIRCLSLogger.m */; };
+		A268883EFB226FE6AF50D56FC7D5D679 /* FIRCLSURLBuilder.m in Sources */ = {isa = PBXBuildFile; fileRef = 56388C04D8F7A44F49F8AF8A66A58A04 /* FIRCLSURLBuilder.m */; };
+		A27F57E8E2A365AD7FF2B1546DE75029 /* PagingCell.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4C3FC17B79340F3BD7BFF111DE3E957A /* PagingCell.swift */; };
+		A2A3A6121F2902A3B1D4AB9FD19D2F17 /* CleverTapUTMDetail.h in Headers */ = {isa = PBXBuildFile; fileRef = 5C977E8E5DEA7B63064C5E3FB1104345 /* CleverTapUTMDetail.h */; settings = {ATTRIBUTES = (Public, ); }; };
 		A2E838DC135A0BF17CD79F10AB92FDE1 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
-		A31289357678E530EFF9517E474993F6 /* GrabberView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 227C480E08EF2ABE8D792708EA83AD0D /* GrabberView.swift */; };
-		A3153333FC136836B0028E6AB2A56BEE /* AlamofireExtended.swift in Sources */ = {isa = PBXBuildFile; fileRef = FF22E6E7AC618E82168FF69F36C101AC /* AlamofireExtended.swift */; };
-		A31C1323B4F0B1C3CAF82B01086BD790 /* UIImage+MultiFormat.m in Sources */ = {isa = PBXBuildFile; fileRef = 35E39208986752F47AAD93104D11BB02 /* UIImage+MultiFormat.m */; };
-		A33225872D73D921680B7493BD86B33B /* SDWebImageCompat.h in Headers */ = {isa = PBXBuildFile; fileRef = 06E5E05321D01426F0BE747F130C6641 /* SDWebImageCompat.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		A332523339A9E3C840C48AC5E9D1EDCA /* FBLPromise+Any.m in Sources */ = {isa = PBXBuildFile; fileRef = 8D010E182533AC29F338DE7D4CF44E55 /* FBLPromise+Any.m */; };
-		A3F77FEFF580A33233F480B86CEC96C8 /* firebasecore.nanopb.h in Headers */ = {isa = PBXBuildFile; fileRef = 111ECC401375153DC4099044D6545643 /* firebasecore.nanopb.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		A431E90380BDE47DC267669B58DC2806 /* FIRCoreDiagnosticsInterop.h in Headers */ = {isa = PBXBuildFile; fileRef = 5C7D25069F48134A38BC9FB5B0A28872 /* FIRCoreDiagnosticsInterop.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		A4558AEA771AD5871F082420B91D216B /* FIRCurrentDateProvider.h in Headers */ = {isa = PBXBuildFile; fileRef = A443F4A2FB363D515A34E507BDD193C7 /* FIRCurrentDateProvider.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		A4A8DCCC78FC48FBF1D967E28C0DEBF3 /* FIRVersion.m in Sources */ = {isa = PBXBuildFile; fileRef = 27FC85854CA3A7752B644D5FF731E040 /* FIRVersion.m */; };
-		A4EDBF2A218E746D173561E0D932D4CF /* NSBezierPath+SDRoundedCorners.h in Headers */ = {isa = PBXBuildFile; fileRef = E401B0712C2414DCA7CF2779BE816121 /* NSBezierPath+SDRoundedCorners.h */; settings = {ATTRIBUTES = (Private, ); }; };
-		A4F1202CE5BBE79F3BBCAE3D2B16BC03 /* Result+Alamofire.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0AB7E7164EB355A5B49DD52F0AFDDEE4 /* Result+Alamofire.swift */; };
-		A5212BC9F219FEF1239E8C5EFEE0390A /* SDWebImageDownloaderResponseModifier.m in Sources */ = {isa = PBXBuildFile; fileRef = EE2F0B11C7EC41AAC4154A8AA5F0BE03 /* SDWebImageDownloaderResponseModifier.m */; };
-		A53955452F7002F435C324E562A6DAFF /* CTInterstitialImageViewController~ipad.xib in Resources */ = {isa = PBXBuildFile; fileRef = BAB569F16D887D6DEB7F3A98EC7BA03B /* CTInterstitialImageViewController~ipad.xib */; };
-		A5A397DBB9D867D6090A48E87B2B19F9 /* AnyPagingItem.swift in Sources */ = {isa = PBXBuildFile; fileRef = 853DBA32A3BB85358E4C9C0434DF3F42 /* AnyPagingItem.swift */; };
-		A5B7B330B47FB127A89552E67A78ADEA /* FBLPromise+Wrap.m in Sources */ = {isa = PBXBuildFile; fileRef = 9D55BD06FFA3CE7F30684EE0F71841C3 /* FBLPromise+Wrap.m */; };
-		A5CF736493015F2B1A5EFB3183DC54DE /* PhysicsAnimation.swift in Sources */ = {isa = PBXBuildFile; fileRef = 7E97897E1D3BC1E0A926C9812091ADCD /* PhysicsAnimation.swift */; };
+		A2E84AC2685FFA416CE27526E7034B7E /* GULSecureCoding.h in Headers */ = {isa = PBXBuildFile; fileRef = 824F2741AEB1151D0520CD0D747056E1 /* GULSecureCoding.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		A31289357678E530EFF9517E474993F6 /* GrabberView.swift in Sources */ = {isa = PBXBuildFile; fileRef = CF7B693E04B12B6E9C18BE2E46562E2B /* GrabberView.swift */; };
+		A3153333FC136836B0028E6AB2A56BEE /* AlamofireExtended.swift in Sources */ = {isa = PBXBuildFile; fileRef = 807E502B15A3354A8978D3F82C1E946D /* AlamofireExtended.swift */; };
+		A31740CC096EF4100061EF74E2CC5D80 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
+		A32F3AC37DFEC1D3967858ED216B56B2 /* SDGraphicsImageRenderer.m in Sources */ = {isa = PBXBuildFile; fileRef = 09EAD9D867B9C50E0472128EB5F9862D /* SDGraphicsImageRenderer.m */; };
+		A3A03C3F888B2AD1135866963637F368 /* SDWebImageManager.m in Sources */ = {isa = PBXBuildFile; fileRef = 7CA2C1F5242D07F703A4AFDBDC6CDB02 /* SDWebImageManager.m */; };
+		A434BB96A88FA1DCF4CF2FC4001A3851 /* FIRCLSDataCollectionArbiter.m in Sources */ = {isa = PBXBuildFile; fileRef = 16E7F6FC731BC8F40A85322F0DF32BD2 /* FIRCLSDataCollectionArbiter.m */; };
+		A4639B12749060AFD5402EE6BF9C5346 /* FIRMessagingTopicOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = 6759CCC1316CC381D10353BAEC910715 /* FIRMessagingTopicOperation.m */; };
+		A47A4F8C516A4ED3C6DE8B9154E8D138 /* FIRCLSDataParsing.c in Sources */ = {isa = PBXBuildFile; fileRef = 13973C7687555C65B070CFE8D8979222 /* FIRCLSDataParsing.c */; };
+		A490A38D937FE32A302D04B4B6A0CC70 /* FBLPromise+Any.m in Sources */ = {isa = PBXBuildFile; fileRef = D1EC204BA603EBE0F5A90BF20C88E481 /* FBLPromise+Any.m */; };
+		A4BAEE317BFF650DCC888FC67BFBF7EF /* IQKeyboardManager+UIKeyboardNotification.swift in Sources */ = {isa = PBXBuildFile; fileRef = C67B0B5A5050700A802602A2FAA3E4E4 /* IQKeyboardManager+UIKeyboardNotification.swift */; };
+		A4DA826F8EF928E382EB01BB607000EA /* GDTCORUploader.h in Headers */ = {isa = PBXBuildFile; fileRef = A47CFCE9015FE2C414EF3BD4BF724756 /* GDTCORUploader.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		A4F1202CE5BBE79F3BBCAE3D2B16BC03 /* Result+Alamofire.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8C58EAD198CD5634640FE3FC830AD125 /* Result+Alamofire.swift */; };
+		A50AD0C82722454B77305A509C503B13 /* FIRCLSSymbolicationOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = ABB870902EB1468066E55945DE2D9B6A /* FIRCLSSymbolicationOperation.m */; };
+		A5179E982C88EEF6E556A4ECE21BDEE6 /* pb_encode.c in Sources */ = {isa = PBXBuildFile; fileRef = 64201A78E382EB319009B9B1E22FD48E /* pb_encode.c */; settings = {COMPILER_FLAGS = "-fno-objc-arc -fno-objc-arc"; }; };
+		A53955452F7002F435C324E562A6DAFF /* CTInterstitialImageViewController~ipad.xib in Resources */ = {isa = PBXBuildFile; fileRef = 63B03A6364380903FD7148111C0AE313 /* CTInterstitialImageViewController~ipad.xib */; };
+		A53C0C446470FA87FD787E4E439BC841 /* FIRComponentType.h in Headers */ = {isa = PBXBuildFile; fileRef = 69721EDA49271D9D092FD451A5FA13D5 /* FIRComponentType.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		A55902F47A9DACFEAC7D0833A569911E /* CALayer+Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = 42D93170CC9F8CA655FDB1C66FDB8F1D /* CALayer+Extensions.swift */; };
+		A59AF55EA65D3A0A170ABAAF0BF14D59 /* SDWebImageTransitionInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 82B057D10FEECE1662DCC037ADDC71BD /* SDWebImageTransitionInternal.h */; settings = {ATTRIBUTES = (Private, ); }; };
+		A5A397DBB9D867D6090A48E87B2B19F9 /* AnyPagingItem.swift in Sources */ = {isa = PBXBuildFile; fileRef = E40EEC0969E7575D0057FE0605BE50E9 /* AnyPagingItem.swift */; };
+		A5C7A88127504770CCB1E7BCC1F17134 /* UIView+WebCache.h in Headers */ = {isa = PBXBuildFile; fileRef = 575DA62335E9D2A7981D3CB881F8C83F /* UIView+WebCache.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		A5FED523E804DBAEF958B6AFB4F0BB8E /* SDAnimatedImagePlayer.h in Headers */ = {isa = PBXBuildFile; fileRef = 62828417C60E69CC39611115B629A09F /* SDAnimatedImagePlayer.h */; settings = {ATTRIBUTES = (Public, ); }; };
 		A60AE45490BFB435DFE76393A09D4400 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
-		A634015866950D94761B1A4098CACB89 /* SDImageCache.h in Headers */ = {isa = PBXBuildFile; fileRef = 3E8127947BC76076CF37E6434AC125D2 /* SDImageCache.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		A65E412AD3B7A1609BF969A3391C580C /* Core.swift in Sources */ = {isa = PBXBuildFile; fileRef = 57CA0E1B82972BBCB373E22278D51278 /* Core.swift */; };
-		A66132FB0E2038BFD7E6E3739A6A2D98 /* FBLPromise+Recover.m in Sources */ = {isa = PBXBuildFile; fileRef = DF4FAB09527EA9CCC362D03DB3307695 /* FBLPromise+Recover.m */; };
-		A664924D6CCE2922A3F81EC932F4D476 /* AFError.swift in Sources */ = {isa = PBXBuildFile; fileRef = 919E1894635DD309D65FA8A2BD85BCFC /* AFError.swift */; };
-		A67177E325F17A5285FD40B7C84371FD /* CTInAppUtils.m in Sources */ = {isa = PBXBuildFile; fileRef = EA4701F35A783A36008100E6A5AB19D0 /* CTInAppUtils.m */; };
-		A681663638B89FEA7D7458508DD8146B /* CTHeaderViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 085CCB48D88E2AD0A6BADD6481DFCA8D /* CTHeaderViewController.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		A6A72367E61539061009724FFFF1F242 /* FIRCLSUserDefaults_private.h in Headers */ = {isa = PBXBuildFile; fileRef = 2EA948F4BA107A1BC3F641017D9063BE /* FIRCLSUserDefaults_private.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		A6B13563C6A64E6FCB3EC21545B0FEBE /* FBLPromise+Timeout.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = 405C56747BA8DB139278901283BAB728 /* FBLPromise+Timeout.h */; };
-		A6C56B86306DA7E5CA4D6C2BE9F03BFC /* me.nanopb.c in Sources */ = {isa = PBXBuildFile; fileRef = 21A794A38BB85FB8DA2ABCE897C6D44C /* me.nanopb.c */; };
-		A6DD4B59B69B1330C32FB68BDF229337 /* FBLPromise+Testing.h in Headers */ = {isa = PBXBuildFile; fileRef = 2517E9C791525DBAFBE60DEE82A16653 /* FBLPromise+Testing.h */; };
-		A6E0E315E75FBBE0574467E3029A18C3 /* SDInternalMacros.m in Sources */ = {isa = PBXBuildFile; fileRef = 49E70E82DC9CC845BD7313D425C7BB0F /* SDInternalMacros.m */; };
-		A6ECCDE6114FF6566713DAC82E2E2B62 /* FIRMessaging.m in Sources */ = {isa = PBXBuildFile; fileRef = 73E1E591BBC89BEF65FF38624D19D85A /* FIRMessaging.m */; };
-		A715F340C637000E99B3825255212964 /* GULHeartbeatDateStorageUserDefaults.h in Headers */ = {isa = PBXBuildFile; fileRef = 9BC02B4D8C7992AAE8721A366B872BFE /* GULHeartbeatDateStorageUserDefaults.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		A727031086E40DC612D61B47147431ED /* SDDisplayLink.m in Sources */ = {isa = PBXBuildFile; fileRef = D3C482034DD24D74C353747CC2F8AD69 /* SDDisplayLink.m */; };
-		A7644A439622E572135EC42CE5AB73B1 /* FIRCLSBinaryImage.m in Sources */ = {isa = PBXBuildFile; fileRef = 8E4EDE4902E1AC4FBB53E56CCC3443EB /* FIRCLSBinaryImage.m */; };
-		A7699F2A833376609BA8F1F3F3959FF0 /* GULKeychainStorage.h in Headers */ = {isa = PBXBuildFile; fileRef = CC754D32ECF02FCAAD7A7A08B578B260 /* GULKeychainStorage.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		A7C6BE0FCB633E0A3E867CB08E855A1E /* SDImageHEICCoder.h in Headers */ = {isa = PBXBuildFile; fileRef = BB96D8862AB6DEAC3171A9D1D9FD45D6 /* SDImageHEICCoder.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		A7EC6D0C66518A1E9CFD694F97461F34 /* FIRCLSRecordBase.h in Headers */ = {isa = PBXBuildFile; fileRef = 4135E8696A2060DC92AB3109423F5C15 /* FIRCLSRecordBase.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		A813CEAD68FEA5BF153D459C9E44A01F /* SDImageCachesManagerOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = 680527CBAA8A1A6808A96049731EAA88 /* SDImageCachesManagerOperation.m */; };
-		A8428B45EE99CFFE31D97A7751B43675 /* FIRCLSHost.m in Sources */ = {isa = PBXBuildFile; fileRef = 0AC42B646B9795BFBAC2B6CD40E516B9 /* FIRCLSHost.m */; };
-		A8CD652A0A0DC22FC602BA494FE6AC3B /* FIRCLSAllocate.h in Headers */ = {isa = PBXBuildFile; fileRef = 0A5F32C1CADCB2D8EAA234CF12B4C9EB /* FIRCLSAllocate.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		A8D2F3EC1E8221524173723C5C4B7CB9 /* CTCoverViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = B599B1FE91900AA47BE4871A4EEE0155 /* CTCoverViewController.m */; };
-		A90C6318AC9AA7B70E02836FF195A4AE /* FirebaseCoreInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 874E2B7B95BF66268EC37F75AF3B0250 /* FirebaseCoreInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		A928718279169DDC3F9DEC3255E2BDEE /* PagingCellViewModel.swift in Sources */ = {isa = PBXBuildFile; fileRef = 72AE5AAF9B6C6DC2473BFC6B78A44B3F /* PagingCellViewModel.swift */; };
-		A95731D40A6941CB6340ECD587B50FE4 /* FIRCLSFABHost.m in Sources */ = {isa = PBXBuildFile; fileRef = 7987E06267A5AC0AD78A400EC533844E /* FIRCLSFABHost.m */; };
-		A9BE6A15651AED2C53F2911D52BF5054 /* FIRCLSExistingReportManager.m in Sources */ = {isa = PBXBuildFile; fileRef = 861DF4E98795EA19E36032CCF79B9294 /* FIRCLSExistingReportManager.m */; };
-		A9E24CD3877339F1F9C7C44FDAF308E7 /* UIImage+GIF.m in Sources */ = {isa = PBXBuildFile; fileRef = 2F1B9AD128B55AB5039F94D6B7D2E07F /* UIImage+GIF.m */; };
-		AA33FB441176816F6A01E186AD612810 /* FIRMessagingCode.h in Headers */ = {isa = PBXBuildFile; fileRef = D70FE2AC0A0E1663BC33C50E0B845CA7 /* FIRMessagingCode.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		AA3C7451040018F11204343C648D4BFC /* GDTCCTUploader.m in Sources */ = {isa = PBXBuildFile; fileRef = E4EA4D4BFDA8CE66D3A4D6468A02F115 /* GDTCCTUploader.m */; };
-		AA42B57C3614359399BA706B15E702FA /* successIcon.png in Resources */ = {isa = PBXBuildFile; fileRef = 9220CFF1F07FCC368C9E8AAE4623E75F /* successIcon.png */; };
-		AA7A2332AE218D7CA57373B673D0BE88 /* UIColor+SDHexString.m in Sources */ = {isa = PBXBuildFile; fileRef = FC083901D75AFA0C393E7146DE4C7506 /* UIColor+SDHexString.m */; };
-		AA9B51F48BCB36FC9EF4839DA15DA358 /* FIRInstallationsStoredItem.m in Sources */ = {isa = PBXBuildFile; fileRef = 9C37615ED8AAF4905DA0D0A519CD9B7B /* FIRInstallationsStoredItem.m */; };
-		AB6E92395F6F31047D6739A8FEBC4BF2 /* FBLPromise+Then.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = C9D2DD8BA626C50B702D0CF3B4089851 /* FBLPromise+Then.h */; };
-		ABA8FDA9C89CDF263DD28B9EFEA7DF7F /* FirebaseInstallations-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 7FE9990AFCD3E31A0337B2B5F95A9537 /* FirebaseInstallations-dummy.m */; };
-		ABD6BC9D5633068D1F9A1021BF83F2E1 /* GDTCORUploadBatch.m in Sources */ = {isa = PBXBuildFile; fileRef = 0D24D44186A115DE8AFCAE359D45EA1F /* GDTCORUploadBatch.m */; };
-		AC39C98710259E1350AB2D5AB94F0449 /* FirebaseCoreDiagnostics-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 0EBF433186796D75D3C6385287CB84ED /* FirebaseCoreDiagnostics-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		AC5617588C3FC95AA516C6D5565B946D /* GDTCCTCompressionHelper.h in Headers */ = {isa = PBXBuildFile; fileRef = 916CEAC0F3D978E9948D9E6BE151748E /* GDTCCTCompressionHelper.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		AC79C085B7862395829E826DB3F04DF1 /* FIRMessagingContextManagerService.m in Sources */ = {isa = PBXBuildFile; fileRef = 0568F5C76BE7FEF277A5FF3FE8CCF5C9 /* FIRMessagingContextManagerService.m */; };
-		ACC98A5F1689D471875DE9C9B2C1B6CA /* GULKeychainStorage.m in Sources */ = {isa = PBXBuildFile; fileRef = 3275CD3A583DAF97A92DE816ECE2930D /* GULKeychainStorage.m */; };
-		ACDC393529D7E3A2E71E9A28A45FA72C /* FIRCLSExistingReportManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 34F84FD9D57F36DEE2429A34EA03F15F /* FIRCLSExistingReportManager.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		ACEA8F5D0A48CBA5DCF40FEF99CE5049 /* FIRCLSException.mm in Sources */ = {isa = PBXBuildFile; fileRef = 35D645CE1DA08EA1F932FD23E85A40A4 /* FIRCLSException.mm */; };
-		ADB192D5C143FA7DC514BD1E34829003 /* CleverTapInboxMessage.m in Sources */ = {isa = PBXBuildFile; fileRef = D5F871F384BFFF387B4E26EBEB1844C9 /* CleverTapInboxMessage.m */; };
-		ADE6342B3812B2D6F306B75B0B8E079F /* FirebaseCore.h in Headers */ = {isa = PBXBuildFile; fileRef = 356AAFC1E3BF8181BDCF4A4A4311EBAA /* FirebaseCore.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		AE3A3FF9A48A17875E549C5C3DC3FC1B /* OTPFieldView-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = A8F4D63FEB24703BFEBD3891E82FB7C3 /* OTPFieldView-dummy.m */; };
-		AE4368402A3467C2E4A1BE39C3938D05 /* SwiftMessages-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 23F849AB3BF9F71F30DA61731F9078E5 /* SwiftMessages-dummy.m */; };
-		AE7487F2436F8D07B52D4A4016C7AC6D /* CleverTap+FeatureFlags.h in Headers */ = {isa = PBXBuildFile; fileRef = 85D2F1ED5F32FCD0417D115214DEA5EE /* CleverTap+FeatureFlags.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		AE824AAE7BA0D34C13B61F500BBBA5C0 /* UIImage+ForceDecode.m in Sources */ = {isa = PBXBuildFile; fileRef = 0BC4B91F30D54CEBD44E17A067EC4DA7 /* UIImage+ForceDecode.m */; };
-		AEC220577DB6BC4C6BEC7774ADF64D1A /* GDTCCTNanopbHelpers.h in Headers */ = {isa = PBXBuildFile; fileRef = C59D442781140D05BF43860E77AC02C5 /* GDTCCTNanopbHelpers.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		AECA068FD18A59F18B1AFFB1C8A1BF72 /* CTHalfInterstitialViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 9C5B7AE76A11C98231AB107ABEBF3230 /* CTHalfInterstitialViewController.m */; };
-		AF5A92DD5EE5CB07B12CC4ED9822B62B /* PagingMenuInteraction.swift in Sources */ = {isa = PBXBuildFile; fileRef = 6CB18333803888F8614C9A7C5295604F /* PagingMenuInteraction.swift */; };
-		AF8A43327E0A10844CA21B76F0FE35A4 /* FBLPromise+Wrap.h in Headers */ = {isa = PBXBuildFile; fileRef = 4B1636178F27590E832F7380FE0820AA /* FBLPromise+Wrap.h */; };
-		B00B1826C78B283680298331A54C2629 /* ct_volume_on.png in Resources */ = {isa = PBXBuildFile; fileRef = 200832C7B78074291D668223B58E2745 /* ct_volume_on.png */; };
-		B05F58CD801ADC6CB086ADA6F1BBBC9C /* FIRMessagingConstants.h in Headers */ = {isa = PBXBuildFile; fileRef = 96257BCB5C5DB41B65B014FE0D82A428 /* FIRMessagingConstants.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		B0C8F2B8829D7298EF6AF6A38B546324 /* CleverTapInstanceConfig.h in Headers */ = {isa = PBXBuildFile; fileRef = 0A9DDCF5C842CB7F5C486A076FA2B9EC /* CleverTapInstanceConfig.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		B0E8BD291EC8CE6A2C195DFAA18FD2B3 /* FIRCLSSymbolResolver.m in Sources */ = {isa = PBXBuildFile; fileRef = 06637C0A7CB6AD502FDBFD0EC22341FD /* FIRCLSSymbolResolver.m */; };
-		B1079A4875A6C723D8E6A3F7F851C5D1 /* CTValidationResult.m in Sources */ = {isa = PBXBuildFile; fileRef = E40345CDF112B4D9E29BDE79FB3ABA45 /* CTValidationResult.m */; };
-		B13D4447D0702E99F306C109E0BA5DC6 /* CTHeaderViewController~ipadland.xib in Resources */ = {isa = PBXBuildFile; fileRef = 81EA77B4B64C7968F7A0FD180FFD7D4C /* CTHeaderViewController~ipadland.xib */; };
-		B1B51F29F9442B6689828625BA57BA69 /* FIRCLSSymbolicationOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = 9D6322F4DEFC3581BB62ED0FE5E88A3F /* FIRCLSSymbolicationOperation.m */; };
-		B2265938E2C157E9CA499BBEC0992AD8 /* NSError+FIRMessaging.m in Sources */ = {isa = PBXBuildFile; fileRef = 71ED1C30791BC819A46E74CADCCEA730 /* NSError+FIRMessaging.m */; };
-		B2F3EE0E4F4D0AF6E05427E3854040B3 /* FBLPromise+Timeout.m in Sources */ = {isa = PBXBuildFile; fileRef = C59BCC9486E886FB159887927CB7BC9E /* FBLPromise+Timeout.m */; };
-		B30B043D40B3D11D1C9797E8094159D4 /* GULSecureCoding.m in Sources */ = {isa = PBXBuildFile; fileRef = 9CBAB230B52011D281364F6E40E7C97A /* GULSecureCoding.m */; };
-		B3600599EDF3F551776186A0955FE3FF /* CTHalfInterstitialImageViewController~ipad.xib in Resources */ = {isa = PBXBuildFile; fileRef = 9F896A2A324137945198575DF2E0A9FC /* CTHalfInterstitialImageViewController~ipad.xib */; };
-		B38F8DF579C760E7EB4E2FB6C2089A9D /* GDTCORUploader.h in Headers */ = {isa = PBXBuildFile; fileRef = D54B59D9094AD02C3560F21B3029C07D /* GDTCORUploader.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		B3BE34028107C59BB3745CDF300EA292 /* FIRCLSLogger.h in Headers */ = {isa = PBXBuildFile; fileRef = C369CED5F620B86F92CE2A45D9387E3F /* FIRCLSLogger.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		B484C64261A852181CB49EA850049168 /* CleverTap+Inbox.h in Headers */ = {isa = PBXBuildFile; fileRef = 1819F954772AC1629099CC3D43902010 /* CleverTap+Inbox.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		B48730C43BE05664945FD71348145B89 /* FBLPromise+Delay.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = D2A20A9D355F7889A1BD68F9C61803B9 /* FBLPromise+Delay.h */; };
-		B49A3BE51C5503193A4C1B7C998122B5 /* FIRCLSDataCollectionArbiter.h in Headers */ = {isa = PBXBuildFile; fileRef = 32B4CC4DB98C07DE9E71EB685F14BE9B /* FIRCLSDataCollectionArbiter.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		B4DA51DFD2480E81A24756FC16074119 /* GULLogger.m in Sources */ = {isa = PBXBuildFile; fileRef = 82A6EDCDA1893B806C9D9127580714CA /* GULLogger.m */; };
-		B50FA66F80907DA944C0487FDAEF2C0E /* FIRCLSMachO.h in Headers */ = {isa = PBXBuildFile; fileRef = DFDFBEBB73F8E6C5B210978F2B628217 /* FIRCLSMachO.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		B510D8C0833EBE49B451EAF642A97C27 /* FBLPromise+All.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = 2FE6EDCF3CA3D4FFB7289288A1955D9E /* FBLPromise+All.h */; };
-		B55E0D3872AFEE9B2422979B4E465972 /* Presenter.swift in Sources */ = {isa = PBXBuildFile; fileRef = 739893C82F24CC6EE8EAF89D937A3CD9 /* Presenter.swift */; };
-		B575B0BA05EB4A4180840D2F16500508 /* NSImage+Compatibility.m in Sources */ = {isa = PBXBuildFile; fileRef = 1DCC67CB751BEFC39AF40715A67E1833 /* NSImage+Compatibility.m */; };
-		B57BA199B8F3A4EF389C79F26D899F57 /* PagingViewControllerDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1E5A23181E0FF62A32A502807AAECEAA /* PagingViewControllerDelegate.swift */; };
-		B58B3650D73996D9158F5E4B94C996D7 /* FBLPromiseError.h in Headers */ = {isa = PBXBuildFile; fileRef = 56DD7FFAC0BCA8E9D06614C5CEA24354 /* FBLPromiseError.h */; };
-		B5A4D891DAC2B2E5438556A539248D4C /* CTValidator.h in Headers */ = {isa = PBXBuildFile; fileRef = F1C3C5A299ACD1072598F8C5EAD35B4C /* CTValidator.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		B5B03E6A5A8E89C7BE3B4C7AFFED2C40 /* FIRCLSAllocate.c in Sources */ = {isa = PBXBuildFile; fileRef = FAD4030D5B013AC7C22F5B4475E69950 /* FIRCLSAllocate.c */; };
-		B6473B8E8353317F75D6800D4F7054CB /* NetworkReachabilityManager.swift in Sources */ = {isa = PBXBuildFile; fileRef = 438B758075229867EDD3872863F778E8 /* NetworkReachabilityManager.swift */; };
-		B6567FD239CBF5B53B810FE0B0BF142F /* PassthroughView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 531D2CCB0041E3F84983049440173FAC /* PassthroughView.swift */; };
-		B69489B05079847099ABDF16BFB86C4C /* CleverTapFeatureFlagsPrivate.h in Headers */ = {isa = PBXBuildFile; fileRef = 11F5B23C9E06F3F06BBA8A489B64F1B4 /* CleverTapFeatureFlagsPrivate.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		B6A4CDA4CCF5BBBA6E581D1351FFC9F3 /* FIRComponentContainer.m in Sources */ = {isa = PBXBuildFile; fileRef = E770F80DD9A0749284370ED9086E0243 /* FIRComponentContainer.m */; };
-		B6DC9DB440ECB79C25656B26DA6437F3 /* FIRCLSInstallIdentifierModel.h in Headers */ = {isa = PBXBuildFile; fileRef = C3C8FD63AD41103CFFA2316E189A313B /* FIRCLSInstallIdentifierModel.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		B6EB5878C462FF6E08E18A719997FE04 /* CleverTapJSInterface.h in Headers */ = {isa = PBXBuildFile; fileRef = E1C4D6A01CC0EF14CF71956CEB259DDC /* CleverTapJSInterface.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		B70578AD4C042E61309CD0D9DCD436DA /* SDWebImageDownloaderDecryptor.m in Sources */ = {isa = PBXBuildFile; fileRef = 9721B2D23EDFF5914B379E5C265D5915 /* SDWebImageDownloaderDecryptor.m */; };
-		B77EB21581793C290059B4FC854421A7 /* SDWebImageIndicator.m in Sources */ = {isa = PBXBuildFile; fileRef = B75D4CD64E3C06A1EF21009F2278C11D /* SDWebImageIndicator.m */; };
-		B7983772F96E8BA5CA74AA3E7C5A4731 /* FBLPromise+Always.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = 2B8502B549CC51AE1485F9530A1BD8EC /* FBLPromise+Always.h */; };
+		A65E412AD3B7A1609BF969A3391C580C /* Core.swift in Sources */ = {isa = PBXBuildFile; fileRef = E50DCB59700054609095E5EEE4F5323C /* Core.swift */; };
+		A664924D6CCE2922A3F81EC932F4D476 /* AFError.swift in Sources */ = {isa = PBXBuildFile; fileRef = B42FA772FD30F8B5837F10995D2A171C /* AFError.swift */; };
+		A67177E325F17A5285FD40B7C84371FD /* CTInAppUtils.m in Sources */ = {isa = PBXBuildFile; fileRef = 32C8242E07B4759FC48179209F028092 /* CTInAppUtils.m */; };
+		A681663638B89FEA7D7458508DD8146B /* CTHeaderViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 91824D89C03F4B8EBA57C98533427251 /* CTHeaderViewController.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		A6DA15B20EE6DD86F39BE449F9FEE08C /* FirebaseInstallations-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = FD2AFFB406C273817478293CBFD60C18 /* FirebaseInstallations-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		A7184FCC8F057631A4DA3E2CB270CF93 /* GULSwizzler.m in Sources */ = {isa = PBXBuildFile; fileRef = 5F5A4694830D46808474ED142AD1753C /* GULSwizzler.m */; };
+		A77F6D2F1C2469AE87C52737CDE261B8 /* FIRCoreDiagnosticsConnector.m in Sources */ = {isa = PBXBuildFile; fileRef = 2A33C2F4F1D16EAAC3CFB650018577A8 /* FIRCoreDiagnosticsConnector.m */; };
+		A81A9EABB3429A809CDF254770B7AE02 /* FIRCLSApplication.m in Sources */ = {isa = PBXBuildFile; fileRef = 752CE7AB184C7AE09F2AF537BB3ADC3D /* FIRCLSApplication.m */; };
+		A855637432CAA565B54718FD3EC3DC5F /* UIColor+SDHexString.h in Headers */ = {isa = PBXBuildFile; fileRef = 0DFB0B50E9529BEB7D5493193AB46B2A /* UIColor+SDHexString.h */; settings = {ATTRIBUTES = (Private, ); }; };
+		A8AFAC54D341471577FB14AB7E4FF428 /* GDTCORRegistrar.m in Sources */ = {isa = PBXBuildFile; fileRef = 5E6298C4E04D5D0B2217D19E4F507CE2 /* GDTCORRegistrar.m */; };
+		A8C168F6EFBBD22BC78E9271D7E36A12 /* FBLPromise+Await.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = 29BF7DFC5BAF79E32B0A511257A50791 /* FBLPromise+Await.h */; };
+		A8D2F3EC1E8221524173723C5C4B7CB9 /* CTCoverViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 01DC13F32BE7508E54632BCD6E3AF2F6 /* CTCoverViewController.m */; };
+		A8D4D70781FBCA077BCED789F302133D /* UIImageView+WebCache.h in Headers */ = {isa = PBXBuildFile; fileRef = 30E9A588387F092BC9B48C5C495888F4 /* UIImageView+WebCache.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		A928718279169DDC3F9DEC3255E2BDEE /* PagingCellViewModel.swift in Sources */ = {isa = PBXBuildFile; fileRef = C3C84CEFA7D0D383BC507CA9F9B61D8E /* PagingCellViewModel.swift */; };
+		A948801B0646E212637296756017FBB0 /* GoogleDataTransport-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = A28AA21654E7A535B0D68055707EC5C8 /* GoogleDataTransport-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		A9B95EA4689253A9779478804B5A3290 /* FIRCLSDwarfExpressionMachine.h in Headers */ = {isa = PBXBuildFile; fileRef = FB1255225D9BC406C24F538DA8E31AA2 /* FIRCLSDwarfExpressionMachine.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		A9CCA2DCDE1D1EA45BAD74C5CB3E9253 /* NSLayoutConstraint+Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = 000DEFB9C892CB1083237E37BF511B21 /* NSLayoutConstraint+Extensions.swift */; };
+		A9ED1B250B445BEAFB126C58F3BC59A2 /* FirebaseInstallationsInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 4B5F9EB6D1E633E871B811768DFA3E03 /* FirebaseInstallationsInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		A9FE5E3892B121E99D6883A4BC6CEE21 /* SystemConfiguration.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = DDC55D0CD2D15D3E411ACD99C6C289B5 /* SystemConfiguration.framework */; };
+		AA94D6803D1EBFE05832F41A702AB6B7 /* FIRCLSUserDefaults.m in Sources */ = {isa = PBXBuildFile; fileRef = 2BD03D14417E499CADE504192150F5E9 /* FIRCLSUserDefaults.m */; };
+		AA958C387640A3DBC7FC632C0626C80A /* GULNSData+zlib.m in Sources */ = {isa = PBXBuildFile; fileRef = 878F0399C25A9F9322826A058A750257 /* GULNSData+zlib.m */; };
+		AAB2B8178605F1654CC07F40217EC65B /* FBLPromise+Validate.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = 55A8D51C3918D86A609057423BCF0597 /* FBLPromise+Validate.h */; };
+		AAD2D4577B37866AB83E578ECEA30ED9 /* FIRCLSExecutionIdentifierModel.h in Headers */ = {isa = PBXBuildFile; fileRef = 96A57EE0B36CC5CE671568F51622ABFE /* FIRCLSExecutionIdentifierModel.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		AB003A39D0BEBEABE23BD42E764A70B0 /* SDDisplayLink.m in Sources */ = {isa = PBXBuildFile; fileRef = 79794729394378A2B3C432B9F016005B /* SDDisplayLink.m */; };
+		AB0E1B65301F13FC3DB444A547269248 /* FIRAnalyticsInteropListener.h in Headers */ = {isa = PBXBuildFile; fileRef = 3DBE9AD1AB2DC6FAC202274CF70E04F7 /* FIRAnalyticsInteropListener.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		AB50D785BCEA5913D21BD4CFE7A0A175 /* FIRApp.h in Headers */ = {isa = PBXBuildFile; fileRef = 0611407236FC95F2BDBD807A13E14A6B /* FIRApp.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		AB5C2E8FC203145B8355D843CF16AF80 /* FIRCLSCodeMapping.h in Headers */ = {isa = PBXBuildFile; fileRef = C62067F0C542D3CD718E1FE3E02F5770 /* FIRCLSCodeMapping.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		AB99404F33D59CDBCEC627959FB0DD21 /* FIRStackFrame_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 074E167E07B11E8C6F2A9B26B1C8D1C9 /* FIRStackFrame_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		ABAD2E2E0682AB7FF1C6213388E4EBA2 /* BaseView.swift in Sources */ = {isa = PBXBuildFile; fileRef = A36895ABAA4DFF5D53C1AF1DBBEA2431 /* BaseView.swift */; };
+		ABF250D40B627B00CB167D20AFEFCCD7 /* FirebaseMessaging-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 6E1ADE1A2E9CF5807B15D238D5D4D771 /* FirebaseMessaging-dummy.m */; };
+		AC348A3AA450BFA43A0B4869FB82772A /* SwiftMessages.swift in Sources */ = {isa = PBXBuildFile; fileRef = C80B424D5F76A66C0E64A0B92C0EDC08 /* SwiftMessages.swift */; };
+		AC3996B78F08AAB70362341F85CEBF22 /* SDInternalMacros.m in Sources */ = {isa = PBXBuildFile; fileRef = 34A99E2DFEB9919950B89A5C54265020 /* SDInternalMacros.m */; };
+		AD5FB6CD2B646D3D3987576B8424AB29 /* warningIcon@3x.png in Resources */ = {isa = PBXBuildFile; fileRef = 130DE1D96761C621230D2126DE698ED2 /* warningIcon@3x.png */; };
+		AD707CFC669380B926AFB1FE7AE9B867 /* PhysicsAnimation.swift in Sources */ = {isa = PBXBuildFile; fileRef = 05A47BA3D5E85F9B8602C307DC8B6813 /* PhysicsAnimation.swift */; };
+		ADB192D5C143FA7DC514BD1E34829003 /* CleverTapInboxMessage.m in Sources */ = {isa = PBXBuildFile; fileRef = DF13CD565132EAAD8737DFBC46F6101A /* CleverTapInboxMessage.m */; };
+		ADC62543BABAD66F8BC0232EC4288D08 /* FIRComponentContainer.h in Headers */ = {isa = PBXBuildFile; fileRef = 2DA4EFCC70D9C0404923E60E2CC2F2B2 /* FIRComponentContainer.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		ADFE30265727B00844986609597A43B6 /* UIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 544065BA7D1202329397F6CEE19EB5A2 /* UIKit.framework */; };
+		AE3A3FF9A48A17875E549C5C3DC3FC1B /* OTPFieldView-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 89E12DD140EA7D36051822BB8AC57660 /* OTPFieldView-dummy.m */; };
+		AE3AD64BFFE96B4BDD1EAF62A76CC467 /* FIRComponentType.m in Sources */ = {isa = PBXBuildFile; fileRef = 30C387B7BBD24A8336AD43B4215BC158 /* FIRComponentType.m */; };
+		AE52682256BA12B4799A20205483C5DC /* FBLPromise+Race.m in Sources */ = {isa = PBXBuildFile; fileRef = F0956DB013E8E51556DE7326D273F26E /* FBLPromise+Race.m */; };
+		AE5A550DAA2BF1C4DD760746BBE8A1B9 /* SDWebImageDownloaderRequestModifier.m in Sources */ = {isa = PBXBuildFile; fileRef = 24895867075E52825DCC77D5D6790D5E /* SDWebImageDownloaderRequestModifier.m */; };
+		AE7487F2436F8D07B52D4A4016C7AC6D /* CleverTap+FeatureFlags.h in Headers */ = {isa = PBXBuildFile; fileRef = 40DE5B55D6A830A5886E326FB31DE084 /* CleverTap+FeatureFlags.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		AE86568EB897D23F2B75E2B4442C4339 /* FIRInstallationsIDController.m in Sources */ = {isa = PBXBuildFile; fileRef = 34A056D1B68924023B9843D66B4C8B87 /* FIRInstallationsIDController.m */; };
+		AEA2E10B85B82C6E24AA3697459C3B94 /* infoIconLight.png in Resources */ = {isa = PBXBuildFile; fileRef = DFFCF93529BF6801ED96C5666EF449E6 /* infoIconLight.png */; };
+		AEB007C7128575842880AD5559D2D5AC /* MessageView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 85BA35675CCEFDA69DECB9E7C4EF04A1 /* MessageView.swift */; };
+		AECA068FD18A59F18B1AFFB1C8A1BF72 /* CTHalfInterstitialViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = F4FDDCDAA93996A471043CE4C082268F /* CTHalfInterstitialViewController.m */; };
+		AED0535734D95B2038E132A2F2F5EF25 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
+		AF419544222E918C8BE00A97B6CCE7B3 /* GULReachabilityChecker+Internal.h in Headers */ = {isa = PBXBuildFile; fileRef = 9FD87D315E3BFE9C6F4A01F621854769 /* GULReachabilityChecker+Internal.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		AF5A92DD5EE5CB07B12CC4ED9822B62B /* PagingMenuInteraction.swift in Sources */ = {isa = PBXBuildFile; fileRef = 6ECC13266B461167A54724AED1D72EFD /* PagingMenuInteraction.swift */; };
+		AF7509A5EE7FA14F12BE59B4E89CE75E /* FIRCLSConstants.m in Sources */ = {isa = PBXBuildFile; fileRef = 4195F288B30EAAD2323DB8C0F3635D50 /* FIRCLSConstants.m */; };
+		AF9583D2580693E7601A9060FDE765DA /* FIRAppAssociationRegistration.h in Headers */ = {isa = PBXBuildFile; fileRef = 4D27417CCD853E7F17C87C974F672805 /* FIRAppAssociationRegistration.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		AFCAEA6F64C31BBCA51EDE0A22C971FF /* CornerRoundingView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 823DCBA686896433A569B3DA7DD70855 /* CornerRoundingView.swift */; };
+		AFEF058FDCD70A0806F375DD5B88311C /* FIRCLSRecordBase.h in Headers */ = {isa = PBXBuildFile; fileRef = C89515E7E2C8B7A75DBE9B1ACA28FB56 /* FIRCLSRecordBase.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		B00B1826C78B283680298331A54C2629 /* ct_volume_on.png in Resources */ = {isa = PBXBuildFile; fileRef = 543931A43AC3CD23F5522DE796869CDF /* ct_volume_on.png */; };
+		B01BA8400D4E33E44848C84FF47B077A /* FirebaseCrashlytics-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 0E71518EED12326C46CD9DF60C27334D /* FirebaseCrashlytics-dummy.m */; };
+		B050F72F7AC492A3CF1A45A231A52D18 /* infoIconSubtle@3x.png in Resources */ = {isa = PBXBuildFile; fileRef = 2F7ECA76DC2FE37F1233B7CFE835BD6D /* infoIconSubtle@3x.png */; };
+		B0B0A67A8CC868EF4D145A3AA598FC85 /* FIRMessagingConstants.h in Headers */ = {isa = PBXBuildFile; fileRef = F301034A45D7615D43DD7D1820B95F2B /* FIRMessagingConstants.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		B0C8F2B8829D7298EF6AF6A38B546324 /* CleverTapInstanceConfig.h in Headers */ = {isa = PBXBuildFile; fileRef = 94F57A8670BA6CDCD1B488C2E9D8E79B /* CleverTapInstanceConfig.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		B0E4F54D26FC64D43B9DA50D30AC45A8 /* FIRCLSBinaryImage.h in Headers */ = {isa = PBXBuildFile; fileRef = 136309EA332758D6F80642442B5E8D0E /* FIRCLSBinaryImage.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		B0EE31A92412C63BEBC35CA2B23C8786 /* pb_common.c in Sources */ = {isa = PBXBuildFile; fileRef = D7B583AE7B8586E72216E28616C35894 /* pb_common.c */; settings = {COMPILER_FLAGS = "-fno-objc-arc -fno-objc-arc -fno-objc-arc"; }; };
+		B0F60847F38CC318B18532C10B7E827F /* GULAppDelegateSwizzler.h in Headers */ = {isa = PBXBuildFile; fileRef = 63338322A28B340DF3DBB9DA1E44F2AC /* GULAppDelegateSwizzler.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		B1079A4875A6C723D8E6A3F7F851C5D1 /* CTValidationResult.m in Sources */ = {isa = PBXBuildFile; fileRef = 445645A04F832C6AFC1A7D20429B9C25 /* CTValidationResult.m */; };
+		B12A21DC0777982AE1D2D06B038E01B2 /* GDTCORTransport.m in Sources */ = {isa = PBXBuildFile; fileRef = 44D5F7F23986E9B54D33105C833692FA /* GDTCORTransport.m */; };
+		B13D4447D0702E99F306C109E0BA5DC6 /* CTHeaderViewController~ipadland.xib in Resources */ = {isa = PBXBuildFile; fileRef = 3397F629D1F6765424DB092C2F66CFAD /* CTHeaderViewController~ipadland.xib */; };
+		B197B0C5FB2916FDE4B18C374A4A7E19 /* FIRMessagingSyncMessageManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 01FC7833129501016A7297A22972EAB1 /* FIRMessagingSyncMessageManager.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		B1A4269AD7E7FE019019112F3C094385 /* FIRMessagingDefines.h in Headers */ = {isa = PBXBuildFile; fileRef = 75A2B92908925D9D4100AEF8A268BF5A /* FIRMessagingDefines.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		B1B6A2491AC437909DABE20C71BECDBC /* CoreGraphics.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1AB92E1A348B19D65DA69C7F0DAC8F11 /* CoreGraphics.framework */; };
+		B1E582EBE72FBD9C4930E36FE4B7FA19 /* FIRCLSInternalLogging.c in Sources */ = {isa = PBXBuildFile; fileRef = 453FFEE4FA9D0E121E53C6E44FDF31F0 /* FIRCLSInternalLogging.c */; };
+		B1E71FDEB6B4DFAC4CAA93F0731BA431 /* UIImage+MemoryCacheCost.h in Headers */ = {isa = PBXBuildFile; fileRef = 893B156140C14072085D3FA300C2633C /* UIImage+MemoryCacheCost.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		B290699A280718742AA0E0C11AD3D935 /* FIRAppInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = FF8F380A119F483A7ED34E4FBEEA389E /* FIRAppInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		B2D9C561BDC12C08B243352712DDFFCD /* SDAnimatedImageView+WebCache.h in Headers */ = {isa = PBXBuildFile; fileRef = 282B6F78C41F31E6F829448C069F451A /* SDAnimatedImageView+WebCache.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		B2E8CAF4CD92BB6A859900159EE677E2 /* NSButton+WebCache.m in Sources */ = {isa = PBXBuildFile; fileRef = 309682E258E7F680BD207FA9C2500550 /* NSButton+WebCache.m */; };
+		B3600599EDF3F551776186A0955FE3FF /* CTHalfInterstitialImageViewController~ipad.xib in Resources */ = {isa = PBXBuildFile; fileRef = 254F2748C53A27FAA6360F361F8886F1 /* CTHalfInterstitialImageViewController~ipad.xib */; };
+		B3FDC8410F0FD6B0C57CB83AB7973584 /* successIconLight@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = 29E655228567173E6CF4113FF66D3F66 /* successIconLight@2x.png */; };
+		B44A9FAEAE86499B44D346F3EE7C1BB0 /* UIImage+ExtendedCacheData.m in Sources */ = {isa = PBXBuildFile; fileRef = 26724495E42FA4433175CA470C34CEAF /* UIImage+ExtendedCacheData.m */; };
+		B4550342070C5D4FD21B9B3BC396044C /* FIRMessagingPendingTopicsList.h in Headers */ = {isa = PBXBuildFile; fileRef = A418BF64A237037CA82D67C7F793DC04 /* FIRMessagingPendingTopicsList.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		B484C64261A852181CB49EA850049168 /* CleverTap+Inbox.h in Headers */ = {isa = PBXBuildFile; fileRef = 9FA8A04148635EF81606D98D8EF1F491 /* CleverTap+Inbox.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		B4FB65E572191C88B6723B19452C7F2C /* SDWebImageDownloaderConfig.m in Sources */ = {isa = PBXBuildFile; fileRef = E77656B6F69A942FFC046BD415E2946E /* SDWebImageDownloaderConfig.m */; };
+		B57BA199B8F3A4EF389C79F26D899F57 /* PagingViewControllerDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4FDD8BA7D0BA6DEF23523CA56B1DF741 /* PagingViewControllerDelegate.swift */; };
+		B5A4D891DAC2B2E5438556A539248D4C /* CTValidator.h in Headers */ = {isa = PBXBuildFile; fileRef = 9A34E7D3AB5382BAABA61C274FA913C4 /* CTValidator.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		B5BCDA974CCF9D7F9ACEB9D643D83A5D /* FIRCLSNetworkOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = 8D5297BB76E3039E0D40586E8B40C404 /* FIRCLSNetworkOperation.m */; };
+		B5D2DEEB70819873E1CC24DB623586A0 /* GoogleUtilities-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 5434F64A7F1BF16550451736733F6B20 /* GoogleUtilities-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		B6196C7A4256A11B4905924341D199DB /* FIRCLSInstallIdentifierModel.h in Headers */ = {isa = PBXBuildFile; fileRef = 9044B30EE88D7F37DF950735DF51E560 /* FIRCLSInstallIdentifierModel.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		B6473B8E8353317F75D6800D4F7054CB /* NetworkReachabilityManager.swift in Sources */ = {isa = PBXBuildFile; fileRef = 58C6DC4366CC90E41FCFEBC0C9E70F2F /* NetworkReachabilityManager.swift */; };
+		B6567FD239CBF5B53B810FE0B0BF142F /* PassthroughView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 7974271D2EFBF3AE8F80084BB87AD7AC /* PassthroughView.swift */; };
+		B69489B05079847099ABDF16BFB86C4C /* CleverTapFeatureFlagsPrivate.h in Headers */ = {isa = PBXBuildFile; fileRef = 072184D32B7A963613213CE51B2572CD /* CleverTapFeatureFlagsPrivate.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		B6B43B1B78EC0E52CC08F82841A22A31 /* IQKeyboardManagerSwift-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = E8FF85E09CB841AB5271415B84CA04E8 /* IQKeyboardManagerSwift-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		B6EB5878C462FF6E08E18A719997FE04 /* CleverTapJSInterface.h in Headers */ = {isa = PBXBuildFile; fileRef = CEB8AEF6A7DD8930A3138907FB140D93 /* CleverTapJSInterface.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		B6EC6D40823E66D5B389ACEAC9FD7AAE /* QuartzCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 838750511E8B5BB64F45DC607A98C2F4 /* QuartzCore.framework */; };
+		B7111D533E543653DB2B283411A66527 /* FIRInstallationsItem+RegisterInstallationAPI.m in Sources */ = {isa = PBXBuildFile; fileRef = 586FE46D13BAE29B758E52774C6C2B90 /* FIRInstallationsItem+RegisterInstallationAPI.m */; };
+		B7810FB82B202E3C37BF3E16BF082C9D /* warningIconSubtle@3x.png in Resources */ = {isa = PBXBuildFile; fileRef = C72920E33F894FB94F1FFF84A4CC61FC /* warningIconSubtle@3x.png */; };
+		B78BE50F75F62DD65A599AFEF23E1494 /* FIRMessagingCheckinPreferences.m in Sources */ = {isa = PBXBuildFile; fileRef = 91289D59F183805921D7269BDA6B9D3D /* FIRMessagingCheckinPreferences.m */; };
+		B7A4A86298E46046DA10034FFB65E9A3 /* GDTCORLifecycle.m in Sources */ = {isa = PBXBuildFile; fileRef = 60AE513218F5D3AFFCA9792B8C2E9EF0 /* GDTCORLifecycle.m */; };
 		B7A685693A226AF0FCF3FA983F762672 /* Pods-OpenBook-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = CDC94D9C30849BD1C7AEB03090DFBF9E /* Pods-OpenBook-dummy.m */; };
-		B7C4999FEF50758AB4F179C9EC3B4D3D /* GDTCORClock.m in Sources */ = {isa = PBXBuildFile; fileRef = 3C4990FE158BFE0C5D1EE468B9AD1CA4 /* GDTCORClock.m */; };
-		B7CDC47285999D264ECDA21789B92F64 /* GoogleUtilities-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = B654495B8C321B40B2AE97E9B2504B93 /* GoogleUtilities-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		B7CEB37C97CEC389801DCE0BC5A680F3 /* GULSwizzler.m in Sources */ = {isa = PBXBuildFile; fileRef = DE8AA641F5CFFBD0067AB18650A0886A /* GULSwizzler.m */; };
-		B7EA0C30460EFFFC7989537EFE7CA333 /* warningIconLight@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = 3EE37FF5AC6066546D2657F9A944D60F /* warningIconLight@2x.png */; };
-		B7FB522F684ADED04510FBEC1F272FC7 /* SDImageAssetManager.m in Sources */ = {isa = PBXBuildFile; fileRef = 33C5EDCAF5CC935647258F1EDDCCC3F8 /* SDImageAssetManager.m */; };
-		B82513AEC6F5D81072CEE0A76E2C1826 /* FIRCLSApplicationIdentifierModel.m in Sources */ = {isa = PBXBuildFile; fileRef = 0C1D660E37B3728E235EC51D0575A946 /* FIRCLSApplicationIdentifierModel.m */; };
-		B89D1C69742F61878115334A1D2DFFE7 /* URLRequest+Alamofire.swift in Sources */ = {isa = PBXBuildFile; fileRef = 03096B3EFD7BC201DD12038A742AEE13 /* URLRequest+Alamofire.swift */; };
-		B8EF1C87AA1893419E428AE16D33A192 /* FIRCoreDiagnosticsConnector.h in Headers */ = {isa = PBXBuildFile; fileRef = 8EC8A9A0A188CE8C4D904FEB0E19E31E /* FIRCoreDiagnosticsConnector.h */; settings = {ATTRIBUTES = (Private, ); }; };
-		B90AD1E4C75BE4C9F4B1C82EFCB46FB2 /* SDImageLoadersManager.m in Sources */ = {isa = PBXBuildFile; fileRef = D5D6A84B1602B61D0A766A26C2B864CA /* SDImageLoadersManager.m */; };
-		B9F6F1942C28B67E60E571DAD43F0318 /* FIRMessagingAPNSInfo.h in Headers */ = {isa = PBXBuildFile; fileRef = FEBD8D37764E82F6AB1BE50139F0B555 /* FIRMessagingAPNSInfo.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		BA0370C9D88407715B41624E3A5342D8 /* PagingViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = C240847CF85DE0D09AD836AB7C810B89 /* PagingViewController.swift */; };
-		BA348AE92686FB590BA3C4A9AFEF8A39 /* GDTCCTNanopbHelpers.m in Sources */ = {isa = PBXBuildFile; fileRef = A21EF762C8DE622DE82BA964011ECCFA /* GDTCCTNanopbHelpers.m */; };
-		BAE281EA0FB6BA6EA002D406476F7869 /* CTProductConfigController.h in Headers */ = {isa = PBXBuildFile; fileRef = 22368E06435E34AEB287F9D40FC93CA2 /* CTProductConfigController.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		BAE9F7AEE0A0881F390D7EF437E5B96F /* UIEdgeInsets.swift in Sources */ = {isa = PBXBuildFile; fileRef = AE9829D4640DE2B8E0A8FCFBCBCF0E65 /* UIEdgeInsets.swift */; };
-		BB3F9929AB4ACC12A4E9826A87AA32F3 /* FIRCLSByteUtility.m in Sources */ = {isa = PBXBuildFile; fileRef = F74A81D38E4501D24289C3E0359AABAD /* FIRCLSByteUtility.m */; };
-		BB98D9D9E1A555F94F157C26B8374D69 /* CTFooterViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = EFE97701B7966715E51D553F88B48C12 /* CTFooterViewController.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		BBBFA144D0FD84500281B518106B07A3 /* GDTCORDirectorySizeTracker.m in Sources */ = {isa = PBXBuildFile; fileRef = A03E1EF67E5982B32333A70F99B101FE /* GDTCORDirectorySizeTracker.m */; };
-		BC14D9E271C594AEE52915A80C128CEF /* CTInboxIconMessageCell.h in Headers */ = {isa = PBXBuildFile; fileRef = 89282490EB7FC0E5997226BAE0A1FB0C /* CTInboxIconMessageCell.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		BC2B5CFE14A51CEEAEC6C64EFA0F8BEC /* CTDisplayUnitController.m in Sources */ = {isa = PBXBuildFile; fileRef = 0DCE7A366E8ED57D99CA30FABB9C194D /* CTDisplayUnitController.m */; };
-		BC3676F1D25A6B60263981B350EEF393 /* GULNetworkURLSession.m in Sources */ = {isa = PBXBuildFile; fileRef = E65F8BCC8F952892C5C595B8E6FB0360 /* GULNetworkURLSession.m */; };
-		BC3C24BFAB297964BFDBE9D19DB3F8A3 /* GDTCORPlatform.h in Headers */ = {isa = PBXBuildFile; fileRef = BA58B6AD486F00AA91DFCF5D34F396B0 /* GDTCORPlatform.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		BC3E41A600DF8C62DFA807CEA94949BD /* FIRApp.h in Headers */ = {isa = PBXBuildFile; fileRef = E5A1F2B9875620F3348F65A855B5D063 /* FIRApp.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		BCB7EF5FA047306637C9EB3F5EC930F8 /* PagingSizeCache.swift in Sources */ = {isa = PBXBuildFile; fileRef = B84C3E7598D801D37DE0E3C039594D52 /* PagingSizeCache.swift */; };
-		BCC799E04E4BEC36694FF2D96C82D73F /* FIRHeartbeatInfo.h in Headers */ = {isa = PBXBuildFile; fileRef = 8FCB8BC041B6196AEE39DFA0C35A0049 /* FIRHeartbeatInfo.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		BCF770EE5DA4A013B0B5A4751BF81443 /* CTHeaderViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 4A8C462313F4E8B3759A7A6BE25EBE3E /* CTHeaderViewController.m */; };
-		BCFA3EDB8D7E2B1A390D78125284F415 /* FIRCLSAsyncOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = C8ED0CA0EB9E1484BA355DC33DC9DAA1 /* FIRCLSAsyncOperation.m */; };
-		BD0B0E35C9F60903A656B5D2FD068E80 /* SDWebImagePrefetcher.h in Headers */ = {isa = PBXBuildFile; fileRef = EACDF119791B69E3FCE90A43206DB4EB /* SDWebImagePrefetcher.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		BD68A044FA46B09CA8DEF7247C84402F /* CleverTap+DisplayUnit.h in Headers */ = {isa = PBXBuildFile; fileRef = 2DD539B684F42716277F02DE05B1C860 /* CleverTap+DisplayUnit.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		BD8B24E8B977B44323E84C8B7D7E2EC1 /* pb_common.h in Headers */ = {isa = PBXBuildFile; fileRef = B243A501712C2C834CAB76A0A6DFAE71 /* pb_common.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		BE962B78DF41BD482F238DA43CD3833C /* FIRCLSRecordApplication.m in Sources */ = {isa = PBXBuildFile; fileRef = 18752D526BB913CAA18E687102B4EBF5 /* FIRCLSRecordApplication.m */; };
-		BEEA96C1AE3727F785CD4E9DCEF0450C /* FIRMessagingPubSub.h in Headers */ = {isa = PBXBuildFile; fileRef = 366919397B339D1A3F7F79FBDDDCC298 /* FIRMessagingPubSub.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		BEF51674CF46BBB167F13C098FC8846F /* CTFeatureFlagsController.m in Sources */ = {isa = PBXBuildFile; fileRef = B3151CD44CF2CC39C1E9BD0C8F2C6563 /* CTFeatureFlagsController.m */; };
-		BF062D12A6D9566394D2D47761CA67DC /* FIRCLSReportAdapter.m in Sources */ = {isa = PBXBuildFile; fileRef = 625833768D28DEC6611768458187BE9F /* FIRCLSReportAdapter.m */; };
-		BF20057B2D3DB06474CF766832909B95 /* FIRInstallationsStoredAuthToken.m in Sources */ = {isa = PBXBuildFile; fileRef = F67248B79FA73806F40DBE106A0C1B64 /* FIRInstallationsStoredAuthToken.m */; };
-		BF2392A01F26DA5B351EFC1DA8D35E97 /* FIRCLSUUID.m in Sources */ = {isa = PBXBuildFile; fileRef = D2D6C123A84D5A5BFA1B8258C79689A6 /* FIRCLSUUID.m */; };
-		BF5C187D8C85AB3548B6EA7CE4B3B032 /* OTPFieldView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 2FD20AB24F35B292F8A03FEB7D174EAC /* OTPFieldView.swift */; };
-		BFAC17629CE2E4A37D6DB5AC3D4EE57C /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
-		BFDCC81C7EC038AF625D43CB76D78880 /* FIRCLSContext.h in Headers */ = {isa = PBXBuildFile; fileRef = 38BF5878D629FDFCB392EEC658C95763 /* FIRCLSContext.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		C0632684E7A4FBE7C810BF1893BFE4F3 /* CTInterstitialImageViewController~iphoneland.xib in Resources */ = {isa = PBXBuildFile; fileRef = 8FFA1950443624F29BFE8CE349AF2194 /* CTInterstitialImageViewController~iphoneland.xib */; };
-		C0944421478108A14ED28D4D0F088003 /* warningIconSubtle.png in Resources */ = {isa = PBXBuildFile; fileRef = 84029CD3312F9535FB2A92F72EC7397F /* warningIconSubtle.png */; };
-		C0E51934DA16A78AAB917F7C15F59694 /* GULNetworkMessageCode.h in Headers */ = {isa = PBXBuildFile; fileRef = BFEFAC856E0DF52FE88A00404E496A87 /* GULNetworkMessageCode.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		C0F4B54D59347B146971AFD128A2D993 /* PageViewState.swift in Sources */ = {isa = PBXBuildFile; fileRef = 391CB2E8462B3793643B728C42F4E23F /* PageViewState.swift */; };
-		C108352E7A38E9FB99907F75743114B6 /* IQUIViewController+Additions.swift in Sources */ = {isa = PBXBuildFile; fileRef = EE134E8AAD16F8482B70C12CCCBE88C5 /* IQUIViewController+Additions.swift */; };
-		C16A047C4E8D856309A486182A490993 /* MultipartFormData.swift in Sources */ = {isa = PBXBuildFile; fileRef = B2946A683C74EB0AFBAD306665EDC902 /* MultipartFormData.swift */; };
-		C18ECB3DD14A06DB2A9E4B5CB6E180B5 /* FIRLogger.m in Sources */ = {isa = PBXBuildFile; fileRef = E8456D9DE3C5F9C1C412F93EEB271DFE /* FIRLogger.m */; };
-		C19793CF9431581F27C584902CB53AB6 /* SDAnimatedImage.m in Sources */ = {isa = PBXBuildFile; fileRef = 9410220FC9507D1021FC3A2F0B0C3BE5 /* SDAnimatedImage.m */; };
-		C1E5844B29EE2237714811788C847A59 /* LayoutAnchoring.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EC5BC85E79F0E2F188B00AAFF9FB3C5 /* LayoutAnchoring.swift */; };
+		B7DC6553CE508715C6C304D020C78C53 /* GULMutableDictionary.h in Headers */ = {isa = PBXBuildFile; fileRef = 6504694C431494CC95B4CC310FE30CCC /* GULMutableDictionary.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		B80847B9BC4125013366ADAE169C98D8 /* UIColor+SDHexString.m in Sources */ = {isa = PBXBuildFile; fileRef = 8A30EF3CB3C0409BCFD0618B2E2EC2B2 /* UIColor+SDHexString.m */; };
+		B89D1C69742F61878115334A1D2DFFE7 /* URLRequest+Alamofire.swift in Sources */ = {isa = PBXBuildFile; fileRef = 9DC444B95245C764B86A8A1FE5825916 /* URLRequest+Alamofire.swift */; };
+		B8B5663D8E6C3AE95BC3A651C4E73EF7 /* SDWebImageError.m in Sources */ = {isa = PBXBuildFile; fileRef = BA934F57ECA230A357ADD82CFF2B6B98 /* SDWebImageError.m */; };
+		B9548EBF10A86F7C04212D1C025D1486 /* FIRBundleUtil.h in Headers */ = {isa = PBXBuildFile; fileRef = 8C2697936939C6F54F2DFD4A17C621B3 /* FIRBundleUtil.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		B96DD97A451AD7DBC418F91ACE05C2A3 /* GDTCORPlatform.h in Headers */ = {isa = PBXBuildFile; fileRef = 49B4D2364E14E9F24589A34EC36BD058 /* GDTCORPlatform.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		B99D45A242DB7545E797633B3E72F453 /* SDWebImage-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 5E9533D6C692AAB573E718CB804456A0 /* SDWebImage-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		B9C9B40707E0446A5B51A07FBF1CC247 /* FIRCLSMachException.c in Sources */ = {isa = PBXBuildFile; fileRef = 0F2A034BF9635154F9EDADBC13582B78 /* FIRCLSMachException.c */; };
+		B9F7E2CEA4228C777500423AB874DB00 /* FIRInstallationsBackoffController.m in Sources */ = {isa = PBXBuildFile; fileRef = 21994099344795EFDC6618C284F4B125 /* FIRInstallationsBackoffController.m */; };
+		BA0370C9D88407715B41624E3A5342D8 /* PagingViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = FC3ACB1BEB3FCFAE896E1FA692F94DA2 /* PagingViewController.swift */; };
+		BA23C4D9C3B882A359BBF8E4D44CB1DB /* ImageIO.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 586DFA51695907453FC2C9865DC0FF45 /* ImageIO.framework */; };
+		BA4EC3466CC464A5FA66B9B1809F6050 /* FIRCLSGlobals.h in Headers */ = {isa = PBXBuildFile; fileRef = F89A12F6712B7BD47B4D58A8E14A89D6 /* FIRCLSGlobals.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		BABBB5E83EAF9D7EF90502F4373D4E98 /* SDWebImageIndicator.h in Headers */ = {isa = PBXBuildFile; fileRef = 00F40D83B380FAF70C11ED007FF3EB7F /* SDWebImageIndicator.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		BAE281EA0FB6BA6EA002D406476F7869 /* CTProductConfigController.h in Headers */ = {isa = PBXBuildFile; fileRef = A052B06F0F06C7B457CA7BD8A756E842 /* CTProductConfigController.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		BAE9F7AEE0A0881F390D7EF437E5B96F /* UIEdgeInsets.swift in Sources */ = {isa = PBXBuildFile; fileRef = B59AF08D6EA4DB230212564951F098FA /* UIEdgeInsets.swift */; };
+		BB2B1C8268535C8BB056EB34B907FE16 /* WindowScene.swift in Sources */ = {isa = PBXBuildFile; fileRef = EF119B1111956F3D2D98A25E4661876A /* WindowScene.swift */; };
+		BB4DA9117792BA0745CABE24EBC4E159 /* FirebaseMessaging-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 84351528A6BDE691996F70277D6447A9 /* FirebaseMessaging-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		BB5527AC4721CC15D4E9748BB3D02AB5 /* FIRCLSUnwind.h in Headers */ = {isa = PBXBuildFile; fileRef = 71A992955D309D9E3C02B07B74C31575 /* FIRCLSUnwind.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		BB98D9D9E1A555F94F157C26B8374D69 /* CTFooterViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 704A3BBD09FCEEBFD143CD9948C2C47A /* CTFooterViewController.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		BBFD0866D130815C7F92FE6536F345C0 /* SDWebImageTransition.h in Headers */ = {isa = PBXBuildFile; fileRef = B4D6EE000A0751F6CD9A0759BE81E9DF /* SDWebImageTransition.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		BC14D9E271C594AEE52915A80C128CEF /* CTInboxIconMessageCell.h in Headers */ = {isa = PBXBuildFile; fileRef = 3626E4BC15CF4E9A55C183D426B6F4D3 /* CTInboxIconMessageCell.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		BC2B5CFE14A51CEEAEC6C64EFA0F8BEC /* CTDisplayUnitController.m in Sources */ = {isa = PBXBuildFile; fileRef = 77FCA99F448DEB88FB1F44D119955CEA /* CTDisplayUnitController.m */; };
+		BCB7EF5FA047306637C9EB3F5EC930F8 /* PagingSizeCache.swift in Sources */ = {isa = PBXBuildFile; fileRef = CADC88554C9D1F5B26204930AD632DAC /* PagingSizeCache.swift */; };
+		BCF40817EA75D4FE49E51DABAA5FE77C /* FIRMessagingPersistentSyncMessage.m in Sources */ = {isa = PBXBuildFile; fileRef = EAA4A4EE06B754BE734FEA4BD8184B02 /* FIRMessagingPersistentSyncMessage.m */; };
+		BCF770EE5DA4A013B0B5A4751BF81443 /* CTHeaderViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 9B14ADDA449C1A0017FDD1A6F51A9ABB /* CTHeaderViewController.m */; };
+		BCFD448336AA00E00A7DF42709E5F07B /* pb_common.h in Headers */ = {isa = PBXBuildFile; fileRef = CCA07FC8BB7A48B6B63A0BF3DAFE9DFB /* pb_common.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		BD40479C93792902CE4D2CEA54AA5B9A /* FIRCLSInternalLogging.h in Headers */ = {isa = PBXBuildFile; fileRef = DD4AAD55B3695ED410F2C7795CECC2F4 /* FIRCLSInternalLogging.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		BD53016D8B1FDF3AEDA321E783D0B3BC /* SDImageCacheConfig.m in Sources */ = {isa = PBXBuildFile; fileRef = 029BF419655EC97214F8D4653666A707 /* SDImageCacheConfig.m */; };
+		BD68A044FA46B09CA8DEF7247C84402F /* CleverTap+DisplayUnit.h in Headers */ = {isa = PBXBuildFile; fileRef = 7082B4098ED08EB747058DDE40A00874 /* CleverTap+DisplayUnit.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		BD9A0DC76B995920A5AD5CF7F0364269 /* SDInternalMacros.h in Headers */ = {isa = PBXBuildFile; fileRef = 35010556B9CEC9736EEBE58037864F4B /* SDInternalMacros.h */; settings = {ATTRIBUTES = (Private, ); }; };
+		BE0EF03B19343C8662224300449B2616 /* FIRInstallationsAPIService.h in Headers */ = {isa = PBXBuildFile; fileRef = 95F6D6E2B8C3D9BD2F7CDE259A7EF32C /* FIRInstallationsAPIService.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		BE6E5F94359D324CB02ED2B4863C0627 /* FIRComponentType.h in Headers */ = {isa = PBXBuildFile; fileRef = 74C5078638ED7085EB5749A170D8B922 /* FIRComponentType.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		BE763922627F21B9C88022898AD30181 /* FBLPromise+Do.m in Sources */ = {isa = PBXBuildFile; fileRef = 57E64AB864A1035B3C190694A886A521 /* FBLPromise+Do.m */; };
+		BEA1CC263AA78F45A05F996530F88087 /* FIRMessagingRemoteNotificationsProxy.h in Headers */ = {isa = PBXBuildFile; fileRef = 8BB08E19E8D97BFFD2C53552F17F27B2 /* FIRMessagingRemoteNotificationsProxy.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		BEDDC075247FCFB81924768E7976AC1C /* FIRLibrary.h in Headers */ = {isa = PBXBuildFile; fileRef = 1DBA64DCD9D41971850CB5ADAA1AC257 /* FIRLibrary.h */; settings = {ATTRIBUTES = (Private, ); }; };
+		BEF51674CF46BBB167F13C098FC8846F /* CTFeatureFlagsController.m in Sources */ = {isa = PBXBuildFile; fileRef = ECA92E1742AF14B1A8AB859BE2E9BC40 /* CTFeatureFlagsController.m */; };
+		BEF86AC78261B5A91876C9F722EA3D20 /* crashlytics.nanopb.c in Sources */ = {isa = PBXBuildFile; fileRef = 902AE51961A56236E846455515371AEA /* crashlytics.nanopb.c */; };
+		BF5C187D8C85AB3548B6EA7CE4B3B032 /* OTPFieldView.swift in Sources */ = {isa = PBXBuildFile; fileRef = B248E793B2D9A8C2D1C43B2319C40FEF /* OTPFieldView.swift */; };
+		BF658BB721432B9758B164828EA7A8E2 /* FIRMessagingPubSub.h in Headers */ = {isa = PBXBuildFile; fileRef = A101FCB1021D037343DFE042B1476C9F /* FIRMessagingPubSub.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		BF88D6A0A00D2D8007B7484156E8D9CF /* GDTCOREventDataObject.h in Headers */ = {isa = PBXBuildFile; fileRef = 2A339A5997A36DAE10D9112B1E8F2F1B /* GDTCOREventDataObject.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		BFAB4C4DAEFAAE316F3F7006D0E7F45B /* NSBundle+Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE67CCCB72022EA1852C74BAC94681B6 /* NSBundle+Extensions.swift */; };
+		C020A8BFDD96A6EC2DA196FA3BBF3E7B /* GULSwizzler.h in Headers */ = {isa = PBXBuildFile; fileRef = 1E6594E503DD7164304F3C3BB9817FDC /* GULSwizzler.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		C030F5025DCB39DE3DE60D8941A398D6 /* SDDeviceHelper.m in Sources */ = {isa = PBXBuildFile; fileRef = 403DDF437FF912A8E30AB2D9A0BF8FD4 /* SDDeviceHelper.m */; };
+		C0632684E7A4FBE7C810BF1893BFE4F3 /* CTInterstitialImageViewController~iphoneland.xib in Resources */ = {isa = PBXBuildFile; fileRef = E7B417DAB5FFFF371264E9E54941902E /* CTInterstitialImageViewController~iphoneland.xib */; };
+		C066C772F568F5E925022DC41BE0C882 /* SDImageIOAnimatedCoder.m in Sources */ = {isa = PBXBuildFile; fileRef = 6F99F80788C2841279C7B5DC7738C28D /* SDImageIOAnimatedCoder.m */; };
+		C0BB8CFC7C7B96CED0706AD17808EE83 /* SDImageCoder.h in Headers */ = {isa = PBXBuildFile; fileRef = 02B097F18AB36740908A67DA3144C615 /* SDImageCoder.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		C0E5432810487B04BF55B08272EED811 /* FIRCLSException.mm in Sources */ = {isa = PBXBuildFile; fileRef = 74C338F218E0D5A07922A259EE01FD7A /* FIRCLSException.mm */; };
+		C0F4B54D59347B146971AFD128A2D993 /* PageViewState.swift in Sources */ = {isa = PBXBuildFile; fileRef = C2AE1EC590B88A0032AB83911B486F62 /* PageViewState.swift */; };
+		C1215BEB144E755AC1C773587D6CBDA2 /* StatusLine.xib in Resources */ = {isa = PBXBuildFile; fileRef = 224D83CCD5194BDED744F2EEB93777D0 /* StatusLine.xib */; };
+		C16146E3B4D52FAFF66F7B89E57E0AAB /* me.nanopb.c in Sources */ = {isa = PBXBuildFile; fileRef = 1951B2A7EDF84F198C3FE472FAA1B4EF /* me.nanopb.c */; };
+		C16A047C4E8D856309A486182A490993 /* MultipartFormData.swift in Sources */ = {isa = PBXBuildFile; fileRef = F1FC5AE05ADC062C360E95799BDCB922 /* MultipartFormData.swift */; };
+		C177DC269B844330C3D1C886DC5F6CFE /* FIRFirebaseUserAgent.m in Sources */ = {isa = PBXBuildFile; fileRef = 3990F0876DAE1A33A9ECEBAE5B467A2D /* FIRFirebaseUserAgent.m */; };
+		C18D4023FD9EABC584F36F22C4143B99 /* FBLPromise+Testing.h in Headers */ = {isa = PBXBuildFile; fileRef = 27B50D8766515747D9635EB33CDB8CDF /* FBLPromise+Testing.h */; };
+		C1E5844B29EE2237714811788C847A59 /* LayoutAnchoring.swift in Sources */ = {isa = PBXBuildFile; fileRef = 070A92CB23B8D538CC393FCD99F0F12A /* LayoutAnchoring.swift */; };
 		C20A9E4927F561CF9CB08DBA3F0C9B9F /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
-		C20FD862C0D669F130DBFE94EC0F51A4 /* UIWindow+Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = 24995C34872B83155F75C160D6D8ED6C /* UIWindow+Extensions.swift */; };
-		C22AC83580D5F42B151EA47BF9D2DDA3 /* FIRMessagingConstants.m in Sources */ = {isa = PBXBuildFile; fileRef = 065DA9EA9DC0F1ABC97DDEFEB638FC7C /* FIRMessagingConstants.m */; };
-		C24762ACC723CDA1E2B0FDEB77E72205 /* PagingViewControllerSizeDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = 139B8C7543692F953127F906881AE23F /* PagingViewControllerSizeDelegate.swift */; };
-		C27E687266519DC29814537886428901 /* infoIcon.png in Resources */ = {isa = PBXBuildFile; fileRef = 333F24DA805EC09F1C08FFC8C038C9CE /* infoIcon.png */; };
-		C2A489AB14FB383806421D8C0948F100 /* CTCoverImageViewController~iphoneport.xib in Resources */ = {isa = PBXBuildFile; fileRef = 430FA928F00CC2633F77922456A8E440 /* CTCoverImageViewController~iphoneport.xib */; };
-		C32123E6F6E465F808A839B3E18AE845 /* GULLoggerLevel.h in Headers */ = {isa = PBXBuildFile; fileRef = B19FE5924A546AE7C1E1726784CE9157 /* GULLoggerLevel.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		C34954C7B098A995A8693B67974D578D /* FBLPromise+Reduce.m in Sources */ = {isa = PBXBuildFile; fileRef = E584F29C8DDDEE49BD1C4C2290A1AB78 /* FBLPromise+Reduce.m */; };
-		C362805BEDAAA3B3DD9DA0F6A528CB6F /* FIRCLSCodeMapping.m in Sources */ = {isa = PBXBuildFile; fileRef = F9BD39614F587C132EF3E32F9DCC8782 /* FIRCLSCodeMapping.m */; };
-		C3925B1C28E5D13A6F932E240107235D /* UIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 544065BA7D1202329397F6CEE19EB5A2 /* UIKit.framework */; };
-		C3AE035DDC4F70A808846616E02E9063 /* XLPagerTabStrip-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 061ADDF7160D72DBB04CE3C07A65D092 /* XLPagerTabStrip-dummy.m */; };
-		C3D4AF52D985BC04ADE2102999F0029B /* errorIcon@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = 627DC84D45B2DE549AEF37742FDD550C /* errorIcon@2x.png */; };
-		C3ED4B7EE0299D837205B9FE7F7571D1 /* GULLoggerCodes.h in Headers */ = {isa = PBXBuildFile; fileRef = 64C034536F1F42CBFA45EAF2EC02A006 /* GULLoggerCodes.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		C43B5D650158E328B6433996C101174E /* SDWebImageDownloaderResponseModifier.h in Headers */ = {isa = PBXBuildFile; fileRef = 0974813C72E5361CCD1D7FA32B1889C6 /* SDWebImageDownloaderResponseModifier.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		C46F9A3F22390CC1ACF9CEA083C816B0 /* FIRCLSProcessReportOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = 25977088D01041D839B293C593FABBE9 /* FIRCLSProcessReportOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		C4AA336DB387CE6FEFB36F5580B6B0B5 /* SDWebImageTransitionInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 7A932CF055888D58AC5364A9BB4E4126 /* SDWebImageTransitionInternal.h */; settings = {ATTRIBUTES = (Private, ); }; };
-		C4CFC2E8FC9D40B5E00E48E31BA880B9 /* CTInAppUtils.h in Headers */ = {isa = PBXBuildFile; fileRef = A17A65C2BAF429438DD737EC197F9363 /* CTInAppUtils.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		C4E45C439BA99C833D00F3AE563548E9 /* FIRCoreDiagnosticsInterop.h in Headers */ = {isa = PBXBuildFile; fileRef = 70B78676E486E5735745926630A81D3C /* FIRCoreDiagnosticsInterop.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		C640BF05776E6C910E62A5E1DCACE870 /* SDWebImageIndicator.h in Headers */ = {isa = PBXBuildFile; fileRef = 308105C8185536584DA71C3F770D95F8 /* SDWebImageIndicator.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		C6600B18355EE8C34770E4059C2C122C /* SDImageAPNGCoder.h in Headers */ = {isa = PBXBuildFile; fileRef = 8F8D19E7D75BCAF9C1D1E8247761E74F /* SDImageAPNGCoder.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		C6B0D967B490C8480F7D2A970D00976D /* SDGraphicsImageRenderer.h in Headers */ = {isa = PBXBuildFile; fileRef = EAD92B743E2D993D4E2501134ADC4EC8 /* SDGraphicsImageRenderer.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		C6C23A52B39670920955B9FE038F0968 /* SDAnimatedImage.h in Headers */ = {isa = PBXBuildFile; fileRef = 2297304CCAB522D456EB5096A1A75E53 /* SDAnimatedImage.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		C710513AD040C9187BC8D75A619115CC /* CTProfileBuilder.h in Headers */ = {isa = PBXBuildFile; fileRef = E62B0163976140745687595BB6C9137D /* CTProfileBuilder.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		C73C864AEF083B4DF91C4D4CFAA9EA0A /* GDTCORTransport.h in Headers */ = {isa = PBXBuildFile; fileRef = 96ED27AA89926A1702A380F0C36EA9EF /* GDTCORTransport.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		C7B8914DE47EC480669C6BE2850AE22A /* Assets.bundle in Resources */ = {isa = PBXBuildFile; fileRef = DBF5AA0BE24D16F79D770563371322A6 /* Assets.bundle */; };
-		C7EF5C3009EFA2194C27A788618F9CC2 /* CleverTap-iOS-SDK-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 4C9CDC8AB4B8CB49529F37327E067FBB /* CleverTap-iOS-SDK-dummy.m */; };
-		C7F638E0ADE0E53CD822EDCF665C8754 /* FBLPromise+Recover.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = 16BED021AF23370BFDD1A3B2918042DC /* FBLPromise+Recover.h */; };
-		C7F66519CE6148F21D7DB11423F1D34D /* Response.swift in Sources */ = {isa = PBXBuildFile; fileRef = AB5A85BFE6E1D720BD9F6389C8357EE4 /* Response.swift */; };
-		C7FC2FBF1858B2BA4297F2B64E0A673C /* CTLogger.h in Headers */ = {isa = PBXBuildFile; fileRef = D087ADFBDBC7AF01A7C020CE36EC58DF /* CTLogger.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		C811FB1C9E1FD295AA9CD600A08E5D19 /* FIRCoreDiagnosticsConnector.h in Headers */ = {isa = PBXBuildFile; fileRef = CF9864D521D729623F0DA726CD7534C3 /* FIRCoreDiagnosticsConnector.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		C8141CFC0302C296C3E13C9B3BE95CFB /* FBLPromise+Reduce.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = 56362F034BF93311AF8B0949F38AD0B0 /* FBLPromise+Reduce.h */; };
-		C82B4F556805411E6C326C5E436B4028 /* FIRAnalyticsInteropListener.h in Headers */ = {isa = PBXBuildFile; fileRef = ADAC7B9405416991D09BC5EF42580E9B /* FIRAnalyticsInteropListener.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		C887086D4EDFD9517A50404A99B8CFEA /* SDImageGraphics.m in Sources */ = {isa = PBXBuildFile; fileRef = 5F35FDD606E5DC51D20B960AF8BDA799 /* SDImageGraphics.m */; };
-		C897E1291F5DA3F982699C6A8A76EF13 /* Security.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 05720C608590E305E32A22FE9BDFD55B /* Security.framework */; };
-		C8C60A9C2F77696952886B6846A8C5B8 /* FIRLibrary.h in Headers */ = {isa = PBXBuildFile; fileRef = 30DD1A51E7CAEECA13C0A834A5A85960 /* FIRLibrary.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		C8C620A44FCD448783CC66A9FFD48DAC /* UIView+CTToast.m in Sources */ = {isa = PBXBuildFile; fileRef = 44CC799655F7A8FF8D39E0E94FAB29E3 /* UIView+CTToast.m */; };
-		C8D2F50D969AF65DACC73ABF6A6DCE99 /* FIRLibrary.h in Headers */ = {isa = PBXBuildFile; fileRef = AC18EF964D0806F4B56484C581F4B44E /* FIRLibrary.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		C8F3204EB9CF2B66D98927D7EDA4043B /* CTHalfInterstitialViewController~ipad.xib in Resources */ = {isa = PBXBuildFile; fileRef = FFCE3B4C1AD94A4B30E060714B379D98 /* CTHalfInterstitialViewController~ipad.xib */; };
-		C936A3C40673FCC5FF14B2839A672E64 /* FIRMessagingAuthService.h in Headers */ = {isa = PBXBuildFile; fileRef = 319578FC42AA3E4CC50DCD0C1E28F2B1 /* FIRMessagingAuthService.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		C939C420C21834679640573A48FF2EF5 /* CTCoverImageViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = A48A1D5F3678EAF4CF0BFB2EFD185FB9 /* CTCoverImageViewController.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		C959414907B35B8CF3B8729143088A9F /* NSBundle+Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1FF4630E394E64643FE68204686C542A /* NSBundle+Extensions.swift */; };
-		C9D3ED9D08F59A852FB2A80E1D840CA7 /* GULNSData+zlib.m in Sources */ = {isa = PBXBuildFile; fileRef = 700204BEE12AEA18A72E2AFFAFC5E11D /* GULNSData+zlib.m */; };
-		C9DA19729D7497F2BE17E0E737F6D77D /* PagingDistance.swift in Sources */ = {isa = PBXBuildFile; fileRef = 9B104B286BAE12003C7FEAF54BE34B41 /* PagingDistance.swift */; };
-		CA0AFDB127CA64B2566866D86ECD2FF1 /* CTImageInAppViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 406EE5C1D0D45E9BF383F2FCE26E1387 /* CTImageInAppViewController.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		CA6267373A1F7FC5AF8061220025ECB9 /* PagingSelectedScrollPosition.swift in Sources */ = {isa = PBXBuildFile; fileRef = D4E6DA8EC473E04BAB8A65C34D5E2E9C /* PagingSelectedScrollPosition.swift */; };
+		C24762ACC723CDA1E2B0FDEB77E72205 /* PagingViewControllerSizeDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1231E02200F433ECD0B01C536277EA47 /* PagingViewControllerSizeDelegate.swift */; };
+		C2479621328096685EB2AB403F8AE512 /* FIRInstallationsSingleOperationPromiseCache.h in Headers */ = {isa = PBXBuildFile; fileRef = 0A4ADA13CC4AD309592412458CC3808B /* FIRInstallationsSingleOperationPromiseCache.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		C2A489AB14FB383806421D8C0948F100 /* CTCoverImageViewController~iphoneport.xib in Resources */ = {isa = PBXBuildFile; fileRef = 59F947238622E9B72A9B02BAAB53D1C9 /* CTCoverImageViewController~iphoneport.xib */; };
+		C2B4FA45B0E173739E83960253C76214 /* FIRMessagingUtilities.h in Headers */ = {isa = PBXBuildFile; fileRef = 1FBD3B0F64B078A95D0CF4CDD5F7CE1E /* FIRMessagingUtilities.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		C2E580963F3B5B2B17ED4FE5B3988A1A /* FIRCrashlyticsReport.h in Headers */ = {isa = PBXBuildFile; fileRef = 112701C44F751ABF2F9B4AF8D984BC9E /* FIRCrashlyticsReport.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		C325A4AECCB99EF5CD2B2EAC2E44F80E /* FIRInstallationsErrorUtil.m in Sources */ = {isa = PBXBuildFile; fileRef = 05BFBE8F142E54DC1DE8D39359953379 /* FIRInstallationsErrorUtil.m */; };
+		C34FAF597AB21F5189FD305F90358D3F /* FIRCLSCompoundOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = 9CC98E99A7B3882475A89A615274189B /* FIRCLSCompoundOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		C3870F06CE218438A8AFDD86668B6F6A /* FIRMessagingUtilities.m in Sources */ = {isa = PBXBuildFile; fileRef = EE3FD3BAFF22CD24A13EF6FBB0E1C843 /* FIRMessagingUtilities.m */; };
+		C3AE035DDC4F70A808846616E02E9063 /* XLPagerTabStrip-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 994334386DDF9F19120F7CEBDCEABA88 /* XLPagerTabStrip-dummy.m */; };
+		C4048B97AD9DA9BAE1784DD4909E9503 /* SDmetamacros.h in Headers */ = {isa = PBXBuildFile; fileRef = 26BA89A6DDBD3575416E2F99F1678616 /* SDmetamacros.h */; settings = {ATTRIBUTES = (Private, ); }; };
+		C409987E6FAB19D7341FD4658F9BBF74 /* FIRCLSException.h in Headers */ = {isa = PBXBuildFile; fileRef = A2F25633C96DBF77ABC7972F54429AD1 /* FIRCLSException.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		C48502FA4432DC29881CCE73D30AD505 /* FIRCLSReportAdapter.m in Sources */ = {isa = PBXBuildFile; fileRef = 7C705EF5B2F8D0AB0F671FF2ACBB658D /* FIRCLSReportAdapter.m */; };
+		C4937D3DE58B508EAB535DA0ED4CD781 /* successIcon.png in Resources */ = {isa = PBXBuildFile; fileRef = B4E337745488943D7696563EB4F0728D /* successIcon.png */; };
+		C4CFC2E8FC9D40B5E00E48E31BA880B9 /* CTInAppUtils.h in Headers */ = {isa = PBXBuildFile; fileRef = 4FEC174D12F1FB76901D4AC3AC2FFC01 /* CTInAppUtils.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		C4D7C3BBB6B4CE8E0CFFB94EF8DB76DA /* FIRCLSReportManager_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = EE180BEAD1B5D317D9FA99393658D9BE /* FIRCLSReportManager_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		C593E0900E7BC3658972B9BE0A779559 /* FIRAnalyticsInteropListener.h in Headers */ = {isa = PBXBuildFile; fileRef = EA3724F59CC3A9F721E4AD40D3A31EB1 /* FIRAnalyticsInteropListener.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		C5B51EF112EB5ED32DE1EC8BC2EC5745 /* GDTCORFlatFileStorage.h in Headers */ = {isa = PBXBuildFile; fileRef = C7F444D81C9CEEE2EE13AD0066222860 /* GDTCORFlatFileStorage.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		C64974646432E2A61EB2C2B2A52FE875 /* GULReachabilityChecker.m in Sources */ = {isa = PBXBuildFile; fileRef = 6C286A086FC337834F62B88833A952E5 /* GULReachabilityChecker.m */; };
+		C676ADFCEC38B1907461E4F1783B1515 /* CoreTelephony.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = E59EBC47CDD888882ED048EC6F3B6265 /* CoreTelephony.framework */; };
+		C6918F9BF6595E5B86C77996CB87016C /* FIRCoreDiagnosticsInterop.h in Headers */ = {isa = PBXBuildFile; fileRef = 9390ABEFD49352F1AC9C0DA27C28BEB0 /* FIRCoreDiagnosticsInterop.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		C69EA7A8B6D57A59DF03EBDD12DE9D92 /* FIRMessagingLogger.m in Sources */ = {isa = PBXBuildFile; fileRef = FC4A2D177C8C0015B9176FBC5DD073F7 /* FIRMessagingLogger.m */; };
+		C710513AD040C9187BC8D75A619115CC /* CTProfileBuilder.h in Headers */ = {isa = PBXBuildFile; fileRef = F859CFBA02701A225A037DBBA4F80CD3 /* CTProfileBuilder.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		C7B8914DE47EC480669C6BE2850AE22A /* Assets.bundle in Resources */ = {isa = PBXBuildFile; fileRef = CDCB66C7CE92CAC86021C9BA6D28834D /* Assets.bundle */; };
+		C7E8D8D22CBDE8B7612E3F3250AA3154 /* GDTCOREndpoints.h in Headers */ = {isa = PBXBuildFile; fileRef = 0564512CD2B0BD6F86FF104DEF8F6D1C /* GDTCOREndpoints.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		C7EF5C3009EFA2194C27A788618F9CC2 /* CleverTap-iOS-SDK-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 0D369D3DB2F5A175E431A6CAB140ED31 /* CleverTap-iOS-SDK-dummy.m */; };
+		C7F66519CE6148F21D7DB11423F1D34D /* Response.swift in Sources */ = {isa = PBXBuildFile; fileRef = 88444739B5FE5D321CE078925E96438E /* Response.swift */; };
+		C7FC2FBF1858B2BA4297F2B64E0A673C /* CTLogger.h in Headers */ = {isa = PBXBuildFile; fileRef = 97A21C11C1A4FAF7251A6AA06C034AC7 /* CTLogger.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		C816C26C9BFD44F686A7F0A23CB0D933 /* infoIcon@3x.png in Resources */ = {isa = PBXBuildFile; fileRef = 02521464FADA2CBC40ADF7E9615C7444 /* infoIcon@3x.png */; };
+		C81CB3B5D25BDBCB6D3A3632BE408229 /* IQKeyboardReturnKeyHandler.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3D9F1C9E31E3C2F89E18CE21D3CAE051 /* IQKeyboardReturnKeyHandler.swift */; };
+		C8B9A45A14393AA6FD51973CD5F76583 /* FIRCLSSettingsManager.m in Sources */ = {isa = PBXBuildFile; fileRef = 202490F889C3DFA222866502733A05B1 /* FIRCLSSettingsManager.m */; };
+		C8C620A44FCD448783CC66A9FFD48DAC /* UIView+CTToast.m in Sources */ = {isa = PBXBuildFile; fileRef = B778F4591A7B516DBCEB1F52CE5CD418 /* UIView+CTToast.m */; };
+		C8F3204EB9CF2B66D98927D7EDA4043B /* CTHalfInterstitialViewController~ipad.xib in Resources */ = {isa = PBXBuildFile; fileRef = 7F1A2C303BC16F887293F7802EE0734C /* CTHalfInterstitialViewController~ipad.xib */; };
+		C92903F3ED87ED78EADD6C745D557046 /* FIRMessagingTokenOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = 8544617C5CAFEBA13508E25C142DFD2A /* FIRMessagingTokenOperation.m */; };
+		C92A0D8832F72AACDF39560FCC71D6F7 /* SDAnimatedImagePlayer.m in Sources */ = {isa = PBXBuildFile; fileRef = 3CBEAEE7AB45CDD44E5D36753B334228 /* SDAnimatedImagePlayer.m */; };
+		C939C420C21834679640573A48FF2EF5 /* CTCoverImageViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = BE980061605D7F51A8A4BADAA9BF17D0 /* CTCoverImageViewController.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		C9DA19729D7497F2BE17E0E737F6D77D /* PagingDistance.swift in Sources */ = {isa = PBXBuildFile; fileRef = E0936059163FCD74647AC5FB690BC873 /* PagingDistance.swift */; };
+		CA0AFDB127CA64B2566866D86ECD2FF1 /* CTImageInAppViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 63E155F417870E25E88412060628410E /* CTImageInAppViewController.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		CA29F5E9379B2E2ACCF751F840B3FF98 /* FIRCLSLogger.h in Headers */ = {isa = PBXBuildFile; fileRef = 4F29F996BC87B5DAF0B3C7A4FA0BD091 /* FIRCLSLogger.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		CA6267373A1F7FC5AF8061220025ECB9 /* PagingSelectedScrollPosition.swift in Sources */ = {isa = PBXBuildFile; fileRef = 50B259385978D2156E6668B273B6BC4B /* PagingSelectedScrollPosition.swift */; };
 		CA924F339F03FD72F8D1905F3B27CF4C /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
-		CABAE7CDE97E569064B6FF8FAEA0C87B /* FIRCLSCodeMapping.h in Headers */ = {isa = PBXBuildFile; fileRef = AE1BECB62A01FA0CD9249D8A33CA9D36 /* FIRCLSCodeMapping.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		CABDAF0FD46392C9397F92B31376BA8E /* SDAnimatedImagePlayer.h in Headers */ = {isa = PBXBuildFile; fileRef = 219A14CB235C1F34B51BDAA9B1C1F691 /* SDAnimatedImagePlayer.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		CAFB3A0073C4E42BB7E8A860546C70AE /* FIRMessagingAuthKeychain.m in Sources */ = {isa = PBXBuildFile; fileRef = 63F8DEBB4968FAE12A41DCACEC1D98B6 /* FIRMessagingAuthKeychain.m */; };
-		CB2122DEF1F586E4638CF7B72777BF7C /* UIImage+ForceDecode.h in Headers */ = {isa = PBXBuildFile; fileRef = 63F82A163425A4D34299B4F575DDB49F /* UIImage+ForceDecode.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		CB5AEC7AEA1000D38AD03392DE9FF714 /* FIRCLSDwarfExpressionMachine.h in Headers */ = {isa = PBXBuildFile; fileRef = C7FDAAD23A9F1C0007BA0B30786193CE /* FIRCLSDwarfExpressionMachine.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		CB9939C03E9F8A494D414B74A1A7D93A /* GDTCORStorageProtocol.h in Headers */ = {isa = PBXBuildFile; fileRef = 0CC04C215FACFF1FE2AEB49B03FE008B /* GDTCORStorageProtocol.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		CBAD4314423097C3D229BA04D2589895 /* CTImageInAppViewControllerPrivate.h in Headers */ = {isa = PBXBuildFile; fileRef = E5E3FE7215A80A345F9E418555DED574 /* CTImageInAppViewControllerPrivate.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		CBB532BF622AA5CA5C3BF56B75E87DB3 /* FIRCLSThreadArrayOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = 57D746CF359351C753F1696487C0989F /* FIRCLSThreadArrayOperation.m */; };
-		CBB83BA6BD6BCD7DF7D739B194EE3CDF /* CleverTapURLDelegate.h in Headers */ = {isa = PBXBuildFile; fileRef = B6A263741C9017DF5BA30FEFF69F6649 /* CleverTapURLDelegate.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		CC0F2022157F4517024E02F421EC11C8 /* FBLPromise+Do.h in Headers */ = {isa = PBXBuildFile; fileRef = 39CA74686606814C6FFE6C8B6FBD986B /* FBLPromise+Do.h */; };
-		CC36A7A256CBCD6E14953E26D5556283 /* CTMessageMO.h in Headers */ = {isa = PBXBuildFile; fileRef = 7CA1B945A08C1A34B3BD939029C64433 /* CTMessageMO.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		CC68CBB0E90F5275DD3E29B2000AFF4D /* SDImageLoadersManager.h in Headers */ = {isa = PBXBuildFile; fileRef = B30623974B16AA5D2E33D834A1E5FD8E /* SDImageLoadersManager.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		CC6A413DC70329E2316BBEF3858EB195 /* CTPinnedNSURLSessionDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 271DF1E424F8AE6C6F86FBAD3CAE31A0 /* CTPinnedNSURLSessionDelegate.m */; };
-		CC6B702C0F479A32ADD01095E936576D /* FIROptionsInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 6E534F29660E0E93BF230D6167398F09 /* FIROptionsInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		CC97A08DFFCF0D5E1CC7DB28B9AAC712 /* CTHalfInterstitialViewController~iphoneland.xib in Resources */ = {isa = PBXBuildFile; fileRef = 4BEF43BEE7C4737B19FAE66E56E70FB3 /* CTHalfInterstitialViewController~iphoneland.xib */; };
-		CD28C555408F77F7823F634410DC0B6E /* SDWebImageDefine.m in Sources */ = {isa = PBXBuildFile; fileRef = AB91781765ABDC630DB42B610C4086DF /* SDWebImageDefine.m */; };
-		CD2C73DDE5BE4425E712DCDC8D3047A0 /* PagingInvalidationContext.swift in Sources */ = {isa = PBXBuildFile; fileRef = A25E6CF5CC16DE6FE9763C6384D3A443 /* PagingInvalidationContext.swift */; };
-		CD3539E9C18EFF11D52FCE3B37CE35EA /* CTHeaderViewController~iphoneland.xib in Resources */ = {isa = PBXBuildFile; fileRef = EFA666B5436B5E71B1D5A5063F8965FA /* CTHeaderViewController~iphoneland.xib */; };
-		CD574B099311DE799AE3FB74F653A3C3 /* FIRInstallationsAuthTokenResult.m in Sources */ = {isa = PBXBuildFile; fileRef = 453536A01D61AFA4A5C749192E18E71C /* FIRInstallationsAuthTokenResult.m */; };
-		CD767271DF4AC9C5C91EF171CE5378C3 /* CTInboxIconMessageCell~land.xib in Resources */ = {isa = PBXBuildFile; fileRef = C0CF7C5E30B8C78F191D582B90DE7343 /* CTInboxIconMessageCell~land.xib */; };
-		CD7841D2CE470A1439535CE601BA9814 /* CTPlistInfo.h in Headers */ = {isa = PBXBuildFile; fileRef = A1970E2B78E641DF33587356A39613DE /* CTPlistInfo.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		CDB819E36BEDC93CE21B109A33FF9A7A /* CTCoverViewController~iphoneport.xib in Resources */ = {isa = PBXBuildFile; fileRef = FE3B6310BAA07BE172FBD66C3A384198 /* CTCoverViewController~iphoneport.xib */; };
-		CE7EED0908200D292FED2F4DD2207805 /* FIRMessagingTokenStore.h in Headers */ = {isa = PBXBuildFile; fileRef = 2286CA42354B47E62C8FBE0AF967D912 /* FIRMessagingTokenStore.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		CE848ECE901CA751DEAEAE6C75870516 /* PageViewManagerDataSource.swift in Sources */ = {isa = PBXBuildFile; fileRef = 145088D7EBFE0864197F5353392E8564 /* PageViewManagerDataSource.swift */; };
-		CF32EED8E8F5B35D90F4D61759596223 /* UIImage+ExtendedCacheData.m in Sources */ = {isa = PBXBuildFile; fileRef = 099CBF9249F7B307CBB1208C1153E44E /* UIImage+ExtendedCacheData.m */; };
-		D054279DE679BCBFD690B0AD2898C81F /* successIcon@3x.png in Resources */ = {isa = PBXBuildFile; fileRef = 4D7D75DA29CA2A753272FD3AC0AC4845 /* successIcon@3x.png */; };
-		D07857528879354ECC2301AE69EBC9B6 /* AlamofireNetworkActivityLogger-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 911FAA185DBDAD474CECC6BE4D6BCAA4 /* AlamofireNetworkActivityLogger-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		D0A4531105F925E6B3EAD28FD143C9C6 /* CTHalfInterstitialViewController~iphoneport.xib in Resources */ = {isa = PBXBuildFile; fileRef = DD30F537378C78C3D61A5A10F3CC7F37 /* CTHalfInterstitialViewController~iphoneport.xib */; };
-		D0B77181B211CF5EEF60C94A72CB6D8F /* CleverTapProductConfigPrivate.h in Headers */ = {isa = PBXBuildFile; fileRef = A5C7717A34C600C73F2270977F131C77 /* CleverTapProductConfigPrivate.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		D0C6BE3EAAA986D186761B514C14E8C4 /* CTConstants.m in Sources */ = {isa = PBXBuildFile; fileRef = 397B705D8F2DBA5A220573DEB8808038 /* CTConstants.m */; };
-		D127FDDEB78E4BBAABDDC2F05D9C0C6D /* NSDictionary+FIRMessaging.m in Sources */ = {isa = PBXBuildFile; fileRef = A74EC733D269CAF01282AD1095F5743D /* NSDictionary+FIRMessaging.m */; };
-		D15FEA31AA9625BBF041FB91E48A9995 /* Validation.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0521E1F7755149CAF3E4D02D8490597D /* Validation.swift */; };
-		D166AD740741D652490830E4E62ED5A0 /* UIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 544065BA7D1202329397F6CEE19EB5A2 /* UIKit.framework */; };
-		D1A658A4D0AAA916F850DDAA02777583 /* FIRCLSDataParsing.h in Headers */ = {isa = PBXBuildFile; fileRef = 32345B6D3848BF6100A91865627D64B3 /* FIRCLSDataParsing.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		D1D9C65C8B77917F2664BBFFD89DACAD /* NSButton+WebCache.h in Headers */ = {isa = PBXBuildFile; fileRef = 39BD572FF7D8F3CF319BC86AA5893D8E /* NSButton+WebCache.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		D1DE7FFB012581509CABE82E66E3AAA1 /* GULSceneDelegateSwizzler_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = A5B9FD0FB9924376668723D423C2DC8D /* GULSceneDelegateSwizzler_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		D2B7BB295B8D286E8005D3BAF429861C /* FBLPromise+Do.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = 39CA74686606814C6FFE6C8B6FBD986B /* FBLPromise+Do.h */; };
-		D2D3CA06466831985B08759960CCBAD2 /* FIRCLSExistingReportManager_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 1616545B6495DEED07D2AEA409A3CAD6 /* FIRCLSExistingReportManager_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		D37E4F8D997EDE364B02CF041CF49E19 /* GULReachabilityChecker+Internal.h in Headers */ = {isa = PBXBuildFile; fileRef = C6759E39ED9C04C430EFF0CDC2C3F35D /* GULReachabilityChecker+Internal.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		D3A227C23C21CF4ADF0F1696CE228126 /* CTUIUtils.m in Sources */ = {isa = PBXBuildFile; fileRef = 2B8BBA2191663A387AACA56987C66200 /* CTUIUtils.m */; };
-		D3D8525F7537F05AB5453F2E6B30EEB0 /* FIRInstallationsStore.h in Headers */ = {isa = PBXBuildFile; fileRef = CF01775F9C29EEBECBCBBC0CE9D44B98 /* FIRInstallationsStore.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		D435B9C3678D6FCD502059B47681351C /* FIRMessagingTokenOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = 60BE1FD4AB219B8E426667EA69952754 /* FIRMessagingTokenOperation.m */; };
-		D4420B4222A67C44339A1C4B5689BDBB /* SystemConfiguration.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = DDC55D0CD2D15D3E411ACD99C6C289B5 /* SystemConfiguration.framework */; };
-		D4A909BAE60158DEB54BF3EC25D855F1 /* CTBaseHeaderFooterViewControllerPrivate.h in Headers */ = {isa = PBXBuildFile; fileRef = 66F88E5CE8D96634B0916858BD426203 /* CTBaseHeaderFooterViewControllerPrivate.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		D4CE586B158BF1C3AA9B002736A8ECBD /* FIRInstallationsErrorUtil.m in Sources */ = {isa = PBXBuildFile; fileRef = 7C9FFFAA3424193DD5CCAD72A9B377EF /* FIRInstallationsErrorUtil.m */; };
-		D4EF3F205F6BDFA70345DB099492C622 /* FIRCLSdSYM.h in Headers */ = {isa = PBXBuildFile; fileRef = 95D5B6E97FDE785D91A4C0339BDEC798 /* FIRCLSdSYM.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		D55C47AD1ACDAEB509C77FE830CD50C6 /* FIRAnalyticsInterop.h in Headers */ = {isa = PBXBuildFile; fileRef = 6AAC36F3447A9CDE86ED9FF19479634C /* FIRAnalyticsInterop.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		D59598BD74142D59C79D295AA55CC754 /* me.nanopb.h in Headers */ = {isa = PBXBuildFile; fileRef = 3DE83F4A4E88CA8BA2E013FE016BE1CE /* me.nanopb.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		D5B7C3A86542217354265F96B4B0C84B /* Security.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 05720C608590E305E32A22FE9BDFD55B /* Security.framework */; };
-		D5C1B0EEDF183B0081D3C36954E2EB81 /* errorIcon@3x.png in Resources */ = {isa = PBXBuildFile; fileRef = C2EBFA6F43EBE088EA9BD60BDD23AA9D /* errorIcon@3x.png */; };
-		D5E3338A46A1919A7BFAF351B4738355 /* SystemConfiguration.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = DDC55D0CD2D15D3E411ACD99C6C289B5 /* SystemConfiguration.framework */; };
-		D5F02C0B3FC0C1E1EDBC2F8A0DC4F50C /* errorIconSubtle@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = 17DD1D345C7785B33A30949E96471BC1 /* errorIconSubtle@2x.png */; };
-		D61AC6CC57EB6D5A6727E104E35CF2C0 /* CTCarouselMessageCell.m in Sources */ = {isa = PBXBuildFile; fileRef = 70A12B186856B08B4AF700A4A7A028FE /* CTCarouselMessageCell.m */; };
-		D62DBDE5AE32722F1F5829DB153BC03C /* FIRCLSLaunchMarkerModel.m in Sources */ = {isa = PBXBuildFile; fileRef = 9D00B44D3DB63F1887E7D94475D98C62 /* FIRCLSLaunchMarkerModel.m */; };
-		D67F01EC198DC5DABDEC0E4B2D3490D5 /* errorIconLight@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = F238856BD43D6E810319390CE31EB175 /* errorIconLight@2x.png */; };
-		D690086D27A2E19B5CBBC3D50F4E5594 /* FBLPromise+Validate.m in Sources */ = {isa = PBXBuildFile; fileRef = 8F5544B383C38E15D962DC93F451F55D /* FBLPromise+Validate.m */; };
-		D69ECD29EB7FE664B514BB731989647E /* CTInterstitialViewController~iphoneland.xib in Resources */ = {isa = PBXBuildFile; fileRef = 600B020B6BEF83E761CD90700477B952 /* CTInterstitialViewController~iphoneland.xib */; };
-		D6F35B9B7F21CDB15603C2B1308922BB /* FBLPromise+Testing.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = 2517E9C791525DBAFBE60DEE82A16653 /* FBLPromise+Testing.h */; };
-		D7273717721683389A11932C21632822 /* MaskingView.swift in Sources */ = {isa = PBXBuildFile; fileRef = D5ADCCB37C00D8468B02B465C2BB7D7B /* MaskingView.swift */; };
-		D76B077F2F2040CA121219614C905CAF /* FIRCLSAsyncOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = DBD3E68DDBD9FA3A02BB49AC76035673 /* FIRCLSAsyncOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		D775B0CA0A8FE6750A9C4B9E36A2F363 /* CTUserMO+CoreDataProperties.m in Sources */ = {isa = PBXBuildFile; fileRef = 556D9DA2DF707B1553CFCD90669B248A /* CTUserMO+CoreDataProperties.m */; };
-		D79DD67A43BD3771521FF5B9699FA3E4 /* CTInboxSimpleMessageCell~port.xib in Resources */ = {isa = PBXBuildFile; fileRef = 72E371F001BD53415EBBBC968629B4D4 /* CTInboxSimpleMessageCell~port.xib */; };
-		D7C3E6AB657F24B6A534C17DD0803FD2 /* Inbox.xcdatamodeld in Sources */ = {isa = PBXBuildFile; fileRef = 812794DF8600DAFEC7A4F2CCBB8C8ADB /* Inbox.xcdatamodeld */; };
-		D7D14E97E37A65A7233F20EF442E8B06 /* UIImage+Metadata.h in Headers */ = {isa = PBXBuildFile; fileRef = 34B4CB1C13F7FEC8D528C0F6590BA245 /* UIImage+Metadata.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		D800389FD876C4B622EBC105EED6D045 /* CTInAppDisplayViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 0D345B565E38FD79187C21C869FC9316 /* CTInAppDisplayViewController.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		D857BBB7C94269DA6060D224B8A8F550 /* FIRCoreDiagnosticsData.h in Headers */ = {isa = PBXBuildFile; fileRef = 54A66D644E688DA077308A0C4C27E728 /* FIRCoreDiagnosticsData.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		D8943F07141730EA0C094F40C108B660 /* IQKeyboardManagerSwift-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = E0A7808D885AF884ED5E89C421C5D062 /* IQKeyboardManagerSwift-dummy.m */; };
-		D8A75406263347B7639FDAD7D9545C47 /* SDImageCachesManager.m in Sources */ = {isa = PBXBuildFile; fileRef = 2372E55AF60F025664A53BB7B2FDE813 /* SDImageCachesManager.m */; };
-		D8FF8FC05BCF30D42A2A27675BE3C31E /* CTHalfInterstitialImageViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = C41BF03B42A9CED5B799F7931D49FCB3 /* CTHalfInterstitialImageViewController.m */; };
-		D9F7ACD4483192643AAB51A04C8E675A /* FIRCLSMachException.c in Sources */ = {isa = PBXBuildFile; fileRef = 00AC6785C55BD99E1A24DDA4CA8BFC01 /* FIRCLSMachException.c */; };
-		DA1DE7699100D286A15E72CEE05CBB23 /* pb.h in Headers */ = {isa = PBXBuildFile; fileRef = 5A5CBA20E5E23D5B660ED637DD960445 /* pb.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		DA5CD82CA60619D539E1CBCE28F91451 /* errorIconLight@3x.png in Resources */ = {isa = PBXBuildFile; fileRef = 2A27239E794030283EFBFE048B7932F9 /* errorIconLight@3x.png */; };
-		DA62D8114203D1AB1FB8AEF20C9EB2BE /* CTCoverViewController~iphoneland.xib in Resources */ = {isa = PBXBuildFile; fileRef = EE8353BB4CED7EE28A6D74B1B88C3FDC /* CTCoverViewController~iphoneland.xib */; };
-		DABA324C345166B3A1E4E34CD608ACFB /* GDTCORConsoleLogger.h in Headers */ = {isa = PBXBuildFile; fileRef = BE5BEE7E7B9D95349E1C4D522BCF5EF0 /* GDTCORConsoleLogger.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		DB49C8534EF34C7BB56588EDFFC3BA2C /* GDTCOREvent+GDTCCTSupport.m in Sources */ = {isa = PBXBuildFile; fileRef = 2FBC047AA1B41786C6A7D6BA12600396 /* GDTCOREvent+GDTCCTSupport.m */; };
-		DB6A1F67992C9642432645AA52372634 /* FIRCLSFABAsyncOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = 6DC8B5664447D1B589456927BB92E928 /* FIRCLSFABAsyncOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		DBD382BA0B6BE53E00921043DE3A28EC /* CleverTapInstanceConfig.m in Sources */ = {isa = PBXBuildFile; fileRef = ECD9875F202CA6E058B60F7858A2B20C /* CleverTapInstanceConfig.m */; };
-		DC0D703E7322E390AF589230B7E66DCB /* infoIcon@3x.png in Resources */ = {isa = PBXBuildFile; fileRef = 2A0345924CB157E4991C609A86526CA1 /* infoIcon@3x.png */; };
-		DC0EDBA61967D32C87F4A9AE587BBC30 /* FloatingPanel-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 5AE660F98874CC1C68739312DA234FB5 /* FloatingPanel-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		DC1185DF084F9D168BAE32EB5FDB931F /* ic_play@3x.png in Resources */ = {isa = PBXBuildFile; fileRef = 1770BA0138EBB11CE80BFC78F2D52859 /* ic_play@3x.png */; };
-		DCD0C33A2B50811D53CF68F021284B47 /* DispatchQueue+Alamofire.swift in Sources */ = {isa = PBXBuildFile; fileRef = E35BD291F61F7A5B46010AFF9BC84F34 /* DispatchQueue+Alamofire.swift */; };
-		DCF27BD94D1CD1C17FB6F45C5DD4565E /* CTInAppDisplayViewControllerPrivate.h in Headers */ = {isa = PBXBuildFile; fileRef = F3D4027B50A0398559E370D966BAD364 /* CTInAppDisplayViewControllerPrivate.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		DD0B8302D5B5C792CE3DA7D8CF8911F2 /* SDImageCacheDefine.m in Sources */ = {isa = PBXBuildFile; fileRef = 2F04146B6EE75721E216C100A3DB8152 /* SDImageCacheDefine.m */; };
-		DD1F8C8A0861539FDEC739FCC0CCAB5E /* CTDeviceInfo.m in Sources */ = {isa = PBXBuildFile; fileRef = 2AE5740A60745A3514018FCCE626AB64 /* CTDeviceInfo.m */; };
-		DD46609E44FD1377423E83AEAAE3A71D /* SDImageTransformer.m in Sources */ = {isa = PBXBuildFile; fileRef = 6D27286DC8AA87FA975B331235150C67 /* SDImageTransformer.m */; };
-		DD58A00EACBEE274C381B491519C6B8C /* RedirectHandler.swift in Sources */ = {isa = PBXBuildFile; fileRef = A874F8F3DBFF978B119F3269DE3A591C /* RedirectHandler.swift */; };
-		DD73EA9B96BE6754F8C0A110E2B95D06 /* GDTCORTransformer.h in Headers */ = {isa = PBXBuildFile; fileRef = 3C433B1A15759AA0F78359E6F0A25FC8 /* GDTCORTransformer.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		DD78614D0FF4A0349C73A8B499165296 /* Parchment-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = A13431C6827DEA6FAAA4666481365FAF /* Parchment-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		DD87E402BAF92FB4D5B3D8EECAD2F69D /* Security.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 05720C608590E305E32A22FE9BDFD55B /* Security.framework */; };
-		DD992DD113E6A50799E966DEC37AF61D /* CenteredView.xib in Resources */ = {isa = PBXBuildFile; fileRef = 80546A2524AE0F9B2829BD6CF96BDBD6 /* CenteredView.xib */; };
-		DE47D564B4B03E73E4F5000EE464A774 /* FIRLibrary.h in Headers */ = {isa = PBXBuildFile; fileRef = B90205993364995A78A38ACDFE449499 /* FIRLibrary.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		DE4C526EFDF05E4F36A75B423E394A2C /* FIRCLSFileManager.m in Sources */ = {isa = PBXBuildFile; fileRef = 252F17D436B7065B5118D36F4B02E9D7 /* FIRCLSFileManager.m */; };
-		DE52035C9A2EA9D9C18A785729C11226 /* SwiftMessages.swift in Sources */ = {isa = PBXBuildFile; fileRef = C50C1EE0BC3F280DC2D77F32FDE45CA6 /* SwiftMessages.swift */; };
-		DE596638323EF7522AECC4D3ED982AD1 /* FIRAppAssociationRegistration.m in Sources */ = {isa = PBXBuildFile; fileRef = 47FFF9CD136BE1D0B38BFAA210F64D36 /* FIRAppAssociationRegistration.m */; };
-		DEBF6A2D9D45D204C1288042F46C678F /* Error.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0B3C37E9DA3DB8C9B6599D7243E5892C /* Error.swift */; };
-		DEC706A3C57BE0D9519DCD0C9E5BD899 /* FIRMessagingCheckinStore.m in Sources */ = {isa = PBXBuildFile; fileRef = 79216AD063CE4AB3746D04BD07507CEE /* FIRMessagingCheckinStore.m */; };
-		DEE93665E872B900CA205521F2A7FA02 /* CTUserMO+CoreDataProperties.h in Headers */ = {isa = PBXBuildFile; fileRef = CBCD9098276BD32832002FBA59C5ECF6 /* CTUserMO+CoreDataProperties.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		DF43F4F186C610F06C28FB359305FD65 /* FIRCLSUnwind_x86.h in Headers */ = {isa = PBXBuildFile; fileRef = 077A3C9C67DFCCB5AE24A86E9D9FD912 /* FIRCLSUnwind_x86.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		DF6A18EFF9E8A20A36365C814AF14774 /* SDImageAWebPCoder.h in Headers */ = {isa = PBXBuildFile; fileRef = 5ABA133336F73356FE4E25195FAE4CF2 /* SDImageAWebPCoder.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		DF753C8A610207533276346394F03AB2 /* CTAVPlayerViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 2CF2EBBA0E6EF19B0ECB58A262960690 /* CTAVPlayerViewController.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		DFC7A99638975216635A098E5549807B /* SDImageAssetManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 42398AA96592A0DFD64F78346F986CD9 /* SDImageAssetManager.h */; settings = {ATTRIBUTES = (Private, ); }; };
-		DFE52573FCBEFD4D83949377FBDDE324 /* CTUserMO.m in Sources */ = {isa = PBXBuildFile; fileRef = F4171CA7A6BE493316D9DDF1EE915EB7 /* CTUserMO.m */; };
-		E041530326B7D9C14D2CA5284E4E3D90 /* SDWebImageDownloaderDecryptor.h in Headers */ = {isa = PBXBuildFile; fileRef = E550304C18EA374235CD6DED76E51BCD /* SDWebImageDownloaderDecryptor.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		E0C65E16219718869CD2AFCA2C5465CB /* Request.swift in Sources */ = {isa = PBXBuildFile; fileRef = CEEB70698CC9991E398C6070FE7BB763 /* Request.swift */; };
-		E11BF22E03FC46906C6F427BB435E5C5 /* CTUIUtils.h in Headers */ = {isa = PBXBuildFile; fileRef = 62C0A8A3EEC142D1247177B84270C84C /* CTUIUtils.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		E122D80968A90893D69A1EFAFDF170AA /* CTAVPlayerViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 128A386E25B01E4B653CB86E3C216CF4 /* CTAVPlayerViewController.m */; };
-		E137A4FA7B5401F07D9C5BF7806C69A2 /* FBLPromise+Then.m in Sources */ = {isa = PBXBuildFile; fileRef = D18473CE4CAA9E55A96B11609565168E /* FBLPromise+Then.m */; };
-		E143720C71F82EAC933BE77A5B235178 /* FIRAnalyticsInterop.h in Headers */ = {isa = PBXBuildFile; fileRef = 871262A2190E9EBEEFCF00537115479A /* FIRAnalyticsInterop.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		E14EC05F250B0CD0D662E27E42620CE5 /* SystemConfiguration.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = DDC55D0CD2D15D3E411ACD99C6C289B5 /* SystemConfiguration.framework */; };
-		E1769C267E82B0C24FE0FFBF949F0A6E /* StringEncoding+Alamofire.swift in Sources */ = {isa = PBXBuildFile; fileRef = D3572CC4295BBD2187B1627C2695766F /* StringEncoding+Alamofire.swift */; };
-		E17A2606E3EE0B3EF4E5136C4F602D66 /* FIRCLSSettings.m in Sources */ = {isa = PBXBuildFile; fileRef = 38DCBCEFF7C1410440F162AFF41819BD /* FIRCLSSettings.m */; };
-		E1811A8E51DA8567814276704CF471F6 /* FIRMessagingPendingTopicsList.h in Headers */ = {isa = PBXBuildFile; fileRef = 6DCCDC46DEF12922D6A1A8D58F6C2AF8 /* FIRMessagingPendingTopicsList.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		E1A386463DBD9A234499200838126EB8 /* crashlytics.nanopb.h in Headers */ = {isa = PBXBuildFile; fileRef = 646F8905B97215EAFDA2AA731A0494E9 /* crashlytics.nanopb.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		E1AF44A98A0C731632D257CCF36167C9 /* CleverTapEventDetail.m in Sources */ = {isa = PBXBuildFile; fileRef = 84D01F252C842C7E47FA7F845BE955BE /* CleverTapEventDetail.m */; };
-		E1B11455CD1DA8868077BB5922433DF4 /* youtube-ios-player-helper-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 5D68B788273AF6EED0567E4DE881AF34 /* youtube-ios-player-helper-dummy.m */; };
-		E1BF3DCACD071E78D4F711B364DDD768 /* IQKeyboardManager.swift in Sources */ = {isa = PBXBuildFile; fileRef = 023DE0DE7FD40C34C95503DA4B1A9A78 /* IQKeyboardManager.swift */; };
-		E1D745315FD6F1F0AD715538FBD635B5 /* FIRCLSSymbolicationOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = 3B85537FA4A502EF39F21EE918290D30 /* FIRCLSSymbolicationOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		E2010B8711E6B170C2D378814FDBB26D /* UIViewController+Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = 6FAAE740EF4591A0ABA8EBF8A2B840ED /* UIViewController+Extensions.swift */; };
-		E2ED41B71AC50A49D65C155B2E404A85 /* nanopb-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 5A34BFAD941D4D5592F84577482B0755 /* nanopb-dummy.m */; };
-		E37C4D28DA1B8222CBFE14235044D619 /* PagingContentInteraction.swift in Sources */ = {isa = PBXBuildFile; fileRef = 7FB06F5D34A53BC7BC2028D4349F5E1B /* PagingContentInteraction.swift */; };
-		E3F70E25B736DD4F3CCB532D71CC58F7 /* PagingIndicatorView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 822C75E96351338100F6A5C5BDA46DF5 /* PagingIndicatorView.swift */; };
-		E41160A36F21D0F897E99CA4F734B937 /* FIRCLSUnwind.h in Headers */ = {isa = PBXBuildFile; fileRef = DAF9BCA7F059DC8C95BE0B011083B183 /* FIRCLSUnwind.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		E44BD3F89814D6A139E9AA91EB5EBB81 /* FIRMessagingSyncMessageManager.m in Sources */ = {isa = PBXBuildFile; fileRef = BD77FD8C7229889F47A4D79803F59DD7 /* FIRMessagingSyncMessageManager.m */; };
-		E4556AC023DCF622A358B02CB4CC9994 /* SDmetamacros.h in Headers */ = {isa = PBXBuildFile; fileRef = EB71792A8C5CF831A1AC68D14F86071B /* SDmetamacros.h */; settings = {ATTRIBUTES = (Private, ); }; };
-		E45F43B92F31D8A3B560ADF82C3F2408 /* FIRMessagingTopicOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = 78F72047CE712C88DD51E6474A146423 /* FIRMessagingTopicOperation.m */; };
-		E4DF03FDC68BEEC7C7FD53AA4F73383A /* CTUtils.m in Sources */ = {isa = PBXBuildFile; fileRef = A5713F4ED93B5359C325C23CF6F7848A /* CTUtils.m */; };
-		E54776CE1D5A9F390BC06C319B218B1E /* PagingNavigationOrientation.swift in Sources */ = {isa = PBXBuildFile; fileRef = E0C7B3FC77DA49983FC7FF8CABE9B2BB /* PagingNavigationOrientation.swift */; };
-		E595E9B151B6AA707C80708EB4F95340 /* SDFileAttributeHelper.h in Headers */ = {isa = PBXBuildFile; fileRef = DD5CA37EAB06EDEDE27718E450E4D06F /* SDFileAttributeHelper.h */; settings = {ATTRIBUTES = (Private, ); }; };
-		E5AF98F3B7F431BDE9F0CAE3BD73E6D6 /* FIRCurrentDateProvider.m in Sources */ = {isa = PBXBuildFile; fileRef = DAE7EA43BBB6FF9E391083081C652762 /* FIRCurrentDateProvider.m */; };
-		E5BA96F7B4E0E61C882CC06F58E0BFC5 /* SDImageCoder.m in Sources */ = {isa = PBXBuildFile; fileRef = 3E277AAEA3BB4F135F9687F99E220EC0 /* SDImageCoder.m */; };
-		E5C51A9C952E87C834C4344690963A54 /* UIView+constraints.swift in Sources */ = {isa = PBXBuildFile; fileRef = 88E0310A35A5001544C1B323B0CB1D9D /* UIView+constraints.swift */; };
-		E5CCA548395481210DC831F7DB0A5A2E /* GDTCOREndpoints_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = B740361408CBA391F8A2D2C219DE2438 /* GDTCOREndpoints_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		E5CCD4605B615AEADB69103A490F67F5 /* FIRAnalyticsConfiguration.h in Headers */ = {isa = PBXBuildFile; fileRef = EBA3F06D4F0E1F25A9F70BA2F26725D9 /* FIRAnalyticsConfiguration.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		E5E39C6601D198A01A6F0D4536C771CC /* CTInAppNotification.m in Sources */ = {isa = PBXBuildFile; fileRef = 2FAAE2EF854BD9F5800F3582FBFCCD85 /* CTInAppNotification.m */; };
-		E601A2D431A573B045EFA02A6E9613D1 /* FIRCLSUnwind_arch.h in Headers */ = {isa = PBXBuildFile; fileRef = A64E248226A3C36E256AC409B50BD991 /* FIRCLSUnwind_arch.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		E61B2118829E44C5EF04A53FD3CEFBD1 /* FIRComponentType.h in Headers */ = {isa = PBXBuildFile; fileRef = 4E833281B3ADEB8D6E4F5111A8443E26 /* FIRComponentType.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		E62A8B9D050E23E7A212A9AE0D64EAA3 /* GDTCORRegistrar.m in Sources */ = {isa = PBXBuildFile; fileRef = B16DA940F8BB5796D640D93EA7384578 /* GDTCORRegistrar.m */; };
-		E664EDB2F09CEB4A1A50853A6A811CDF /* FIRMessagingKeychain.h in Headers */ = {isa = PBXBuildFile; fileRef = A0805FE6455F77E9327129188255ABF4 /* FIRMessagingKeychain.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		E6BC20071F443AAFC6466B3F23A8493C /* NSLayoutConstraint+Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = 390517621C35CCF721457EBDFCC995A0 /* NSLayoutConstraint+Extensions.swift */; };
-		E6FA70EC66FE43A4AA6D686EA95C1762 /* successIconSubtle@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = EDD90D293003EF96572D854A0B7D39B2 /* successIconSubtle@2x.png */; };
-		E7158C463FA2F90C4CD368AA0D4AE681 /* SDWebImageDownloaderConfig.m in Sources */ = {isa = PBXBuildFile; fileRef = 1173A4D64AE6165ABB57B32DA5E926B3 /* SDWebImageDownloaderConfig.m */; };
-		E7235FAC1F18B008D75B4CAB0260E14D /* FIRCLSFABNetworkClient.h in Headers */ = {isa = PBXBuildFile; fileRef = 520277CF94E49822137700EBDE050A66 /* FIRCLSFABNetworkClient.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		E7240E612B6D630001E8E7FF551C0429 /* FIRCLSReportUploader.h in Headers */ = {isa = PBXBuildFile; fileRef = DD4844B53EA4AF05DEB513ED7822AA36 /* FIRCLSReportUploader.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		E74DF6A94DDA50DC5D1934A5F9866493 /* PageViewDirection.swift in Sources */ = {isa = PBXBuildFile; fileRef = BA098CF4507C82BA86F6FEB4C05B0063 /* PageViewDirection.swift */; };
-		E7607F7C6E346C91E0FC5D139BE1AB14 /* FIRCLSFABHost.h in Headers */ = {isa = PBXBuildFile; fileRef = A9EE62BAE006A549C377A176E008CF3D /* FIRCLSFABHost.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		E782FF8B4B47A5D6C92CBF317E4239FC /* pb_encode.h in Headers */ = {isa = PBXBuildFile; fileRef = 063513755606F8F2D0C4B656CA25535A /* pb_encode.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		E7A793CD530E9280914BB97F88850D57 /* GDTCORRegistrar.h in Headers */ = {isa = PBXBuildFile; fileRef = DDB13D38B0CB85EA82D99898A34FCAE5 /* GDTCORRegistrar.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		E7AEDFA34BCFFA2AC47B819C431C874E /* FIRComponent.h in Headers */ = {isa = PBXBuildFile; fileRef = EDBB4D41B01AE6C8D3569D00C1585644 /* FIRComponent.h */; settings = {ATTRIBUTES = (Private, ); }; };
-		E7E527396DAA30D727B51E764C28EC78 /* FIRDependency.h in Headers */ = {isa = PBXBuildFile; fileRef = 8E137D34CAA621220F816A7EAC7F3BA4 /* FIRDependency.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		E83E02B39DAA43C6F18F3E6C6CC42BE6 /* AccessibleMessage.swift in Sources */ = {isa = PBXBuildFile; fileRef = BB15A04517F303A1D38CC4EB6BB2E6C6 /* AccessibleMessage.swift */; };
-		E857ADCAD7B647883D5B2AEC3F16D1D5 /* URLSessionConfiguration+Alamofire.swift in Sources */ = {isa = PBXBuildFile; fileRef = 2A79650B59C681C9D456C86F5DA5EE11 /* URLSessionConfiguration+Alamofire.swift */; };
-		E86F27B9EEE1F545559349EAC8BDE2B9 /* CTCarouselImageView.h in Headers */ = {isa = PBXBuildFile; fileRef = B0DFDB230BC07FD241DB0E6DF2137650 /* CTCarouselImageView.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		E8705ED6BB312ECD08FDD2BC6812695F /* IQToolbar.swift in Sources */ = {isa = PBXBuildFile; fileRef = DDA258A4A78E22081F04351D7279D2EB /* IQToolbar.swift */; };
-		E8C573D89877C71C45A7B765D084C4DB /* PagingBorderLayoutAttributes.swift in Sources */ = {isa = PBXBuildFile; fileRef = 6FADB945789CC98C9EB5D7D778F67B42 /* PagingBorderLayoutAttributes.swift */; };
-		E8CC98504FE704E64413330F220FD51A /* FIRMessagingDefines.h in Headers */ = {isa = PBXBuildFile; fileRef = D6BC3392382DB86F65077FE969D3233B /* FIRMessagingDefines.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		E8CE1111213B3A0CA1DF1E2302AD0907 /* infoIconSubtle@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = 967777FD15E7C5626002F1DA3A97C42F /* infoIconSubtle@2x.png */; };
-		E8D375BA8A067AFBD556855C4BC4EBEC /* SDImageCache.m in Sources */ = {isa = PBXBuildFile; fileRef = 48DFB7445959CDCF3DE71DAE37EFC0DB /* SDImageCache.m */; };
-		E8E0820BD79845C662B0D76CDDB735B5 /* UIView+WebCache.h in Headers */ = {isa = PBXBuildFile; fileRef = 87895F532510D188132DC92818334735 /* UIView+WebCache.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		E904D16500A821DFEBDA6D7DC0D4EF3E /* FIRFirebaseUserAgent.m in Sources */ = {isa = PBXBuildFile; fileRef = 439932D25482DF18D3CF35F7797CF29C /* FIRFirebaseUserAgent.m */; };
-		E91212A1254FD36FCB7027352F9852AA /* SDDisplayLink.h in Headers */ = {isa = PBXBuildFile; fileRef = 57C188D6F367FE03226FA4151A552406 /* SDDisplayLink.h */; settings = {ATTRIBUTES = (Private, ); }; };
-		EA161BA27CA14AB49C87ABC2F8198820 /* GDTCORFlatFileStorage.m in Sources */ = {isa = PBXBuildFile; fileRef = 7AC50911851E67B8319C4DCE5AE00CE6 /* GDTCORFlatFileStorage.m */; };
-		EA1711C4FC573E1242956A0E86080244 /* FIRMessagingTopicsCommon.h in Headers */ = {isa = PBXBuildFile; fileRef = EF04EBC3BD1D5436E2C93D6B1F1EFAB2 /* FIRMessagingTopicsCommon.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		EADDFF5A18A0AFEF5953C9AC0E1BCA7B /* SDImageIOAnimatedCoder.h in Headers */ = {isa = PBXBuildFile; fileRef = 4CBFA202692750F5FA4D346F9B7ABE66 /* SDImageIOAnimatedCoder.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		EB225391DFFFC693F65586089F189423 /* CTValidator.m in Sources */ = {isa = PBXBuildFile; fileRef = CEE5AEDADB5CB7436CDA3B05D0B24AFB /* CTValidator.m */; };
-		EB57A43FF95FB2DACCEA9A7D5923519F /* CTCarouselImageMessageCell~land.xib in Resources */ = {isa = PBXBuildFile; fileRef = A1690915CAB67426ADBE1E58443062FA /* CTCarouselImageMessageCell~land.xib */; };
-		EBD05DDA9CFADCB510013543F5DCA49C /* GDTCORReachability.h in Headers */ = {isa = PBXBuildFile; fileRef = 7298FC012AF1742AB599688543610891 /* GDTCORReachability.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		EBEA830DDFB1E523F856934CAB54D854 /* PagingBorderView.swift in Sources */ = {isa = PBXBuildFile; fileRef = A959623953DE35CE5E503C62F77E6C41 /* PagingBorderView.swift */; };
-		EBEF061EA22A311FDB00EAB9481B016D /* UIImageView+WebCache.m in Sources */ = {isa = PBXBuildFile; fileRef = 5DEFD9855223581B52BFA84EBA6E7A93 /* UIImageView+WebCache.m */; };
-		EC11B17DA78F7EEBEBC3EFAF68C6DF9F /* Session.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8E00E549BEDD54FFB6B1FC8B380D81C1 /* Session.swift */; };
-		EC25CEAC8D4B808055900A339249451F /* FIRLogger.h in Headers */ = {isa = PBXBuildFile; fileRef = 659DA25C01A61F2F020D52966AC8C7AE /* FIRLogger.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		EC31E9F5738A979B392A8822496663CF /* FIRCLSDownloadAndSaveSettingsOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = 45CD24223956AC1FC43758647A1A8013 /* FIRCLSDownloadAndSaveSettingsOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		EC3A424B99F3AF72F2F105B8E40A262C /* SDImageIOAnimatedCoder.m in Sources */ = {isa = PBXBuildFile; fileRef = B9514E98D070927B794A7DCE91BEC351 /* SDImageIOAnimatedCoder.m */; };
-		ECE24BED62E6B79ACDAC2A97BBDCDA9D /* CTHalfInterstitialImageViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 786A63EB1306995666534BE6B1CFBFF0 /* CTHalfInterstitialImageViewController.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		ED03118270100A394C16A8AA563053EC /* IQBarButtonItem.swift in Sources */ = {isa = PBXBuildFile; fileRef = 134293FFADFB86E2D4112E05383E48D5 /* IQBarButtonItem.swift */; };
-		ED5AA3BCD346B3BF41F28A3B7ED3FAF8 /* SDFileAttributeHelper.m in Sources */ = {isa = PBXBuildFile; fileRef = 1EE07A45FBA9981DE8FF504F83F738EE /* SDFileAttributeHelper.m */; };
-		ED6F0D4F285DA26EBCA781683D38B0F0 /* GULLogger.h in Headers */ = {isa = PBXBuildFile; fileRef = 035C7ED984F57D8F7CE5C81275E8DD27 /* GULLogger.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		ED96C149A7240309B5FC982B1DD5FA4B /* GoogleDataTransport.h in Headers */ = {isa = PBXBuildFile; fileRef = 37AEE182DF8E5D00092DF7B3964CD8F8 /* GoogleDataTransport.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		EDB1267E5611BFBF06D0441EE0FF6913 /* SDWebImageError.h in Headers */ = {isa = PBXBuildFile; fileRef = 3465148CCD0457D5BA011AC6C67EAE05 /* SDWebImageError.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		EE01E92EF5ACB20D2C20ADCED28357AD /* CleverTap.h in Headers */ = {isa = PBXBuildFile; fileRef = 95DE539A37976263D044F56C7CF29714 /* CleverTap.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		EEA650638604A576349445AA00B7C57C /* FIRDependency.m in Sources */ = {isa = PBXBuildFile; fileRef = 9843A6A35C6A6B0D1BF532EE54F9B667 /* FIRDependency.m */; };
-		EEFBD0E8A3B7112A0FA702BADD55BA36 /* GDTCORPlatform.m in Sources */ = {isa = PBXBuildFile; fileRef = C4C568C303C88E83A5FD67B95A5010B7 /* GDTCORPlatform.m */; };
-		EF26192298B726958166236EF8B6289E /* SDWebImagePrefetcher.m in Sources */ = {isa = PBXBuildFile; fileRef = C4BC67AADD9D70A9E0EEDB48EA3E8996 /* SDWebImagePrefetcher.m */; };
-		EF2BD60F43CBA08C87ABEE2CFC84B358 /* GULNetworkConstants.m in Sources */ = {isa = PBXBuildFile; fileRef = 0D1F0789315E513FB9DF995FBE4FFD2E /* GULNetworkConstants.m */; };
-		EF62CB17DC2C79693EBACA565EDC637D /* FIRCLSReportUploader_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 75908DED122FC101810EF698FF35EB23 /* FIRCLSReportUploader_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		EF88E16E624811AE720471E772C33ACC /* FIRAnalyticsConfiguration.m in Sources */ = {isa = PBXBuildFile; fileRef = F080303CB4105F7DA5D0F255EB677AB6 /* FIRAnalyticsConfiguration.m */; };
-		EF9B136CE545127A8F353C66E2C9CAC9 /* FIRCLSDefines.h in Headers */ = {isa = PBXBuildFile; fileRef = 8F33D17A76ADEC3475B379D4FCBB4394 /* FIRCLSDefines.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		EFADC1F8E036B3C0EFCECE17543A88AF /* CTPlistInfo.m in Sources */ = {isa = PBXBuildFile; fileRef = ED3103B3413297BCB907426276C01FEB /* CTPlistInfo.m */; };
-		EFE08033FB8BC4F7614A56FFB6AC0F53 /* FirebaseCoreDiagnostics-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 33BAC1F0B6D2334464FA3E4F8262EC2C /* FirebaseCoreDiagnostics-dummy.m */; };
-		F07082CF15E0B52471FDA2680E64E451 /* FIROptionsInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = C4920EAA85FB12FABB705C3D2938A565 /* FIROptionsInternal.h */; settings = {ATTRIBUTES = (Private, ); }; };
-		F0B761F245A992BFDE8F666B84BD8785 /* Layout.swift in Sources */ = {isa = PBXBuildFile; fileRef = 19B5DBA196BDF68A2AFAA52BD3865A70 /* Layout.swift */; };
-		F0EBDA0636539352C0D2E4B4F6037BA4 /* FIRMessagingAuthService.m in Sources */ = {isa = PBXBuildFile; fileRef = 47650F4BCF10EBC67DD13D2DC656C74A /* FIRMessagingAuthService.m */; };
-		F1217B28A7A74E92A1B29B3F6EEFF120 /* SDImageCachesManagerOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = D51D2A4E75D1FA2630A2E5AF65218ED8 /* SDImageCachesManagerOperation.h */; settings = {ATTRIBUTES = (Private, ); }; };
-		F123BB5C5FBCAF9E06280CE3D72E4BA0 /* SDAnimatedImageView+WebCache.h in Headers */ = {isa = PBXBuildFile; fileRef = 7E9132E25E101C6406254D4819633C94 /* SDAnimatedImageView+WebCache.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		F147504E082C0C54FDAC02C78A241945 /* FBLPromises.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = E6B456D95207254195D61D2AD9EE88A6 /* FBLPromises.h */; };
-		F19D8DAFE92170C109D14140A81F7468 /* FIRMessagingTokenManager.m in Sources */ = {isa = PBXBuildFile; fileRef = 9B6C75A8F843B49C51FCC12222980977 /* FIRMessagingTokenManager.m */; };
-		F2420A40C03E49F006049ED28E2FB9B9 /* BackdropView.swift in Sources */ = {isa = PBXBuildFile; fileRef = B2FE8165EE1136F188FD65FB36D1BC7F /* BackdropView.swift */; };
-		F2759A6217DCD79E3F8E17DB657B7AA9 /* CleverTapBuildInfo.h in Headers */ = {isa = PBXBuildFile; fileRef = DB16487F2E0A797742A0E4F2B25FB6F7 /* CleverTapBuildInfo.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		F2A375811C382C03F1AE562EC29ED9EF /* MessageView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 319BDE430CD1EE8A9E7979B28F8849FB /* MessageView.swift */; };
-		F2A93944620A2A2AEFD369F77D71F2F0 /* FBLPromise+Delay.m in Sources */ = {isa = PBXBuildFile; fileRef = B01663682A537C03A360C89C7D3F1E80 /* FBLPromise+Delay.m */; };
-		F2AB76BFA6242F90C3EF1CCF11247547 /* FBLPromise+Any.h in Headers */ = {isa = PBXBuildFile; fileRef = 411BE640A1619C7D17CE3DF010BBFF3A /* FBLPromise+Any.h */; };
-		F3571A3D6F3DBA549F388D116AEF0465 /* CTCarouselMessageCell~port.xib in Resources */ = {isa = PBXBuildFile; fileRef = 1B376A169C2C9346A1F123BFA20999AF /* CTCarouselMessageCell~port.xib */; };
-		F36D96A4346C90A2D11CB3B6A2ECF4CF /* AuthenticationInterceptor.swift in Sources */ = {isa = PBXBuildFile; fileRef = D0FB770DFE550F9815FF5F5E89D8869D /* AuthenticationInterceptor.swift */; };
-		F3A29DAD2BDB31C95CA084F8884FD587 /* UIImage+Transform.m in Sources */ = {isa = PBXBuildFile; fileRef = B9D8307154625CB5623407784264A9F4 /* UIImage+Transform.m */; };
-		F3DC40871483270B08C42DAC468F9BBC /* FIRCLSRecordIdentity.h in Headers */ = {isa = PBXBuildFile; fileRef = 36F9C95585911FB5DA4301254ED45A34 /* FIRCLSRecordIdentity.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		F3F4CCD85ABB2FC0C2D2F43E99002C40 /* SDAssociatedObject.m in Sources */ = {isa = PBXBuildFile; fileRef = 4FB4227D1E4FC9C8022A1CB094CC3A2B /* SDAssociatedObject.m */; };
-		F404F6B647320B485496112300A4BEE9 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
-		F4071C9520BD964129C6E239BB27F770 /* SDDiskCache.m in Sources */ = {isa = PBXBuildFile; fileRef = A88EEAB6EE42765AC2E93BCAA8747DFA /* SDDiskCache.m */; };
-		F435FCAAE12BCFC2588A2F77729B888A /* CTInAppDisplayViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = C90EFA0F9CD3945BF7A333A61172809C /* CTInAppDisplayViewController.m */; };
-		F43DF6C0CAB954B961FB9E618F85594A /* FIRCLSInternalLogging.c in Sources */ = {isa = PBXBuildFile; fileRef = 73C35E7DF3168EADB8911900859A9473 /* FIRCLSInternalLogging.c */; };
-		F44C4D989C3CEB267C8378B3AE1F3C8B /* FIRCLSAsyncOperation_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 5613A08634D273E5EBF3E885286C62CC /* FIRCLSAsyncOperation_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		F4CF9B4CF9BCEF74E225D49E0A058FE2 /* SDAsyncBlockOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = A0C1027DB4311ED3CFA1338F593FE7B6 /* SDAsyncBlockOperation.m */; };
-		F4FCF040B54D10E3637FF748BECB63F0 /* GoogleDataTransport-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 2C07C49245E9E8019D4059371FE7FA9D /* GoogleDataTransport-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		F5442B4BE27D74157CC756F03CD62679 /* GULSceneDelegateSwizzler.h in Headers */ = {isa = PBXBuildFile; fileRef = B577364D6AFC1E66172F25CB1074410B /* GULSceneDelegateSwizzler.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		F555180A885E83A1CC1BB58CBFB5924E /* FIRInstallationsSingleOperationPromiseCache.m in Sources */ = {isa = PBXBuildFile; fileRef = 5A179F45FE5832B10D972620375BC6C0 /* FIRInstallationsSingleOperationPromiseCache.m */; };
-		F56E5736799A7AA0113EB5117B712266 /* FIRCLSUnwind.c in Sources */ = {isa = PBXBuildFile; fileRef = FAED24B23007C7D684DACD6F34A28CA4 /* FIRCLSUnwind.c */; };
-		F5AE68300414EE987129D0A68AD88274 /* FIRLogger.h in Headers */ = {isa = PBXBuildFile; fileRef = 104AF08E30BB3684536703C207E56280 /* FIRLogger.h */; settings = {ATTRIBUTES = (Private, ); }; };
-		F5CE84D724103BAB24D2C2F846A5AC44 /* nanopb-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = E30CC1203300308BF00922DDC1B1E465 /* nanopb-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		F5D2A31C7EB1DE010771140B6E7ABAD8 /* URLEncodedFormEncoder.swift in Sources */ = {isa = PBXBuildFile; fileRef = A9CC2452F12510951789FD6D970073DF /* URLEncodedFormEncoder.swift */; };
-		F5D9B7E3491755D13EAF9719AD9F0AA6 /* FBLPromise+Reduce.h in Headers */ = {isa = PBXBuildFile; fileRef = 56362F034BF93311AF8B0949F38AD0B0 /* FBLPromise+Reduce.h */; };
-		F5F0F1B217DE3668A387FFF27C87DBE7 /* FIRCLSSettings.h in Headers */ = {isa = PBXBuildFile; fileRef = A4BD1F2825928136CE79B7D998AFABEE /* FIRCLSSettings.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		F60C93A387FD72F9D71D9BA44DE02901 /* FBLPromise+Await.m in Sources */ = {isa = PBXBuildFile; fileRef = B2BCED4FF15422BFC7117598D6316508 /* FBLPromise+Await.m */; };
-		F63BE0585331CAA3482EF736803F8243 /* RequestInterceptor.swift in Sources */ = {isa = PBXBuildFile; fileRef = 5340E52136B510BFC920AD2F962FB2ED /* RequestInterceptor.swift */; };
-		F678F5D104DC9671C708EAC6816ED029 /* FIRConfiguration.m in Sources */ = {isa = PBXBuildFile; fileRef = D0A63248AF638732E927A11DD5E71DDC /* FIRConfiguration.m */; };
+		CAB404EFD3A1CFABA06E44773C06BC13 /* FIRMessagingCheckinService.h in Headers */ = {isa = PBXBuildFile; fileRef = 4DFB92EEF69CBF8BE4A85451C58E8AE5 /* FIRMessagingCheckinService.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		CB08C1A85B9BEE85B695786AB85ACB74 /* FIRMessagingAuthKeychain.m in Sources */ = {isa = PBXBuildFile; fileRef = 7AD928C62D1CCDA81DFFE70C46E4DE0E /* FIRMessagingAuthKeychain.m */; };
+		CB7ADAC70AA26C9B17BFBE9F4610C349 /* FIRCLSReportAdapter.h in Headers */ = {isa = PBXBuildFile; fileRef = 4708D4CB01AA4225BB7F1C91A7139D71 /* FIRCLSReportAdapter.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		CB91D13FB1332C4A09A24C8B90D45841 /* FIRCLSAnalyticsManager.m in Sources */ = {isa = PBXBuildFile; fileRef = 30EFBB8CFF983BFD0C3616D13EEA03E0 /* FIRCLSAnalyticsManager.m */; };
+		CBAD4314423097C3D229BA04D2589895 /* CTImageInAppViewControllerPrivate.h in Headers */ = {isa = PBXBuildFile; fileRef = CC604C9539C9AB820ACBE9344D1D4C59 /* CTImageInAppViewControllerPrivate.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		CBB83BA6BD6BCD7DF7D739B194EE3CDF /* CleverTapURLDelegate.h in Headers */ = {isa = PBXBuildFile; fileRef = 515F8265E37CF0EF6DFBCDD20448A4F1 /* CleverTapURLDelegate.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		CC36A7A256CBCD6E14953E26D5556283 /* CTMessageMO.h in Headers */ = {isa = PBXBuildFile; fileRef = C1642A62C6B1625D142D6EA0D8FE929C /* CTMessageMO.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		CC5075184395289AF0BD82AD96205371 /* SDAnimatedImage.m in Sources */ = {isa = PBXBuildFile; fileRef = AE2FBACF611688F415582C70C8D2AEC9 /* SDAnimatedImage.m */; };
+		CC6A413DC70329E2316BBEF3858EB195 /* CTPinnedNSURLSessionDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 6472E1C7B8DF7939683253FB80F9A7EF /* CTPinnedNSURLSessionDelegate.m */; };
+		CC97A08DFFCF0D5E1CC7DB28B9AAC712 /* CTHalfInterstitialViewController~iphoneland.xib in Resources */ = {isa = PBXBuildFile; fileRef = 24884863C525924B538E4C5FB478FB7B /* CTHalfInterstitialViewController~iphoneland.xib */; };
+		CD2C73DDE5BE4425E712DCDC8D3047A0 /* PagingInvalidationContext.swift in Sources */ = {isa = PBXBuildFile; fileRef = 9AF84B1D5B3B6DF4CEF58CDF184DFD60 /* PagingInvalidationContext.swift */; };
+		CD3539E9C18EFF11D52FCE3B37CE35EA /* CTHeaderViewController~iphoneland.xib in Resources */ = {isa = PBXBuildFile; fileRef = ADBFDABBBA19F38EE98C769E6B7C056C /* CTHeaderViewController~iphoneland.xib */; };
+		CD618584478F31BFFBFA24C031101BF0 /* FIRMessagingCode.h in Headers */ = {isa = PBXBuildFile; fileRef = 1B4B8388F81E252578BDDDBCC8DC1E3A /* FIRMessagingCode.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		CD767271DF4AC9C5C91EF171CE5378C3 /* CTInboxIconMessageCell~land.xib in Resources */ = {isa = PBXBuildFile; fileRef = 20F1DB0CE8F2D1C38FC9C5A5450638D9 /* CTInboxIconMessageCell~land.xib */; };
+		CD7841D2CE470A1439535CE601BA9814 /* CTPlistInfo.h in Headers */ = {isa = PBXBuildFile; fileRef = C3629827915D8FB9631546E8BF8B71FD /* CTPlistInfo.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		CDA5C57B522A5F33B8662A2A6A4952F3 /* errorIconLight@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = ECD534B0F133A4B7A05BD37B7CE0663B /* errorIconLight@2x.png */; };
+		CDB819E36BEDC93CE21B109A33FF9A7A /* CTCoverViewController~iphoneport.xib in Resources */ = {isa = PBXBuildFile; fileRef = 9EEA79382B4353C77F0D7CC4FA34B544 /* CTCoverViewController~iphoneport.xib */; };
+		CDD526FFBF1BA7840B262D69EC25ECF5 /* UIImage+ForceDecode.m in Sources */ = {isa = PBXBuildFile; fileRef = 97691BC38478749CE509F05895C24C86 /* UIImage+ForceDecode.m */; };
+		CE848ECE901CA751DEAEAE6C75870516 /* PageViewManagerDataSource.swift in Sources */ = {isa = PBXBuildFile; fileRef = 6372652B9C41599EF9FB6D1F9B6D201F /* PageViewManagerDataSource.swift */; };
+		CE8828A75BDCE3EF8C4F93D7AF81D442 /* FBLPromise+Async.m in Sources */ = {isa = PBXBuildFile; fileRef = D72A658BAF38CA19B214CD6CBBE615B3 /* FBLPromise+Async.m */; };
+		CEA86875A8848B057163E7E4C1447955 /* FIRCoreDiagnosticsData.h in Headers */ = {isa = PBXBuildFile; fileRef = 7225D5F08A2446219A3C5BEDD2ACE8B3 /* FIRCoreDiagnosticsData.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		CEBBD84818697CFD1B919C872C185E3A /* FIRCLSInternalReport.m in Sources */ = {isa = PBXBuildFile; fileRef = 103191D098277BDD1D12D744902DD282 /* FIRCLSInternalReport.m */; };
+		CEEE3BE9688879BDE64E9DA3A725F7B4 /* infoIcon@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = E467DB19A774982C87B9D225D6F14A12 /* infoIcon@2x.png */; };
+		CF62129300C2A4F0683385B8C6C49291 /* FirebaseCore.h in Headers */ = {isa = PBXBuildFile; fileRef = D533DBC38DC67A0E92D0DCE7180FB98E /* FirebaseCore.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		CF783C8FAA55A1BEF79D5CEBAAAD38DB /* FIRComponent.h in Headers */ = {isa = PBXBuildFile; fileRef = 71233380E6A65EBF19839301CF38DE2F /* FIRComponent.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		CFE2AB450D32A4DB3237322AF58439CD /* FIRCLSExecutionIdentifierModel.m in Sources */ = {isa = PBXBuildFile; fileRef = 3C0D24FC19C26534418054B10F3AC51F /* FIRCLSExecutionIdentifierModel.m */; };
+		CFFBFF9D2663E95F0696097B728BF3B7 /* FIRComponent.h in Headers */ = {isa = PBXBuildFile; fileRef = 24F31D628967F2301B998C33C6DADD56 /* FIRComponent.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		D05789A7F08E2F717A472FAB1E248788 /* FIRCLSMachOSlice.h in Headers */ = {isa = PBXBuildFile; fileRef = 3A8AA639F8D5149D5A5F3C80C9F5AD92 /* FIRCLSMachOSlice.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		D07857528879354ECC2301AE69EBC9B6 /* AlamofireNetworkActivityLogger-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 8102A8D65B9F1A3A7029EF28F4200421 /* AlamofireNetworkActivityLogger-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		D0A4531105F925E6B3EAD28FD143C9C6 /* CTHalfInterstitialViewController~iphoneport.xib in Resources */ = {isa = PBXBuildFile; fileRef = D1C31A198F845928B18A6F2C7796EBF7 /* CTHalfInterstitialViewController~iphoneport.xib */; };
+		D0B77181B211CF5EEF60C94A72CB6D8F /* CleverTapProductConfigPrivate.h in Headers */ = {isa = PBXBuildFile; fileRef = AA441242F2FCB9A773DE3F87B5336F99 /* CleverTapProductConfigPrivate.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		D0C6BE3EAAA986D186761B514C14E8C4 /* CTConstants.m in Sources */ = {isa = PBXBuildFile; fileRef = F111837584FB1E01945CD35A38F54387 /* CTConstants.m */; };
+		D0E0E58E20C1D15605F5CB5708C3E28D /* FIRCLSRecordIdentity.m in Sources */ = {isa = PBXBuildFile; fileRef = 82335BDB9831F033D58933E5818E7CB2 /* FIRCLSRecordIdentity.m */; };
+		D0ED0F505E6DF160A5297F5C7275CE92 /* FIRCLSCompoundOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = ED03C315026FAEB9F69D6E197FCAB3AB /* FIRCLSCompoundOperation.m */; };
+		D0F02D0ED0B1D57B5F5D4933A5601ECE /* FIRLoggerLevel.h in Headers */ = {isa = PBXBuildFile; fileRef = 154F7E358BD756096D0AC996095BDFDA /* FIRLoggerLevel.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		D0F35A71DE9054A64A63BC200548C2A4 /* FIROptionsInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 81CC485136EE60347DB61D49F3052C7A /* FIROptionsInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		D0FF3D8FA3A5580870BC7192D45F4381 /* FIRInteropEventNames.h in Headers */ = {isa = PBXBuildFile; fileRef = 1697729317EED4E2BC4476F73552DE1B /* FIRInteropEventNames.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		D12091A3726B42043B0060EF7FC4EBF1 /* GULAppEnvironmentUtil.h in Headers */ = {isa = PBXBuildFile; fileRef = C0DEDE4F8A0F73EA05DB5FD3F92504D3 /* GULAppEnvironmentUtil.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		D15FEA31AA9625BBF041FB91E48A9995 /* Validation.swift in Sources */ = {isa = PBXBuildFile; fileRef = DF6AA42E72F0867D19FA404C8FFEB603 /* Validation.swift */; };
+		D16E3160929DCE2ECBD3365B84864A9A /* SDImageTransformer.m in Sources */ = {isa = PBXBuildFile; fileRef = E9815F6AF3BDDCD1F1BD4B939A4753AC /* SDImageTransformer.m */; };
+		D1A8E5A14823F14EB261B6DE19EAD123 /* FIRCLSDwarfUnwind.c in Sources */ = {isa = PBXBuildFile; fileRef = 48EE650E18407E2AA77F9972D88C79FF /* FIRCLSDwarfUnwind.c */; };
+		D1BB570B778A284B563B1AC6C2403DBE /* FIRCLSUnwind_x86.h in Headers */ = {isa = PBXBuildFile; fileRef = DF2B1B5F4ED967D92D9B825196B9F876 /* FIRCLSUnwind_x86.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		D1C6613C26F8A345D523F64ED057A882 /* UIImage+GIF.h in Headers */ = {isa = PBXBuildFile; fileRef = 9807EE4404C4749868F977A2F50ABBBC /* UIImage+GIF.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		D224A7D6ADD2D72FB00E3D9C4018AF1D /* FIRCLSCompactUnwind.h in Headers */ = {isa = PBXBuildFile; fileRef = 9B69D3F6380635FCFCD8D16A606EF8D5 /* FIRCLSCompactUnwind.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		D239255E948851E7F86A63E74AE45D54 /* FIRMessagingCheckinService.m in Sources */ = {isa = PBXBuildFile; fileRef = FEC71F6A6706E56D0049698CD89DA7C1 /* FIRMessagingCheckinService.m */; };
+		D23B5D6B6F6E197DCF5DB669426B9800 /* Security.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 05720C608590E305E32A22FE9BDFD55B /* Security.framework */; };
+		D31356D54A39420DB91C892502CFFD57 /* IQUIViewController+Additions.swift in Sources */ = {isa = PBXBuildFile; fileRef = 5BD74976777151ACE3E0D71069F50F58 /* IQUIViewController+Additions.swift */; };
+		D336D6272F073898FF71D86ED2402F21 /* GoogleUtilities-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 31401394C2F55C10598C2A32A89A5C0C /* GoogleUtilities-dummy.m */; };
+		D364FC5314D60C89763C775DA70AC9B5 /* FBLPromise+Delay.h in Headers */ = {isa = PBXBuildFile; fileRef = 9EA10FE8174E6D08E0E3E4E3D15092FD /* FBLPromise+Delay.h */; };
+		D365FC2207D5EB9117AC8C6659ECF4E7 /* SDWebImagePrefetcher.m in Sources */ = {isa = PBXBuildFile; fileRef = 213DD13EBAC3B6790043AB1B49772555 /* SDWebImagePrefetcher.m */; };
+		D36DB362A1734884668576425329D4D9 /* FIRCurrentDateProvider.h in Headers */ = {isa = PBXBuildFile; fileRef = 8D686797AD46FCA9A10A9BB0E4002893 /* FIRCurrentDateProvider.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		D3A227C23C21CF4ADF0F1696CE228126 /* CTUIUtils.m in Sources */ = {isa = PBXBuildFile; fileRef = 7560252785F4534B0A7DF2DE8BF88202 /* CTUIUtils.m */; };
+		D3C30C1FF1153B90DA7BAE0F611EC1A7 /* SystemConfiguration.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = DDC55D0CD2D15D3E411ACD99C6C289B5 /* SystemConfiguration.framework */; };
+		D3E08E7EE675C4ABB82267D44A95E65B /* SDImageGIFCoder.h in Headers */ = {isa = PBXBuildFile; fileRef = C65A8331F06233EC900B1D8AD03DFB38 /* SDImageGIFCoder.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		D4629D2FBF01C5221E32675DBE1EAA83 /* FIRCLSAnalyticsManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 651C749EAA4998CA5425D60D2712C618 /* FIRCLSAnalyticsManager.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		D46BE3C40538B70C8D21FD0A588D25E5 /* FIRCLSdSYM.h in Headers */ = {isa = PBXBuildFile; fileRef = 66E97302FA67DC7B7ACA4CC26C612F3B /* FIRCLSdSYM.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		D46F3423FAC5D032A7A11EDEDCC5424B /* FIRCLSNetworkResponseHandler.m in Sources */ = {isa = PBXBuildFile; fileRef = 96A9BF5791F9ECDE01D0E01AC26A7C88 /* FIRCLSNetworkResponseHandler.m */; };
+		D491104C6D96FA8E9FA978890A4364F9 /* FIRCLSUnwind.c in Sources */ = {isa = PBXBuildFile; fileRef = E4FAFAD4CAF3236EDF706095FA0EDD06 /* FIRCLSUnwind.c */; };
+		D4969FE7E9124A8931D8A37583B551D8 /* FBLPromise+Always.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = ECCA8E0C743BB77CD8B16B5FC777942A /* FBLPromise+Always.h */; };
+		D4A909BAE60158DEB54BF3EC25D855F1 /* CTBaseHeaderFooterViewControllerPrivate.h in Headers */ = {isa = PBXBuildFile; fileRef = 0C663B636A0A6DF6ECB08F8336F5F5E8 /* CTBaseHeaderFooterViewControllerPrivate.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		D4FE1EA372D6EF297DCB87D67B9E0041 /* FIRCLSRecordHost.h in Headers */ = {isa = PBXBuildFile; fileRef = 3962EB8D20C9D9D03BD15FED8D13C0EE /* FIRCLSRecordHost.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		D5645D135FE148DDF50CEDF246616E28 /* SDWebImageDownloaderDecryptor.m in Sources */ = {isa = PBXBuildFile; fileRef = E9E0CCE9590682F227B99D90F95D9C4B /* SDWebImageDownloaderDecryptor.m */; };
+		D61AC6CC57EB6D5A6727E104E35CF2C0 /* CTCarouselMessageCell.m in Sources */ = {isa = PBXBuildFile; fileRef = 60FF54EC9247B6101870C24D91A2C543 /* CTCarouselMessageCell.m */; };
+		D6516B5451008BF1ABA150E6482F6325 /* IQKeyboardManager+UITextFieldViewNotification.swift in Sources */ = {isa = PBXBuildFile; fileRef = 913A839635390958E3E2D0F1FB58A314 /* IQKeyboardManager+UITextFieldViewNotification.swift */; };
+		D69ECD29EB7FE664B514BB731989647E /* CTInterstitialViewController~iphoneland.xib in Resources */ = {isa = PBXBuildFile; fileRef = DAFA55E76FA0299E13967B8590F31F0C /* CTInterstitialViewController~iphoneland.xib */; };
+		D775B0CA0A8FE6750A9C4B9E36A2F363 /* CTUserMO+CoreDataProperties.m in Sources */ = {isa = PBXBuildFile; fileRef = 3F6437729D04D92E50ED8A9DFE7E19D3 /* CTUserMO+CoreDataProperties.m */; };
+		D77738EFA25CA9B7689247B2E4051FBD /* crashlytics.nanopb.h in Headers */ = {isa = PBXBuildFile; fileRef = 08171A34191FD1035A1D0642F3CD1D66 /* crashlytics.nanopb.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		D787FFAEFD6F62230FD855682F32DEE8 /* GDTCORTransformer.h in Headers */ = {isa = PBXBuildFile; fileRef = AD751BE1E4CDEB38E77F14C092DD8DD3 /* GDTCORTransformer.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		D7973D0782A6805083DE42D13758F095 /* FIRCLSOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = E5DC56939D6CAEEABE7A3134AFFE8B2A /* FIRCLSOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		D79DD67A43BD3771521FF5B9699FA3E4 /* CTInboxSimpleMessageCell~port.xib in Resources */ = {isa = PBXBuildFile; fileRef = 8B4CCD3D90FCDEA5A24B2BDD41A6C939 /* CTInboxSimpleMessageCell~port.xib */; };
+		D7A2A03FC153ED6B11DF2A8C33A1781D /* SDImageAWebPCoder.m in Sources */ = {isa = PBXBuildFile; fileRef = 987880D115593E242CD4DD4E186F4B8C /* SDImageAWebPCoder.m */; };
+		D7C3E6AB657F24B6A534C17DD0803FD2 /* Inbox.xcdatamodeld in Sources */ = {isa = PBXBuildFile; fileRef = B98C6C35BA385BFE0B86644BA9D00C1C /* Inbox.xcdatamodeld */; };
+		D800389FD876C4B622EBC105EED6D045 /* CTInAppDisplayViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = C53E19C6221DC7A404EF1CD08520CB65 /* CTInAppDisplayViewController.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		D807446B0E38E75CC2A531715D60D036 /* FIRCLSThreadState.h in Headers */ = {isa = PBXBuildFile; fileRef = C61C4FB152630D54FC285D76E46C0A94 /* FIRCLSThreadState.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		D81AB097F5869F251CAB1BCF20CF6CD4 /* SDWebImageError.h in Headers */ = {isa = PBXBuildFile; fileRef = 07992C388B82748646D44493AC2017CF /* SDWebImageError.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		D88E742F985747055B0F4FB458338646 /* GULLogger.m in Sources */ = {isa = PBXBuildFile; fileRef = 6092BD5DFE8052E7C6139333E21FCA35 /* GULLogger.m */; };
+		D8B961697A8415A876D43E325A6A9500 /* FIRCLSCrashedMarkerFile.c in Sources */ = {isa = PBXBuildFile; fileRef = 92C915F834AFDD3A55969B67D33F06C9 /* FIRCLSCrashedMarkerFile.c */; };
+		D8C82CA319C577D6B5A67B2996B175B5 /* FIRCrashlyticsReport.m in Sources */ = {isa = PBXBuildFile; fileRef = A80F15ADC0AAE008F5B3BDA48C2BC025 /* FIRCrashlyticsReport.m */; };
+		D8FF8FC05BCF30D42A2A27675BE3C31E /* CTHalfInterstitialImageViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 7EA8E8496DC3A9BAE0360D73E94DE12C /* CTHalfInterstitialImageViewController.m */; };
+		D9281D4BCEA3D1157D9E6A620C1601BF /* FIRCLSDwarfUnwindRegisters.h in Headers */ = {isa = PBXBuildFile; fileRef = 9A1F2636580718538B3DB4B995B2109F /* FIRCLSDwarfUnwindRegisters.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		D97AA0ED7E3CAC69626609ACBB7278A9 /* FBLPromise+Recover.m in Sources */ = {isa = PBXBuildFile; fileRef = FA43B0DE9A6AA385858D598EB313B64E /* FBLPromise+Recover.m */; };
+		D986D6BC99C9CF552D6FE5420BA0ED76 /* GDTCOREvent.m in Sources */ = {isa = PBXBuildFile; fileRef = 17766849ABC4CA67FEE2299ACD1F263E /* GDTCOREvent.m */; };
+		D9AF5C282FA11156B3ECA3304144CCA2 /* FIRCLSReportUploader_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = CB0EF27C8C83049EFDBA6A478040AA07 /* FIRCLSReportUploader_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		DA26B8218DE9A7CE58E58E269B1F5D05 /* FIRConfigurationInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 399828B9A50CDDA00D5E7888A6CC9B7E /* FIRConfigurationInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		DA327BF14267A0106C4806B2DF482DDF /* FBLPromise+Delay.m in Sources */ = {isa = PBXBuildFile; fileRef = 24CCA4907A69191527964CE2FBB89303 /* FBLPromise+Delay.m */; };
+		DA62D8114203D1AB1FB8AEF20C9EB2BE /* CTCoverViewController~iphoneland.xib in Resources */ = {isa = PBXBuildFile; fileRef = 2B612428B0BB69EB3C491EC45120F215 /* CTCoverViewController~iphoneland.xib */; };
+		DA7A4888F16604625D75598E061C2ABB /* FIRCLSByteUtility.m in Sources */ = {isa = PBXBuildFile; fileRef = 2074CABF0F9D6AC3E78583284410C9D1 /* FIRCLSByteUtility.m */; };
+		DBD382BA0B6BE53E00921043DE3A28EC /* CleverTapInstanceConfig.m in Sources */ = {isa = PBXBuildFile; fileRef = 44AFB46FDE2B799A8F3CBC4E091A23A3 /* CleverTapInstanceConfig.m */; };
+		DC0EDBA61967D32C87F4A9AE587BBC30 /* FloatingPanel-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = 4E3B2331512ED7E802587450B12AD18F /* FloatingPanel-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		DC1185DF084F9D168BAE32EB5FDB931F /* ic_play@3x.png in Resources */ = {isa = PBXBuildFile; fileRef = C84A8C60205DA3206920D8315CA4204D /* ic_play@3x.png */; };
+		DC3CC6F84341610C7D949D3FE10CFAAC /* GDTCORStorageEventSelector.h in Headers */ = {isa = PBXBuildFile; fileRef = 8898492117477E7A71AE31CC32DE347D /* GDTCORStorageEventSelector.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		DC75D8918B89EEB6E25A4B17202B4F7B /* FIRCLSDwarfUnwind.h in Headers */ = {isa = PBXBuildFile; fileRef = 2814C83614480C3323780473AC1733E4 /* FIRCLSDwarfUnwind.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		DCD0C33A2B50811D53CF68F021284B47 /* DispatchQueue+Alamofire.swift in Sources */ = {isa = PBXBuildFile; fileRef = 17FF3B0A4568B65A4CB6B942FFDBA4BC /* DispatchQueue+Alamofire.swift */; };
+		DCE760ABB0C4ACBBDE5EE69F4F7F2C39 /* FIRInstallationsStore.h in Headers */ = {isa = PBXBuildFile; fileRef = 00E2DC1B325037165F2D8F2DB040AB08 /* FIRInstallationsStore.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		DCF27BD94D1CD1C17FB6F45C5DD4565E /* CTInAppDisplayViewControllerPrivate.h in Headers */ = {isa = PBXBuildFile; fileRef = 1B2F239900BA149C33F8F4C8694F908F /* CTInAppDisplayViewControllerPrivate.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		DD1F8C8A0861539FDEC739FCC0CCAB5E /* CTDeviceInfo.m in Sources */ = {isa = PBXBuildFile; fileRef = B4C37A71F8B6C5EDFE241432F8F8F00F /* CTDeviceInfo.m */; };
+		DD2FF3D14E07D0833208D45941BFA292 /* FIRHeartbeatInfo.h in Headers */ = {isa = PBXBuildFile; fileRef = 265B3CAD87294958F1179293CD797A92 /* FIRHeartbeatInfo.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		DD58A00EACBEE274C381B491519C6B8C /* RedirectHandler.swift in Sources */ = {isa = PBXBuildFile; fileRef = FDCB12D99DD82CD647E1D6F77547ECA4 /* RedirectHandler.swift */; };
+		DD78614D0FF4A0349C73A8B499165296 /* Parchment-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = D3972686BD95412BFCBE53DE7A6B9709 /* Parchment-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		DD87BCC0696946A029E25B638BFB1971 /* AccessibleMessage.swift in Sources */ = {isa = PBXBuildFile; fileRef = F3DD0988E4A7913DBE5085B3FB06012C /* AccessibleMessage.swift */; };
+		DD93C3698D3C518BF8B9AF3F521DD2CA /* SDImageAssetManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 35F5D10437998536073D8F3EA95CD61E /* SDImageAssetManager.h */; settings = {ATTRIBUTES = (Private, ); }; };
+		DD9B58069951E11545143DC8F5623810 /* SDWebImageTransition.m in Sources */ = {isa = PBXBuildFile; fileRef = 51D36670663B6985F453150464C3A44D /* SDWebImageTransition.m */; };
+		DEDAD74D55FBB81EEA59F44D79BA1E5F /* GULURLSessionDataResponse.h in Headers */ = {isa = PBXBuildFile; fileRef = 19891641EDAEEBD967909B0BBBB6E3C7 /* GULURLSessionDataResponse.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		DEE93665E872B900CA205521F2A7FA02 /* CTUserMO+CoreDataProperties.h in Headers */ = {isa = PBXBuildFile; fileRef = 09BD54587005B4CFDA4099FB660EB5A2 /* CTUserMO+CoreDataProperties.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		DEEA6E136E797AA37D5433767B0ADD71 /* SDImageHEICCoder.m in Sources */ = {isa = PBXBuildFile; fileRef = 4F6E34F663058F62FA45A3BC489754AA /* SDImageHEICCoder.m */; };
+		DEEF19F321E3D3C744F94ED911B02C6D /* FBLPromise+Retry.m in Sources */ = {isa = PBXBuildFile; fileRef = 365B559452D6CC8350F71F3CF5E1677A /* FBLPromise+Retry.m */; };
+		DF051DBBF710C7933556FFB9C127EC36 /* FirebaseMessaging.h in Headers */ = {isa = PBXBuildFile; fileRef = 5D5617CF4F2792AC7D8984514042DC6A /* FirebaseMessaging.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		DF33C3DE068D6116B3F551B0453ACD23 /* IQUIScrollView+Additions.swift in Sources */ = {isa = PBXBuildFile; fileRef = D0784CFD6BFE463DAF418E3A86DE2D6A /* IQUIScrollView+Additions.swift */; };
+		DF4099B680CBB960D2E7A81DBC6E7E5E /* SDAnimatedImageView.m in Sources */ = {isa = PBXBuildFile; fileRef = F96BEAADB73AE3D5F119BFD9DC8B0DD5 /* SDAnimatedImageView.m */; };
+		DF6A442EC4860502E3ECA2D4B23A1E0B /* FIRAppInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = B71407694A0F8035B64808555496F341 /* FIRAppInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		DF753C8A610207533276346394F03AB2 /* CTAVPlayerViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 84F190402674640F7E58B609A5BDAE56 /* CTAVPlayerViewController.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		DF8AD073422B198888BCC5C732DE65C8 /* warningIconSubtle.png in Resources */ = {isa = PBXBuildFile; fileRef = C5FD8C023790B090F07FB6E3DE8B7339 /* warningIconSubtle.png */; };
+		DFA73CE1CEA28C4662C283BA65A2A3B1 /* UIImage+GIF.m in Sources */ = {isa = PBXBuildFile; fileRef = 6CF0C6ABE3E75E950F25D8B8F9CFA066 /* UIImage+GIF.m */; };
+		DFDECAD52AB72F2CF911FF22389B9EB3 /* FIRCLSDataCollectionToken.h in Headers */ = {isa = PBXBuildFile; fileRef = 5549F3D68AF33A0A5CD45C1AA777765D /* FIRCLSDataCollectionToken.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		DFE52573FCBEFD4D83949377FBDDE324 /* CTUserMO.m in Sources */ = {isa = PBXBuildFile; fileRef = 9105F3678131BCF1B051EB0C94E21BB1 /* CTUserMO.m */; };
+		E08D7ACD725838397983034B90025D62 /* SDWebImageDefine.h in Headers */ = {isa = PBXBuildFile; fileRef = C55E151EDE8921A13FCBF9EEA61EA996 /* SDWebImageDefine.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		E0C65E16219718869CD2AFCA2C5465CB /* Request.swift in Sources */ = {isa = PBXBuildFile; fileRef = 9D10443BC8E26AEEC44B20D4915B3C8C /* Request.swift */; };
+		E11BF22E03FC46906C6F427BB435E5C5 /* CTUIUtils.h in Headers */ = {isa = PBXBuildFile; fileRef = 76645EC5F250FAA55A16C7C62D128B88 /* CTUIUtils.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		E122D80968A90893D69A1EFAFDF170AA /* CTAVPlayerViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = 17A5436C35B8B764D42CFEBD58A400E3 /* CTAVPlayerViewController.m */; };
+		E1769C267E82B0C24FE0FFBF949F0A6E /* StringEncoding+Alamofire.swift in Sources */ = {isa = PBXBuildFile; fileRef = 159E823BEE089BA2AA21B144B434CA98 /* StringEncoding+Alamofire.swift */; };
+		E1AF44A98A0C731632D257CCF36167C9 /* CleverTapEventDetail.m in Sources */ = {isa = PBXBuildFile; fileRef = CC3315B28F61B22AB235B49DC58918D8 /* CleverTapEventDetail.m */; };
+		E1B11455CD1DA8868077BB5922433DF4 /* youtube-ios-player-helper-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = D9C123DC209A3AA01A0AE43A9CF5A44D /* youtube-ios-player-helper-dummy.m */; };
+		E1BB94CC1AFB7241DED412D82DB270C5 /* FIRMessagingTokenDeleteOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = 88C9A3AE4CDA298CD3C52384D7F1089C /* FIRMessagingTokenDeleteOperation.m */; };
+		E1C6E0F708C8EBEC563C47B3CED47A69 /* SDImageLoadersManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 6626BAAF7D476EE2F5D7EFD6E447C27F /* SDImageLoadersManager.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		E22B94C438C43EB135021F119B4AF567 /* NSURLSession+GULPromises.m in Sources */ = {isa = PBXBuildFile; fileRef = 69AC3B8909B1E0DBE3F60C919B890B00 /* NSURLSession+GULPromises.m */; };
+		E25C8AA8B25F0A7A167560BD52231AA9 /* FIRCLSDefines.h in Headers */ = {isa = PBXBuildFile; fileRef = 97DF05DB4FC5D5E127E180FA85ACC4E6 /* FIRCLSDefines.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		E290630326514476CA3D4651D3FB2C12 /* SwiftMessages-umbrella.h in Headers */ = {isa = PBXBuildFile; fileRef = B92CE8AA08FDDA5D582BB8DAECE0D6C6 /* SwiftMessages-umbrella.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		E2B31EDB22CCFA772AA617922A5FB237 /* FIRCLSCompactUnwind.c in Sources */ = {isa = PBXBuildFile; fileRef = D36E0117FF8C4F329FF0C37299C43960 /* FIRCLSCompactUnwind.c */; };
+		E2BFA8C40A69A922A1517B2CDAA293A1 /* FIRCLSMachOBinary.m in Sources */ = {isa = PBXBuildFile; fileRef = B39FDDDD184D41F0EB65A56CB04DCB68 /* FIRCLSMachOBinary.m */; };
+		E36A7862DE77FAB98FC121D52A8A243E /* SDAnimatedImageView+WebCache.m in Sources */ = {isa = PBXBuildFile; fileRef = FB31027047B5AABE0E152E0133E99820 /* SDAnimatedImageView+WebCache.m */; };
+		E37C298E1D867A7FC5BD0F3FE323EFF7 /* firebasecore.nanopb.c in Sources */ = {isa = PBXBuildFile; fileRef = 99570CD14755AF52CA6FB413ECD617F6 /* firebasecore.nanopb.c */; };
+		E37C4D28DA1B8222CBFE14235044D619 /* PagingContentInteraction.swift in Sources */ = {isa = PBXBuildFile; fileRef = 9187BC036B0CC8B889EA2C64E96E88EF /* PagingContentInteraction.swift */; };
+		E382689D363A0BCBD6EAEF123DCD0C2B /* GDTCORAssert.m in Sources */ = {isa = PBXBuildFile; fileRef = E8DDAD2F17B7C00DF059F1921AFDE4F8 /* GDTCORAssert.m */; };
+		E38FF43886C47FD49A6A896E37AE0D02 /* FIRCLSInternalReport.h in Headers */ = {isa = PBXBuildFile; fileRef = 764527D4AF483A9664434CC804DF21B2 /* FIRCLSInternalReport.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		E3F70E25B736DD4F3CCB532D71CC58F7 /* PagingIndicatorView.swift in Sources */ = {isa = PBXBuildFile; fileRef = CCFB8FE90C489201EF7A124A5006AD25 /* PagingIndicatorView.swift */; };
+		E3FBEB7A6276B487A434241D190CD1BE /* GDTCORDirectorySizeTracker.h in Headers */ = {isa = PBXBuildFile; fileRef = 296BCCE94D73479E627E75B11EA8C8B5 /* GDTCORDirectorySizeTracker.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		E41FB97ECDDA30AA4A4858C44BFFE9E3 /* GULNetworkURLSession.m in Sources */ = {isa = PBXBuildFile; fileRef = FD4FDC395E0B9DEA8DD00B4870E94874 /* GULNetworkURLSession.m */; };
+		E4408E1A5E9573BFBA52A2FBF1585246 /* FirebaseCore-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = 459F6932A4DD3E8EE8A8659E6BE37E87 /* FirebaseCore-dummy.m */; };
+		E4901FCFF58068A81AEF70C04F62D46C /* GDTCOREndpoints.m in Sources */ = {isa = PBXBuildFile; fileRef = D0E54EAA84E9AF21B7CAEADA3970A99E /* GDTCOREndpoints.m */; };
+		E4DF03FDC68BEEC7C7FD53AA4F73383A /* CTUtils.m in Sources */ = {isa = PBXBuildFile; fileRef = DB88ED7F029481721F48DB842E7D8DC6 /* CTUtils.m */; };
+		E54776CE1D5A9F390BC06C319B218B1E /* PagingNavigationOrientation.swift in Sources */ = {isa = PBXBuildFile; fileRef = 31645683F0E428258C0FF7B24761A5D2 /* PagingNavigationOrientation.swift */; };
+		E58D27538533769E58A9A60DFF892BE2 /* SDDisplayLink.h in Headers */ = {isa = PBXBuildFile; fileRef = 78213D1FD58E095F7BBB866084420727 /* SDDisplayLink.h */; settings = {ATTRIBUTES = (Private, ); }; };
+		E5C51A9C952E87C834C4344690963A54 /* UIView+constraints.swift in Sources */ = {isa = PBXBuildFile; fileRef = 599B86EB87730F2D46AE8432C9C35FC8 /* UIView+constraints.swift */; };
+		E5E39C6601D198A01A6F0D4536C771CC /* CTInAppNotification.m in Sources */ = {isa = PBXBuildFile; fileRef = F3EE747811778E93B0CF44340860AC42 /* CTInAppNotification.m */; };
+		E5EF61C333277D69E046F6D0B9736F2D /* GDTCORTargets.h in Headers */ = {isa = PBXBuildFile; fileRef = BBE02FF646366491B61386699D63DF3A /* GDTCORTargets.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		E6218E3942FD620FFFAA6085185D775B /* SystemConfiguration.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = DDC55D0CD2D15D3E411ACD99C6C289B5 /* SystemConfiguration.framework */; };
+		E67C3DD638B4949FFEBDDF4B4D2EEEBE /* FIRCLSSettings.m in Sources */ = {isa = PBXBuildFile; fileRef = 24249FCDB8E42EBC4EFD4C860E7B2AFB /* FIRCLSSettings.m */; };
+		E6BF1DABA55AE4CAB5085235B1DE90D7 /* SDWebImageDownloaderOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = E35C54EA4A62DEFD78EEC455670B06F9 /* SDWebImageDownloaderOperation.m */; };
+		E6FFFDC806852AD866C51DA13C75D46C /* NSError+FIRMessaging.h in Headers */ = {isa = PBXBuildFile; fileRef = 971FF2AFFDF10D7D2D1181CA28564D27 /* NSError+FIRMessaging.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		E72E1BDDFF31003BD089544FC112FAAC /* IQTextView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 066A2C53ACCA22D21393A852578FF832 /* IQTextView.swift */; };
+		E74DF6A94DDA50DC5D1934A5F9866493 /* PageViewDirection.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0CD5177F5E21C1A5F1898E33373CE290 /* PageViewDirection.swift */; };
+		E78DC05A487A7832BB754A3D9A55A8C0 /* FIRVersion.h in Headers */ = {isa = PBXBuildFile; fileRef = 9C092A3CE0A954009E8EC3D7D006851B /* FIRVersion.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		E857ADCAD7B647883D5B2AEC3F16D1D5 /* URLSessionConfiguration+Alamofire.swift in Sources */ = {isa = PBXBuildFile; fileRef = E1BBF3307CC784BFA0DB78B59CA5262C /* URLSessionConfiguration+Alamofire.swift */; };
+		E857CB5B3B6E37713B69473C0999F52B /* FIRCLSHost.h in Headers */ = {isa = PBXBuildFile; fileRef = 4356F45410A9D4950B7F6F726EF89881 /* FIRCLSHost.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		E86F27B9EEE1F545559349EAC8BDE2B9 /* CTCarouselImageView.h in Headers */ = {isa = PBXBuildFile; fileRef = B374527FA3E07E3963CA0F1D034A0117 /* CTCarouselImageView.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		E88793D1BD838F34872D24ED4F33AC0D /* SDImageLoader.h in Headers */ = {isa = PBXBuildFile; fileRef = 3B47D8F756F8EE3C082C38E7541FBF1B /* SDImageLoader.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		E89BC0BC78E672F8BB6BDD6608EE47D0 /* FIRComponentType.h in Headers */ = {isa = PBXBuildFile; fileRef = AC6A3A1216BF0F6B7524B913900EC73F /* FIRComponentType.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		E8A8175C514C62CD8655245B87869DA2 /* FIRInstallationsStore.m in Sources */ = {isa = PBXBuildFile; fileRef = B130344935054793314B75BFF96748D0 /* FIRInstallationsStore.m */; };
+		E8C573D89877C71C45A7B765D084C4DB /* PagingBorderLayoutAttributes.swift in Sources */ = {isa = PBXBuildFile; fileRef = 45FEE7AF59E7C4AE6AD8BCA40C7B530A /* PagingBorderLayoutAttributes.swift */; };
+		E96676C644B8DE5F2BE3E4FD01F1ED92 /* GULMutableDictionary.m in Sources */ = {isa = PBXBuildFile; fileRef = 8808DA65E8A631593F1599A3A28505DF /* GULMutableDictionary.m */; };
+		E9772E4397A53825AA76AAAFFFE45523 /* GULLogger.h in Headers */ = {isa = PBXBuildFile; fileRef = 95A76B67F30BC91C646DEEA20408C4E1 /* GULLogger.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		E9C2D2A1A26FD1396EFF14FE417E179C /* FBLPromise+Wrap.h in Headers */ = {isa = PBXBuildFile; fileRef = 2455EBE1355DD4E39DA6C0B3B694A25B /* FBLPromise+Wrap.h */; };
+		E9D0D1F6F44A9C4EFB2EDB9EF0A50F5F /* FIRCLSdSYM.m in Sources */ = {isa = PBXBuildFile; fileRef = EE5B39D2958FFED65CEC3DEA93939570 /* FIRCLSdSYM.m */; };
+		E9F6411EBC7C3767516EE20633A03C7E /* FBLPromise+Async.h in Headers */ = {isa = PBXBuildFile; fileRef = D7E71D9CFD82F3048AF2C55DBED5E9DE /* FBLPromise+Async.h */; };
+		EA44139ED4F0C48241A79B9030A7C244 /* GDTCORConsoleLogger.h in Headers */ = {isa = PBXBuildFile; fileRef = B1505782C0A2D38796E5A6A7D4D5C73F /* GDTCORConsoleLogger.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		EA550ADF27ED6AF47DBEDB69882A399A /* SDWebImageOptionsProcessor.h in Headers */ = {isa = PBXBuildFile; fileRef = 2C5A07F542DD26B4E2A108A288CB8FF4 /* SDWebImageOptionsProcessor.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		EA57D4FACE2152626DB5FC3D782B0E02 /* FIRHeartbeatInfo.h in Headers */ = {isa = PBXBuildFile; fileRef = B6C22DCEA4BD90A8D0260E41C403578B /* FIRHeartbeatInfo.h */; settings = {ATTRIBUTES = (Private, ); }; };
+		EB1FAFE23567985155A983147DE20E3C /* FIRHeartbeatInfo.h in Headers */ = {isa = PBXBuildFile; fileRef = F3B3ECD4F063AD3F66C7D14C3D442F59 /* FIRHeartbeatInfo.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		EB225391DFFFC693F65586089F189423 /* CTValidator.m in Sources */ = {isa = PBXBuildFile; fileRef = 50EF5AA646DA5B62C399A7A6ADB78FEC /* CTValidator.m */; };
+		EB3A40FE27D5D794E599F604A5A792CE /* FBLPromise+Wrap.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = 2455EBE1355DD4E39DA6C0B3B694A25B /* FBLPromise+Wrap.h */; };
+		EB57A43FF95FB2DACCEA9A7D5923519F /* CTCarouselImageMessageCell~land.xib in Resources */ = {isa = PBXBuildFile; fileRef = 3FA222F86387B18A8AB791A0E90C3868 /* CTCarouselImageMessageCell~land.xib */; };
+		EB96C308FDBB23BAF8D0D007CA270672 /* pb_encode.h in Headers */ = {isa = PBXBuildFile; fileRef = A7D714E6FAE501B391F302D1940BB647 /* pb_encode.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		EBC233FC318B7BDECF90125C0D317479 /* FIRCoreDiagnosticsConnector.h in Headers */ = {isa = PBXBuildFile; fileRef = 0DED65E99D33AA6B3972850BE508F796 /* FIRCoreDiagnosticsConnector.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		EBC9786496E03F20BA01B68C1F9F69D9 /* UIImageView+HighlightedWebCache.m in Sources */ = {isa = PBXBuildFile; fileRef = B90F08318CEA7128A5FE1FADA5514B15 /* UIImageView+HighlightedWebCache.m */; };
+		EBD43A7A57B04E62FC63BFB83F04A4CC /* FIRMessaging_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 24F35EB99999F6E64B350D4AD295382E /* FIRMessaging_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		EBEA830DDFB1E523F856934CAB54D854 /* PagingBorderView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 9AC56E16ED8B41958181D4A351C1F915 /* PagingBorderView.swift */; };
+		EC11B17DA78F7EEBEBC3EFAF68C6DF9F /* Session.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0077048F741172E1CAE01CA6C6B08FE9 /* Session.swift */; };
+		EC172B12D7F1820C6AFEF01AD7D7A882 /* FIRAppAssociationRegistration.m in Sources */ = {isa = PBXBuildFile; fileRef = B3869CF044F0EFE17B6DF9FA5CECEF4D /* FIRAppAssociationRegistration.m */; };
+		ECA84609A18E3D3FE0E7930CB86811E8 /* FIRInstallationsBackoffController.h in Headers */ = {isa = PBXBuildFile; fileRef = DB88A82D6F72238D7BC690332193230E /* FIRInstallationsBackoffController.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		ECC26D7672AD93127E949EF5ECBF02DA /* FBLPromise+Async.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = D7E71D9CFD82F3048AF2C55DBED5E9DE /* FBLPromise+Async.h */; };
+		ECE24BED62E6B79ACDAC2A97BBDCDA9D /* CTHalfInterstitialImageViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = D02673B88302D98DB5FB394ACFB279D0 /* CTHalfInterstitialImageViewController.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		ECF62852C4373C7C1C195B5A57CDB84E /* GULSecureCoding.m in Sources */ = {isa = PBXBuildFile; fileRef = 4F0A2E4017AC579885330E448BCFFAD7 /* GULSecureCoding.m */; };
+		ED4C5EBCC7CEA4ECB25A51F1E2FD9008 /* FIRCLSMachO.m in Sources */ = {isa = PBXBuildFile; fileRef = D270624EFF8EE2F812599F6783F70746 /* FIRCLSMachO.m */; };
+		EE01E92EF5ACB20D2C20ADCED28357AD /* CleverTap.h in Headers */ = {isa = PBXBuildFile; fileRef = E6099841E9DDF359D18EFE372967468F /* CleverTap.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		EE1DDD9E8B64F0B57FDFC4BA656E20CB /* SDDiskCache.m in Sources */ = {isa = PBXBuildFile; fileRef = A3718B35B506221E40756C1D5E13E8BB /* SDDiskCache.m */; };
+		EE2007369A32179A1540374E29C343AE /* MarginAdjustable+Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = 447066B9535D8ACD3191668F7C63BE2D /* MarginAdjustable+Extensions.swift */; };
+		EE3F1165DAFE92EEE5399A7D110C18E4 /* FIRInstallationsAuthTokenResult.m in Sources */ = {isa = PBXBuildFile; fileRef = 5F863D83371585D8BC18511D9B54DADC /* FIRInstallationsAuthTokenResult.m */; };
+		EE41E85DE1E7DD01011EB0154E073311 /* FIRMessagingAnalytics.m in Sources */ = {isa = PBXBuildFile; fileRef = A6E6DCF68C06096E3487C0F36AD38851 /* FIRMessagingAnalytics.m */; };
+		EE55C240620A0749E86CFC211909D3A5 /* FIRCLSUnwind_arch.h in Headers */ = {isa = PBXBuildFile; fileRef = 3C213A746118458288D3D0F0BD08BC2F /* FIRCLSUnwind_arch.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		EEE29EEF16FF6A59F3498B1C935800B9 /* SDWebImageCacheSerializer.h in Headers */ = {isa = PBXBuildFile; fileRef = DD895682159C0F1A91A098DEDCAE68C4 /* SDWebImageCacheSerializer.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		EF73165F049DB4864538A394FFCBE874 /* PassthroughView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 5CD4E38062B2DC81954AFE1F54EA059A /* PassthroughView.swift */; };
+		EF7C41AFA99E6710F370845DED1337FC /* SDAnimatedImageView.h in Headers */ = {isa = PBXBuildFile; fileRef = 1E142FDBE14FA93EDCB57AC7FA5A1AFD /* SDAnimatedImageView.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		EFADC1F8E036B3C0EFCECE17543A88AF /* CTPlistInfo.m in Sources */ = {isa = PBXBuildFile; fileRef = FD2FC8B7039CE304FDCB4E9CBAE4FCB1 /* CTPlistInfo.m */; };
+		F0240BD1F39F8C7041CEB4C47550FEE9 /* FIRComponent.m in Sources */ = {isa = PBXBuildFile; fileRef = B6EF61D47A870DFF36A42ADFE0742403 /* FIRComponent.m */; };
+		F03B208645DEEE46D09C9A8AC03F1D90 /* GULHeartbeatDateStorable.h in Headers */ = {isa = PBXBuildFile; fileRef = BE7D1BBB2E2E79889115EF5304C4AAAD /* GULHeartbeatDateStorable.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		F068EC06908B489F2B3DD4861BA93EE8 /* warningIconLight.png in Resources */ = {isa = PBXBuildFile; fileRef = A01003C443CE67BA354A21DF52151C37 /* warningIconLight.png */; };
+		F0AA1C31D8F712571A2EB61B2F4EE422 /* GDTCORRegistrar_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 57FFEE15C4926B4C90AA9266F3A43B63 /* GDTCORRegistrar_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		F0B761F245A992BFDE8F666B84BD8785 /* Layout.swift in Sources */ = {isa = PBXBuildFile; fileRef = 94A37ADF6299F8CE4EDE0672C6C6343F /* Layout.swift */; };
+		F11F1C9DEE11A51D6324FFBAA8DE4B12 /* UIImage+MemoryCacheCost.m in Sources */ = {isa = PBXBuildFile; fileRef = E2101A1F0F39ADA8849223A02F98D09B /* UIImage+MemoryCacheCost.m */; };
+		F1695FE6FEB6DF1AC56C415D4DDAE035 /* FIRInstallationsErrorUtil.h in Headers */ = {isa = PBXBuildFile; fileRef = B4B5B6C948CEB64F26CF9868558D1ED5 /* FIRInstallationsErrorUtil.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		F22AD1F418E6E11BBAA9BA4527E837CD /* FBLPromise+Catch.h in Headers */ = {isa = PBXBuildFile; fileRef = E0A1FF0CCA3916F8D83DCCC1EBA6F181 /* FBLPromise+Catch.h */; };
+		F2420A40C03E49F006049ED28E2FB9B9 /* BackdropView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 075798806DB872AAEF434F61F187CFD7 /* BackdropView.swift */; };
+		F2759A6217DCD79E3F8E17DB657B7AA9 /* CleverTapBuildInfo.h in Headers */ = {isa = PBXBuildFile; fileRef = 57B40F99176598C1C0DA5A9FBFA01FB8 /* CleverTapBuildInfo.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		F2B1C1D70C629AE19C0D5121B1BBA891 /* IQKeyboardManager+Position.swift in Sources */ = {isa = PBXBuildFile; fileRef = A9C62A4A227DEF32C8E68296D59F6F54 /* IQKeyboardManager+Position.swift */; };
+		F3571A3D6F3DBA549F388D116AEF0465 /* CTCarouselMessageCell~port.xib in Resources */ = {isa = PBXBuildFile; fileRef = C8BA42ABDBDF2D4E0C039C4D2EEA7C62 /* CTCarouselMessageCell~port.xib */; };
+		F36D96A4346C90A2D11CB3B6A2ECF4CF /* AuthenticationInterceptor.swift in Sources */ = {isa = PBXBuildFile; fileRef = 9BD8F811477FD70843AD82BBD33C4933 /* AuthenticationInterceptor.swift */; };
+		F37374A95021D188C04B9485ED8CA4BD /* GULKeychainStorage.h in Headers */ = {isa = PBXBuildFile; fileRef = 4DEC70362434095523615EFDB7189F35 /* GULKeychainStorage.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		F3AF329BF6C5438FFC560B2D1C5632A0 /* SDAnimatedImageRep.h in Headers */ = {isa = PBXBuildFile; fileRef = 876D329B0601100EB3CB9508C3ACF1EB /* SDAnimatedImageRep.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		F3EBB9F036AF5CC4DCC1649D124CC17D /* GDTCORUploadCoordinator.m in Sources */ = {isa = PBXBuildFile; fileRef = C1A6B0C42A8EB5133836DFA9B74A9919 /* GDTCORUploadCoordinator.m */; };
+		F435FCAAE12BCFC2588A2F77729B888A /* CTInAppDisplayViewController.m in Sources */ = {isa = PBXBuildFile; fileRef = E2E329A2526A4B4AB0F156BD60B41FDD /* CTInAppDisplayViewController.m */; };
+		F4633A4C0944A4FF4F534837E740D088 /* GDTCORLifecycle.h in Headers */ = {isa = PBXBuildFile; fileRef = C4750A50AB35D04BA2071B618556D64D /* GDTCORLifecycle.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		F49D615F346C666AA9AD80656363B6A6 /* SDAnimatedImageRep.m in Sources */ = {isa = PBXBuildFile; fileRef = 7272293863517BAB5FDB5B9C2845AB7D /* SDAnimatedImageRep.m */; };
+		F4B5E238407D1F65730E67A8864B29E4 /* SDImageAssetManager.m in Sources */ = {isa = PBXBuildFile; fileRef = 04C38889837F7597B903571D04E3C1F1 /* SDImageAssetManager.m */; };
+		F52F1554366E55BAC8341747D3804461 /* firebasecore.nanopb.h in Headers */ = {isa = PBXBuildFile; fileRef = C43211FC56B503EC2907E2913213B308 /* firebasecore.nanopb.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		F53138D0E264474CA3E7AE2415C3F6EF /* FIRCLSNotificationManager.h in Headers */ = {isa = PBXBuildFile; fileRef = FE2DDB7261A31DB7BA340EC91336F2C4 /* FIRCLSNotificationManager.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		F5D2A31C7EB1DE010771140B6E7ABAD8 /* URLEncodedFormEncoder.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0D40A84964C7D330E117AB62AC1B364D /* URLEncodedFormEncoder.swift */; };
+		F5FFC6232BE54689087DAD8017AC9995 /* FIRCLSUUID.h in Headers */ = {isa = PBXBuildFile; fileRef = 2A6A376A7509B0A6B5DC77CAA8D53E2D /* FIRCLSUUID.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		F6007B9763349D9DC3B5EE8B0E525CCF /* FBLPromise.m in Sources */ = {isa = PBXBuildFile; fileRef = 9CA69B69FEE5A8261FF7D19FA599E300 /* FBLPromise.m */; };
+		F62FEE4F8BA5A5A5BAFBBBB122A3C92D /* FIRHeartbeatInfo.h in Headers */ = {isa = PBXBuildFile; fileRef = 8BDB8E0D141837AF7D840A1F4754C676 /* FIRHeartbeatInfo.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		F63BE0585331CAA3482EF736803F8243 /* RequestInterceptor.swift in Sources */ = {isa = PBXBuildFile; fileRef = EFB1998FB8C249A939475E0E99BD5292 /* RequestInterceptor.swift */; };
+		F65A2AB959BE6A72ADB4D1C34AC72D8F /* FIRInstallationsAuthTokenResultInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = CB8AF3A314A7DAFB3F405FE6C8B54F1D /* FIRInstallationsAuthTokenResultInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		F65C51A9F0744F04D0614D63B2699CDE /* FIRAnalyticsInterop.h in Headers */ = {isa = PBXBuildFile; fileRef = 65F753EAF81D72BE5B6CDA55E06CEBBD /* FIRAnalyticsInterop.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		F663AB24F8E2E36192A3AAF687F4F902 /* FIRInstallationsStoredItem.h in Headers */ = {isa = PBXBuildFile; fileRef = 85100D6207E6207EC4F1082089488C94 /* FIRInstallationsStoredItem.h */; settings = {ATTRIBUTES = (Project, ); }; };
 		F69342FCCB3FE50916076312A0E3796A /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
-		F6D715335E17DCD4BB501D610B6F0285 /* GDTCORAssert.m in Sources */ = {isa = PBXBuildFile; fileRef = 167117637A1CEAC5956A4B4BBD1788BA /* GDTCORAssert.m */; };
-		F6EAB031EC78E19521E63ED440DC15AA /* Behavior.swift in Sources */ = {isa = PBXBuildFile; fileRef = DB43C934EE9A78BA6DBD9580720F2BA1 /* Behavior.swift */; };
-		F7541967AA9A46FD41EA54F8054786D2 /* FIRInstallationsAPIService.h in Headers */ = {isa = PBXBuildFile; fileRef = 0D783C36292BE09F38FCB5BBAA46F8F0 /* FIRInstallationsAPIService.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		F762062BC2B7077846EB57331FA07163 /* infoIcon@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = FB0EB330283F30A78CAC396576D91318 /* infoIcon@2x.png */; };
-		F7BCBD4B26D1056D1BC890793BF1B149 /* FIRAppInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 6039452C1B3B834A0E312B8EC9B3AFB1 /* FIRAppInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		F7EF67CF2CBAB3FECF6162008D290F50 /* FIRMessagingTokenFetchOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = 7C6A77E0314D89B6181E54CB5B13AB86 /* FIRMessagingTokenFetchOperation.m */; };
-		F803685507789F6484A9710B9742BA3E /* SDWebImageDownloaderConfig.h in Headers */ = {isa = PBXBuildFile; fileRef = 28B8CC5DE4D54A9154A622824F38D20D /* SDWebImageDownloaderConfig.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		F815D6FD20D46AFAB16C0F41CFBD56A1 /* CTSwizzle.h in Headers */ = {isa = PBXBuildFile; fileRef = B04999EBB95E9EE5B7D3D53CE98848F3 /* CTSwizzle.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		F81A0350AA0A0842FB0B4E9BA8E8106B /* CTInboxIconMessageCell.m in Sources */ = {isa = PBXBuildFile; fileRef = 764852E59DB4FABA95EA778158B97C7A /* CTInboxIconMessageCell.m */; };
-		F83B33FB87324F0DE7EF7A7BE8C8A5A5 /* FIRAppAssociationRegistration.h in Headers */ = {isa = PBXBuildFile; fileRef = 821D9C79E575786B0F34EAB942697691 /* FIRAppAssociationRegistration.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		F885FE0D582B20BD3803F4559BFC34F4 /* GDTCORTargets.h in Headers */ = {isa = PBXBuildFile; fileRef = CDCA9C89AA26AE3321E6E8F22D4A12A6 /* GDTCORTargets.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		F8AF116AEAD612632D1625126453B3A4 /* PagingItems.swift in Sources */ = {isa = PBXBuildFile; fileRef = C0D1D731B883544F59CD54AE4B60EF4F /* PagingItems.swift */; };
-		F8FEB60172EB9E00A51A05C14FCCD4FA /* SDWebImageOptionsProcessor.h in Headers */ = {isa = PBXBuildFile; fileRef = BB5D124F4716B0BA0EE714A1763F7E39 /* SDWebImageOptionsProcessor.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		F91E126C361FBCA230E40930B4F5BA5A /* FIRCLSNetworkResponseHandler.m in Sources */ = {isa = PBXBuildFile; fileRef = DCD2AC3E76D2728FD6C20861C6636AD8 /* FIRCLSNetworkResponseHandler.m */; };
-		F9553EB968D31908D5759AB70BB6DC07 /* FIRAnalyticsInteropListener.h in Headers */ = {isa = PBXBuildFile; fileRef = 9CC040A11E58795C21FC469190365F42 /* FIRAnalyticsInteropListener.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		F96FB4B517E44123BD758EA632238F8B /* CTInboxSimpleMessageCell.h in Headers */ = {isa = PBXBuildFile; fileRef = 0902BF23B634488355BAD4C75C816E89 /* CTInboxSimpleMessageCell.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		F979A2BBCD82750BFA1C899D2E0A2DC4 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
-		F9C5DFCA19707E13EDE79A5878A6DB89 /* PagingMenuItemSource.swift in Sources */ = {isa = PBXBuildFile; fileRef = 7430F4537B2DD427CE94C8BB5016491C /* PagingMenuItemSource.swift */; };
-		F9FA834F51420BC2CBE8A6BFAF204BAD /* FIRMessagingInterop.h in Headers */ = {isa = PBXBuildFile; fileRef = 838417595BF002594868A1A0F6583C4D /* FIRMessagingInterop.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		FA9CBE2584E738C8CB7AD7558DFDD455 /* CTAlertViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 59B080D266EFC817F38443E832CB86EC /* CTAlertViewController.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		FAC2C4C009BA99FBAD129DC24B4CDC4C /* FIRCLSNotificationManager.m in Sources */ = {isa = PBXBuildFile; fileRef = 14ADB4B25F4A5731F0262BD0933E1882 /* FIRCLSNotificationManager.m */; };
-		FB29B592DD7D52476A1E0558382D7317 /* SDImageTransformer.h in Headers */ = {isa = PBXBuildFile; fileRef = 4A72D812EE8D8A7F630FE26A9353CAE3 /* SDImageTransformer.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		FB443D851AF1305E9A0BF2898095C098 /* PagerTabStripViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = 7282E5A21A0C0FCC8335A4D2FB5E9761 /* PagerTabStripViewController.swift */; };
-		FB6EF0176698756E5F4D046316D258A2 /* FIRCLSUtility.h in Headers */ = {isa = PBXBuildFile; fileRef = 20AEE4905814B8611ADF06F81DD8BD46 /* FIRCLSUtility.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		FC87FA8C1A3A0A492C51A3AC9EAE1D4F /* CTInboxUtils.h in Headers */ = {isa = PBXBuildFile; fileRef = 17687AEDC465DBF47DF0A47AB1E767D7 /* CTInboxUtils.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		FD0ED1B048738D0B3A69C1EB011A3122 /* FIRStackFrame.m in Sources */ = {isa = PBXBuildFile; fileRef = 3F51FC959B5A36182AABA764E79C8FF8 /* FIRStackFrame.m */; };
-		FD1104B7CCAD85AA4331560F5E7608E5 /* FirebaseCoreInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = FCAC8302F5BFFE3253D31D9CB49EE5E7 /* FirebaseCoreInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		FD311BAD705A533070517A743C13762A /* ic_pause@1x.png in Resources */ = {isa = PBXBuildFile; fileRef = 9CE7D8469085D78E3DA0B99485AA8A92 /* ic_pause@1x.png */; };
-		FD99CB08A9E0BF46AFCB925578D5F212 /* SDImageCacheConfig.m in Sources */ = {isa = PBXBuildFile; fileRef = C28DCE3FE9EEDC182E6C509BFF86581B /* SDImageCacheConfig.m */; };
-		FDA0C97CE84C04701282F508DF687491 /* FIRCLSdSYM.m in Sources */ = {isa = PBXBuildFile; fileRef = 999E0B6E41E8A7FF7633B8E2D5DE2E8F /* FIRCLSdSYM.m */; };
-		FDA2F8008024EC6AA9670C6F67A887D2 /* FIRAppInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = DB16176E51887E85DFDFD01A43852722 /* FIRAppInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		FDEE2848CAFDCDB08EEAB3A5D119BCCD /* CTNotificationButton.m in Sources */ = {isa = PBXBuildFile; fileRef = 11520B595EDE76D6F303364393B12A8F /* CTNotificationButton.m */; };
-		FDFB25B6CA1DCB7364E7D761A8115758 /* FIRCLSConstants.h in Headers */ = {isa = PBXBuildFile; fileRef = C5029FFE97B99DDB841E6AE4B16BA8CA /* FIRCLSConstants.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		F6D7ECBB300D42565D0694EF4BF31612 /* FIRDependency.h in Headers */ = {isa = PBXBuildFile; fileRef = 51D3A193B50EBB9C1F88A6DED0E97701 /* FIRDependency.h */; settings = {ATTRIBUTES = (Private, ); }; };
+		F6EAB031EC78E19521E63ED440DC15AA /* Behavior.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4BFC936AFB0D862856F1A8DB0B105BF2 /* Behavior.swift */; };
+		F71A1522C2ACDFE83543A9CAB87E662C /* SDMemoryCache.m in Sources */ = {isa = PBXBuildFile; fileRef = 90616E6C039FFEBA03FD844B0AC5C7A3 /* SDMemoryCache.m */; };
+		F725CDB504BE6DF9C874B525C9C05CE7 /* SDWebImageCompat.m in Sources */ = {isa = PBXBuildFile; fileRef = A5E00AE665B423B73FAA5905044BBFB9 /* SDWebImageCompat.m */; };
+		F7651F70F675928C86906739FA030B44 /* GDTCOREvent_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 0771BF78DC0FB1E3985133A9EFD34483 /* GDTCOREvent_Private.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		F815D6FD20D46AFAB16C0F41CFBD56A1 /* CTSwizzle.h in Headers */ = {isa = PBXBuildFile; fileRef = A81367045340DA860EDA13FC91901944 /* CTSwizzle.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		F81A0350AA0A0842FB0B4E9BA8E8106B /* CTInboxIconMessageCell.m in Sources */ = {isa = PBXBuildFile; fileRef = 06D7DC35ED70D4E68969A443160BBAFE /* CTInboxIconMessageCell.m */; };
+		F8AF116AEAD612632D1625126453B3A4 /* PagingItems.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8ED53CF61E6914C0DF98C2E849B6745 /* PagingItems.swift */; };
+		F8C7591ABBA310BE65615D4A15CF8CBE /* successIconLight.png in Resources */ = {isa = PBXBuildFile; fileRef = B70D7C55A7F1473AFCB7F80BFE6962C1 /* successIconLight.png */; };
+		F93E9D3E4B16D5DA0AB158D5C9542F1C /* FIRCLSAsyncOperation.h in Headers */ = {isa = PBXBuildFile; fileRef = FA8D06BBBDBD7C5E877B50F5BEF4E30D /* FIRCLSAsyncOperation.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		F96FB4B517E44123BD758EA632238F8B /* CTInboxSimpleMessageCell.h in Headers */ = {isa = PBXBuildFile; fileRef = A8832C447C669CD1098202D9A6BA33A3 /* CTInboxSimpleMessageCell.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		F97A24030B5E505B4FE57C2AE516BAF6 /* FIRCLSHost.m in Sources */ = {isa = PBXBuildFile; fileRef = A0335F91A337CF3C12C7BFE700E21739 /* FIRCLSHost.m */; };
+		F988237850739066DDAE16D9FCA32CCF /* FIRMessagingBackupExcludedPlist.m in Sources */ = {isa = PBXBuildFile; fileRef = EEED50A61EA1E260231F26D8190EEACB /* FIRMessagingBackupExcludedPlist.m */; };
+		F9C5DFCA19707E13EDE79A5878A6DB89 /* PagingMenuItemSource.swift in Sources */ = {isa = PBXBuildFile; fileRef = 03A0F8F9EE74AC155514C0AF423D3D7A /* PagingMenuItemSource.swift */; };
+		F9D1423757DB6EF350AB9F555FA091D1 /* GULSceneDelegateSwizzler.h in Headers */ = {isa = PBXBuildFile; fileRef = A8325797F0FC35992CD9A1FA6D5711F2 /* GULSceneDelegateSwizzler.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		FA006B42B99DAF8263341881FD510FF9 /* PhysicsPanHandler.swift in Sources */ = {isa = PBXBuildFile; fileRef = A052EAF5432D2DD07EB9F8B03EDFC4E1 /* PhysicsPanHandler.swift */; };
+		FA6980DC3506147F14529FEB3C050024 /* FIRCLSNotificationManager.m in Sources */ = {isa = PBXBuildFile; fileRef = A24DE840E4E7EFB4A724355D82884192 /* FIRCLSNotificationManager.m */; };
+		FA95BE1E3ED701F7C6152BBD7837D137 /* GULKeychainStorage.m in Sources */ = {isa = PBXBuildFile; fileRef = 0E1FECFE7C02ADCB3C2FD177E6AF7D3A /* GULKeychainStorage.m */; };
+		FA9CBE2584E738C8CB7AD7558DFDD455 /* CTAlertViewController.h in Headers */ = {isa = PBXBuildFile; fileRef = 261A4DE451CEF97A4BDB37DA1F89B255 /* CTAlertViewController.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		FAA6B878B4A53B31274958A36CCFD059 /* GULLoggerLevel.h in Headers */ = {isa = PBXBuildFile; fileRef = 7694C95B8F3082D324819B612E5E9CC1 /* GULLoggerLevel.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		FAB0E615E3CF79AA11132BE81832EE86 /* GDTCORStorageProtocol.h in Headers */ = {isa = PBXBuildFile; fileRef = 3C40F43FAB313E440EEBCD7923F50347 /* GDTCORStorageProtocol.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		FAE93C419CCC266CE8200AF16417101F /* GULReachabilityChecker.h in Headers */ = {isa = PBXBuildFile; fileRef = 85F201C68A064F85DABD45F98D593C2D /* GULReachabilityChecker.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		FAEF7F87BC0E970D7353E0B10DD51491 /* FIRConfiguration.m in Sources */ = {isa = PBXBuildFile; fileRef = 058429B14423E80737AF114E4233FCBA /* FIRConfiguration.m */; };
+		FB3FDC603034EC2F08DFF2E9FB8EEA12 /* FIRCLSUtility.h in Headers */ = {isa = PBXBuildFile; fileRef = E8E2B805A7F01EA5375A44D363B043B4 /* FIRCLSUtility.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		FB443D851AF1305E9A0BF2898095C098 /* PagerTabStripViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = 85C0362C259A9F61E4DACA0C9E18A894 /* PagerTabStripViewController.swift */; };
+		FB982706407B9C8A43FF4777F292993C /* FIRCLSSignal.c in Sources */ = {isa = PBXBuildFile; fileRef = 74CD825D1618E30060A1808C80796172 /* FIRCLSSignal.c */; };
+		FC87FA8C1A3A0A492C51A3AC9EAE1D4F /* CTInboxUtils.h in Headers */ = {isa = PBXBuildFile; fileRef = 815BA03830C480C163DE3C2BB3F1E080 /* CTInboxUtils.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		FCE9F2AF87CA4E500ED009C0A2235D06 /* FBLPromise+Then.m in Sources */ = {isa = PBXBuildFile; fileRef = 83C84F5C915CAE6DC703E963D2DECB8D /* FBLPromise+Then.m */; };
+		FD311BAD705A533070517A743C13762A /* ic_pause@1x.png in Resources */ = {isa = PBXBuildFile; fileRef = E8AD5AA962083C011214D5AECB801E4F /* ic_pause@1x.png */; };
+		FDDAF918B0EF306F7C1316928A0E68CE /* FIRCLSUUID.m in Sources */ = {isa = PBXBuildFile; fileRef = 077B6BDFCC85619DC4C84482F3AB279C /* FIRCLSUUID.m */; };
+		FDEE2848CAFDCDB08EEAB3A5D119BCCD /* CTNotificationButton.m in Sources */ = {isa = PBXBuildFile; fileRef = A7F9BC8A9E161DB95FD4668F10FEDE0B /* CTNotificationButton.m */; };
+		FE15EACE9FF300871A5358AB91DCBFAE /* FIRLogger.h in Headers */ = {isa = PBXBuildFile; fileRef = 8058CC9855C0B30193537921040F7BB5 /* FIRLogger.h */; settings = {ATTRIBUTES = (Private, ); }; };
+		FE21FB6FF6AC27E40B99997DBD13C3FB /* FBLPromise+Do.h in Copy . Public Headers */ = {isa = PBXBuildFile; fileRef = B57A24CE4FB67F9F1242DF33E05A408B /* FBLPromise+Do.h */; };
 		FE4B0AE1FACDF76F1D812A85D55003AC /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */; };
-		FE591EFA832A3357DCCEB7F98773947C /* SDWebImageCacheKeyFilter.m in Sources */ = {isa = PBXBuildFile; fileRef = 10BA31B1F174458C02637F6859D1C096 /* SDWebImageCacheKeyFilter.m */; };
-		FE7C28FEB6C2E7ECF1159C799B2A476A /* FBLPromise+Delay.h in Headers */ = {isa = PBXBuildFile; fileRef = D2A20A9D355F7889A1BD68F9C61803B9 /* FBLPromise+Delay.h */; };
-		FE87692F538E1E14ED317F866EDF5DED /* GULAppEnvironmentUtil.h in Headers */ = {isa = PBXBuildFile; fileRef = D9C5928B5C09A69C4709184225A5A344 /* GULAppEnvironmentUtil.h */; settings = {ATTRIBUTES = (Public, ); }; };
-		FEA301A7635A727AB8F1F621FFAA1DAA /* PagingView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1872AD9A8FFD4F9E23AEBADCC9BEE45B /* PagingView.swift */; };
-		FECB6A39FF61BB2D62AF4FD0D46DB81E /* FIRMessagingKeychain.m in Sources */ = {isa = PBXBuildFile; fileRef = 612C46F450B1E0AE94D55C97AB701096 /* FIRMessagingKeychain.m */; };
-		FED3ECDD574EF3067204CF0197028FD4 /* FIRCLSMachOSlice.h in Headers */ = {isa = PBXBuildFile; fileRef = FD552E64F5206F360ADD25AD40A054A0 /* FIRCLSMachOSlice.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		FEDBAD32E2EDA85AD6E362B82892A74A /* Alamofire.swift in Sources */ = {isa = PBXBuildFile; fileRef = AB4A6D4A42E512F4B682FEA6ABD2D5FD /* Alamofire.swift */; };
-		FF0D863E26C5B063BAAF3D0F2B0DCDEC /* CollectionView.swift in Sources */ = {isa = PBXBuildFile; fileRef = FA3F4B853C03DE84BBCE447C0A8C9D67 /* CollectionView.swift */; };
-		FF0EE6BD319218FD65EC881C28AAF601 /* GULAppDelegateSwizzler.m in Sources */ = {isa = PBXBuildFile; fileRef = 38B7AFCCEB7CDCBF940C1972B39DC59C /* GULAppDelegateSwizzler.m */; };
-		FF1234637A3EE65F45A5FDEB20451825 /* FIRCLSRecordHost.h in Headers */ = {isa = PBXBuildFile; fileRef = 5428A9561EC6D5F3CDC3FDC8AAD0609F /* FIRCLSRecordHost.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		FF3025834F9C68E0C2C6C01BD0D9156F /* FIRCLSLogger.m in Sources */ = {isa = PBXBuildFile; fileRef = 763E6569A86EDE0CB24795D23ADEB525 /* FIRCLSLogger.m */; };
-		FF40BE4635D258069BBA82B0659C82D5 /* FIRCLSByteUtility.h in Headers */ = {isa = PBXBuildFile; fileRef = 179A4216EEBFC9922ACA5D71FAA8972C /* FIRCLSByteUtility.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		FFC7AB997C236462FBE7BC10B9177BDB /* FIRCLSNetworkOperation.m in Sources */ = {isa = PBXBuildFile; fileRef = F1328AD55D1F788D3885252AAEB74E2D /* FIRCLSNetworkOperation.m */; };
-		FFCD4A833788C248EDA01C132B4244A3 /* CTValidationResult.h in Headers */ = {isa = PBXBuildFile; fileRef = F5A8D889728931C03B5D2E2A2B6301F1 /* CTValidationResult.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		FFCFB10DCB5300D16F653BE776CC3759 /* FIRCLSException.h in Headers */ = {isa = PBXBuildFile; fileRef = 883CF636F15D3F18676D1B08DF4DFDB5 /* FIRCLSException.h */; settings = {ATTRIBUTES = (Project, ); }; };
-		FFF79C59323698C1431EA0AB3729EA90 /* FirebaseCoreInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = 0AD0B1ABAC199AE18A27DA429A649668 /* FirebaseCoreInternal.h */; settings = {ATTRIBUTES = (Private, ); }; };
+		FE5D600B182DC4D6AAA64F52664DAD38 /* warningIcon.png in Resources */ = {isa = PBXBuildFile; fileRef = F456774B3F44E37DD150156D7FB38339 /* warningIcon.png */; };
+		FE907B92552B0A8B637D613C15C29936 /* SDWebImage-dummy.m in Sources */ = {isa = PBXBuildFile; fileRef = A8C010169E95F1031ACA109CA8670704 /* SDWebImage-dummy.m */; };
+		FEA301A7635A727AB8F1F621FFAA1DAA /* PagingView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 9A6325839AB31B1E1E20294CBD91E4C9 /* PagingView.swift */; };
+		FEDBAD32E2EDA85AD6E362B82892A74A /* Alamofire.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4B9E0A6EE29976A26DB7FAF14A2F273C /* Alamofire.swift */; };
+		FF0D863E26C5B063BAAF3D0F2B0DCDEC /* CollectionView.swift in Sources */ = {isa = PBXBuildFile; fileRef = DFE9F678DBB5B6206CC9331EF03658F7 /* CollectionView.swift */; };
+		FF2DD66337B097AEF20115FED7B3139B /* FirebaseInstallationsInternal.h in Headers */ = {isa = PBXBuildFile; fileRef = C6DD4783B189B50343A77AB941BB4BB6 /* FirebaseInstallationsInternal.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		FF41DAB9DD3FEC46A07489CB8348E7C7 /* FIRCLSNetworkResponseHandler.h in Headers */ = {isa = PBXBuildFile; fileRef = B5AE1BE59422B53142C1F2E0214CD610 /* FIRCLSNetworkResponseHandler.h */; settings = {ATTRIBUTES = (Project, ); }; };
+		FF8FE62BEC8D94965CABA612808C7B2F /* SDImageLoader.m in Sources */ = {isa = PBXBuildFile; fileRef = 1A1DDD2C26E8DAD47DD360ADC4AF3005 /* SDImageLoader.m */; };
+		FFCD4A833788C248EDA01C132B4244A3 /* CTValidationResult.h in Headers */ = {isa = PBXBuildFile; fileRef = 546290BA2BB9D23E3C445A4285E77C7C /* CTValidationResult.h */; settings = {ATTRIBUTES = (Project, ); }; };
 /* End PBXBuildFile section */
 
 /* Begin PBXContainerItemProxy section */
-		038CB66351D2934412055C1F6ED279CC /* PBXContainerItemProxy */ = {
+		046FF734C71B32ADCE631F743BB0A2EF /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 8D7F5D5DD528D21A72DC87ADA5B12E2D;
-			remoteInfo = GoogleUtilities;
+			remoteGlobalIDString = 5C0371EE948D0357B8EE0E34ABB44BF0;
+			remoteInfo = GoogleDataTransport;
 		};
-		084B771E5D78A210C7C36FA65915F542 /* PBXContainerItemProxy */ = {
+		0C0AC5084675314F8E3324AC3E435659 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
 			remoteGlobalIDString = D2B5E7DCCBBFB32341D857D01211A1A3;
 			remoteInfo = nanopb;
 		};
-		091C4BE2E3E938C7308935569D95808F /* PBXContainerItemProxy */ = {
+		10A8DB5FF897D32999DE49DD15C9B3CA /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 2BBF7206D7FAC92C82A042A99C4A98F8;
-			remoteInfo = PromisesObjC;
+			remoteGlobalIDString = 8D7F5D5DD528D21A72DC87ADA5B12E2D;
+			remoteInfo = GoogleUtilities;
 		};
-		09FB5E9CDDBD97EA51CAFED2B530C9D4 /* PBXContainerItemProxy */ = {
+		10C12AD3EFE66353AA5CD94B10CF4137 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 5C0371EE948D0357B8EE0E34ABB44BF0;
-			remoteInfo = GoogleDataTransport;
+			remoteGlobalIDString = DC5C3A7662FFA04D04D29F4657D032CE;
+			remoteInfo = XLPagerTabStrip;
 		};
-		157CF09C3426820ADFC9FDADEDCED96C /* PBXContainerItemProxy */ = {
+		13C8E8533FCE3221277F46CD5A28BEEC /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 620E05868772C10B4920DC7E324F2C87;
-			remoteInfo = FirebaseCoreDiagnostics;
+			remoteGlobalIDString = 8D7F5D5DD528D21A72DC87ADA5B12E2D;
+			remoteInfo = GoogleUtilities;
 		};
-		1B86668778D994A95C800873D723DFB2 /* PBXContainerItemProxy */ = {
+		14E718B69EE23166B4F4EC453FD0FA21 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 5C0371EE948D0357B8EE0E34ABB44BF0;
-			remoteInfo = GoogleDataTransport;
+			remoteGlobalIDString = 18184DEEDE7075D999122505659B55E9;
+			remoteInfo = Parchment;
 		};
-		23633E927E0CA637A001452D0E3776B1 /* PBXContainerItemProxy */ = {
+		1C9998DBFE428326A44A055ED7607FC5 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
 			remoteGlobalIDString = 87803597EB3F20FC46472B85392EC4FD;
 			remoteInfo = FirebaseInstallations;
 		};
-		24DCDAE70FDD9548089FC2C025E47791 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
-			proxyType = 1;
-			remoteGlobalIDString = 4874E7E655CEB4C01E4572AD903AEA21;
-			remoteInfo = FloatingPanel;
-		};
-		289F348D5B1C78F40C9B8492B1B0C863 /* PBXContainerItemProxy */ = {
+		1EB1C3378C1760FBD5FB5FAF2CA31AB1 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 8D7F5D5DD528D21A72DC87ADA5B12E2D;
-			remoteInfo = GoogleUtilities;
+			remoteGlobalIDString = 3847153A6E5EEFB86565BA840768F429;
+			remoteInfo = SDWebImage;
 		};
-		31D02B2BCD2658A39B56EA9C77276047 /* PBXContainerItemProxy */ = {
+		20FC3A8ED5D467A46DCDF348459A80FA /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 8D7F5D5DD528D21A72DC87ADA5B12E2D;
-			remoteInfo = GoogleUtilities;
+			remoteGlobalIDString = E12536816B6C31D7AF55D161F6F97141;
+			remoteInfo = "CleverTap-iOS-SDK";
 		};
-		36802CA8C54A6B628B8CADF67A911C11 /* PBXContainerItemProxy */ = {
+		237F5C3D57DD205E020E56A23BFA9693 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = EAAA1AD3A8A1B59AB91319EE40752C6D;
-			remoteInfo = Alamofire;
+			remoteGlobalIDString = 8AABDD06F1327BC62BE3ECBBB02AF715;
+			remoteInfo = AlamofireNetworkActivityLogger;
 		};
-		38AAC8D0E7BBE1698E04D980666FAE54 /* PBXContainerItemProxy */ = {
+		25305A17796AE795CDB08B2EDBE0A0C0 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = C49E7A4D59E5C8BE8DE9FB1EFB150185;
-			remoteInfo = FirebaseAnalytics;
+			remoteGlobalIDString = 5C0371EE948D0357B8EE0E34ABB44BF0;
+			remoteInfo = GoogleDataTransport;
 		};
-		38CBBDC6CD272A9B1DD4A66DF3A9BABC /* PBXContainerItemProxy */ = {
+		2D35D3D10019D90E2D5566D478548F6C /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 8D7F5D5DD528D21A72DC87ADA5B12E2D;
-			remoteInfo = GoogleUtilities;
+			remoteGlobalIDString = D2B5E7DCCBBFB32341D857D01211A1A3;
+			remoteInfo = nanopb;
 		};
-		3D3DB4BD6AFFC147B1A8A9DB1071898F /* PBXContainerItemProxy */ = {
+		2DE0C1E80C1CD70B7F60933840D677DC /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 87803597EB3F20FC46472B85392EC4FD;
-			remoteInfo = FirebaseInstallations;
+			remoteGlobalIDString = DAB613A18652334F6BFC5F27BADF515D;
+			remoteInfo = SwiftMessages;
 		};
-		3E5D912686A249B56F81ADEC8C6B71D3 /* PBXContainerItemProxy */ = {
+		2E7C065F63D379A78A6B5D81D4F07368 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 526C4398D095B3704EB933DADBC30093;
-			remoteInfo = FirebaseCrashlytics;
+			remoteGlobalIDString = 2BBF7206D7FAC92C82A042A99C4A98F8;
+			remoteInfo = PromisesObjC;
 		};
-		47891EF314E43803A6E33002288111FB /* PBXContainerItemProxy */ = {
+		2EDA56FBBC0261A3C002111B695676FC /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = D2B5E7DCCBBFB32341D857D01211A1A3;
-			remoteInfo = nanopb;
+			remoteGlobalIDString = C49E7A4D59E5C8BE8DE9FB1EFB150185;
+			remoteInfo = FirebaseAnalytics;
 		};
-		48DDCB3537B580D64FF8FEAE59E06D9C /* PBXContainerItemProxy */ = {
+		3327BA1F642D0B3C69309E11995B56AF /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 5895B432FE4D2F6826C8FF25A09DB6D2;
-			remoteInfo = FirebaseMessaging;
+			remoteGlobalIDString = EBF90A3A56D4C5830C212D000AB67BC1;
+			remoteInfo = "XLPagerTabStrip-XLPagerTabStrip";
 		};
-		4C3A6683C56F6439D81D2C4B16F066AE /* PBXContainerItemProxy */ = {
+		354CD7D5FA819F306E0E07D767F92D5C /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = E12536816B6C31D7AF55D161F6F97141;
-			remoteInfo = "CleverTap-iOS-SDK";
+			remoteGlobalIDString = 620E05868772C10B4920DC7E324F2C87;
+			remoteInfo = FirebaseCoreDiagnostics;
 		};
-		520C487CFDFE7F5913FDC44327E1D29D /* PBXContainerItemProxy */ = {
+		36B29FD5376065789023141A83AB1A1E /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
 			remoteGlobalIDString = D1A7AF186BE136DE56FD5699070589B8;
 			remoteInfo = "youtube-ios-player-helper";
 		};
-		5B622632DC01864E1FD58F6125138190 /* PBXContainerItemProxy */ = {
+		3C8358482EE4425ED1522A67F05DC74E /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 4402AFF83DBDC4DD07E198685FDC2DF2;
-			remoteInfo = FirebaseCore;
+			remoteGlobalIDString = 5C0371EE948D0357B8EE0E34ABB44BF0;
+			remoteInfo = GoogleDataTransport;
 		};
-		5BDB19357B03216ACA6CD383EB122602 /* PBXContainerItemProxy */ = {
+		41273408111A158F4E00A215A8772831 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 18184DEEDE7075D999122505659B55E9;
-			remoteInfo = Parchment;
+			remoteGlobalIDString = 87803597EB3F20FC46472B85392EC4FD;
+			remoteInfo = FirebaseInstallations;
 		};
-		5CB26AA742C09130D61A363A4CAEE5B4 /* PBXContainerItemProxy */ = {
+		413AD3894A29DA3F04E910D388668761 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 0EFD825E08D2029FAA330EBD40974B79;
-			remoteInfo = ScrollingFollowView;
+			remoteGlobalIDString = D2B5E7DCCBBFB32341D857D01211A1A3;
+			remoteInfo = nanopb;
 		};
-		5F5AAADA9688EF90CBBA5819F4DC678C /* PBXContainerItemProxy */ = {
+		42E302AD5CB5C2386629C0D6BDE3089B /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = D2B5E7DCCBBFB32341D857D01211A1A3;
-			remoteInfo = nanopb;
+			remoteGlobalIDString = 2BBF7206D7FAC92C82A042A99C4A98F8;
+			remoteInfo = PromisesObjC;
 		};
-		63AEDC7599A89DD28744374F7DA764DF /* PBXContainerItemProxy */ = {
+		4794A06DA68A8779256B9D42CC267B64 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
 			remoteGlobalIDString = 8D7F5D5DD528D21A72DC87ADA5B12E2D;
 			remoteInfo = GoogleUtilities;
 		};
-		692F1B19EDA54CDE018B2EA7D7D93581 /* PBXContainerItemProxy */ = {
+		4B2F71CFA973D63A202E71E02EA49DCB /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
 			remoteGlobalIDString = 2BBF7206D7FAC92C82A042A99C4A98F8;
 			remoteInfo = PromisesObjC;
 		};
-		6BCA576851EDA12236FB02BE645CF154 /* PBXContainerItemProxy */ = {
+		51F7789116F9453C74E737690B24A92E /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
+			proxyType = 1;
+			remoteGlobalIDString = 0EFD825E08D2029FAA330EBD40974B79;
+			remoteInfo = ScrollingFollowView;
+		};
+		51FEE80800F69F61BD7D18A4CDC84DCC /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
 			remoteGlobalIDString = D2B5E7DCCBBFB32341D857D01211A1A3;
 			remoteInfo = nanopb;
 		};
-		6D08FC6BDD28443282CAC682C12E5BD4 /* PBXContainerItemProxy */ = {
+		562E938666E2BD235BA7573AEA98F72B /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 877ECF9B28CA7B7BAA3F23ED12C0E1AB;
-			remoteInfo = UserExperior;
+			remoteGlobalIDString = 5C0371EE948D0357B8EE0E34ABB44BF0;
+			remoteInfo = GoogleDataTransport;
 		};
-		739ACC3182BAF7B907F2CB2B8836F25C /* PBXContainerItemProxy */ = {
+		57E896FF0160340D41AE50FCE0F0905D /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 3847153A6E5EEFB86565BA840768F429;
-			remoteInfo = SDWebImage;
+			remoteGlobalIDString = D2B5E7DCCBBFB32341D857D01211A1A3;
+			remoteInfo = nanopb;
 		};
-		76911EEED6F6FEDB1180DF1BBAE98C81 /* PBXContainerItemProxy */ = {
+		60EBEF0A917E60D710A4F4899A2F5AD5 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = EAAA1AD3A8A1B59AB91319EE40752C6D;
-			remoteInfo = Alamofire;
+			remoteGlobalIDString = 8D7F5D5DD528D21A72DC87ADA5B12E2D;
+			remoteInfo = GoogleUtilities;
 		};
-		7A559DE6D3EA7356FC20E26256DC1FB2 /* PBXContainerItemProxy */ = {
+		64E616077108848B9F6FA778801E93DE /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 3847153A6E5EEFB86565BA840768F429;
-			remoteInfo = SDWebImage;
+			remoteGlobalIDString = 526C4398D095B3704EB933DADBC30093;
+			remoteInfo = FirebaseCrashlytics;
 		};
-		7F0A6591D8732C3B7299C2C0CA4E85AA /* PBXContainerItemProxy */ = {
+		6C9BC1141BBD16D8DF452A702D6F5AC4 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
 			remoteGlobalIDString = B53D977A951AFC38B21751B706C1DF83;
 			remoteInfo = GoogleAppMeasurement;
 		};
-		8048DCA04E614AA076AF9FAE64522770 /* PBXContainerItemProxy */ = {
+		6CA2712AB8F00E413B598FF708F35442 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 4402AFF83DBDC4DD07E198685FDC2DF2;
-			remoteInfo = FirebaseCore;
+			remoteGlobalIDString = D2B5E7DCCBBFB32341D857D01211A1A3;
+			remoteInfo = nanopb;
 		};
-		822EA6D5D4C942615163CF2917872D54 /* PBXContainerItemProxy */ = {
+		6D60F7C29FB3508397225C587BF623E2 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = D2B5E7DCCBBFB32341D857D01211A1A3;
-			remoteInfo = nanopb;
+			remoteGlobalIDString = 8D7F5D5DD528D21A72DC87ADA5B12E2D;
+			remoteInfo = GoogleUtilities;
 		};
-		827DE9A390A2F7555F7A5953B09A64FD /* PBXContainerItemProxy */ = {
+		6D84F159CBDE5924F87DEBCEA5671D6A /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 2BBF7206D7FAC92C82A042A99C4A98F8;
-			remoteInfo = PromisesObjC;
+			remoteGlobalIDString = EAAA1AD3A8A1B59AB91319EE40752C6D;
+			remoteInfo = Alamofire;
 		};
-		8610ED18FCFDABD93E9D074926A1EA60 /* PBXContainerItemProxy */ = {
+		71129E8B981E480952F2DDBD15F4E6B3 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 93789445511E3FEAB3D09A6F552EEE2D;
-			remoteInfo = "SwiftMessages-SwiftMessages";
+			remoteGlobalIDString = 8D7F5D5DD528D21A72DC87ADA5B12E2D;
+			remoteInfo = GoogleUtilities;
 		};
-		8DD37469C0DD560E5C3052298EF31F67 /* PBXContainerItemProxy */ = {
+		7789CD96376836505A9C440073BEEBF5 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = C49E7A4D59E5C8BE8DE9FB1EFB150185;
-			remoteInfo = FirebaseAnalytics;
+			remoteGlobalIDString = 8D7F5D5DD528D21A72DC87ADA5B12E2D;
+			remoteInfo = GoogleUtilities;
 		};
-		9240E29FED9D284CE6B40B482D459BAE /* PBXContainerItemProxy */ = {
+		82514D8EF05243CAB7A2A66B38B13430 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 87803597EB3F20FC46472B85392EC4FD;
-			remoteInfo = FirebaseInstallations;
+			remoteGlobalIDString = 4402AFF83DBDC4DD07E198685FDC2DF2;
+			remoteInfo = FirebaseCore;
 		};
-		92C433FF9EE4E2EACDE941204372CD9B /* PBXContainerItemProxy */ = {
+		858033529BED0274C305C9FE3CCD4612 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 8D7F5D5DD528D21A72DC87ADA5B12E2D;
-			remoteInfo = GoogleUtilities;
+			remoteGlobalIDString = 87803597EB3F20FC46472B85392EC4FD;
+			remoteInfo = FirebaseInstallations;
 		};
-		949B56A47C4BDB759BB3BA9765230B24 /* PBXContainerItemProxy */ = {
+		87A47ED529661307BDE3985F0C2E06A5 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 4402AFF83DBDC4DD07E198685FDC2DF2;
-			remoteInfo = FirebaseCore;
+			remoteGlobalIDString = 3BFA50DA07196AD4DB6512C559850F45;
+			remoteInfo = OTPFieldView;
 		};
-		9C8B959CAAC7BB303ABF4D651BF07A64 /* PBXContainerItemProxy */ = {
+		8BA675A17BBDDF7100F523A7045F361A /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 4402AFF83DBDC4DD07E198685FDC2DF2;
-			remoteInfo = FirebaseCore;
+			remoteGlobalIDString = EAAA1AD3A8A1B59AB91319EE40752C6D;
+			remoteInfo = Alamofire;
 		};
-		9F764C61FE44B7F3AD208B287B46C71D /* PBXContainerItemProxy */ = {
+		90119BAF48BE8E427A7D7CB2FAA3AF6C /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 2BBF7206D7FAC92C82A042A99C4A98F8;
-			remoteInfo = PromisesObjC;
+			remoteGlobalIDString = B490E7485944099E16C9CBD79119D1D4;
+			remoteInfo = IQKeyboardManagerSwift;
 		};
-		A0EED37AE127DA91A91053CED8465C5D /* PBXContainerItemProxy */ = {
+		977D7EF1EDEC156F44D132A4DB0C978F /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 8D7F5D5DD528D21A72DC87ADA5B12E2D;
-			remoteInfo = GoogleUtilities;
+			remoteGlobalIDString = B53D977A951AFC38B21751B706C1DF83;
+			remoteInfo = GoogleAppMeasurement;
 		};
-		A551B3BA5F3B69401CCA5A26D9D2D208 /* PBXContainerItemProxy */ = {
+		980ECABA7CD56CB1117C908C2E7AB7D6 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 5895B432FE4D2F6826C8FF25A09DB6D2;
-			remoteInfo = FirebaseMessaging;
+			remoteGlobalIDString = 072CEA044D2EF26F03496D5996BBF59F;
+			remoteInfo = Firebase;
 		};
-		AA598F447EDE9F5291E566D10BBC7595 /* PBXContainerItemProxy */ = {
+		9AAEF636649E2BC4CE72DF1EEAC0406F /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = EBF90A3A56D4C5830C212D000AB67BC1;
-			remoteInfo = "XLPagerTabStrip-XLPagerTabStrip";
+			remoteGlobalIDString = 2BBF7206D7FAC92C82A042A99C4A98F8;
+			remoteInfo = PromisesObjC;
 		};
-		AF06E61ACA4804EF3F1C08CD5CCE71E8 /* PBXContainerItemProxy */ = {
+		9B94A5FA7F98C2CF67AFB7EE577E9877 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 4402AFF83DBDC4DD07E198685FDC2DF2;
-			remoteInfo = FirebaseCore;
+			remoteGlobalIDString = 8D7F5D5DD528D21A72DC87ADA5B12E2D;
+			remoteInfo = GoogleUtilities;
 		};
-		B8188E9BAA21E6E12CDFB5B1049CE62A /* PBXContainerItemProxy */ = {
+		9DA898905641DE773FB4EB7D40A04C20 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 5C0371EE948D0357B8EE0E34ABB44BF0;
-			remoteInfo = GoogleDataTransport;
+			remoteGlobalIDString = 52B60EC2A583F24ACBB69C113F5488B9;
+			remoteInfo = SwiftLint;
 		};
-		BBE0F5EB3DE06B070B0AAE98251622D2 /* PBXContainerItemProxy */ = {
+		9E2FCAA85117BB5CE12A81DF0DFC3954 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = D2B5E7DCCBBFB32341D857D01211A1A3;
-			remoteInfo = nanopb;
+			remoteGlobalIDString = 4402AFF83DBDC4DD07E198685FDC2DF2;
+			remoteInfo = FirebaseCore;
 		};
-		BD219F34F21322F2596EB1CC88E599AC /* PBXContainerItemProxy */ = {
+		A3D55FAE03B2B0C55AD2FEFE37FB5862 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 5C0371EE948D0357B8EE0E34ABB44BF0;
-			remoteInfo = GoogleDataTransport;
+			remoteGlobalIDString = 87803597EB3F20FC46472B85392EC4FD;
+			remoteInfo = FirebaseInstallations;
 		};
-		BD42131C0F686B68CEA55C4725FA6F0B /* PBXContainerItemProxy */ = {
+		A76F428DEB1ABC3F161E9618C1A0982E /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 526C4398D095B3704EB933DADBC30093;
-			remoteInfo = FirebaseCrashlytics;
+			remoteGlobalIDString = 877ECF9B28CA7B7BAA3F23ED12C0E1AB;
+			remoteInfo = UserExperior;
 		};
-		C2E1FC95BDD81E2E2217860A1066339E /* PBXContainerItemProxy */ = {
+		A8343637891DF8075F3CA4FC86B1855B /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 8D7F5D5DD528D21A72DC87ADA5B12E2D;
-			remoteInfo = GoogleUtilities;
+			remoteGlobalIDString = 2BBF7206D7FAC92C82A042A99C4A98F8;
+			remoteInfo = PromisesObjC;
 		};
-		C4B03AC307FE4DA895732ABC24CDAC2E /* PBXContainerItemProxy */ = {
+		AE033D79B5EA22C2E3F2FA293E773894 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 8AABDD06F1327BC62BE3ECBBB02AF715;
-			remoteInfo = AlamofireNetworkActivityLogger;
+			remoteGlobalIDString = 4402AFF83DBDC4DD07E198685FDC2DF2;
+			remoteInfo = FirebaseCore;
 		};
-		C6D0B145CED7D57133C09E58B769D704 /* PBXContainerItemProxy */ = {
+		B1159A6FE4C0B4DCFB3900C99A6EC644 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 3BFA50DA07196AD4DB6512C559850F45;
-			remoteInfo = OTPFieldView;
+			remoteGlobalIDString = 5895B432FE4D2F6826C8FF25A09DB6D2;
+			remoteInfo = FirebaseMessaging;
 		};
-		C979014523FDFF3F37E5E13C86138ED1 /* PBXContainerItemProxy */ = {
+		B6C099656B9CEB2851D20EEB30DBF4A3 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 2BBF7206D7FAC92C82A042A99C4A98F8;
-			remoteInfo = PromisesObjC;
+			remoteGlobalIDString = 4874E7E655CEB4C01E4572AD903AEA21;
+			remoteInfo = FloatingPanel;
 		};
-		D3BE2475155AB9D56D8C52D11285BD06 /* PBXContainerItemProxy */ = {
+		B9A72C8B6599DADCA5B0804218741F1B /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 8D7F5D5DD528D21A72DC87ADA5B12E2D;
-			remoteInfo = GoogleUtilities;
+			remoteGlobalIDString = 93789445511E3FEAB3D09A6F552EEE2D;
+			remoteInfo = "SwiftMessages-SwiftMessages";
 		};
-		D6DB946A8994D774B494CFEF35944104 /* PBXContainerItemProxy */ = {
+		C3C71C184B77A115CCCFF1F2F38346FE /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 620E05868772C10B4920DC7E324F2C87;
-			remoteInfo = FirebaseCoreDiagnostics;
+			remoteGlobalIDString = 4402AFF83DBDC4DD07E198685FDC2DF2;
+			remoteInfo = FirebaseCore;
 		};
-		D8B71F684FC8222ACBC6FEF3BAED19C7 /* PBXContainerItemProxy */ = {
+		CF49C40AE60411F0FF5C3BD608A53558 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = DAB613A18652334F6BFC5F27BADF515D;
-			remoteInfo = SwiftMessages;
+			remoteGlobalIDString = 526C4398D095B3704EB933DADBC30093;
+			remoteInfo = FirebaseCrashlytics;
 		};
-		DD2D62854D16B4940F0543A9A4581470 /* PBXContainerItemProxy */ = {
+		D1638116E94261C5164366A0290FC78B /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 87803597EB3F20FC46472B85392EC4FD;
-			remoteInfo = FirebaseInstallations;
+			remoteGlobalIDString = 620E05868772C10B4920DC7E324F2C87;
+			remoteInfo = FirebaseCoreDiagnostics;
 		};
-		DEB61B4CD485CCDC8ADDFACA29BAA91E /* PBXContainerItemProxy */ = {
+		D8822B7778B716D8134A24E59A915A09 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
 			remoteGlobalIDString = D2B5E7DCCBBFB32341D857D01211A1A3;
 			remoteInfo = nanopb;
 		};
-		E1EAEF2572FF5B765157B2E58B007FC1 /* PBXContainerItemProxy */ = {
+		DBB0AA0C1CC13164D1FAE8597E32F284 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 4402AFF83DBDC4DD07E198685FDC2DF2;
-			remoteInfo = FirebaseCore;
+			remoteGlobalIDString = 8D7F5D5DD528D21A72DC87ADA5B12E2D;
+			remoteInfo = GoogleUtilities;
 		};
-		EF542CC1FE07715545C724235A6D8DC7 /* PBXContainerItemProxy */ = {
+		E81618C12CC21382A9E49FE448DDE5C2 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 52B60EC2A583F24ACBB69C113F5488B9;
-			remoteInfo = SwiftLint;
+			remoteGlobalIDString = 3847153A6E5EEFB86565BA840768F429;
+			remoteInfo = SDWebImage;
 		};
-		F6D54D0FFCB4ECA01FB77B9411072B06 /* PBXContainerItemProxy */ = {
+		EF5906D9FDE6A3B329BA051912DFEC44 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = B53D977A951AFC38B21751B706C1DF83;
-			remoteInfo = GoogleAppMeasurement;
+			remoteGlobalIDString = 5895B432FE4D2F6826C8FF25A09DB6D2;
+			remoteInfo = FirebaseMessaging;
 		};
-		FCE558D6C6152A82A005FAD0647A11F8 /* PBXContainerItemProxy */ = {
+		F0CDB2ECA1027795C40F3CD671CBC939 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = 072CEA044D2EF26F03496D5996BBF59F;
-			remoteInfo = Firebase;
+			remoteGlobalIDString = 4402AFF83DBDC4DD07E198685FDC2DF2;
+			remoteInfo = FirebaseCore;
 		};
-		FCF36E33C17A5275AE0F6527DC9D18FA /* PBXContainerItemProxy */ = {
+		FE538B555BFB15283A2FD5345D9CA2D5 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = DC5C3A7662FFA04D04D29F4657D032CE;
-			remoteInfo = XLPagerTabStrip;
+			remoteGlobalIDString = 4402AFF83DBDC4DD07E198685FDC2DF2;
+			remoteInfo = FirebaseCore;
 		};
-		FE60B039D843952353E1D59B14F529AA /* PBXContainerItemProxy */ = {
+		FEC5D9664CF4B00501E3D202347F08C4 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = BFDFE7DC352907FC980B868725387E98 /* Project object */;
 			proxyType = 1;
-			remoteGlobalIDString = B490E7485944099E16C9CBD79119D1D4;
-			remoteInfo = IQKeyboardManagerSwift;
+			remoteGlobalIDString = C49E7A4D59E5C8BE8DE9FB1EFB150185;
+			remoteInfo = FirebaseAnalytics;
 		};
 /* End PBXContainerItemProxy section */
 
 /* Begin PBXCopyFilesBuildPhase section */
-		21CC00ADE2C186F92E231345B795C3C2 /* Copy . Public Headers */ = {
+		9A58C4B4F3B9EBAA53B4030D7C44986F /* Copy . Public Headers */ = {
 			isa = PBXCopyFilesBuildPhase;
 			buildActionMask = 2147483647;
 			dstPath = "$(PUBLIC_HEADERS_FOLDER_PATH)/.";
 			dstSubfolderSpec = 16;
 			files = (
-				2092FF72E5EA7FEBBAE18815CB6895F3 /* FBLPromise.h in Copy . Public Headers */,
-				B510D8C0833EBE49B451EAF642A97C27 /* FBLPromise+All.h in Copy . Public Headers */,
-				B7983772F96E8BA5CA74AA3E7C5A4731 /* FBLPromise+Always.h in Copy . Public Headers */,
-				5D830E0696B43F2BAC39C31A33595213 /* FBLPromise+Any.h in Copy . Public Headers */,
-				1B6E2352CFA9B126FB04DBA227F0E71E /* FBLPromise+Async.h in Copy . Public Headers */,
-				61201ADA3F69FFF42BD21EBF895978EB /* FBLPromise+Await.h in Copy . Public Headers */,
-				04587DBB405ACA602B89E27113A01D1D /* FBLPromise+Catch.h in Copy . Public Headers */,
-				B48730C43BE05664945FD71348145B89 /* FBLPromise+Delay.h in Copy . Public Headers */,
-				D2B7BB295B8D286E8005D3BAF429861C /* FBLPromise+Do.h in Copy . Public Headers */,
-				01CFF7913609C087F76DFCD4C743AACB /* FBLPromise+Race.h in Copy . Public Headers */,
-				C7F638E0ADE0E53CD822EDCF665C8754 /* FBLPromise+Recover.h in Copy . Public Headers */,
-				C8141CFC0302C296C3E13C9B3BE95CFB /* FBLPromise+Reduce.h in Copy . Public Headers */,
-				1E1331EAC9DED7C55973B079A1FC426B /* FBLPromise+Retry.h in Copy . Public Headers */,
-				D6F35B9B7F21CDB15603C2B1308922BB /* FBLPromise+Testing.h in Copy . Public Headers */,
-				AB6E92395F6F31047D6739A8FEBC4BF2 /* FBLPromise+Then.h in Copy . Public Headers */,
-				A6B13563C6A64E6FCB3EC21545B0FEBE /* FBLPromise+Timeout.h in Copy . Public Headers */,
-				90D0634B7EBC96D6DC874D14CFF8D5E7 /* FBLPromise+Validate.h in Copy . Public Headers */,
-				36960A68C549087FC10C93560B74F632 /* FBLPromise+Wrap.h in Copy . Public Headers */,
-				06DC032210E92055021F2568B20A959A /* FBLPromiseError.h in Copy . Public Headers */,
-				F147504E082C0C54FDAC02C78A241945 /* FBLPromises.h in Copy . Public Headers */,
+				7D7AAE9DC4E068C03E46BF311B28D548 /* FBLPromise.h in Copy . Public Headers */,
+				4DBA4429CDC0401E13BA12A593C4111F /* FBLPromise+All.h in Copy . Public Headers */,
+				D4969FE7E9124A8931D8A37583B551D8 /* FBLPromise+Always.h in Copy . Public Headers */,
+				0D4F7B3A6AC3ADBEBFED53C9740E63C5 /* FBLPromise+Any.h in Copy . Public Headers */,
+				ECC26D7672AD93127E949EF5ECBF02DA /* FBLPromise+Async.h in Copy . Public Headers */,
+				A8C168F6EFBBD22BC78E9271D7E36A12 /* FBLPromise+Await.h in Copy . Public Headers */,
+				57B97669CF065327AABDDD50D6EB60B8 /* FBLPromise+Catch.h in Copy . Public Headers */,
+				678B35EFD51F61A22B72242D4A26FD17 /* FBLPromise+Delay.h in Copy . Public Headers */,
+				FE21FB6FF6AC27E40B99997DBD13C3FB /* FBLPromise+Do.h in Copy . Public Headers */,
+				0864B53B7B5CFA5758528A08B1D19DF7 /* FBLPromise+Race.h in Copy . Public Headers */,
+				6EAA04C091066A1CDA225EF05814B70A /* FBLPromise+Recover.h in Copy . Public Headers */,
+				A254731673EBD08C9F66638F6D015D4F /* FBLPromise+Reduce.h in Copy . Public Headers */,
+				56EDF07E1459353323EFCD07A336E9E1 /* FBLPromise+Retry.h in Copy . Public Headers */,
+				3B15A93DF7DB1A3C7897C7312E4A57C8 /* FBLPromise+Testing.h in Copy . Public Headers */,
+				4A809112C10EA202C6BE54D6C6DFB71C /* FBLPromise+Then.h in Copy . Public Headers */,
+				493D3AB11378BF32FB041CA582234BCD /* FBLPromise+Timeout.h in Copy . Public Headers */,
+				AAB2B8178605F1654CC07F40217EC65B /* FBLPromise+Validate.h in Copy . Public Headers */,
+				EB3A40FE27D5D794E599F604A5A792CE /* FBLPromise+Wrap.h in Copy . Public Headers */,
+				A0EB469F0E90EE4201D37EA70009A159 /* FBLPromiseError.h in Copy . Public Headers */,
+				643DEAD6BE801C5DF1A49BB359696DC9 /* FBLPromises.h in Copy . Public Headers */,
 			);
 			name = "Copy . Public Headers";
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		4F585D830A36B5BD85305C21CFFA653C /* Copy . Private Headers */ = {
+		BA4F9833A341A567F71733318036A940 /* Copy . Private Headers */ = {
 			isa = PBXCopyFilesBuildPhase;
 			buildActionMask = 2147483647;
 			dstPath = "$(PRIVATE_HEADERS_FOLDER_PATH)/.";
 			dstSubfolderSpec = 16;
 			files = (
-				33802344D895631DD8821717E429175F /* FBLPromisePrivate.h in Copy . Private Headers */,
+				1DA2C263FDF00E45C0F60204DA21E4BD /* FBLPromisePrivate.h in Copy . Private Headers */,
 			);
 			name = "Copy . Private Headers";
 			runOnlyForDeploymentPostprocessing = 0;
@@ -1769,1303 +1781,1316 @@
 /* End PBXCopyFilesBuildPhase section */
 
 /* Begin PBXFileReference section */
-		00AC6785C55BD99E1A24DDA4CA8BFC01 /* FIRCLSMachException.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSMachException.c; path = Crashlytics/Crashlytics/Handlers/FIRCLSMachException.c; sourceTree = "<group>"; };
-		00B03A97A8D13987C3DB33BEB8298934 /* FIRCLSManagerData.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSManagerData.m; path = Crashlytics/Crashlytics/Controllers/FIRCLSManagerData.m; sourceTree = "<group>"; };
-		00D82DCFAB14F3C6C3A2476170FF3F90 /* Alamofire-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "Alamofire-dummy.m"; sourceTree = "<group>"; };
-		00EA0BCE1DF2A5E3F3A5A2437A56E5A2 /* XLPagerTabStrip.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = XLPagerTabStrip.debug.xcconfig; sourceTree = "<group>"; };
-		016B516493389158C66D8E36094D25A1 /* FIRCLSFeatures.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSFeatures.h; path = Crashlytics/Crashlytics/Helpers/FIRCLSFeatures.h; sourceTree = "<group>"; };
-		023DE0DE7FD40C34C95503DA4B1A9A78 /* IQKeyboardManager.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = IQKeyboardManager.swift; path = IQKeyboardManagerSwift/IQKeyboardManager.swift; sourceTree = "<group>"; };
-		0243E4B8C5E44A37475382041C51D033 /* CTEventBuilder.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTEventBuilder.h; path = CleverTapSDK/CTEventBuilder.h; sourceTree = "<group>"; };
-		0262B5E3ED1695C61FD01C64379D03A4 /* SwiftMessages.Config+Extensions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "SwiftMessages.Config+Extensions.swift"; path = "SwiftMessages/SwiftMessages.Config+Extensions.swift"; sourceTree = "<group>"; };
+		000DEFB9C892CB1083237E37BF511B21 /* NSLayoutConstraint+Extensions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "NSLayoutConstraint+Extensions.swift"; path = "SwiftMessages/NSLayoutConstraint+Extensions.swift"; sourceTree = "<group>"; };
+		0077048F741172E1CAE01CA6C6B08FE9 /* Session.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Session.swift; path = Source/Session.swift; sourceTree = "<group>"; };
+		0085E7089EDB0543F08D0FB90A94DC98 /* SegmentedPagerTabStripViewController.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = SegmentedPagerTabStripViewController.swift; path = Sources/SegmentedPagerTabStripViewController.swift; sourceTree = "<group>"; };
+		00E2DC1B325037165F2D8F2DB040AB08 /* FIRInstallationsStore.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsStore.h; path = FirebaseInstallations/Source/Library/InstallationsStore/FIRInstallationsStore.h; sourceTree = "<group>"; };
+		00F40D83B380FAF70C11ED007FF3EB7F /* SDWebImageIndicator.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageIndicator.h; path = SDWebImage/Core/SDWebImageIndicator.h; sourceTree = "<group>"; };
+		0102F6E9A39690B86E155198543130B5 /* FIRCLSUserDefaults_private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSUserDefaults_private.h; path = Crashlytics/Crashlytics/FIRCLSUserDefaults/FIRCLSUserDefaults_private.h; sourceTree = "<group>"; };
+		013ED51D1FE5FC46AE9E5E43BDD25BBB /* SDAssociatedObject.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDAssociatedObject.m; path = SDWebImage/Private/SDAssociatedObject.m; sourceTree = "<group>"; };
+		015B439C22B52F3545D6EA7D4136D47A /* FXPageControl.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FXPageControl.m; path = Sources/FXPageControl.m; sourceTree = "<group>"; };
+		01DC13F32BE7508E54632BCD6E3AF2F6 /* CTCoverViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTCoverViewController.m; path = CleverTapSDK/InApps/CTCoverViewController.m; sourceTree = "<group>"; };
+		01E76AAE6418C25B817D7ACC73A39825 /* FIRCLSHandler.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSHandler.m; path = Crashlytics/Crashlytics/Handlers/FIRCLSHandler.m; sourceTree = "<group>"; };
+		01FC7833129501016A7297A22972EAB1 /* FIRMessagingSyncMessageManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingSyncMessageManager.h; path = FirebaseMessaging/Sources/FIRMessagingSyncMessageManager.h; sourceTree = "<group>"; };
+		020B5BB06D51D48F53BD44F5526AC5B0 /* FirebaseInstallations.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FirebaseInstallations.release.xcconfig; sourceTree = "<group>"; };
+		02521464FADA2CBC40ADF7E9615C7444 /* infoIcon@3x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "infoIcon@3x.png"; path = "SwiftMessages/Resources/infoIcon@3x.png"; sourceTree = "<group>"; };
 		026676361ADEB3B0DEAB1F236792FEE0 /* Pods-OpenBook.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = "Pods-OpenBook.modulemap"; sourceTree = "<group>"; };
-		02C83CDF1FFE1D5CACA77878723C29E0 /* FIRMessagingRmqManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingRmqManager.m; path = FirebaseMessaging/Sources/FIRMessagingRmqManager.m; sourceTree = "<group>"; };
-		03096B3EFD7BC201DD12038A742AEE13 /* URLRequest+Alamofire.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "URLRequest+Alamofire.swift"; path = "Source/URLRequest+Alamofire.swift"; sourceTree = "<group>"; };
-		035C7ED984F57D8F7CE5C81275E8DD27 /* GULLogger.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULLogger.h; path = GoogleUtilities/Logger/Public/GoogleUtilities/GULLogger.h; sourceTree = "<group>"; };
-		036F378CE7ED27A9C21B5FBC9E57B410 /* FIRLogger.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRLogger.h; path = FirebaseCore/Sources/Private/FIRLogger.h; sourceTree = "<group>"; };
-		039634B2810524CB58834CDFDDA903FD /* SDImageCacheConfig.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageCacheConfig.h; path = SDWebImage/Core/SDImageCacheConfig.h; sourceTree = "<group>"; };
-		03F23B641B74D6531ED837041034856A /* OTPFieldView.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = OTPFieldView.release.xcconfig; sourceTree = "<group>"; };
-		04A8F8FE4F2045DFC907FDDDB636CCD2 /* CTNotificationButton.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTNotificationButton.h; path = CleverTapSDK/CTNotificationButton.h; sourceTree = "<group>"; };
-		0521BA931EF90FE2E0C3FF4D665E9C33 /* UIImage+MultiFormat.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIImage+MultiFormat.h"; path = "SDWebImage/Core/UIImage+MultiFormat.h"; sourceTree = "<group>"; };
-		0521E1F7755149CAF3E4D02D8490597D /* Validation.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Validation.swift; path = Source/Validation.swift; sourceTree = "<group>"; };
-		055DE2F6BD4008DEE5953730A437A661 /* FIRCLSReportManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSReportManager.h; path = Crashlytics/Crashlytics/Controllers/FIRCLSReportManager.h; sourceTree = "<group>"; };
-		05648E42BE2A0E049ADF39EC26F3B006 /* XLPagerTabStrip-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "XLPagerTabStrip-prefix.pch"; sourceTree = "<group>"; };
-		0568F5C76BE7FEF277A5FF3FE8CCF5C9 /* FIRMessagingContextManagerService.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingContextManagerService.m; path = FirebaseMessaging/Sources/FIRMessagingContextManagerService.m; sourceTree = "<group>"; };
+		029BF419655EC97214F8D4653666A707 /* SDImageCacheConfig.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageCacheConfig.m; path = SDWebImage/Core/SDImageCacheConfig.m; sourceTree = "<group>"; };
+		02ADC8DFEC05062D4573522CF7C9FACD /* FIRComponentContainer.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRComponentContainer.h; path = FirebaseCore/Sources/Private/FIRComponentContainer.h; sourceTree = "<group>"; };
+		02AF9928A561D955C65831099A50A431 /* OTPFieldView.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = OTPFieldView.debug.xcconfig; sourceTree = "<group>"; };
+		02B097F18AB36740908A67DA3144C615 /* SDImageCoder.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageCoder.h; path = SDWebImage/Core/SDImageCoder.h; sourceTree = "<group>"; };
+		02B752827D9E378365B62DDC2D7511F6 /* UIView+WebCache.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIView+WebCache.m"; path = "SDWebImage/Core/UIView+WebCache.m"; sourceTree = "<group>"; };
+		03722917D809BDDB44DD062A7C300854 /* infoIconSubtle@2x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "infoIconSubtle@2x.png"; path = "SwiftMessages/Resources/infoIconSubtle@2x.png"; sourceTree = "<group>"; };
+		0397EE43AEB5AED71A6DD5433891D20E /* FirebaseCoreDiagnostics-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "FirebaseCoreDiagnostics-Info.plist"; sourceTree = "<group>"; };
+		03A0F8F9EE74AC155514C0AF423D3D7A /* PagingMenuItemSource.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingMenuItemSource.swift; path = Parchment/Enums/PagingMenuItemSource.swift; sourceTree = "<group>"; };
+		0450E338415A407E610D226965068CDB /* SDWebImage.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImage.h; path = WebImage/SDWebImage.h; sourceTree = "<group>"; };
+		045D7C318D3BE9148C6FA3F9BFC63D51 /* FIRMessagingTokenManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingTokenManager.m; path = FirebaseMessaging/Sources/Token/FIRMessagingTokenManager.m; sourceTree = "<group>"; };
+		04C38889837F7597B903571D04E3C1F1 /* SDImageAssetManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageAssetManager.m; path = SDWebImage/Private/SDImageAssetManager.m; sourceTree = "<group>"; };
+		050A3467B6E9069F36478579008CE452 /* FIRCLSUserLogging.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSUserLogging.h; path = Crashlytics/Crashlytics/Components/FIRCLSUserLogging.h; sourceTree = "<group>"; };
+		0519E3C186D7FD7FD4B7EC0002C88061 /* UserExperiorSDK.xcframework */ = {isa = PBXFileReference; includeInIndex = 1; path = UserExperiorSDK.xcframework; sourceTree = "<group>"; };
+		0564512CD2B0BD6F86FF104DEF8F6D1C /* GDTCOREndpoints.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCOREndpoints.h; path = GoogleDataTransport/GDTCORLibrary/Public/GoogleDataTransport/GDTCOREndpoints.h; sourceTree = "<group>"; };
 		05720C608590E305E32A22FE9BDFD55B /* Security.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Security.framework; path = Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS14.0.sdk/System/Library/Frameworks/Security.framework; sourceTree = DEVELOPER_DIR; };
-		05B80D758033189483F6A7D85EE5E52D /* FIRCLSAnalyticsManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSAnalyticsManager.h; path = Crashlytics/Crashlytics/Controllers/FIRCLSAnalyticsManager.h; sourceTree = "<group>"; };
-		05DFCB63F2DCC6364CE7342E8B732793 /* GDTCORTransformer_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORTransformer_Private.h; path = GoogleDataTransport/GDTCORLibrary/Private/GDTCORTransformer_Private.h; sourceTree = "<group>"; };
-		061ADDF7160D72DBB04CE3C07A65D092 /* XLPagerTabStrip-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "XLPagerTabStrip-dummy.m"; sourceTree = "<group>"; };
-		062020530AD4DA94C922D8F49422FA31 /* CTKnownProfileFields.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTKnownProfileFields.h; path = CleverTapSDK/CTKnownProfileFields.h; sourceTree = "<group>"; };
-		063513755606F8F2D0C4B656CA25535A /* pb_encode.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = pb_encode.h; sourceTree = "<group>"; };
-		065614BAC4B761DECC3AE82AF30F0A1A /* Parchment-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "Parchment-dummy.m"; sourceTree = "<group>"; };
-		065DA9EA9DC0F1ABC97DDEFEB638FC7C /* FIRMessagingConstants.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingConstants.m; path = FirebaseMessaging/Sources/FIRMessagingConstants.m; sourceTree = "<group>"; };
-		06636A73A530F38765377706E8AD25D9 /* PagingTransition.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingTransition.swift; path = Parchment/Structs/PagingTransition.swift; sourceTree = "<group>"; };
-		06637C0A7CB6AD502FDBFD0EC22341FD /* FIRCLSSymbolResolver.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSSymbolResolver.m; path = Crashlytics/Crashlytics/Models/FIRCLSSymbolResolver.m; sourceTree = "<group>"; };
-		06D6BBFE106E7283DC112E5D72BFFAB7 /* PagingController.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingController.swift; path = Parchment/Classes/PagingController.swift; sourceTree = "<group>"; };
-		06E5E05321D01426F0BE747F130C6641 /* SDWebImageCompat.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageCompat.h; path = SDWebImage/Core/SDWebImageCompat.h; sourceTree = "<group>"; };
+		05747ECF98BBC2E7F8B97536E577EB9A /* CTDismissButton.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTDismissButton.h; path = CleverTapSDK/InApps/CTDismissButton.h; sourceTree = "<group>"; };
+		058429B14423E80737AF114E4233FCBA /* FIRConfiguration.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRConfiguration.m; path = FirebaseCore/Sources/FIRConfiguration.m; sourceTree = "<group>"; };
+		058DC8DE655B872C1192AFA9F7BD71BE /* UserExperior-xcframeworks.sh */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.script.sh; path = "UserExperior-xcframeworks.sh"; sourceTree = "<group>"; };
+		05A47BA3D5E85F9B8602C307DC8B6813 /* PhysicsAnimation.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PhysicsAnimation.swift; path = SwiftMessages/PhysicsAnimation.swift; sourceTree = "<group>"; };
+		05BFBE8F142E54DC1DE8D39359953379 /* FIRInstallationsErrorUtil.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallationsErrorUtil.m; path = FirebaseInstallations/Source/Library/Errors/FIRInstallationsErrorUtil.m; sourceTree = "<group>"; };
+		05C4F5AD14860990D4427A47C647846A /* CTInboxController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTInboxController.m; path = CleverTapSDK/Inbox/controllers/CTInboxController.m; sourceTree = "<group>"; };
+		0611407236FC95F2BDBD807A13E14A6B /* FIRApp.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRApp.h; path = FirebaseCore/Sources/Public/FirebaseCore/FIRApp.h; sourceTree = "<group>"; };
+		0652AC1445390A74E3B7F76EF2E711DD /* GULHeartbeatDateStorage.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULHeartbeatDateStorage.h; path = GoogleUtilities/Environment/Public/GoogleUtilities/GULHeartbeatDateStorage.h; sourceTree = "<group>"; };
+		066A2C53ACCA22D21393A852578FF832 /* IQTextView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = IQTextView.swift; path = IQKeyboardManagerSwift/IQTextView/IQTextView.swift; sourceTree = "<group>"; };
+		06D7DC35ED70D4E68969A443160BBAFE /* CTInboxIconMessageCell.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTInboxIconMessageCell.m; path = CleverTapSDK/Inbox/cells/CTInboxIconMessageCell.m; sourceTree = "<group>"; };
 		06FC5C9CF96D60C50FCD47D339C91951 /* nanopb */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; name = nanopb; path = nanopb.framework; sourceTree = BUILT_PRODUCTS_DIR; };
-		0717FF6245B92E829137D7668EBB1246 /* SDWebImageDownloaderRequestModifier.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageDownloaderRequestModifier.m; path = SDWebImage/Core/SDWebImageDownloaderRequestModifier.m; sourceTree = "<group>"; };
-		073D3BFEAD1B94A696D1FFD31588A6DB /* Protected.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Protected.swift; path = Source/Protected.swift; sourceTree = "<group>"; };
-		076CC6811E354E7440DED1DA2E473694 /* GDTCORUploadCoordinator.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCORUploadCoordinator.m; path = GoogleDataTransport/GDTCORLibrary/GDTCORUploadCoordinator.m; sourceTree = "<group>"; };
-		077877AA70D97E19333356C8BD9C10FB /* GULKeychainUtils.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULKeychainUtils.m; path = GoogleUtilities/Environment/SecureStorage/GULKeychainUtils.m; sourceTree = "<group>"; };
-		077A3C9C67DFCCB5AE24A86E9D9FD912 /* FIRCLSUnwind_x86.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSUnwind_x86.h; path = Crashlytics/Crashlytics/Unwind/FIRCLSUnwind_x86.h; sourceTree = "<group>"; };
-		085CCB48D88E2AD0A6BADD6481DFCA8D /* CTHeaderViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTHeaderViewController.h; path = CleverTapSDK/InApps/CTHeaderViewController.h; sourceTree = "<group>"; };
-		0897BC433DC4D731856A853AB40E6499 /* SDWebImage-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "SDWebImage-umbrella.h"; sourceTree = "<group>"; };
-		08AA4586A0C3CBDB6BD2C55CF515B528 /* FIRCLSSymbolResolver.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSSymbolResolver.h; path = Crashlytics/Crashlytics/Models/FIRCLSSymbolResolver.h; sourceTree = "<group>"; };
-		0902BF23B634488355BAD4C75C816E89 /* CTInboxSimpleMessageCell.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTInboxSimpleMessageCell.h; path = CleverTapSDK/Inbox/cells/CTInboxSimpleMessageCell.h; sourceTree = "<group>"; };
-		090741E6974046F8BB1660CFC0828EAD /* FIRCLSCompactUnwind.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSCompactUnwind.h; path = Crashlytics/Crashlytics/Unwind/Compact/FIRCLSCompactUnwind.h; sourceTree = "<group>"; };
-		0940E77BA45CF2A0180AAD3DCFEBB620 /* Firebase.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = Firebase.h; path = CoreOnly/Sources/Firebase.h; sourceTree = "<group>"; };
-		0974813C72E5361CCD1D7FA32B1889C6 /* SDWebImageDownloaderResponseModifier.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageDownloaderResponseModifier.h; path = SDWebImage/Core/SDWebImageDownloaderResponseModifier.h; sourceTree = "<group>"; };
-		099CBF9249F7B307CBB1208C1153E44E /* UIImage+ExtendedCacheData.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIImage+ExtendedCacheData.m"; path = "SDWebImage/Core/UIImage+ExtendedCacheData.m"; sourceTree = "<group>"; };
-		0A25FC948B0CA0350AB1C031E15562D7 /* NetworkActivityLogger.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = NetworkActivityLogger.swift; path = Source/NetworkActivityLogger.swift; sourceTree = "<group>"; };
-		0A5F32C1CADCB2D8EAA234CF12B4C9EB /* FIRCLSAllocate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSAllocate.h; path = Crashlytics/Crashlytics/Helpers/FIRCLSAllocate.h; sourceTree = "<group>"; };
-		0A6FB2B46D409A82C6DA37ED976F44B4 /* FIRCLSURLBuilder.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSURLBuilder.h; path = Crashlytics/Shared/FIRCLSNetworking/FIRCLSURLBuilder.h; sourceTree = "<group>"; };
-		0A8900AE4D2664CF72C6E0CAE143C525 /* EventMonitor.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = EventMonitor.swift; path = Source/EventMonitor.swift; sourceTree = "<group>"; };
-		0A96216375C22E0634AD2031EC6466A0 /* UIImageView+HighlightedWebCache.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIImageView+HighlightedWebCache.h"; path = "SDWebImage/Core/UIImageView+HighlightedWebCache.h"; sourceTree = "<group>"; };
-		0A9DDCF5C842CB7F5C486A076FA2B9EC /* CleverTapInstanceConfig.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTapInstanceConfig.h; path = CleverTapSDK/CleverTapInstanceConfig.h; sourceTree = "<group>"; };
-		0AB7E7164EB355A5B49DD52F0AFDDEE4 /* Result+Alamofire.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "Result+Alamofire.swift"; path = "Source/Result+Alamofire.swift"; sourceTree = "<group>"; };
-		0AC42B646B9795BFBAC2B6CD40E516B9 /* FIRCLSHost.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSHost.m; path = Crashlytics/Crashlytics/Components/FIRCLSHost.m; sourceTree = "<group>"; };
-		0AD0B1ABAC199AE18A27DA429A649668 /* FirebaseCoreInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FirebaseCoreInternal.h; path = FirebaseCore/Sources/Private/FirebaseCoreInternal.h; sourceTree = "<group>"; };
-		0B1DDE8FEB83CB45B8FD06ADBCF7B045 /* FirebaseMessaging-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "FirebaseMessaging-umbrella.h"; sourceTree = "<group>"; };
-		0B3C37E9DA3DB8C9B6599D7243E5892C /* Error.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Error.swift; path = SwiftMessages/Error.swift; sourceTree = "<group>"; };
-		0B8054FD53D362CEEE988C629D5E0FF3 /* IQNSArray+Sort.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "IQNSArray+Sort.swift"; path = "IQKeyboardManagerSwift/Categories/IQNSArray+Sort.swift"; sourceTree = "<group>"; };
-		0BC4B91F30D54CEBD44E17A067EC4DA7 /* UIImage+ForceDecode.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIImage+ForceDecode.m"; path = "SDWebImage/Core/UIImage+ForceDecode.m"; sourceTree = "<group>"; };
-		0C05F0670F7C2D8BD68C978389E33058 /* CTHeaderViewController~ipad.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTHeaderViewController~ipad.xib"; path = "CleverTapSDK/InApps/resources/CTHeaderViewController~ipad.xib"; sourceTree = "<group>"; };
-		0C1D660E37B3728E235EC51D0575A946 /* FIRCLSApplicationIdentifierModel.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSApplicationIdentifierModel.m; path = Crashlytics/Crashlytics/Settings/Models/FIRCLSApplicationIdentifierModel.m; sourceTree = "<group>"; };
-		0C78FF2E2A7F1D844A45F6E84F7BDFBD /* SDWebImage-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "SDWebImage-dummy.m"; sourceTree = "<group>"; };
-		0C8E84F5AC012914ABC92DE689919448 /* PagingMenuView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingMenuView.swift; path = Parchment/Classes/PagingMenuView.swift; sourceTree = "<group>"; };
-		0CC04C215FACFF1FE2AEB49B03FE008B /* GDTCORStorageProtocol.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORStorageProtocol.h; path = GoogleDataTransport/GDTCORLibrary/Internal/GDTCORStorageProtocol.h; sourceTree = "<group>"; };
-		0CF771E147DAA3F457883DAFF60DAB84 /* ServerTrustEvaluation.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ServerTrustEvaluation.swift; path = Source/ServerTrustEvaluation.swift; sourceTree = "<group>"; };
-		0CFD192918BF9A8E7F67C1E6516AB785 /* XLPagerTabStrip.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = XLPagerTabStrip.release.xcconfig; sourceTree = "<group>"; };
-		0D06BA4CF26161ABF9D97B1A7F61DAEB /* FIRInstallationsIDController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsIDController.h; path = FirebaseInstallations/Source/Library/InstallationsIDController/FIRInstallationsIDController.h; sourceTree = "<group>"; };
-		0D1210CD4467F65AA89320DE34C5172D /* FIRMessagingTokenOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingTokenOperation.h; path = FirebaseMessaging/Sources/Token/FIRMessagingTokenOperation.h; sourceTree = "<group>"; };
-		0D1F0789315E513FB9DF995FBE4FFD2E /* GULNetworkConstants.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULNetworkConstants.m; path = GoogleUtilities/Network/GULNetworkConstants.m; sourceTree = "<group>"; };
-		0D24D44186A115DE8AFCAE359D45EA1F /* GDTCORUploadBatch.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCORUploadBatch.m; path = GoogleDataTransport/GDTCORLibrary/GDTCORUploadBatch.m; sourceTree = "<group>"; };
-		0D2BFAD0C1341DA800BEC9EAB69C6CAC /* UserExperior-xcframeworks.sh */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.script.sh; path = "UserExperior-xcframeworks.sh"; sourceTree = "<group>"; };
-		0D345B565E38FD79187C21C869FC9316 /* CTInAppDisplayViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTInAppDisplayViewController.h; path = CleverTapSDK/CTInAppDisplayViewController.h; sourceTree = "<group>"; };
-		0D783C36292BE09F38FCB5BBAA46F8F0 /* FIRInstallationsAPIService.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsAPIService.h; path = FirebaseInstallations/Source/Library/InstallationsAPI/FIRInstallationsAPIService.h; sourceTree = "<group>"; };
-		0DCE7A366E8ED57D99CA30FABB9C194D /* CTDisplayUnitController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTDisplayUnitController.m; path = CleverTapSDK/DisplayUnit/controllers/CTDisplayUnitController.m; sourceTree = "<group>"; };
-		0E2B1309B5D983FED7C88BECE37A1785 /* SDImageAWebPCoder.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageAWebPCoder.m; path = SDWebImage/Core/SDImageAWebPCoder.m; sourceTree = "<group>"; };
-		0E36B9C8CB9E449C5A9E8E3E2206A0C9 /* SDWebImageOptionsProcessor.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageOptionsProcessor.m; path = SDWebImage/Core/SDWebImageOptionsProcessor.m; sourceTree = "<group>"; };
-		0E4F0E2804CD32F9F985A8131A1D882A /* GULAppEnvironmentUtil.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULAppEnvironmentUtil.m; path = GoogleUtilities/Environment/third_party/GULAppEnvironmentUtil.m; sourceTree = "<group>"; };
-		0EB6DC31A1BD9A1EFFC59F54D95BE467 /* MultipartUpload.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = MultipartUpload.swift; path = Source/MultipartUpload.swift; sourceTree = "<group>"; };
-		0EBF433186796D75D3C6385287CB84ED /* FirebaseCoreDiagnostics-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "FirebaseCoreDiagnostics-umbrella.h"; sourceTree = "<group>"; };
-		0EC5BC85E79F0E2F188B00AAFF9FB3C5 /* LayoutAnchoring.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = LayoutAnchoring.swift; path = Sources/LayoutAnchoring.swift; sourceTree = "<group>"; };
-		0F1A0DE016A8B297595285D0F5470758 /* FIRBundleUtil.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRBundleUtil.h; path = FirebaseCore/Sources/FIRBundleUtil.h; sourceTree = "<group>"; };
-		104AF08E30BB3684536703C207E56280 /* FIRLogger.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRLogger.h; path = FirebaseCore/Sources/Private/FIRLogger.h; sourceTree = "<group>"; };
-		107B92BA5DCEFAF2424A82E5906DDFF3 /* FIRMessagingRemoteNotificationsProxy.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingRemoteNotificationsProxy.h; path = FirebaseMessaging/Sources/FIRMessagingRemoteNotificationsProxy.h; sourceTree = "<group>"; };
-		107F0C152339D63DA61B84A4432450DC /* OTPFieldView-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "OTPFieldView-prefix.pch"; sourceTree = "<group>"; };
-		10BA31B1F174458C02637F6859D1C096 /* SDWebImageCacheKeyFilter.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageCacheKeyFilter.m; path = SDWebImage/Core/SDWebImageCacheKeyFilter.m; sourceTree = "<group>"; };
-		111ECC401375153DC4099044D6545643 /* firebasecore.nanopb.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = firebasecore.nanopb.h; path = Firebase/CoreDiagnostics/FIRCDLibrary/Protogen/nanopb/firebasecore.nanopb.h; sourceTree = "<group>"; };
-		11520B595EDE76D6F303364393B12A8F /* CTNotificationButton.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTNotificationButton.m; path = CleverTapSDK/CTNotificationButton.m; sourceTree = "<group>"; };
-		11728E04F5C96F8C3B9EF30BACF0E0A3 /* StatusLine.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = StatusLine.xib; path = SwiftMessages/Resources/StatusLine.xib; sourceTree = "<group>"; };
-		1173A4D64AE6165ABB57B32DA5E926B3 /* SDWebImageDownloaderConfig.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageDownloaderConfig.m; path = SDWebImage/Core/SDWebImageDownloaderConfig.m; sourceTree = "<group>"; };
-		11822A28AB3249915A6B6BCA0F5FC6B3 /* CTCoverImageViewController~iphoneland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTCoverImageViewController~iphoneland.xib"; path = "CleverTapSDK/InApps/resources/CTCoverImageViewController~iphoneland.xib"; sourceTree = "<group>"; };
-		11C58EB6A1D7F90552CDE72AE878650E /* FIRMessagingTokenDeleteOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingTokenDeleteOperation.h; path = FirebaseMessaging/Sources/Token/FIRMessagingTokenDeleteOperation.h; sourceTree = "<group>"; };
-		11F5B23C9E06F3F06BBA8A489B64F1B4 /* CleverTapFeatureFlagsPrivate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTapFeatureFlagsPrivate.h; path = CleverTapSDK/FeatureFlags/models/CleverTapFeatureFlagsPrivate.h; sourceTree = "<group>"; };
-		11FFF457A29411BE38FE4F31DB24A748 /* IQUIView+Hierarchy.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "IQUIView+Hierarchy.swift"; path = "IQKeyboardManagerSwift/Categories/IQUIView+Hierarchy.swift"; sourceTree = "<group>"; };
-		1256ABC3DE99710E71FDF92D801E9391 /* TopBottomAnimation.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = TopBottomAnimation.swift; path = SwiftMessages/TopBottomAnimation.swift; sourceTree = "<group>"; };
-		128A386E25B01E4B653CB86E3C216CF4 /* CTAVPlayerViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTAVPlayerViewController.m; path = CleverTapSDK/InApps/CTAVPlayerViewController.m; sourceTree = "<group>"; };
-		12ABE345D2EF7E7543D622A00009715D /* CleverTapSyncDelegate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTapSyncDelegate.h; path = CleverTapSDK/CleverTapSyncDelegate.h; sourceTree = "<group>"; };
-		12F5F1CE30E0E423EE4E479F3EFA2ED9 /* FBLPromise.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FBLPromise.h; path = Sources/FBLPromises/include/FBLPromise.h; sourceTree = "<group>"; };
-		134293FFADFB86E2D4112E05383E48D5 /* IQBarButtonItem.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = IQBarButtonItem.swift; path = IQKeyboardManagerSwift/IQToolbar/IQBarButtonItem.swift; sourceTree = "<group>"; };
-		139B8C7543692F953127F906881AE23F /* PagingViewControllerSizeDelegate.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingViewControllerSizeDelegate.swift; path = Parchment/Protocols/PagingViewControllerSizeDelegate.swift; sourceTree = "<group>"; };
+		070A92CB23B8D538CC393FCD99F0F12A /* LayoutAnchoring.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = LayoutAnchoring.swift; path = Sources/LayoutAnchoring.swift; sourceTree = "<group>"; };
+		071135E06560B0B235007A7EF036CD98 /* CTHeaderViewController~iphoneport.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTHeaderViewController~iphoneport.xib"; path = "CleverTapSDK/InApps/resources/CTHeaderViewController~iphoneport.xib"; sourceTree = "<group>"; };
+		072184D32B7A963613213CE51B2572CD /* CleverTapFeatureFlagsPrivate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTapFeatureFlagsPrivate.h; path = CleverTapSDK/FeatureFlags/models/CleverTapFeatureFlagsPrivate.h; sourceTree = "<group>"; };
+		074E167E07B11E8C6F2A9B26B1C8D1C9 /* FIRStackFrame_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRStackFrame_Private.h; path = Crashlytics/Crashlytics/Private/FIRStackFrame_Private.h; sourceTree = "<group>"; };
+		075798806DB872AAEF434F61F187CFD7 /* BackdropView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = BackdropView.swift; path = Sources/BackdropView.swift; sourceTree = "<group>"; };
+		0764B9CD746C8F73AE46E691D1C2F0F8 /* FIRMessagingContextManagerService.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingContextManagerService.h; path = FirebaseMessaging/Sources/FIRMessagingContextManagerService.h; sourceTree = "<group>"; };
+		0771BF78DC0FB1E3985133A9EFD34483 /* GDTCOREvent_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCOREvent_Private.h; path = GoogleDataTransport/GDTCORLibrary/Private/GDTCOREvent_Private.h; sourceTree = "<group>"; };
+		077968B5BAF4DE780FC29D3FB93261CA /* FIRCLSCodeMapping.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSCodeMapping.m; path = Crashlytics/Shared/FIRCLSMachO/FIRCLSCodeMapping.m; sourceTree = "<group>"; };
+		077B6BDFCC85619DC4C84482F3AB279C /* FIRCLSUUID.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSUUID.m; path = Crashlytics/Shared/FIRCLSUUID.m; sourceTree = "<group>"; };
+		07992C388B82748646D44493AC2017CF /* SDWebImageError.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageError.h; path = SDWebImage/Core/SDWebImageError.h; sourceTree = "<group>"; };
+		08171A34191FD1035A1D0642F3CD1D66 /* crashlytics.nanopb.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = crashlytics.nanopb.h; path = Crashlytics/Protogen/nanopb/crashlytics.nanopb.h; sourceTree = "<group>"; };
+		088CF2F643EC76EA1D3936A18EB75DB6 /* SDWebImageDownloader.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageDownloader.m; path = SDWebImage/Core/SDWebImageDownloader.m; sourceTree = "<group>"; };
+		09435066C35E748BC86C398CFD9DA55C /* GDTCORConsoleLogger.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCORConsoleLogger.m; path = GoogleDataTransport/GDTCORLibrary/GDTCORConsoleLogger.m; sourceTree = "<group>"; };
+		095D2CE347D3EDE7166CEDE9D4199284 /* FIRMessagingAuthService.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingAuthService.m; path = FirebaseMessaging/Sources/Token/FIRMessagingAuthService.m; sourceTree = "<group>"; };
+		097D48545465F63FE424FA9880FB74CE /* CTFeatureFlagsController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTFeatureFlagsController.h; path = CleverTapSDK/FeatureFlags/controllers/CTFeatureFlagsController.h; sourceTree = "<group>"; };
+		09870467C5FE392DA2F75C51048A1D1F /* FIRCLSProfiling.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSProfiling.c; path = Crashlytics/Crashlytics/Helpers/FIRCLSProfiling.c; sourceTree = "<group>"; };
+		09BD54587005B4CFDA4099FB660EB5A2 /* CTUserMO+CoreDataProperties.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "CTUserMO+CoreDataProperties.h"; path = "CleverTapSDK/Inbox/models/CTUserMO+CoreDataProperties.h"; sourceTree = "<group>"; };
+		09EAD9D867B9C50E0472128EB5F9862D /* SDGraphicsImageRenderer.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDGraphicsImageRenderer.m; path = SDWebImage/Core/SDGraphicsImageRenderer.m; sourceTree = "<group>"; };
+		0A4ADA13CC4AD309592412458CC3808B /* FIRInstallationsSingleOperationPromiseCache.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsSingleOperationPromiseCache.h; path = FirebaseInstallations/Source/Library/InstallationsIDController/FIRInstallationsSingleOperationPromiseCache.h; sourceTree = "<group>"; };
+		0A77A5FAFD83F97BC2889B771ED51623 /* Alamofire.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = Alamofire.release.xcconfig; sourceTree = "<group>"; };
+		0B37A8970CAEA70232DD52FC9C450F23 /* GoogleUtilities.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = GoogleUtilities.debug.xcconfig; sourceTree = "<group>"; };
+		0B64AE9167872042E428F7D883D85F3D /* SwiftMessages.Config+Extensions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "SwiftMessages.Config+Extensions.swift"; path = "SwiftMessages/SwiftMessages.Config+Extensions.swift"; sourceTree = "<group>"; };
+		0C43C6D098D5F27300519E2ACB18CC94 /* FIRCLSFile.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSFile.m; path = Crashlytics/Crashlytics/Helpers/FIRCLSFile.m; sourceTree = "<group>"; };
+		0C663B636A0A6DF6ECB08F8336F5F5E8 /* CTBaseHeaderFooterViewControllerPrivate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTBaseHeaderFooterViewControllerPrivate.h; path = CleverTapSDK/InApps/CTBaseHeaderFooterViewControllerPrivate.h; sourceTree = "<group>"; };
+		0CC4C350AA4CA1D6AE47768675A838EC /* GDTCOREndpoints_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCOREndpoints_Private.h; path = GoogleDataTransport/GDTCORLibrary/Private/GDTCOREndpoints_Private.h; sourceTree = "<group>"; };
+		0CD5177F5E21C1A5F1898E33373CE290 /* PageViewDirection.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PageViewDirection.swift; path = Parchment/Enums/PageViewDirection.swift; sourceTree = "<group>"; };
+		0D0E401D3615FD797F240B881C59F11A /* GoogleDataTransport-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "GoogleDataTransport-Info.plist"; sourceTree = "<group>"; };
+		0D369D3DB2F5A175E431A6CAB140ED31 /* CleverTap-iOS-SDK-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "CleverTap-iOS-SDK-dummy.m"; sourceTree = "<group>"; };
+		0D40A84964C7D330E117AB62AC1B364D /* URLEncodedFormEncoder.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = URLEncodedFormEncoder.swift; path = Source/URLEncodedFormEncoder.swift; sourceTree = "<group>"; };
+		0D413554D9DE58E68E04AFCE8A6E77D4 /* FIRInstallationsHTTPError.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallationsHTTPError.m; path = FirebaseInstallations/Source/Library/Errors/FIRInstallationsHTTPError.m; sourceTree = "<group>"; };
+		0D53E675F7CB22E401B3AD432D761B79 /* GULAppDelegateSwizzler.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULAppDelegateSwizzler.m; path = GoogleUtilities/AppDelegateSwizzler/GULAppDelegateSwizzler.m; sourceTree = "<group>"; };
+		0DED65E99D33AA6B3972850BE508F796 /* FIRCoreDiagnosticsConnector.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCoreDiagnosticsConnector.h; path = FirebaseCore/Sources/Private/FIRCoreDiagnosticsConnector.h; sourceTree = "<group>"; };
+		0DFB0B50E9529BEB7D5493193AB46B2A /* UIColor+SDHexString.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIColor+SDHexString.h"; path = "SDWebImage/Private/UIColor+SDHexString.h"; sourceTree = "<group>"; };
+		0E0468412EF820D639BE54469632A91C /* FIROptionsInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIROptionsInternal.h; path = FirebaseCore/Sources/Private/FIROptionsInternal.h; sourceTree = "<group>"; };
+		0E1FECFE7C02ADCB3C2FD177E6AF7D3A /* GULKeychainStorage.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULKeychainStorage.m; path = GoogleUtilities/Environment/SecureStorage/GULKeychainStorage.m; sourceTree = "<group>"; };
+		0E70959CD60D842ACA6CE2B51D91E526 /* ic_play@1x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "ic_play@1x.png"; path = "CleverTapSDK/Inbox/resources/ic_play@1x.png"; sourceTree = "<group>"; };
+		0E71518EED12326C46CD9DF60C27334D /* FirebaseCrashlytics-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "FirebaseCrashlytics-dummy.m"; sourceTree = "<group>"; };
+		0EE36995E04DC26BB8F7055BD9447034 /* FIRCLSFeatures.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSFeatures.h; path = Crashlytics/Crashlytics/Helpers/FIRCLSFeatures.h; sourceTree = "<group>"; };
+		0F1A555B1EAA77D7ACFAEF676BE85AA6 /* FIRCoreDiagnosticsConnector.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCoreDiagnosticsConnector.h; path = FirebaseCore/Sources/Private/FIRCoreDiagnosticsConnector.h; sourceTree = "<group>"; };
+		0F2A034BF9635154F9EDADBC13582B78 /* FIRCLSMachException.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSMachException.c; path = Crashlytics/Crashlytics/Handlers/FIRCLSMachException.c; sourceTree = "<group>"; };
+		0F48EDA3114DA9925E10DE51D1FC22E1 /* SDImageIOAnimatedCoderInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageIOAnimatedCoderInternal.h; path = SDWebImage/Private/SDImageIOAnimatedCoderInternal.h; sourceTree = "<group>"; };
+		0FD60F0891EE026947C37C7CB0D9BC38 /* SDWebImageOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageOperation.m; path = SDWebImage/Core/SDWebImageOperation.m; sourceTree = "<group>"; };
+		102FEB917074560B516FCF246347CFDC /* CTInboxBaseMessageCell.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTInboxBaseMessageCell.h; path = CleverTapSDK/Inbox/cells/CTInboxBaseMessageCell.h; sourceTree = "<group>"; };
+		103191D098277BDD1D12D744902DD282 /* FIRCLSInternalReport.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSInternalReport.m; path = Crashlytics/Crashlytics/Models/FIRCLSInternalReport.m; sourceTree = "<group>"; };
+		10693E03B70C5AAB19817C2D49D4E946 /* CTVideoThumbnailGenerator.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTVideoThumbnailGenerator.h; path = CleverTapSDK/Inbox/views/CTVideoThumbnailGenerator.h; sourceTree = "<group>"; };
+		108E35351046A0DD394C1AD68BAA0D5F /* CleverTap+InAppNotifications.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "CleverTap+InAppNotifications.h"; path = "CleverTapSDK/CleverTap+InAppNotifications.h"; sourceTree = "<group>"; };
+		10F1CBAAD39297482929C00743C27E5E /* SDImageAPNGCoder.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageAPNGCoder.m; path = SDWebImage/Core/SDImageAPNGCoder.m; sourceTree = "<group>"; };
+		111264B8DD3ECAC5F1147910FE2C7257 /* GULSceneDelegateSwizzler.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULSceneDelegateSwizzler.m; path = GoogleUtilities/AppDelegateSwizzler/GULSceneDelegateSwizzler.m; sourceTree = "<group>"; };
+		112701C44F751ABF2F9B4AF8D984BC9E /* FIRCrashlyticsReport.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCrashlyticsReport.h; path = Crashlytics/Crashlytics/Public/FirebaseCrashlytics/FIRCrashlyticsReport.h; sourceTree = "<group>"; };
+		11E74AE378217B59F28F9B33D336E63E /* GDTCOREventTransformer.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCOREventTransformer.h; path = GoogleDataTransport/GDTCORLibrary/Public/GoogleDataTransport/GDTCOREventTransformer.h; sourceTree = "<group>"; };
+		1220F0AEBD402990A094A56E5519B252 /* SurfaceView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = SurfaceView.swift; path = Sources/SurfaceView.swift; sourceTree = "<group>"; };
+		12317699BE712AB944F1D70D70FF486B /* FIRStackFrame.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRStackFrame.m; path = Crashlytics/Crashlytics/FIRStackFrame.m; sourceTree = "<group>"; };
+		1231E02200F433ECD0B01C536277EA47 /* PagingViewControllerSizeDelegate.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingViewControllerSizeDelegate.swift; path = Parchment/Protocols/PagingViewControllerSizeDelegate.swift; sourceTree = "<group>"; };
+		130BCF25F8EFB0AAF794C70B9BD843A7 /* PagingMenuDelegate.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingMenuDelegate.swift; path = Parchment/Protocols/PagingMenuDelegate.swift; sourceTree = "<group>"; };
+		130DE1D96761C621230D2126DE698ED2 /* warningIcon@3x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "warningIcon@3x.png"; path = "SwiftMessages/Resources/warningIcon@3x.png"; sourceTree = "<group>"; };
+		131B67144BF1759067EFC857B8D3970B /* SDImageHEICCoder.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageHEICCoder.h; path = SDWebImage/Core/SDImageHEICCoder.h; sourceTree = "<group>"; };
+		133258E16B62920DD098E69077213EA9 /* CTNotificationButton.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTNotificationButton.h; path = CleverTapSDK/CTNotificationButton.h; sourceTree = "<group>"; };
+		133347D6FC613AF1EF7654DDA29A783F /* Presenter.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Presenter.swift; path = SwiftMessages/Presenter.swift; sourceTree = "<group>"; };
+		136309EA332758D6F80642442B5E8D0E /* FIRCLSBinaryImage.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSBinaryImage.h; path = Crashlytics/Crashlytics/Components/FIRCLSBinaryImage.h; sourceTree = "<group>"; };
+		13973C7687555C65B070CFE8D8979222 /* FIRCLSDataParsing.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSDataParsing.c; path = Crashlytics/Crashlytics/Unwind/Dwarf/FIRCLSDataParsing.c; sourceTree = "<group>"; };
 		13C8C8B254851998F9289F71229B28A2 /* FirebaseInstallations */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; name = FirebaseInstallations; path = FirebaseInstallations.framework; sourceTree = BUILT_PRODUCTS_DIR; };
-		13C9B88517CF2741270C4CDBD187660B /* FirebaseAnalytics-xcframeworks.sh */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.script.sh; path = "FirebaseAnalytics-xcframeworks.sh"; sourceTree = "<group>"; };
-		14299BD462CF9AE53F47C742D3CD9333 /* warningIconSubtle@3x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "warningIconSubtle@3x.png"; path = "SwiftMessages/Resources/warningIconSubtle@3x.png"; sourceTree = "<group>"; };
-		145088D7EBFE0864197F5353392E8564 /* PageViewManagerDataSource.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PageViewManagerDataSource.swift; path = Parchment/Protocols/PageViewManagerDataSource.swift; sourceTree = "<group>"; };
-		14A0154549BC6B9D723CF3CD21AD757E /* FIRDiagnosticsData.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRDiagnosticsData.m; path = FirebaseCore/Sources/FIRDiagnosticsData.m; sourceTree = "<group>"; };
-		14ADB4B25F4A5731F0262BD0933E1882 /* FIRCLSNotificationManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSNotificationManager.m; path = Crashlytics/Crashlytics/Controllers/FIRCLSNotificationManager.m; sourceTree = "<group>"; };
-		15363AA9CDA2D555A3610017BC9EB631 /* FIRComponentContainer.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRComponentContainer.h; path = FirebaseCore/Sources/Private/FIRComponentContainer.h; sourceTree = "<group>"; };
-		1552C6521173FBF69073573A1151B5AB /* GoogleAppMeasurement.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = GoogleAppMeasurement.release.xcconfig; sourceTree = "<group>"; };
-		159C80CACA54DFF8D6F74DEE7F831816 /* FIRCLSURLBuilder.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSURLBuilder.m; path = Crashlytics/Shared/FIRCLSNetworking/FIRCLSURLBuilder.m; sourceTree = "<group>"; };
-		15C6A36B6E99431DE86A48313DD6C352 /* UIButton+WebCache.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIButton+WebCache.h"; path = "SDWebImage/Core/UIButton+WebCache.h"; sourceTree = "<group>"; };
-		15E667F7D283F5EF8572AD4163007E25 /* IQKeyboardManagerSwift-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "IQKeyboardManagerSwift-Info.plist"; sourceTree = "<group>"; };
-		16093C3D5DFCD00473524084A6361E0D /* FIRExceptionModel.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRExceptionModel.h; path = Crashlytics/Crashlytics/Public/FirebaseCrashlytics/FIRExceptionModel.h; sourceTree = "<group>"; };
-		1616545B6495DEED07D2AEA409A3CAD6 /* FIRCLSExistingReportManager_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSExistingReportManager_Private.h; path = Crashlytics/Crashlytics/Private/FIRCLSExistingReportManager_Private.h; sourceTree = "<group>"; };
-		1633D12251D0DF55487F686928C7DC47 /* FIRInstallationsErrorUtil.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsErrorUtil.h; path = FirebaseInstallations/Source/Library/Errors/FIRInstallationsErrorUtil.h; sourceTree = "<group>"; };
-		1642E0154D3E203C3D898AA1DA97DBF3 /* GULURLSessionDataResponse.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULURLSessionDataResponse.h; path = GoogleUtilities/Environment/Public/GoogleUtilities/GULURLSessionDataResponse.h; sourceTree = "<group>"; };
-		1656CAE4D5704E7C6025E99D33DE4027 /* FIRInstallationsHTTPError.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallationsHTTPError.m; path = FirebaseInstallations/Source/Library/Errors/FIRInstallationsHTTPError.m; sourceTree = "<group>"; };
-		166159DA9B07652F3D5C527DEDE747B2 /* NSData+ImageContentType.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "NSData+ImageContentType.m"; path = "SDWebImage/Core/NSData+ImageContentType.m"; sourceTree = "<group>"; };
-		167117637A1CEAC5956A4B4BBD1788BA /* GDTCORAssert.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCORAssert.m; path = GoogleDataTransport/GDTCORLibrary/GDTCORAssert.m; sourceTree = "<group>"; };
-		167A5846E15CE9BC9E07724B324CA449 /* FIRInstallationsIIDTokenStore.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallationsIIDTokenStore.m; path = FirebaseInstallations/Source/Library/IIDMigration/FIRInstallationsIIDTokenStore.m; sourceTree = "<group>"; };
-		16805A0DDEE3C5CEC6DD21E0141B53FF /* SDWebImage.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = SDWebImage.modulemap; sourceTree = "<group>"; };
-		1687117408592C51A70B7734E3083D1F /* ct_volume_off.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = ct_volume_off.png; path = CleverTapSDK/Inbox/resources/ct_volume_off.png; sourceTree = "<group>"; };
-		16947967B3C830BE2415845243AAD805 /* SDImageGIFCoder.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageGIFCoder.m; path = SDWebImage/Core/SDImageGIFCoder.m; sourceTree = "<group>"; };
-		16A1EB6B7DDC93422EFB234A02E1893C /* UIImageView+WebCache.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIImageView+WebCache.h"; path = "SDWebImage/Core/UIImageView+WebCache.h"; sourceTree = "<group>"; };
-		16BED021AF23370BFDD1A3B2918042DC /* FBLPromise+Recover.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Recover.h"; path = "Sources/FBLPromises/include/FBLPromise+Recover.h"; sourceTree = "<group>"; };
-		17687AEDC465DBF47DF0A47AB1E767D7 /* CTInboxUtils.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTInboxUtils.h; path = CleverTapSDK/Inbox/models/CTInboxUtils.h; sourceTree = "<group>"; };
-		1770BA0138EBB11CE80BFC78F2D52859 /* ic_play@3x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "ic_play@3x.png"; path = "CleverTapSDK/Inbox/resources/ic_play@3x.png"; sourceTree = "<group>"; };
-		17778B90B1F840392420CED28D29C0A0 /* FIRCLSDwarfExpressionMachine.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSDwarfExpressionMachine.c; path = Crashlytics/Crashlytics/Unwind/Dwarf/FIRCLSDwarfExpressionMachine.c; sourceTree = "<group>"; };
-		179A4216EEBFC9922ACA5D71FAA8972C /* FIRCLSByteUtility.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSByteUtility.h; path = Crashlytics/Shared/FIRCLSByteUtility.h; sourceTree = "<group>"; };
-		17B0FBFE565BF9282BC15F8E77A34CEB /* UIEdgeInsets+Extensions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "UIEdgeInsets+Extensions.swift"; path = "SwiftMessages/UIEdgeInsets+Extensions.swift"; sourceTree = "<group>"; };
-		17DD1D345C7785B33A30949E96471BC1 /* errorIconSubtle@2x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "errorIconSubtle@2x.png"; path = "SwiftMessages/Resources/errorIconSubtle@2x.png"; sourceTree = "<group>"; };
-		1819F954772AC1629099CC3D43902010 /* CleverTap+Inbox.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "CleverTap+Inbox.h"; path = "CleverTapSDK/CleverTap+Inbox.h"; sourceTree = "<group>"; };
-		182F29B97C01ECA6EC115310D214D410 /* FBLPromise+Async.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Async.h"; path = "Sources/FBLPromises/include/FBLPromise+Async.h"; sourceTree = "<group>"; };
-		18451D9F8E8F33AC383644EF757B22BF /* NSURLSession+GULPromises.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "NSURLSession+GULPromises.h"; path = "GoogleUtilities/Environment/Public/GoogleUtilities/NSURLSession+GULPromises.h"; sourceTree = "<group>"; };
-		1872AD9A8FFD4F9E23AEBADCC9BEE45B /* PagingView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingView.swift; path = Parchment/Classes/PagingView.swift; sourceTree = "<group>"; };
-		18752D526BB913CAA18E687102B4EBF5 /* FIRCLSRecordApplication.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSRecordApplication.m; path = Crashlytics/Crashlytics/Models/Record/FIRCLSRecordApplication.m; sourceTree = "<group>"; };
-		189F9D4EEE27F800B887EE1024AE6D14 /* PassthroughView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PassthroughView.swift; path = SwiftMessages/PassthroughView.swift; sourceTree = "<group>"; };
-		18BCEB56EE9600B6931EC7B7BF317682 /* FIRCLSHost.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSHost.h; path = Crashlytics/Crashlytics/Components/FIRCLSHost.h; sourceTree = "<group>"; };
-		18F8C2F7A766F5CE76610B0C535F7F87 /* IQKeyboardManagerSwift.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = IQKeyboardManagerSwift.debug.xcconfig; sourceTree = "<group>"; };
-		1971254BE7DB209B9554AAB6A126AC21 /* FloatingPanel.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FloatingPanel.debug.xcconfig; sourceTree = "<group>"; };
-		197B7BB8FC6159F2916743A71E84FE38 /* CleverTapInboxViewController.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = CleverTapInboxViewController.xib; path = CleverTapSDK/Inbox/resources/CleverTapInboxViewController.xib; sourceTree = "<group>"; };
-		19B5DBA196BDF68A2AFAA52BD3865A70 /* Layout.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Layout.swift; path = Sources/Layout.swift; sourceTree = "<group>"; };
-		19FC8042FA6C05FAEDC773916FFACE88 /* Alamofire.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = Alamofire.modulemap; sourceTree = "<group>"; };
-		1A90B298AF9187CAEBD82971511622CE /* CTInterstitialImageViewController~ipadland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTInterstitialImageViewController~ipadland.xib"; path = "CleverTapSDK/InApps/resources/CTInterstitialImageViewController~ipadland.xib"; sourceTree = "<group>"; };
-		1AB7829E59DB142E1CE334E8EA5FF044 /* FIRCLSCompoundOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSCompoundOperation.m; path = Crashlytics/Shared/FIRCLSOperation/FIRCLSCompoundOperation.m; sourceTree = "<group>"; };
+		13DA60524A8C07279D7AE42F239BAA37 /* CTInboxSimpleMessageCell~land.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTInboxSimpleMessageCell~land.xib"; path = "CleverTapSDK/Inbox/resources/CTInboxSimpleMessageCell~land.xib"; sourceTree = "<group>"; };
+		13DFA9E0C535E4E85F9B007F38EB6120 /* FIROptions.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIROptions.m; path = FirebaseCore/Sources/FIROptions.m; sourceTree = "<group>"; };
+		148B695EA098BF5DD231693DD2946588 /* UIColor+interpolation.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "UIColor+interpolation.swift"; path = "Parchment/Extensions/UIColor+interpolation.swift"; sourceTree = "<group>"; };
+		14B2E5E8C0FA89DCDBC939D7D8D0E000 /* me.nanopb.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = me.nanopb.h; path = FirebaseMessaging/Sources/Protogen/nanopb/me.nanopb.h; sourceTree = "<group>"; };
+		14C7D79312B17BF119150D041531E333 /* FIRInstallationsItem+RegisterInstallationAPI.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FIRInstallationsItem+RegisterInstallationAPI.h"; path = "FirebaseInstallations/Source/Library/InstallationsAPI/FIRInstallationsItem+RegisterInstallationAPI.h"; sourceTree = "<group>"; };
+		154F7E358BD756096D0AC996095BDFDA /* FIRLoggerLevel.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRLoggerLevel.h; path = FirebaseCore/Sources/Public/FirebaseCore/FIRLoggerLevel.h; sourceTree = "<group>"; };
+		155F0B63DD2275CFEBFCACEB4971D7A5 /* FIRCLSLaunchMarkerModel.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSLaunchMarkerModel.h; path = Crashlytics/Crashlytics/Models/FIRCLSLaunchMarkerModel.h; sourceTree = "<group>"; };
+		159E823BEE089BA2AA21B144B434CA98 /* StringEncoding+Alamofire.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "StringEncoding+Alamofire.swift"; path = "Source/StringEncoding+Alamofire.swift"; sourceTree = "<group>"; };
+		15CEDDFB0B74F41CD199B26D69EADB53 /* SDWebImage.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = SDWebImage.modulemap; sourceTree = "<group>"; };
+		162678BFCC1CB8F74EB24AF27C602B45 /* Tween.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Tween.swift; path = Parchment/Protocols/Tween.swift; sourceTree = "<group>"; };
+		16782505DCDD1F2BA192551BE6531142 /* UIImageView+HighlightedWebCache.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIImageView+HighlightedWebCache.h"; path = "SDWebImage/Core/UIImageView+HighlightedWebCache.h"; sourceTree = "<group>"; };
+		169518FA227FE4644FA62E929600D37C /* GDTCORStorageEventSelector.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCORStorageEventSelector.m; path = GoogleDataTransport/GDTCORLibrary/GDTCORStorageEventSelector.m; sourceTree = "<group>"; };
+		1697729317EED4E2BC4476F73552DE1B /* FIRInteropEventNames.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInteropEventNames.h; path = Interop/Analytics/Public/FIRInteropEventNames.h; sourceTree = "<group>"; };
+		16E7F6FC731BC8F40A85322F0DF32BD2 /* FIRCLSDataCollectionArbiter.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSDataCollectionArbiter.m; path = Crashlytics/Crashlytics/DataCollection/FIRCLSDataCollectionArbiter.m; sourceTree = "<group>"; };
+		16FD9A38AA901B7278757CA810C37BDE /* FIRMessagingLogger.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingLogger.h; path = FirebaseMessaging/Sources/FIRMessagingLogger.h; sourceTree = "<group>"; };
+		1745F3708F561ED94635701ED78E5D97 /* SDDiskCache.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDDiskCache.h; path = SDWebImage/Core/SDDiskCache.h; sourceTree = "<group>"; };
+		17766849ABC4CA67FEE2299ACD1F263E /* GDTCOREvent.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCOREvent.m; path = GoogleDataTransport/GDTCORLibrary/GDTCOREvent.m; sourceTree = "<group>"; };
+		1778DDCBBD78B2323FE9A2C43E8E4C8E /* PagingCellLayoutAttributes.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingCellLayoutAttributes.swift; path = Parchment/Classes/PagingCellLayoutAttributes.swift; sourceTree = "<group>"; };
+		177C4F6E9757398ACB98C4840D964A48 /* FirebaseInstallationsInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FirebaseInstallationsInternal.h; path = FirebaseInstallations/Source/Library/Private/FirebaseInstallationsInternal.h; sourceTree = "<group>"; };
+		178A5A562C7B251C7EA4C707E63B4332 /* IQKeyboardManagerSwift-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "IQKeyboardManagerSwift-prefix.pch"; sourceTree = "<group>"; };
+		17A5436C35B8B764D42CFEBD58A400E3 /* CTAVPlayerViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTAVPlayerViewController.m; path = CleverTapSDK/InApps/CTAVPlayerViewController.m; sourceTree = "<group>"; };
+		17BD192FABF82ADEEA0C5FD796E9A785 /* FIRCLSFABAsyncOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSFABAsyncOperation.h; path = Crashlytics/Shared/FIRCLSOperation/FIRCLSFABAsyncOperation.h; sourceTree = "<group>"; };
+		17FF3B0A4568B65A4CB6B942FFDBA4BC /* DispatchQueue+Alamofire.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "DispatchQueue+Alamofire.swift"; path = "Source/DispatchQueue+Alamofire.swift"; sourceTree = "<group>"; };
+		1804EA3B1F118361F3376D2D1CE1F0DE /* nanopb.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = nanopb.modulemap; sourceTree = "<group>"; };
+		186BC538B6E17052FFAEE93AA20E3243 /* GDTCCTCompressionHelper.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCCTCompressionHelper.h; path = GoogleDataTransport/GDTCCTLibrary/Private/GDTCCTCompressionHelper.h; sourceTree = "<group>"; };
+		18992E27AE700F56B5DB705B655F0F52 /* UIImage+Transform.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIImage+Transform.h"; path = "SDWebImage/Core/UIImage+Transform.h"; sourceTree = "<group>"; };
+		18C561958FDCA6637268BB7CC6067943 /* FBLPromiseError.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FBLPromiseError.m; path = Sources/FBLPromises/FBLPromiseError.m; sourceTree = "<group>"; };
+		18C62BAC207A85F82B6941F737B372A4 /* GDTCCTNanopbHelpers.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCCTNanopbHelpers.m; path = GoogleDataTransport/GDTCCTLibrary/GDTCCTNanopbHelpers.m; sourceTree = "<group>"; };
+		18D13EE67EF6BAFCB2797EA55CB33541 /* FIROptionsInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIROptionsInternal.h; path = FirebaseCore/Sources/Private/FIROptionsInternal.h; sourceTree = "<group>"; };
+		18D517B442F61ED4B06E857E8E93E899 /* PageViewControllerDelegate.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PageViewControllerDelegate.swift; path = Parchment/Protocols/PageViewControllerDelegate.swift; sourceTree = "<group>"; };
+		191046A623EC8FB55D720900BDE2B4F4 /* GDTCORUploadCoordinator.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORUploadCoordinator.h; path = GoogleDataTransport/GDTCORLibrary/Private/GDTCORUploadCoordinator.h; sourceTree = "<group>"; };
+		1951B2A7EDF84F198C3FE472FAA1B4EF /* me.nanopb.c */ = {isa = PBXFileReference; includeInIndex = 1; name = me.nanopb.c; path = FirebaseMessaging/Sources/Protogen/nanopb/me.nanopb.c; sourceTree = "<group>"; };
+		19891641EDAEEBD967909B0BBBB6E3C7 /* GULURLSessionDataResponse.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULURLSessionDataResponse.h; path = GoogleUtilities/Environment/Public/GoogleUtilities/GULURLSessionDataResponse.h; sourceTree = "<group>"; };
+		1A0B8567851D82A974B37215FE2CFA3D /* pb.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = pb.h; sourceTree = "<group>"; };
+		1A1DDD2C26E8DAD47DD360ADC4AF3005 /* SDImageLoader.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageLoader.m; path = SDWebImage/Core/SDImageLoader.m; sourceTree = "<group>"; };
+		1A31901570543C709EE2DCBC5047489A /* CTUriHelper.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTUriHelper.m; path = CleverTapSDK/CTUriHelper.m; sourceTree = "<group>"; };
+		1A57C2F130634A1883E39E6AB20FC4EC /* FirebaseAnalytics.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FirebaseAnalytics.release.xcconfig; sourceTree = "<group>"; };
+		1A9D29D53F9B58E97CB18081989D3AF1 /* FirebaseCoreInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FirebaseCoreInternal.h; path = FirebaseCore/Sources/Private/FirebaseCoreInternal.h; sourceTree = "<group>"; };
 		1AB92E1A348B19D65DA69C7F0DAC8F11 /* CoreGraphics.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = CoreGraphics.framework; path = Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS14.0.sdk/System/Library/Frameworks/CoreGraphics.framework; sourceTree = DEVELOPER_DIR; };
-		1AC6F18356BD79350CCC1A8CADBAF5C1 /* FIRInstallationsAuthTokenResultInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsAuthTokenResultInternal.h; path = FirebaseInstallations/Source/Library/FIRInstallationsAuthTokenResultInternal.h; sourceTree = "<group>"; };
-		1B376A169C2C9346A1F123BFA20999AF /* CTCarouselMessageCell~port.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTCarouselMessageCell~port.xib"; path = "CleverTapSDK/Inbox/resources/CTCarouselMessageCell~port.xib"; sourceTree = "<group>"; };
-		1C280C2C42735CFD7D96214E3C0D624F /* FBLPromise.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FBLPromise.m; path = Sources/FBLPromises/FBLPromise.m; sourceTree = "<group>"; };
-		1C43354A61438F96FA62BA716DF82B72 /* GDTCCTCompressionHelper.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCCTCompressionHelper.m; path = GoogleDataTransport/GDTCCTLibrary/GDTCCTCompressionHelper.m; sourceTree = "<group>"; };
-		1C4E0BF8C759F8D1F2B6F92B078E65D7 /* FIROptions.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIROptions.h; path = FirebaseCore/Sources/Public/FirebaseCore/FIROptions.h; sourceTree = "<group>"; };
-		1DC1355A4201A117D7690FEE298FDFAD /* FIRCLSMachOSlice.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSMachOSlice.m; path = Crashlytics/Shared/FIRCLSMachO/FIRCLSMachOSlice.m; sourceTree = "<group>"; };
+		1B071E3F432B79EB83E6DB5484A1DF84 /* CTHalfInterstitialViewController~ipadland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTHalfInterstitialViewController~ipadland.xib"; path = "CleverTapSDK/InApps/resources/CTHalfInterstitialViewController~ipadland.xib"; sourceTree = "<group>"; };
+		1B2F239900BA149C33F8F4C8694F908F /* CTInAppDisplayViewControllerPrivate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTInAppDisplayViewControllerPrivate.h; path = CleverTapSDK/CTInAppDisplayViewControllerPrivate.h; sourceTree = "<group>"; };
+		1B4B8388F81E252578BDDDBCC8DC1E3A /* FIRMessagingCode.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingCode.h; path = FirebaseMessaging/Sources/FIRMessagingCode.h; sourceTree = "<group>"; };
+		1B6F2061D025B719C7A44CDAC34893CE /* FIRCLSExistingReportManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSExistingReportManager.h; path = Crashlytics/Crashlytics/Controllers/FIRCLSExistingReportManager.h; sourceTree = "<group>"; };
+		1BF0227D80A76E307AA95D415FD11D8D /* FIRMessagingKeychain.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingKeychain.h; path = FirebaseMessaging/Sources/Token/FIRMessagingKeychain.h; sourceTree = "<group>"; };
+		1C3136CBA42B04A5564E47B14415870A /* SDImageGIFCoder.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageGIFCoder.m; path = SDWebImage/Core/SDImageGIFCoder.m; sourceTree = "<group>"; };
+		1C324AF75439C9F991BB7AB266737095 /* FIRCLSFileManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSFileManager.h; path = Crashlytics/Crashlytics/Models/FIRCLSFileManager.h; sourceTree = "<group>"; };
+		1C5143128154E98083F9CCC38E887DD2 /* FIRCLSLaunchMarkerModel.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSLaunchMarkerModel.m; path = Crashlytics/Crashlytics/Models/FIRCLSLaunchMarkerModel.m; sourceTree = "<group>"; };
+		1C8C3A61B00AAC8E3523F894847420D3 /* Parchment.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = Parchment.debug.xcconfig; sourceTree = "<group>"; };
+		1CB77FD782BE533E2DA2FD90F89D54D4 /* FIRInstallations.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallations.m; path = FirebaseInstallations/Source/Library/FIRInstallations.m; sourceTree = "<group>"; };
+		1CE8F8E8FB03E480E746F4D291CBFEB6 /* GULApplication.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULApplication.h; path = GoogleUtilities/AppDelegateSwizzler/Public/GoogleUtilities/GULApplication.h; sourceTree = "<group>"; };
+		1DBA64DCD9D41971850CB5ADAA1AC257 /* FIRLibrary.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRLibrary.h; path = FirebaseCore/Sources/Private/FIRLibrary.h; sourceTree = "<group>"; };
 		1DCB984D6F9F2F52F839FA9FBB2DFD70 /* Foundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Foundation.framework; path = Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS14.0.sdk/System/Library/Frameworks/Foundation.framework; sourceTree = DEVELOPER_DIR; };
-		1DCC67CB751BEFC39AF40715A67E1833 /* NSImage+Compatibility.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "NSImage+Compatibility.m"; path = "SDWebImage/Core/NSImage+Compatibility.m"; sourceTree = "<group>"; };
-		1DF7E75690C0D039194B91B8CBA8A13A /* IQUITextFieldView+Additions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "IQUITextFieldView+Additions.swift"; path = "IQKeyboardManagerSwift/Categories/IQUITextFieldView+Additions.swift"; sourceTree = "<group>"; };
-		1E5A23181E0FF62A32A502807AAECEAA /* PagingViewControllerDelegate.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingViewControllerDelegate.swift; path = Parchment/Protocols/PagingViewControllerDelegate.swift; sourceTree = "<group>"; };
-		1E611AA309EDC5CFFCBAAD9EA043A664 /* FirebaseMessaging.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FirebaseMessaging.h; path = FirebaseMessaging/Sources/FirebaseMessaging.h; sourceTree = "<group>"; };
-		1E68EAA033829DAE37615FC8B4827292 /* FIRInteropParameterNames.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInteropParameterNames.h; path = Interop/Analytics/Public/FIRInteropParameterNames.h; sourceTree = "<group>"; };
-		1E8F7E9683EC85A353E6A2D960C718FE /* ct_default_audio.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = ct_default_audio.png; path = CleverTapSDK/Inbox/resources/ct_default_audio.png; sourceTree = "<group>"; };
-		1EA5C65CD6FB5CEE7179681880E31BE9 /* CTPreferences.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTPreferences.m; path = CleverTapSDK/CTPreferences.m; sourceTree = "<group>"; };
-		1EE07A45FBA9981DE8FF504F83F738EE /* SDFileAttributeHelper.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDFileAttributeHelper.m; path = SDWebImage/Private/SDFileAttributeHelper.m; sourceTree = "<group>"; };
-		1F8D7ED361F5D094EEDF1CBDF09864C7 /* FIRCLSCrashedMarkerFile.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSCrashedMarkerFile.c; path = Crashlytics/Crashlytics/Components/FIRCLSCrashedMarkerFile.c; sourceTree = "<group>"; };
-		1FF4630E394E64643FE68204686C542A /* NSBundle+Extensions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "NSBundle+Extensions.swift"; path = "SwiftMessages/NSBundle+Extensions.swift"; sourceTree = "<group>"; };
-		200832C7B78074291D668223B58E2745 /* ct_volume_on.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = ct_volume_on.png; path = CleverTapSDK/Inbox/resources/ct_volume_on.png; sourceTree = "<group>"; };
-		20249AACE2C5B66842F3999B5D8511B4 /* NSBezierPath+SDRoundedCorners.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "NSBezierPath+SDRoundedCorners.m"; path = "SDWebImage/Private/NSBezierPath+SDRoundedCorners.m"; sourceTree = "<group>"; };
-		209E8BF76BA3E338E2E16EB9A8D391B0 /* FIRDiagnosticsData.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRDiagnosticsData.h; path = FirebaseCore/Sources/FIRDiagnosticsData.h; sourceTree = "<group>"; };
-		20AEE4905814B8611ADF06F81DD8BD46 /* FIRCLSUtility.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSUtility.h; path = Crashlytics/Crashlytics/Helpers/FIRCLSUtility.h; sourceTree = "<group>"; };
-		21101B505C8C360FC7F359C9F8D38317 /* FIRCLSReportUploader.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSReportUploader.m; path = Crashlytics/Crashlytics/Controllers/FIRCLSReportUploader.m; sourceTree = "<group>"; };
-		216F961413BA124B8A75C8DD36349352 /* FIRMessagingCheckinPreferences.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingCheckinPreferences.m; path = FirebaseMessaging/Sources/Token/FIRMessagingCheckinPreferences.m; sourceTree = "<group>"; };
-		219A14CB235C1F34B51BDAA9B1C1F691 /* SDAnimatedImagePlayer.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDAnimatedImagePlayer.h; path = SDWebImage/Core/SDAnimatedImagePlayer.h; sourceTree = "<group>"; };
-		21A794A38BB85FB8DA2ABCE897C6D44C /* me.nanopb.c */ = {isa = PBXFileReference; includeInIndex = 1; name = me.nanopb.c; path = FirebaseMessaging/Sources/Protogen/nanopb/me.nanopb.c; sourceTree = "<group>"; };
-		21D030149566CC0E372BD730FF791FB8 /* SwiftMessagesSegue.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = SwiftMessagesSegue.swift; path = SwiftMessages/SwiftMessagesSegue.swift; sourceTree = "<group>"; };
-		21DE60D8DE9B1929CC15F3DFBCA551B1 /* PagingIndexItem.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingIndexItem.swift; path = Parchment/Structs/PagingIndexItem.swift; sourceTree = "<group>"; };
-		21E37EFF498D5C1D33DE43B7504C78DE /* FIRMessagingTopicOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingTopicOperation.h; path = FirebaseMessaging/Sources/FIRMessagingTopicOperation.h; sourceTree = "<group>"; };
-		22123EE5D81D9E7216828BBB359EDC27 /* CTHalfInterstitialViewController~ipadland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTHalfInterstitialViewController~ipadland.xib"; path = "CleverTapSDK/InApps/resources/CTHalfInterstitialViewController~ipadland.xib"; sourceTree = "<group>"; };
-		222632A66FAF0BE5AB02F1451FB6FD47 /* warningIcon.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = warningIcon.png; path = SwiftMessages/Resources/warningIcon.png; sourceTree = "<group>"; };
-		22368E06435E34AEB287F9D40FC93CA2 /* CTProductConfigController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTProductConfigController.h; path = CleverTapSDK/ProductConfig/controllers/CTProductConfigController.h; sourceTree = "<group>"; };
-		227C480E08EF2ABE8D792708EA83AD0D /* GrabberView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = GrabberView.swift; path = Sources/GrabberView.swift; sourceTree = "<group>"; };
-		2286CA42354B47E62C8FBE0AF967D912 /* FIRMessagingTokenStore.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingTokenStore.h; path = FirebaseMessaging/Sources/Token/FIRMessagingTokenStore.h; sourceTree = "<group>"; };
-		2297304CCAB522D456EB5096A1A75E53 /* SDAnimatedImage.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDAnimatedImage.h; path = SDWebImage/Core/SDAnimatedImage.h; sourceTree = "<group>"; };
-		235F36BD15EDB534D4F7316788691B27 /* SDWebImageError.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageError.m; path = SDWebImage/Core/SDWebImageError.m; sourceTree = "<group>"; };
-		2372E55AF60F025664A53BB7B2FDE813 /* SDImageCachesManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageCachesManager.m; path = SDWebImage/Core/SDImageCachesManager.m; sourceTree = "<group>"; };
-		23F6AB44A94D4C239126538D3A8F6006 /* FIRCLSInstallIdentifierModel.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSInstallIdentifierModel.m; path = Crashlytics/Crashlytics/Models/FIRCLSInstallIdentifierModel.m; sourceTree = "<group>"; };
-		23F849AB3BF9F71F30DA61731F9078E5 /* SwiftMessages-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "SwiftMessages-dummy.m"; sourceTree = "<group>"; };
-		24995C34872B83155F75C160D6D8ED6C /* UIWindow+Extensions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "UIWindow+Extensions.swift"; path = "SwiftMessages/UIWindow+Extensions.swift"; sourceTree = "<group>"; };
-		24CAA6539D0DC35004CB41DA8C53D804 /* NSButton+WebCache.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "NSButton+WebCache.m"; path = "SDWebImage/Core/NSButton+WebCache.m"; sourceTree = "<group>"; };
-		2517E9C791525DBAFBE60DEE82A16653 /* FBLPromise+Testing.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Testing.h"; path = "Sources/FBLPromises/include/FBLPromise+Testing.h"; sourceTree = "<group>"; };
-		252F17D436B7065B5118D36F4B02E9D7 /* FIRCLSFileManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSFileManager.m; path = Crashlytics/Crashlytics/Models/FIRCLSFileManager.m; sourceTree = "<group>"; };
-		25977088D01041D839B293C593FABBE9 /* FIRCLSProcessReportOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSProcessReportOperation.h; path = Crashlytics/Crashlytics/Operations/Reports/FIRCLSProcessReportOperation.h; sourceTree = "<group>"; };
+		1DFFA7DA4F922EA77956124FC176D320 /* FirebaseMessaging.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FirebaseMessaging.h; path = FirebaseMessaging/Sources/Public/FirebaseMessaging/FirebaseMessaging.h; sourceTree = "<group>"; };
+		1E142FDBE14FA93EDCB57AC7FA5A1AFD /* SDAnimatedImageView.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDAnimatedImageView.h; path = SDWebImage/Core/SDAnimatedImageView.h; sourceTree = "<group>"; };
+		1E552F6029DB590EA4CF6D58B9AEDA14 /* FBLPromises.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FBLPromises.h; path = Sources/FBLPromises/include/FBLPromises.h; sourceTree = "<group>"; };
+		1E6594E503DD7164304F3C3BB9817FDC /* GULSwizzler.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULSwizzler.h; path = GoogleUtilities/MethodSwizzler/Public/GoogleUtilities/GULSwizzler.h; sourceTree = "<group>"; };
+		1EB1BE857FD93E9ECD857C021C28B7F0 /* CleverTapInboxStyleConfig.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTapInboxStyleConfig.m; path = CleverTapSDK/Inbox/config/CleverTapInboxStyleConfig.m; sourceTree = "<group>"; };
+		1F688594575CE5C6D474B5F70D71DF18 /* FIRCLSFABHost.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSFABHost.h; path = Crashlytics/Shared/FIRCLSFABHost.h; sourceTree = "<group>"; };
+		1F6F99B0F847574EB4517CCBA2A820E4 /* FIRExceptionModel.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRExceptionModel.h; path = Crashlytics/Crashlytics/Public/FirebaseCrashlytics/FIRExceptionModel.h; sourceTree = "<group>"; };
+		1FAC360532955C22D3DCF2A47C2C2FCC /* OTPTextField.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = OTPTextField.swift; path = OTPFieldView/OTPTextField.swift; sourceTree = "<group>"; };
+		1FBD3B0F64B078A95D0CF4CDD5F7CE1E /* FIRMessagingUtilities.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingUtilities.h; path = FirebaseMessaging/Sources/FIRMessagingUtilities.h; sourceTree = "<group>"; };
+		1FD2A88FDDD9529AE715525D297E848E /* successIcon@3x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "successIcon@3x.png"; path = "SwiftMessages/Resources/successIcon@3x.png"; sourceTree = "<group>"; };
+		202490F889C3DFA222866502733A05B1 /* FIRCLSSettingsManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSSettingsManager.m; path = Crashlytics/Crashlytics/Settings/FIRCLSSettingsManager.m; sourceTree = "<group>"; };
+		203D83893E92910F68A1A048229DBF19 /* PagerTabStripError.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagerTabStripError.swift; path = Sources/PagerTabStripError.swift; sourceTree = "<group>"; };
+		2074CABF0F9D6AC3E78583284410C9D1 /* FIRCLSByteUtility.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSByteUtility.m; path = Crashlytics/Shared/FIRCLSByteUtility.m; sourceTree = "<group>"; };
+		20F1DB0CE8F2D1C38FC9C5A5450638D9 /* CTInboxIconMessageCell~land.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTInboxIconMessageCell~land.xib"; path = "CleverTapSDK/Inbox/resources/CTInboxIconMessageCell~land.xib"; sourceTree = "<group>"; };
+		20F7A70C7B17835EC9792A2A2599997C /* GDTCCTUploader.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCCTUploader.m; path = GoogleDataTransport/GDTCCTLibrary/GDTCCTUploader.m; sourceTree = "<group>"; };
+		213DD13EBAC3B6790043AB1B49772555 /* SDWebImagePrefetcher.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImagePrefetcher.m; path = SDWebImage/Core/SDWebImagePrefetcher.m; sourceTree = "<group>"; };
+		21586DF84D5543CE0A6453DA656AF4A7 /* FIRLibrary.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRLibrary.h; path = FirebaseCore/Sources/Private/FIRLibrary.h; sourceTree = "<group>"; };
+		215A668931837EB071D66CECDE4447F1 /* PagerTabStripBehaviour.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagerTabStripBehaviour.swift; path = Sources/PagerTabStripBehaviour.swift; sourceTree = "<group>"; };
+		21994099344795EFDC6618C284F4B125 /* FIRInstallationsBackoffController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallationsBackoffController.m; path = FirebaseInstallations/Source/Library/InstallationsIDController/FIRInstallationsBackoffController.m; sourceTree = "<group>"; };
+		224D83CCD5194BDED744F2EEB93777D0 /* StatusLine.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = StatusLine.xib; path = SwiftMessages/Resources/StatusLine.xib; sourceTree = "<group>"; };
+		22E0B7C90030547311F67AB73C837797 /* CTCertificatePinning.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTCertificatePinning.m; path = CleverTapSDK/CTCertificatePinning.m; sourceTree = "<group>"; };
+		2321C7692125F99F2B42DDE9D8D1B5CD /* PagingDiff.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingDiff.swift; path = Parchment/Structs/PagingDiff.swift; sourceTree = "<group>"; };
+		23942019D01A72809C83B817E82CCBE7 /* XLPagerTabStrip-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "XLPagerTabStrip-prefix.pch"; sourceTree = "<group>"; };
+		239E3D57A3C472059A5752A8DB6F765A /* GDTCORFlatFileStorage+Promises.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "GDTCORFlatFileStorage+Promises.h"; path = "GoogleDataTransport/GDTCORLibrary/Private/GDTCORFlatFileStorage+Promises.h"; sourceTree = "<group>"; };
+		2406AB64850D320660C8A9D88ECFFF69 /* FirebaseCrashlytics.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FirebaseCrashlytics.h; path = Crashlytics/Crashlytics/Public/FirebaseCrashlytics/FirebaseCrashlytics.h; sourceTree = "<group>"; };
+		24249FCDB8E42EBC4EFD4C860E7B2AFB /* FIRCLSSettings.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSSettings.m; path = Crashlytics/Crashlytics/Models/FIRCLSSettings.m; sourceTree = "<group>"; };
+		2455EBE1355DD4E39DA6C0B3B694A25B /* FBLPromise+Wrap.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Wrap.h"; path = "Sources/FBLPromises/include/FBLPromise+Wrap.h"; sourceTree = "<group>"; };
+		2459F3DE93064D159BA5D1AB34EDE072 /* Transitioning.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Transitioning.swift; path = Sources/Transitioning.swift; sourceTree = "<group>"; };
+		24884863C525924B538E4C5FB478FB7B /* CTHalfInterstitialViewController~iphoneland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTHalfInterstitialViewController~iphoneland.xib"; path = "CleverTapSDK/InApps/resources/CTHalfInterstitialViewController~iphoneland.xib"; sourceTree = "<group>"; };
+		24895867075E52825DCC77D5D6790D5E /* SDWebImageDownloaderRequestModifier.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageDownloaderRequestModifier.m; path = SDWebImage/Core/SDWebImageDownloaderRequestModifier.m; sourceTree = "<group>"; };
+		24CCA4907A69191527964CE2FBB89303 /* FBLPromise+Delay.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Delay.m"; path = "Sources/FBLPromises/FBLPromise+Delay.m"; sourceTree = "<group>"; };
+		24E995C78D55F43B7D97CD6809DBC2A8 /* SwiftMessages-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "SwiftMessages-prefix.pch"; sourceTree = "<group>"; };
+		24F31D628967F2301B998C33C6DADD56 /* FIRComponent.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRComponent.h; path = FirebaseCore/Sources/Private/FIRComponent.h; sourceTree = "<group>"; };
+		24F35EB99999F6E64B350D4AD295382E /* FIRMessaging_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessaging_Private.h; path = FirebaseMessaging/Sources/FIRMessaging_Private.h; sourceTree = "<group>"; };
+		250ED9616B8844969FB62C9CA4AFAB72 /* infoIconSubtle.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = infoIconSubtle.png; path = SwiftMessages/Resources/infoIconSubtle.png; sourceTree = "<group>"; };
+		25144FB4C541F618E196565696C9270F /* FIRMessagingRmqManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingRmqManager.h; path = FirebaseMessaging/Sources/FIRMessagingRmqManager.h; sourceTree = "<group>"; };
+		254F2748C53A27FAA6360F361F8886F1 /* CTHalfInterstitialImageViewController~ipad.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTHalfInterstitialImageViewController~ipad.xib"; path = "CleverTapSDK/InApps/resources/CTHalfInterstitialImageViewController~ipad.xib"; sourceTree = "<group>"; };
+		2596D0B4A54BA72440B5D8D6A45E3E24 /* FIRCLSSerializeSymbolicatedFramesOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSSerializeSymbolicatedFramesOperation.m; path = Crashlytics/Crashlytics/Operations/Symbolication/FIRCLSSerializeSymbolicatedFramesOperation.m; sourceTree = "<group>"; };
+		25B25D4858321861FB66920B0C80626C /* OTPFieldView.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = OTPFieldView.h; path = OTPFieldView/OTPFieldView.h; sourceTree = "<group>"; };
+		25F875350EDACB672EC7B4CF866DCD9D /* IQTitleBarButtonItem.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = IQTitleBarButtonItem.swift; path = IQKeyboardManagerSwift/IQToolbar/IQTitleBarButtonItem.swift; sourceTree = "<group>"; };
 		260123020B196BDA8229691244388A9C /* Pods-OpenBook-acknowledgements.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "Pods-OpenBook-acknowledgements.plist"; sourceTree = "<group>"; };
-		260ED9A9A1873567E85EF22CC9760E28 /* SDWebImageDownloader.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageDownloader.h; path = SDWebImage/Core/SDWebImageDownloader.h; sourceTree = "<group>"; };
-		26B9DA3EAE82D0FD9B81064539417D6B /* FIRCLSReportAdapter_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSReportAdapter_Private.h; path = Crashlytics/Crashlytics/Models/Record/FIRCLSReportAdapter_Private.h; sourceTree = "<group>"; };
-		26F8D7A22D51BB2F7D1398E4669433B6 /* FirebaseCrashlytics.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = FirebaseCrashlytics.modulemap; sourceTree = "<group>"; };
-		271DF1E424F8AE6C6F86FBAD3CAE31A0 /* CTPinnedNSURLSessionDelegate.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTPinnedNSURLSessionDelegate.m; path = CleverTapSDK/CTPinnedNSURLSessionDelegate.m; sourceTree = "<group>"; };
-		272BEBC2D5522FAFADEA7D24E588EE67 /* GULAppDelegateSwizzler.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULAppDelegateSwizzler.h; path = GoogleUtilities/AppDelegateSwizzler/Public/GoogleUtilities/GULAppDelegateSwizzler.h; sourceTree = "<group>"; };
-		274CE0CF16368739A7F818F99FD6C5F6 /* FIRLibrary.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRLibrary.h; path = FirebaseCore/Sources/Private/FIRLibrary.h; sourceTree = "<group>"; };
-		274F9CC775AEE92A0294645384547E0C /* CleverTapInstanceConfigPrivate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTapInstanceConfigPrivate.h; path = CleverTapSDK/CleverTapInstanceConfigPrivate.h; sourceTree = "<group>"; };
-		2773E84E83287DD1BD8AEE7DB3989727 /* AlamofireNetworkActivityLogger.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = AlamofireNetworkActivityLogger.release.xcconfig; sourceTree = "<group>"; };
-		27916AAFE54B43E36C7D40691D9DDAE7 /* PagerTabStripError.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagerTabStripError.swift; path = Sources/PagerTabStripError.swift; sourceTree = "<group>"; };
-		27FC85854CA3A7752B644D5FF731E040 /* FIRVersion.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRVersion.m; path = FirebaseCore/Sources/FIRVersion.m; sourceTree = "<group>"; };
-		281B68F551197A0233DD7B33C800E166 /* PromisesObjC-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "PromisesObjC-Info.plist"; sourceTree = "<group>"; };
-		28221462FA0FCF4EEFAA22D797C0B0FA /* cct.nanopb.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = cct.nanopb.h; path = GoogleDataTransport/GDTCCTLibrary/Protogen/nanopb/cct.nanopb.h; sourceTree = "<group>"; };
-		284503F7F940FEEB5949B526EDE1E466 /* XLPagerTabStrip.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = XLPagerTabStrip.modulemap; sourceTree = "<group>"; };
-		2869D60F000902691556A7FB4E60F3A0 /* Alamofire.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = Alamofire.release.xcconfig; sourceTree = "<group>"; };
-		28857D698E78757FD553C713327FF1BD /* FIRCLSDwarfUnwind.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSDwarfUnwind.h; path = Crashlytics/Crashlytics/Unwind/Dwarf/FIRCLSDwarfUnwind.h; sourceTree = "<group>"; };
-		28B09390DE866603BDDD1128649CDA85 /* FIRMessagingAnalytics.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingAnalytics.h; path = FirebaseMessaging/Sources/FIRMessagingAnalytics.h; sourceTree = "<group>"; };
-		28B8CC5DE4D54A9154A622824F38D20D /* SDWebImageDownloaderConfig.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageDownloaderConfig.h; path = SDWebImage/Core/SDWebImageDownloaderConfig.h; sourceTree = "<group>"; };
-		28DB4E634BF452B4B1347C14E0CE7992 /* PagingTitleCell.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingTitleCell.swift; path = Parchment/Classes/PagingTitleCell.swift; sourceTree = "<group>"; };
-		291CBDF92E320B388A48898EED424B56 /* FirebaseCrashlytics.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FirebaseCrashlytics.release.xcconfig; sourceTree = "<group>"; };
-		29390BB463B8ACC06DDAA33F6996B286 /* SDImageIOAnimatedCoderInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageIOAnimatedCoderInternal.h; path = SDWebImage/Private/SDImageIOAnimatedCoderInternal.h; sourceTree = "<group>"; };
-		297D6B1B2DD3DDE427A4CE49DBF4703D /* CleverTapDisplayUnit.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTapDisplayUnit.m; path = CleverTapSDK/DisplayUnit/models/CleverTapDisplayUnit.m; sourceTree = "<group>"; };
-		29990F7A92DD856E5E8A125390FA6F85 /* GULSecureCoding.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULSecureCoding.h; path = GoogleUtilities/Environment/Public/GoogleUtilities/GULSecureCoding.h; sourceTree = "<group>"; };
-		2A0345924CB157E4991C609A86526CA1 /* infoIcon@3x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "infoIcon@3x.png"; path = "SwiftMessages/Resources/infoIcon@3x.png"; sourceTree = "<group>"; };
-		2A240A2C201EB5724A7B1079CEC978AC /* CTVideoThumbnailGenerator.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTVideoThumbnailGenerator.m; path = CleverTapSDK/Inbox/views/CTVideoThumbnailGenerator.m; sourceTree = "<group>"; };
-		2A27239E794030283EFBFE048B7932F9 /* errorIconLight@3x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "errorIconLight@3x.png"; path = "SwiftMessages/Resources/errorIconLight@3x.png"; sourceTree = "<group>"; };
-		2A29105CBDDC6799339760C16C17EF36 /* CTCoverImageViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTCoverImageViewController.m; path = CleverTapSDK/InApps/CTCoverImageViewController.m; sourceTree = "<group>"; };
-		2A468032E4C58EDE9285A8280F3B2284 /* CTInterstitialViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTInterstitialViewController.m; path = CleverTapSDK/InApps/CTInterstitialViewController.m; sourceTree = "<group>"; };
-		2A5DEF72FA299A00A8A010DD4A04F737 /* infoIconLight@2x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "infoIconLight@2x.png"; path = "SwiftMessages/Resources/infoIconLight@2x.png"; sourceTree = "<group>"; };
-		2A79650B59C681C9D456C86F5DA5EE11 /* URLSessionConfiguration+Alamofire.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "URLSessionConfiguration+Alamofire.swift"; path = "Source/URLSessionConfiguration+Alamofire.swift"; sourceTree = "<group>"; };
-		2AA1C2AD577F2E8BBD17F90B554E95C1 /* FIRCLSManagerData.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSManagerData.h; path = Crashlytics/Crashlytics/Controllers/FIRCLSManagerData.h; sourceTree = "<group>"; };
-		2AC07D97DA3199CFE5FE73C9616BFF49 /* FirebaseInstallations.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = FirebaseInstallations.modulemap; sourceTree = "<group>"; };
-		2AE5740A60745A3514018FCCE626AB64 /* CTDeviceInfo.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTDeviceInfo.m; path = CleverTapSDK/CTDeviceInfo.m; sourceTree = "<group>"; };
-		2AFA75272A21F9BF924A76DEA8F4E703 /* FIRMessagingContextManagerService.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingContextManagerService.h; path = FirebaseMessaging/Sources/FIRMessagingContextManagerService.h; sourceTree = "<group>"; };
-		2B114CA94B5F791F4184389E70D0CC2B /* UIView+WebCacheOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIView+WebCacheOperation.h"; path = "SDWebImage/Core/UIView+WebCacheOperation.h"; sourceTree = "<group>"; };
-		2B245B41F35E16A534CBDCB35B0EAE13 /* FIRMessaging.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessaging.h; path = FirebaseMessaging/Sources/Public/FirebaseMessaging/FIRMessaging.h; sourceTree = "<group>"; };
-		2B2ED8054213F80B551DCF925324AAAB /* WindowViewController.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = WindowViewController.swift; path = SwiftMessages/WindowViewController.swift; sourceTree = "<group>"; };
-		2B4EEB08C9CD0ACC4A29026E7725F61D /* GDTCORReachability.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCORReachability.m; path = GoogleDataTransport/GDTCORLibrary/GDTCORReachability.m; sourceTree = "<group>"; };
-		2B8502B549CC51AE1485F9530A1BD8EC /* FBLPromise+Always.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Always.h"; path = "Sources/FBLPromises/include/FBLPromise+Always.h"; sourceTree = "<group>"; };
-		2B8BBA2191663A387AACA56987C66200 /* CTUIUtils.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTUIUtils.m; path = CleverTapSDK/CTUIUtils.m; sourceTree = "<group>"; };
-		2C0522626DB9CAB3CE7F6272BB44C086 /* youtube-ios-player-helper.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = "youtube-ios-player-helper.release.xcconfig"; sourceTree = "<group>"; };
-		2C075CF84C54808C87B9087B876BF78C /* youtube-ios-player-helper.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = "youtube-ios-player-helper.debug.xcconfig"; sourceTree = "<group>"; };
-		2C07C49245E9E8019D4059371FE7FA9D /* GoogleDataTransport-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "GoogleDataTransport-umbrella.h"; sourceTree = "<group>"; };
-		2C55438D2952F0DA8592598CA5CEA1CF /* FIRCLSDemangleOperation.mm */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSDemangleOperation.mm; path = Crashlytics/Crashlytics/Operations/Symbolication/FIRCLSDemangleOperation.mm; sourceTree = "<group>"; };
-		2CC5217A3DA772F8A728C96FA72B1FE2 /* FIRCLSProcessReportOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSProcessReportOperation.m; path = Crashlytics/Crashlytics/Operations/Reports/FIRCLSProcessReportOperation.m; sourceTree = "<group>"; };
-		2CF2EBBA0E6EF19B0ECB58A262960690 /* CTAVPlayerViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTAVPlayerViewController.h; path = CleverTapSDK/InApps/CTAVPlayerViewController.h; sourceTree = "<group>"; };
-		2DD539B684F42716277F02DE05B1C860 /* CleverTap+DisplayUnit.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "CleverTap+DisplayUnit.h"; path = "CleverTapSDK/CleverTap+DisplayUnit.h"; sourceTree = "<group>"; };
-		2E4B8BB37AFF14EA25EF75BA3575CB65 /* PagingMenuPosition.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingMenuPosition.swift; path = Parchment/Enums/PagingMenuPosition.swift; sourceTree = "<group>"; };
-		2E4D7AEFCE70AF6449B485DEC57964BC /* CleverTapConfigValue.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTapConfigValue.m; path = CleverTapSDK/ProductConfig/models/CleverTapConfigValue.m; sourceTree = "<group>"; };
-		2E6BEEE2EB5BF2E73100EF7C95C7FE73 /* GoogleUtilities.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = GoogleUtilities.debug.xcconfig; sourceTree = "<group>"; };
-		2EA948F4BA107A1BC3F641017D9063BE /* FIRCLSUserDefaults_private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSUserDefaults_private.h; path = Crashlytics/Crashlytics/FIRCLSUserDefaults/FIRCLSUserDefaults_private.h; sourceTree = "<group>"; };
-		2F04146B6EE75721E216C100A3DB8152 /* SDImageCacheDefine.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageCacheDefine.m; path = SDWebImage/Core/SDImageCacheDefine.m; sourceTree = "<group>"; };
-		2F1B9AD128B55AB5039F94D6B7D2E07F /* UIImage+GIF.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIImage+GIF.m"; path = "SDWebImage/Core/UIImage+GIF.m"; sourceTree = "<group>"; };
-		2F421BBACE649CEDC01881387FD34461 /* FloatingPanel.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FloatingPanel.release.xcconfig; sourceTree = "<group>"; };
-		2F5CAA735F02B20A7AEC1728768A9C40 /* FIRCLSDataParsing.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSDataParsing.c; path = Crashlytics/Crashlytics/Unwind/Dwarf/FIRCLSDataParsing.c; sourceTree = "<group>"; };
-		2F7B461E0B529278CBDC67EBC51E17D2 /* IQInvocation.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = IQInvocation.swift; path = IQKeyboardManagerSwift/IQToolbar/IQInvocation.swift; sourceTree = "<group>"; };
-		2F90C9417332A47B81D68187F6FB910C /* SDImageFrame.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageFrame.m; path = SDWebImage/Core/SDImageFrame.m; sourceTree = "<group>"; };
-		2F9B670ADDBC00EB32AE3C255A25B0F3 /* FirebaseAnalytics.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FirebaseAnalytics.release.xcconfig; sourceTree = "<group>"; };
-		2FAAE2EF854BD9F5800F3582FBFCCD85 /* CTInAppNotification.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTInAppNotification.m; path = CleverTapSDK/CTInAppNotification.m; sourceTree = "<group>"; };
-		2FB2854194335ACE93FDD9C05D33DD54 /* Firebase.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = Firebase.debug.xcconfig; sourceTree = "<group>"; };
-		2FBC047AA1B41786C6A7D6BA12600396 /* GDTCOREvent+GDTCCTSupport.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "GDTCOREvent+GDTCCTSupport.m"; path = "GoogleDataTransport/GDTCCTLibrary/GDTCOREvent+GDTCCTSupport.m"; sourceTree = "<group>"; };
-		2FC58CE50509D6A39E235D15B7E419E6 /* YTPlayerView.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = YTPlayerView.m; path = Classes/YTPlayerView.m; sourceTree = "<group>"; };
-		2FD20AB24F35B292F8A03FEB7D174EAC /* OTPFieldView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = OTPFieldView.swift; path = OTPFieldView/OTPFieldView.swift; sourceTree = "<group>"; };
-		2FD8FC254BC2F17D163A72B4B8C38EE5 /* CTInboxController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTInboxController.m; path = CleverTapSDK/Inbox/controllers/CTInboxController.m; sourceTree = "<group>"; };
-		2FE6EDCF3CA3D4FFB7289288A1955D9E /* FBLPromise+All.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+All.h"; path = "Sources/FBLPromises/include/FBLPromise+All.h"; sourceTree = "<group>"; };
-		2FEB5F31BC0CC99074652C6D85FA5D01 /* FIRInstallationsIIDStore.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsIIDStore.h; path = FirebaseInstallations/Source/Library/IIDMigration/FIRInstallationsIIDStore.h; sourceTree = "<group>"; };
-		30448D9146397EF03EA616DC60F6800A /* SessionDelegate.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = SessionDelegate.swift; path = Source/SessionDelegate.swift; sourceTree = "<group>"; };
-		308105C8185536584DA71C3F770D95F8 /* SDWebImageIndicator.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageIndicator.h; path = SDWebImage/Core/SDWebImageIndicator.h; sourceTree = "<group>"; };
-		30DD1A51E7CAEECA13C0A834A5A85960 /* FIRLibrary.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRLibrary.h; path = FirebaseCore/Sources/Private/FIRLibrary.h; sourceTree = "<group>"; };
-		315AEBBC56D8FBF6C3DB986951E65A07 /* SDImageLoader.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageLoader.h; path = SDWebImage/Core/SDImageLoader.h; sourceTree = "<group>"; };
-		316E57A07D6663C9041D2E1904582C61 /* PageViewController.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PageViewController.swift; path = Parchment/Classes/PageViewController.swift; sourceTree = "<group>"; };
-		31785E78D23EE508F9A53BC95375A720 /* FIRCLSExecutionIdentifierModel.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSExecutionIdentifierModel.h; path = Crashlytics/Crashlytics/Models/FIRCLSExecutionIdentifierModel.h; sourceTree = "<group>"; };
-		319578FC42AA3E4CC50DCD0C1E28F2B1 /* FIRMessagingAuthService.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingAuthService.h; path = FirebaseMessaging/Sources/Token/FIRMessagingAuthService.h; sourceTree = "<group>"; };
-		319BDE430CD1EE8A9E7979B28F8849FB /* MessageView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = MessageView.swift; path = SwiftMessages/MessageView.swift; sourceTree = "<group>"; };
-		31BBF7EA1FFDA5E1717DF17E4D912E1C /* CTMessageMO.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTMessageMO.m; path = CleverTapSDK/Inbox/models/CTMessageMO.m; sourceTree = "<group>"; };
-		321C4E2EDC0B481BC8B678BA00E666F3 /* CTInboxBaseMessageCell.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTInboxBaseMessageCell.h; path = CleverTapSDK/Inbox/cells/CTInboxBaseMessageCell.h; sourceTree = "<group>"; };
-		32345B6D3848BF6100A91865627D64B3 /* FIRCLSDataParsing.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSDataParsing.h; path = Crashlytics/Crashlytics/Unwind/Dwarf/FIRCLSDataParsing.h; sourceTree = "<group>"; };
-		324D942F88994301DBEFD80991F1C549 /* Animator.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Animator.swift; path = SwiftMessages/Animator.swift; sourceTree = "<group>"; };
-		3275CD3A583DAF97A92DE816ECE2930D /* GULKeychainStorage.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULKeychainStorage.m; path = GoogleUtilities/Environment/SecureStorage/GULKeychainStorage.m; sourceTree = "<group>"; };
-		32B4CC4DB98C07DE9E71EB685F14BE9B /* FIRCLSDataCollectionArbiter.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSDataCollectionArbiter.h; path = Crashlytics/Crashlytics/DataCollection/FIRCLSDataCollectionArbiter.h; sourceTree = "<group>"; };
-		32D08FC6F767C591D2F01CAD2B99D0CA /* FIROptionsInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIROptionsInternal.h; path = FirebaseCore/Sources/Private/FIROptionsInternal.h; sourceTree = "<group>"; };
-		333F24DA805EC09F1C08FFC8C038C9CE /* infoIcon.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = infoIcon.png; path = SwiftMessages/Resources/infoIcon.png; sourceTree = "<group>"; };
+		261A4DE451CEF97A4BDB37DA1F89B255 /* CTAlertViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTAlertViewController.h; path = CleverTapSDK/InApps/CTAlertViewController.h; sourceTree = "<group>"; };
+		265B3CAD87294958F1179293CD797A92 /* FIRHeartbeatInfo.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRHeartbeatInfo.h; path = FirebaseCore/Sources/Private/FIRHeartbeatInfo.h; sourceTree = "<group>"; };
+		26724495E42FA4433175CA470C34CEAF /* UIImage+ExtendedCacheData.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIImage+ExtendedCacheData.m"; path = "SDWebImage/Core/UIImage+ExtendedCacheData.m"; sourceTree = "<group>"; };
+		26BA89A6DDBD3575416E2F99F1678616 /* SDmetamacros.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDmetamacros.h; path = SDWebImage/Private/SDmetamacros.h; sourceTree = "<group>"; };
+		2708A54799DBC2FC9619EF81ADA80456 /* Animator.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Animator.swift; path = SwiftMessages/Animator.swift; sourceTree = "<group>"; };
+		272119F08C8C8ECD80E48DBBA8CC0ECE /* CleverTap-iOS-SDK-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "CleverTap-iOS-SDK-prefix.pch"; sourceTree = "<group>"; };
+		27B50D8766515747D9635EB33CDB8CDF /* FBLPromise+Testing.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Testing.h"; path = "Sources/FBLPromises/include/FBLPromise+Testing.h"; sourceTree = "<group>"; };
+		27DAE611403FDED1CAC48B2F760DB079 /* CTUriHelper.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTUriHelper.h; path = CleverTapSDK/CTUriHelper.h; sourceTree = "<group>"; };
+		2814C83614480C3323780473AC1733E4 /* FIRCLSDwarfUnwind.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSDwarfUnwind.h; path = Crashlytics/Crashlytics/Unwind/Dwarf/FIRCLSDwarfUnwind.h; sourceTree = "<group>"; };
+		282B6F78C41F31E6F829448C069F451A /* SDAnimatedImageView+WebCache.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "SDAnimatedImageView+WebCache.h"; path = "SDWebImage/Core/SDAnimatedImageView+WebCache.h"; sourceTree = "<group>"; };
+		28DBA0C1B8435CD694C302E196800326 /* FIRCLSAllocate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSAllocate.h; path = Crashlytics/Crashlytics/Helpers/FIRCLSAllocate.h; sourceTree = "<group>"; };
+		294AED6B8CCC7A8D918B6B946CE3196D /* Notifications.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Notifications.swift; path = Source/Notifications.swift; sourceTree = "<group>"; };
+		296BAC8CCDF29E1F2578A076FF0F326E /* FIRCLSUtility.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSUtility.m; path = Crashlytics/Crashlytics/Helpers/FIRCLSUtility.m; sourceTree = "<group>"; };
+		296BCCE94D73479E627E75B11EA8C8B5 /* GDTCORDirectorySizeTracker.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORDirectorySizeTracker.h; path = GoogleDataTransport/GDTCORLibrary/Internal/GDTCORDirectorySizeTracker.h; sourceTree = "<group>"; };
+		29B195C5CC4D32A049CE478854EC49A9 /* GDTCORReachability.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCORReachability.m; path = GoogleDataTransport/GDTCORLibrary/GDTCORReachability.m; sourceTree = "<group>"; };
+		29BF7DFC5BAF79E32B0A511257A50791 /* FBLPromise+Await.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Await.h"; path = "Sources/FBLPromises/include/FBLPromise+Await.h"; sourceTree = "<group>"; };
+		29CD212298261E9C69DD1A7EC892F1E5 /* ScrollingFollowView.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = ScrollingFollowView.debug.xcconfig; sourceTree = "<group>"; };
+		29E655228567173E6CF4113FF66D3F66 /* successIconLight@2x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "successIconLight@2x.png"; path = "SwiftMessages/Resources/successIconLight@2x.png"; sourceTree = "<group>"; };
+		29F45F731D1185D4B2B51E432440D735 /* GoogleDataTransport.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GoogleDataTransport.h; path = GoogleDataTransport/GDTCORLibrary/Public/GoogleDataTransport/GoogleDataTransport.h; sourceTree = "<group>"; };
+		2A2D6DF114ABB89068967721AD05EE5A /* CleverTapDisplayUnitContent.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTapDisplayUnitContent.m; path = CleverTapSDK/DisplayUnit/models/CleverTapDisplayUnitContent.m; sourceTree = "<group>"; };
+		2A339A5997A36DAE10D9112B1E8F2F1B /* GDTCOREventDataObject.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCOREventDataObject.h; path = GoogleDataTransport/GDTCORLibrary/Public/GoogleDataTransport/GDTCOREventDataObject.h; sourceTree = "<group>"; };
+		2A33C2F4F1D16EAAC3CFB650018577A8 /* FIRCoreDiagnosticsConnector.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCoreDiagnosticsConnector.m; path = FirebaseCore/Sources/FIRCoreDiagnosticsConnector.m; sourceTree = "<group>"; };
+		2A6A376A7509B0A6B5DC77CAA8D53E2D /* FIRCLSUUID.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSUUID.h; path = Crashlytics/Shared/FIRCLSUUID.h; sourceTree = "<group>"; };
+		2A82CE9A05B69EDF2BC415FA336EC762 /* SwiftMessagesSegue.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = SwiftMessagesSegue.swift; path = SwiftMessages/SwiftMessagesSegue.swift; sourceTree = "<group>"; };
+		2AACC34FF14DAE5B30CF6E4272C0267D /* FBLPromise+Wrap.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Wrap.m"; path = "Sources/FBLPromises/FBLPromise+Wrap.m"; sourceTree = "<group>"; };
+		2AB3B59068B5A070B1148F92011D7D88 /* FIRMessaging.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessaging.h; path = FirebaseMessaging/Sources/Public/FirebaseMessaging/FIRMessaging.h; sourceTree = "<group>"; };
+		2B14DD2A535B061F0CD9F1CCF0D5A23C /* TwitterPagerTabStripViewController.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = TwitterPagerTabStripViewController.swift; path = Sources/TwitterPagerTabStripViewController.swift; sourceTree = "<group>"; };
+		2B612428B0BB69EB3C491EC45120F215 /* CTCoverViewController~iphoneland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTCoverViewController~iphoneland.xib"; path = "CleverTapSDK/InApps/resources/CTCoverViewController~iphoneland.xib"; sourceTree = "<group>"; };
+		2B6872F6A9338C05654C2CCAD2957788 /* FIRMessagingTopicOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingTopicOperation.h; path = FirebaseMessaging/Sources/FIRMessagingTopicOperation.h; sourceTree = "<group>"; };
+		2BD03D14417E499CADE504192150F5E9 /* FIRCLSUserDefaults.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSUserDefaults.m; path = Crashlytics/Crashlytics/FIRCLSUserDefaults/FIRCLSUserDefaults.m; sourceTree = "<group>"; };
+		2BEE04978047BE2335C22AF512A995E9 /* GULLoggerCodes.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULLoggerCodes.h; path = GoogleUtilities/Common/GULLoggerCodes.h; sourceTree = "<group>"; };
+		2C20374EBDF806478C3B593001CC6E09 /* pb_decode.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = pb_decode.h; sourceTree = "<group>"; };
+		2C5A07F542DD26B4E2A108A288CB8FF4 /* SDWebImageOptionsProcessor.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageOptionsProcessor.h; path = SDWebImage/Core/SDWebImageOptionsProcessor.h; sourceTree = "<group>"; };
+		2C98CE1EF7635D4BC9827060C89ECF35 /* NSBezierPath+SDRoundedCorners.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "NSBezierPath+SDRoundedCorners.m"; path = "SDWebImage/Private/NSBezierPath+SDRoundedCorners.m"; sourceTree = "<group>"; };
+		2D12B24048616B7759256CEF1DF1CAAA /* SwiftLint.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = SwiftLint.debug.xcconfig; sourceTree = "<group>"; };
+		2D50576FB84AF3B5FD8AE7EDBE6157E8 /* FIRCLSProcess.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSProcess.h; path = Crashlytics/Crashlytics/Components/FIRCLSProcess.h; sourceTree = "<group>"; };
+		2D910114A8C3A716DDB409D6A96AA826 /* Parchment-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "Parchment-dummy.m"; sourceTree = "<group>"; };
+		2D96CD6E92D58351B5F3D9E65F11ECE8 /* FirebaseAnalytics.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FirebaseAnalytics.debug.xcconfig; sourceTree = "<group>"; };
+		2D9E463C6F51026E0E48327FF4B620C6 /* GDTCCTUploadOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCCTUploadOperation.m; path = GoogleDataTransport/GDTCCTLibrary/GDTCCTUploadOperation.m; sourceTree = "<group>"; };
+		2DA4EFCC70D9C0404923E60E2CC2F2B2 /* FIRComponentContainer.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRComponentContainer.h; path = FirebaseCore/Sources/Private/FIRComponentContainer.h; sourceTree = "<group>"; };
+		2DD906771D49AB1BEB15661309905D9A /* FIRCLSDownloadAndSaveSettingsOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSDownloadAndSaveSettingsOperation.h; path = Crashlytics/Crashlytics/Settings/Operations/FIRCLSDownloadAndSaveSettingsOperation.h; sourceTree = "<group>"; };
+		2DDEEF09EC88550BE515F220A39446B9 /* FIRFirebaseUserAgent.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRFirebaseUserAgent.h; path = FirebaseCore/Sources/FIRFirebaseUserAgent.h; sourceTree = "<group>"; };
+		2E16D904D4180FC7EF71F35F8EB2BF48 /* PagingState.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingState.swift; path = Parchment/Enums/PagingState.swift; sourceTree = "<group>"; };
+		2E17639D7D0993B02F8358B47B2FEA0F /* FIRCLSFile.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSFile.h; path = Crashlytics/Crashlytics/Helpers/FIRCLSFile.h; sourceTree = "<group>"; };
+		2F2F5EBF9A7E4E90BAD345F8D400A104 /* UserExperior.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = UserExperior.debug.xcconfig; sourceTree = "<group>"; };
+		2F59B7C2727A790A171107F0A2A86D0A /* FIRCLSSymbolicationOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSSymbolicationOperation.h; path = Crashlytics/Crashlytics/Operations/Symbolication/FIRCLSSymbolicationOperation.h; sourceTree = "<group>"; };
+		2F7ECA76DC2FE37F1233B7CFE835BD6D /* infoIconSubtle@3x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "infoIconSubtle@3x.png"; path = "SwiftMessages/Resources/infoIconSubtle@3x.png"; sourceTree = "<group>"; };
+		2FAC58CEB535CFDC22B457618105E8E2 /* FIRCLSHandler.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSHandler.h; path = Crashlytics/Crashlytics/Handlers/FIRCLSHandler.h; sourceTree = "<group>"; };
+		2FDB4306972569BE0F827037274207D7 /* errorIcon@2x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "errorIcon@2x.png"; path = "SwiftMessages/Resources/errorIcon@2x.png"; sourceTree = "<group>"; };
+		3092AB062A361EF8D432396BE2C79CD4 /* FIRInteropParameterNames.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInteropParameterNames.h; path = Interop/Analytics/Public/FIRInteropParameterNames.h; sourceTree = "<group>"; };
+		309682E258E7F680BD207FA9C2500550 /* NSButton+WebCache.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "NSButton+WebCache.m"; path = "SDWebImage/Core/NSButton+WebCache.m"; sourceTree = "<group>"; };
+		309B93B54AB8C2B2A9B760EBE5689E18 /* FIRMessagingTokenOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingTokenOperation.h; path = FirebaseMessaging/Sources/Token/FIRMessagingTokenOperation.h; sourceTree = "<group>"; };
+		30AFCAFEAF0927A792D4EA02A8502130 /* PagingCollectionViewLayout.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingCollectionViewLayout.swift; path = Parchment/Classes/PagingCollectionViewLayout.swift; sourceTree = "<group>"; };
+		30BD6F3B06CBF548344CF0A21618B001 /* FirebaseCoreDiagnostics-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "FirebaseCoreDiagnostics-umbrella.h"; sourceTree = "<group>"; };
+		30C387B7BBD24A8336AD43B4215BC158 /* FIRComponentType.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRComponentType.m; path = FirebaseCore/Sources/FIRComponentType.m; sourceTree = "<group>"; };
+		30E9A588387F092BC9B48C5C495888F4 /* UIImageView+WebCache.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIImageView+WebCache.h"; path = "SDWebImage/Core/UIImageView+WebCache.h"; sourceTree = "<group>"; };
+		30EFBB8CFF983BFD0C3616D13EEA03E0 /* FIRCLSAnalyticsManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSAnalyticsManager.m; path = Crashlytics/Crashlytics/Controllers/FIRCLSAnalyticsManager.m; sourceTree = "<group>"; };
+		31401394C2F55C10598C2A32A89A5C0C /* GoogleUtilities-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "GoogleUtilities-dummy.m"; sourceTree = "<group>"; };
+		31645683F0E428258C0FF7B24761A5D2 /* PagingNavigationOrientation.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingNavigationOrientation.swift; path = Parchment/Structs/PagingNavigationOrientation.swift; sourceTree = "<group>"; };
+		317FB977A834E31EF6A605DF5CB7B0FF /* FloatingPanel-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "FloatingPanel-prefix.pch"; sourceTree = "<group>"; };
+		31B20FC9900A8F4DCE001EAE89CC83A8 /* SDImageCacheConfig.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageCacheConfig.h; path = SDWebImage/Core/SDImageCacheConfig.h; sourceTree = "<group>"; };
+		31D94D4BA23E040B9D4B68FEB3BA19CF /* MarginAdjustable.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = MarginAdjustable.swift; path = SwiftMessages/MarginAdjustable.swift; sourceTree = "<group>"; };
+		31E88731FC2C5D10F6A4D7E323517384 /* Protected.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Protected.swift; path = Source/Protected.swift; sourceTree = "<group>"; };
+		32711DB6DC148C7BE5A985A1B84DBF29 /* GDTCCTNanopbHelpers.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCCTNanopbHelpers.h; path = GoogleDataTransport/GDTCCTLibrary/Private/GDTCCTNanopbHelpers.h; sourceTree = "<group>"; };
+		32C8242E07B4759FC48179209F028092 /* CTInAppUtils.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTInAppUtils.m; path = CleverTapSDK/CTInAppUtils.m; sourceTree = "<group>"; };
+		32DF9595FC9B1042F0F2076193C692A6 /* FirebaseCore-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "FirebaseCore-umbrella.h"; sourceTree = "<group>"; };
 		3347A1AB6546F0A3977529B8F199DC41 /* PromisesObjC */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; name = PromisesObjC; path = FBLPromises.framework; sourceTree = BUILT_PRODUCTS_DIR; };
-		335F088E79987EEA6D68186FDB791FC9 /* SDWebImageCacheKeyFilter.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageCacheKeyFilter.h; path = SDWebImage/Core/SDWebImageCacheKeyFilter.h; sourceTree = "<group>"; };
-		3371FB9572DC79D6092E8EA2966E32F4 /* CTCoverViewController~ipadland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTCoverViewController~ipadland.xib"; path = "CleverTapSDK/InApps/resources/CTCoverViewController~ipadland.xib"; sourceTree = "<group>"; };
-		33BAC1F0B6D2334464FA3E4F8262EC2C /* FirebaseCoreDiagnostics-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "FirebaseCoreDiagnostics-dummy.m"; sourceTree = "<group>"; };
-		33C5EDCAF5CC935647258F1EDDCCC3F8 /* SDImageAssetManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageAssetManager.m; path = SDWebImage/Private/SDImageAssetManager.m; sourceTree = "<group>"; };
-		342FF1566987BBE67A0F59D9B7AFC4EF /* CTHalfInterstitialImageViewController~iphoneland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTHalfInterstitialImageViewController~iphoneland.xib"; path = "CleverTapSDK/InApps/resources/CTHalfInterstitialImageViewController~iphoneland.xib"; sourceTree = "<group>"; };
-		34345EF94B52EA533BD4324975B259AD /* FIRCLSReportManager_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSReportManager_Private.h; path = Crashlytics/Crashlytics/Controllers/FIRCLSReportManager_Private.h; sourceTree = "<group>"; };
-		3465148CCD0457D5BA011AC6C67EAE05 /* SDWebImageError.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageError.h; path = SDWebImage/Core/SDWebImageError.h; sourceTree = "<group>"; };
-		348C2ED69F01A72ABD8627B905B583AE /* CTInboxController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTInboxController.h; path = CleverTapSDK/Inbox/controllers/CTInboxController.h; sourceTree = "<group>"; };
-		34926FDEC9705B36A52B78912AE5E883 /* FloatingPanel.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = FloatingPanel.modulemap; sourceTree = "<group>"; };
-		3497A89EC94BD4B72659A486D59C79D1 /* FIRCLSHandler.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSHandler.h; path = Crashlytics/Crashlytics/Handlers/FIRCLSHandler.h; sourceTree = "<group>"; };
-		34B4CB1C13F7FEC8D528C0F6590BA245 /* UIImage+Metadata.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIImage+Metadata.h"; path = "SDWebImage/Core/UIImage+Metadata.h"; sourceTree = "<group>"; };
-		34CFF3C69ADF30594FDC658A5D5C43B3 /* InvalidationState.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = InvalidationState.swift; path = Parchment/Enums/InvalidationState.swift; sourceTree = "<group>"; };
-		34F84FD9D57F36DEE2429A34EA03F15F /* FIRCLSExistingReportManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSExistingReportManager.h; path = Crashlytics/Crashlytics/Controllers/FIRCLSExistingReportManager.h; sourceTree = "<group>"; };
-		350FD92646F028FA2788263EE06F39BA /* FIRInstallationsStoredItem.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsStoredItem.h; path = FirebaseInstallations/Source/Library/InstallationsStore/FIRInstallationsStoredItem.h; sourceTree = "<group>"; };
-		354E7C97250C40109A07600886EB506E /* FIRMessagingRmqManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingRmqManager.h; path = FirebaseMessaging/Sources/FIRMessagingRmqManager.h; sourceTree = "<group>"; };
-		35680BCB70050FE504D6900B2BE70BF6 /* FIRCLSRecordIdentity.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSRecordIdentity.m; path = Crashlytics/Crashlytics/Models/Record/FIRCLSRecordIdentity.m; sourceTree = "<group>"; };
-		356AAFC1E3BF8181BDCF4A4A4311EBAA /* FirebaseCore.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FirebaseCore.h; path = FirebaseCore/Sources/Public/FirebaseCore/FirebaseCore.h; sourceTree = "<group>"; };
-		356D85B515E7B2819CD5D4AA21838F83 /* FIRInstallationsLogger.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsLogger.h; path = FirebaseInstallations/Source/Library/FIRInstallationsLogger.h; sourceTree = "<group>"; };
-		358B2E45089C6522C6B74D44DCBCDF15 /* SDMemoryCache.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDMemoryCache.h; path = SDWebImage/Core/SDMemoryCache.h; sourceTree = "<group>"; };
-		35D645CE1DA08EA1F932FD23E85A40A4 /* FIRCLSException.mm */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSException.mm; path = Crashlytics/Crashlytics/Handlers/FIRCLSException.mm; sourceTree = "<group>"; };
-		35E39208986752F47AAD93104D11BB02 /* UIImage+MultiFormat.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIImage+MultiFormat.m"; path = "SDWebImage/Core/UIImage+MultiFormat.m"; sourceTree = "<group>"; };
-		363C7E9A8FBF9B3D75A63FEEF1C07E08 /* FIRCLSUnwind_arm.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSUnwind_arm.c; path = Crashlytics/Crashlytics/Unwind/FIRCLSUnwind_arm.c; sourceTree = "<group>"; };
-		366919397B339D1A3F7F79FBDDDCC298 /* FIRMessagingPubSub.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingPubSub.h; path = FirebaseMessaging/Sources/FIRMessagingPubSub.h; sourceTree = "<group>"; };
+		3397F629D1F6765424DB092C2F66CFAD /* CTHeaderViewController~ipadland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTHeaderViewController~ipadland.xib"; path = "CleverTapSDK/InApps/resources/CTHeaderViewController~ipadland.xib"; sourceTree = "<group>"; };
+		33C63E3EAA4FDC03CC10B972A85C0329 /* SDWebImagePrefetcher.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImagePrefetcher.h; path = SDWebImage/Core/SDWebImagePrefetcher.h; sourceTree = "<group>"; };
+		340552C5B976118EB85BBD8DC208644A /* FBLPromise+Reduce.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Reduce.m"; path = "Sources/FBLPromises/FBLPromise+Reduce.m"; sourceTree = "<group>"; };
+		344990280ACFBDBBCF7F58D26D942E86 /* SDWebImageDefine.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageDefine.m; path = SDWebImage/Core/SDWebImageDefine.m; sourceTree = "<group>"; };
+		34A056D1B68924023B9843D66B4C8B87 /* FIRInstallationsIDController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallationsIDController.m; path = FirebaseInstallations/Source/Library/InstallationsIDController/FIRInstallationsIDController.m; sourceTree = "<group>"; };
+		34A9608E4495DE8784B6B2FDA489BB98 /* NetworkActivityLogger.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = NetworkActivityLogger.swift; path = Source/NetworkActivityLogger.swift; sourceTree = "<group>"; };
+		34A99E2DFEB9919950B89A5C54265020 /* SDInternalMacros.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDInternalMacros.m; path = SDWebImage/Private/SDInternalMacros.m; sourceTree = "<group>"; };
+		34C2BE64F19F4FA9DEC22160A1270859 /* ScrollingFollowView-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "ScrollingFollowView-prefix.pch"; sourceTree = "<group>"; };
+		34F561CC68CBFECA3E4FE1189DB0DF62 /* CTInboxSimpleMessageCell.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTInboxSimpleMessageCell.m; path = CleverTapSDK/Inbox/cells/CTInboxSimpleMessageCell.m; sourceTree = "<group>"; };
+		35010556B9CEC9736EEBE58037864F4B /* SDInternalMacros.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDInternalMacros.h; path = SDWebImage/Private/SDInternalMacros.h; sourceTree = "<group>"; };
+		350A7FFB43A7D07F8495A4C694AEB331 /* NSImage+Compatibility.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "NSImage+Compatibility.h"; path = "SDWebImage/Core/NSImage+Compatibility.h"; sourceTree = "<group>"; };
+		35C0680FEF1E6F03D9C31B28AFBCCE84 /* FIRComponentContainerInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRComponentContainerInternal.h; path = FirebaseCore/Sources/FIRComponentContainerInternal.h; sourceTree = "<group>"; };
+		35F5D10437998536073D8F3EA95CD61E /* SDImageAssetManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageAssetManager.h; path = SDWebImage/Private/SDImageAssetManager.h; sourceTree = "<group>"; };
+		35F7C8F2AE1AD4DBB5FAC408343AC455 /* FIRCoreDiagnosticsData.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCoreDiagnosticsData.h; path = Interop/CoreDiagnostics/Public/FIRCoreDiagnosticsData.h; sourceTree = "<group>"; };
+		35FD1E6205D678C18CC82FB4C75E02DF /* AlamofireNetworkActivityLogger-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "AlamofireNetworkActivityLogger-Info.plist"; sourceTree = "<group>"; };
+		3626E4BC15CF4E9A55C183D426B6F4D3 /* CTInboxIconMessageCell.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTInboxIconMessageCell.h; path = CleverTapSDK/Inbox/cells/CTInboxIconMessageCell.h; sourceTree = "<group>"; };
+		365B05CFE810EA3862DF945A04040CCC /* SDImageCacheDefine.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageCacheDefine.h; path = SDWebImage/Core/SDImageCacheDefine.h; sourceTree = "<group>"; };
+		365B559452D6CC8350F71F3CF5E1677A /* FBLPromise+Retry.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Retry.m"; path = "Sources/FBLPromises/FBLPromise+Retry.m"; sourceTree = "<group>"; };
+		36B096A6E6CD60F2D1D99666B4426B47 /* Alamofire-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "Alamofire-dummy.m"; sourceTree = "<group>"; };
 		36E70BE67031A10226C4E1F6E9855464 /* CleverTap-iOS-SDK */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; name = "CleverTap-iOS-SDK"; path = CleverTapSDK.framework; sourceTree = BUILT_PRODUCTS_DIR; };
-		36F9C95585911FB5DA4301254ED45A34 /* FIRCLSRecordIdentity.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSRecordIdentity.h; path = Crashlytics/Crashlytics/Models/Record/FIRCLSRecordIdentity.h; sourceTree = "<group>"; };
-		37052EF03CE624C9FC2D17CB43C2E8A7 /* CTInboxMessageActionView.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTInboxMessageActionView.h; path = CleverTapSDK/Inbox/views/CTInboxMessageActionView.h; sourceTree = "<group>"; };
-		370CB0E566ED22BBF5A7DEC514B14504 /* CTInAppFCManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTInAppFCManager.h; path = CleverTapSDK/CTInAppFCManager.h; sourceTree = "<group>"; };
-		3734099B3F815C203E502344F9569CAD /* FIROptionsInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIROptionsInternal.h; path = FirebaseCore/Sources/Private/FIROptionsInternal.h; sourceTree = "<group>"; };
-		37395FE61CFBF0FA975183FEBE95C450 /* FIRCLSDataCollectionToken.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSDataCollectionToken.h; path = Crashlytics/Crashlytics/DataCollection/FIRCLSDataCollectionToken.h; sourceTree = "<group>"; };
-		373F306F3A6AD2011B55B4BBC9AB0177 /* GULNetworkConstants.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULNetworkConstants.h; path = GoogleUtilities/Network/Public/GoogleUtilities/GULNetworkConstants.h; sourceTree = "<group>"; };
-		374A41205A6DE1F9FD6435C5AAEE4E5F /* FIRComponentContainer.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRComponentContainer.h; path = FirebaseCore/Sources/Private/FIRComponentContainer.h; sourceTree = "<group>"; };
-		379891073BF4054C98867F6316762BD0 /* NSError+FIRMessaging.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "NSError+FIRMessaging.h"; path = "FirebaseMessaging/Sources/NSError+FIRMessaging.h"; sourceTree = "<group>"; };
-		37AEE182DF8E5D00092DF7B3964CD8F8 /* GoogleDataTransport.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GoogleDataTransport.h; path = GoogleDataTransport/GDTCORLibrary/Public/GoogleDataTransport/GoogleDataTransport.h; sourceTree = "<group>"; };
-		37C0339BB7344F5983141613CC10DEAD /* FirebaseCore.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = FirebaseCore.modulemap; sourceTree = "<group>"; };
-		37E30B3BC5A5B7A6006AF72B82D33B83 /* FIRInstallationsBackoffController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsBackoffController.h; path = FirebaseInstallations/Source/Library/InstallationsIDController/FIRInstallationsBackoffController.h; sourceTree = "<group>"; };
-		37E58D7C9FE14AB3F244215D21B01804 /* FIRMessagingTokenInfo.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingTokenInfo.m; path = FirebaseMessaging/Sources/Token/FIRMessagingTokenInfo.m; sourceTree = "<group>"; };
-		387B0559982BAC72C5860C97D84F2B8C /* SDWebImage.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImage.h; path = WebImage/SDWebImage.h; sourceTree = "<group>"; };
-		38B7AFCCEB7CDCBF940C1972B39DC59C /* GULAppDelegateSwizzler.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULAppDelegateSwizzler.m; path = GoogleUtilities/AppDelegateSwizzler/GULAppDelegateSwizzler.m; sourceTree = "<group>"; };
-		38BF5878D629FDFCB392EEC658C95763 /* FIRCLSContext.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSContext.h; path = Crashlytics/Crashlytics/Components/FIRCLSContext.h; sourceTree = "<group>"; };
-		38CA2CA645F401BAA1A1479D045338D0 /* FIRInteropEventNames.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInteropEventNames.h; path = Interop/Analytics/Public/FIRInteropEventNames.h; sourceTree = "<group>"; };
-		38DCBCEFF7C1410440F162AFF41819BD /* FIRCLSSettings.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSSettings.m; path = Crashlytics/Crashlytics/Models/FIRCLSSettings.m; sourceTree = "<group>"; };
-		39038016635A847AFC0852BAD5646167 /* CTCarouselImageMessageCell.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTCarouselImageMessageCell.m; path = CleverTapSDK/Inbox/cells/CTCarouselImageMessageCell.m; sourceTree = "<group>"; };
-		390517621C35CCF721457EBDFCC995A0 /* NSLayoutConstraint+Extensions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "NSLayoutConstraint+Extensions.swift"; path = "SwiftMessages/NSLayoutConstraint+Extensions.swift"; sourceTree = "<group>"; };
-		391CB2E8462B3793643B728C42F4E23F /* PageViewState.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PageViewState.swift; path = Parchment/Enums/PageViewState.swift; sourceTree = "<group>"; };
-		397B705D8F2DBA5A220573DEB8808038 /* CTConstants.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTConstants.m; path = CleverTapSDK/CTConstants.m; sourceTree = "<group>"; };
-		398A3459F964EB3F2A862E0D4ED3C8B2 /* FirebaseMessaging-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "FirebaseMessaging-dummy.m"; sourceTree = "<group>"; };
-		39BD572FF7D8F3CF319BC86AA5893D8E /* NSButton+WebCache.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "NSButton+WebCache.h"; path = "SDWebImage/Core/NSButton+WebCache.h"; sourceTree = "<group>"; };
-		39CA74686606814C6FFE6C8B6FBD986B /* FBLPromise+Do.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Do.h"; path = "Sources/FBLPromises/include/FBLPromise+Do.h"; sourceTree = "<group>"; };
-		3A17CB29D198B1FFCEEDCDE6EBD4FD3F /* GDTCCTUploader.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCCTUploader.h; path = GoogleDataTransport/GDTCCTLibrary/Private/GDTCCTUploader.h; sourceTree = "<group>"; };
-		3A76A8A571811625E8C3E63958B0A218 /* CleverTapPushNotificationDelegate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTapPushNotificationDelegate.h; path = CleverTapSDK/CleverTapPushNotificationDelegate.h; sourceTree = "<group>"; };
-		3ADE1801494E894A91A204F1E4C94B19 /* OTPFieldView-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "OTPFieldView-Info.plist"; sourceTree = "<group>"; };
-		3B2F662597A2EBEFAA53C7EA5E8186B9 /* CTInterstitialViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTInterstitialViewController.h; path = CleverTapSDK/InApps/CTInterstitialViewController.h; sourceTree = "<group>"; };
-		3B71F2C80874929D7CA6017610BEB67F /* FIRLogger.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRLogger.h; path = FirebaseCore/Sources/Private/FIRLogger.h; sourceTree = "<group>"; };
-		3B76C7F4F9F4E4FA768F02CF94CCBA06 /* FIRCLSLaunchMarkerModel.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSLaunchMarkerModel.h; path = Crashlytics/Crashlytics/Models/FIRCLSLaunchMarkerModel.h; sourceTree = "<group>"; };
-		3B81F1DD99A4C4281B57C0B0F180BA49 /* PagingLayout.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingLayout.swift; path = Parchment/Protocols/PagingLayout.swift; sourceTree = "<group>"; };
-		3B85537FA4A502EF39F21EE918290D30 /* FIRCLSSymbolicationOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSSymbolicationOperation.h; path = Crashlytics/Crashlytics/Operations/Symbolication/FIRCLSSymbolicationOperation.h; sourceTree = "<group>"; };
-		3BF437B3A106575D16E74D8CE7221EBD /* FIRComponentContainerInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRComponentContainerInternal.h; path = FirebaseCore/Sources/FIRComponentContainerInternal.h; sourceTree = "<group>"; };
-		3C162DB4BDA8589FDF8B8C4494B89568 /* GULHeartbeatDateStorable.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULHeartbeatDateStorable.h; path = GoogleUtilities/Environment/Public/GoogleUtilities/GULHeartbeatDateStorable.h; sourceTree = "<group>"; };
-		3C433B1A15759AA0F78359E6F0A25FC8 /* GDTCORTransformer.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORTransformer.h; path = GoogleDataTransport/GDTCORLibrary/Private/GDTCORTransformer.h; sourceTree = "<group>"; };
-		3C468F87C05F6DC77B74BC647235050B /* IQKeyboardManagerConstantsInternal.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = IQKeyboardManagerConstantsInternal.swift; path = IQKeyboardManagerSwift/Constants/IQKeyboardManagerConstantsInternal.swift; sourceTree = "<group>"; };
-		3C4990FE158BFE0C5D1EE468B9AD1CA4 /* GDTCORClock.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCORClock.m; path = GoogleDataTransport/GDTCORLibrary/GDTCORClock.m; sourceTree = "<group>"; };
-		3D3B31C95908D3899AD15600E12A10C8 /* GDTCORFlatFileStorage+Promises.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "GDTCORFlatFileStorage+Promises.m"; path = "GoogleDataTransport/GDTCORLibrary/GDTCORFlatFileStorage+Promises.m"; sourceTree = "<group>"; };
-		3DE83F4A4E88CA8BA2E013FE016BE1CE /* me.nanopb.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = me.nanopb.h; path = FirebaseMessaging/Sources/Protogen/nanopb/me.nanopb.h; sourceTree = "<group>"; };
-		3E277AAEA3BB4F135F9687F99E220EC0 /* SDImageCoder.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageCoder.m; path = SDWebImage/Core/SDImageCoder.m; sourceTree = "<group>"; };
-		3E75295555D002A00EC336DA1AEF1C8A /* FIRMessagingPendingTopicsList.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingPendingTopicsList.m; path = FirebaseMessaging/Sources/FIRMessagingPendingTopicsList.m; sourceTree = "<group>"; };
-		3E8127947BC76076CF37E6434AC125D2 /* SDImageCache.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageCache.h; path = SDWebImage/Core/SDImageCache.h; sourceTree = "<group>"; };
-		3E8AB86990E2620958C65E6290910BC8 /* PagingDirection.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingDirection.swift; path = Parchment/Enums/PagingDirection.swift; sourceTree = "<group>"; };
-		3EE37FF5AC6066546D2657F9A944D60F /* warningIconLight@2x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "warningIconLight@2x.png"; path = "SwiftMessages/Resources/warningIconLight@2x.png"; sourceTree = "<group>"; };
-		3EEEEF56439F25153402BB64DA6C0EDB /* FIRCLSSettingsManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSSettingsManager.m; path = Crashlytics/Crashlytics/Settings/FIRCLSSettingsManager.m; sourceTree = "<group>"; };
-		3F1D6E0E65E4BCB1D7C2CE538B9A1296 /* GULNetwork.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULNetwork.h; path = GoogleUtilities/Network/Public/GoogleUtilities/GULNetwork.h; sourceTree = "<group>"; };
-		3F51FC959B5A36182AABA764E79C8FF8 /* FIRStackFrame.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRStackFrame.m; path = Crashlytics/Crashlytics/FIRStackFrame.m; sourceTree = "<group>"; };
-		3F6AB2D28A44600666DE5EF800F2B582 /* infoIconSubtle@3x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "infoIconSubtle@3x.png"; path = "SwiftMessages/Resources/infoIconSubtle@3x.png"; sourceTree = "<group>"; };
-		3F78A0EAC2C948EDABC161D5154026B1 /* FIRCLSThreadState.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSThreadState.c; path = Crashlytics/Crashlytics/Helpers/FIRCLSThreadState.c; sourceTree = "<group>"; };
-		3F8E0698B23D8330735A2E4FEC3FFA3E /* nanopb-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "nanopb-Info.plist"; sourceTree = "<group>"; };
-		3FAE0BF617D5B61EB7F7D83121199A2D /* PromisesObjC.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = PromisesObjC.debug.xcconfig; sourceTree = "<group>"; };
-		400B38F434CCCE0E68014B340E447A48 /* FIRInstallationsErrors.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsErrors.h; path = FirebaseInstallations/Source/Library/Public/FirebaseInstallations/FIRInstallationsErrors.h; sourceTree = "<group>"; };
-		405C56747BA8DB139278901283BAB728 /* FBLPromise+Timeout.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Timeout.h"; path = "Sources/FBLPromises/include/FBLPromise+Timeout.h"; sourceTree = "<group>"; };
-		406EE5C1D0D45E9BF383F2FCE26E1387 /* CTImageInAppViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTImageInAppViewController.h; path = CleverTapSDK/InApps/CTImageInAppViewController.h; sourceTree = "<group>"; };
-		40CCF6FE6D0AEA5FA86A03AB6D017CE5 /* SDAnimatedImagePlayer.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDAnimatedImagePlayer.m; path = SDWebImage/Core/SDAnimatedImagePlayer.m; sourceTree = "<group>"; };
-		411BE640A1619C7D17CE3DF010BBFF3A /* FBLPromise+Any.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Any.h"; path = "Sources/FBLPromises/include/FBLPromise+Any.h"; sourceTree = "<group>"; };
-		4135E8696A2060DC92AB3109423F5C15 /* FIRCLSRecordBase.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSRecordBase.h; path = Crashlytics/Crashlytics/Models/Record/FIRCLSRecordBase.h; sourceTree = "<group>"; };
-		41C7DA87FA9C48BD5ED37C5DCD679A3B /* CleverTap-iOS-SDK.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = "CleverTap-iOS-SDK.debug.xcconfig"; sourceTree = "<group>"; };
-		41DD0F8FF072A5A436B61567F9493612 /* GULNetworkInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULNetworkInternal.h; path = GoogleUtilities/Network/GULNetworkInternal.h; sourceTree = "<group>"; };
-		423492BE4BA6A6EFA2A8391D58D164CE /* CTHalfInterstitialViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTHalfInterstitialViewController.h; path = CleverTapSDK/InApps/CTHalfInterstitialViewController.h; sourceTree = "<group>"; };
-		42398AA96592A0DFD64F78346F986CD9 /* SDImageAssetManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageAssetManager.h; path = SDWebImage/Private/SDImageAssetManager.h; sourceTree = "<group>"; };
-		424A5B9028FED5C0315433007882EC19 /* Inbox.xcdatamodel */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = wrapper.xcdatamodel; path = Inbox.xcdatamodel; sourceTree = "<group>"; };
-		426A868951E38A1772B1A315EA010167 /* FIRFirebaseUserAgent.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRFirebaseUserAgent.h; path = FirebaseCore/Sources/FIRFirebaseUserAgent.h; sourceTree = "<group>"; };
-		426C7E252375112F2391A079A6F0C643 /* FirebaseCore-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "FirebaseCore-umbrella.h"; sourceTree = "<group>"; };
-		4277502B0C1F3EFB75CF8B29425E069A /* FIRCLSConstants.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSConstants.m; path = Crashlytics/Shared/FIRCLSConstants.m; sourceTree = "<group>"; };
-		430FA928F00CC2633F77922456A8E440 /* CTCoverImageViewController~iphoneport.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTCoverImageViewController~iphoneport.xib"; path = "CleverTapSDK/InApps/resources/CTCoverImageViewController~iphoneport.xib"; sourceTree = "<group>"; };
-		431D54C033B99364C15DB3C385C0F9AC /* PageViewControllerDataSource.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PageViewControllerDataSource.swift; path = Parchment/Protocols/PageViewControllerDataSource.swift; sourceTree = "<group>"; };
-		438B758075229867EDD3872863F778E8 /* NetworkReachabilityManager.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = NetworkReachabilityManager.swift; path = Source/NetworkReachabilityManager.swift; sourceTree = "<group>"; };
-		439932D25482DF18D3CF35F7797CF29C /* FIRFirebaseUserAgent.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRFirebaseUserAgent.m; path = FirebaseCore/Sources/FIRFirebaseUserAgent.m; sourceTree = "<group>"; };
-		43FFBEDF61B2A8D8495ADD2DED349186 /* SDWebImageCacheSerializer.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageCacheSerializer.m; path = SDWebImage/Core/SDWebImageCacheSerializer.m; sourceTree = "<group>"; };
-		44385940B84797CBECB92A6A82D9A818 /* GDTCORStorageEventSelector.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORStorageEventSelector.h; path = GoogleDataTransport/GDTCORLibrary/Internal/GDTCORStorageEventSelector.h; sourceTree = "<group>"; };
-		44CC799655F7A8FF8D39E0E94FAB29E3 /* UIView+CTToast.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIView+CTToast.m"; path = "CleverTapSDK/Inbox/views/UIView+CTToast.m"; sourceTree = "<group>"; };
-		452897816E60A9C8FFF8BD9C9D7F97DC /* FIRExceptionModel_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRExceptionModel_Private.h; path = Crashlytics/Crashlytics/Private/FIRExceptionModel_Private.h; sourceTree = "<group>"; };
-		453536A01D61AFA4A5C749192E18E71C /* FIRInstallationsAuthTokenResult.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallationsAuthTokenResult.m; path = FirebaseInstallations/Source/Library/FIRInstallationsAuthTokenResult.m; sourceTree = "<group>"; };
-		45CD24223956AC1FC43758647A1A8013 /* FIRCLSDownloadAndSaveSettingsOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSDownloadAndSaveSettingsOperation.h; path = Crashlytics/Crashlytics/Settings/Operations/FIRCLSDownloadAndSaveSettingsOperation.h; sourceTree = "<group>"; };
-		468B318DD1565006201C5BFCB9CBF53A /* PagingMenuHorizontalAlignment.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingMenuHorizontalAlignment.swift; path = Parchment/Enums/PagingMenuHorizontalAlignment.swift; sourceTree = "<group>"; };
-		4699A6BBB86F5F56CACEB8AAB80DF09E /* FBLPromise+Validate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Validate.h"; path = "Sources/FBLPromises/include/FBLPromise+Validate.h"; sourceTree = "<group>"; };
-		47650F4BCF10EBC67DD13D2DC656C74A /* FIRMessagingAuthService.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingAuthService.m; path = FirebaseMessaging/Sources/Token/FIRMessagingAuthService.m; sourceTree = "<group>"; };
-		478AF7FF9C8A5D2CDA6C0BA25D966DF2 /* GoogleUtilities-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "GoogleUtilities-dummy.m"; sourceTree = "<group>"; };
-		4798DD54280F349B57D7444D138CD618 /* FIRCLSGlobals.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSGlobals.h; path = Crashlytics/Crashlytics/Components/FIRCLSGlobals.h; sourceTree = "<group>"; };
-		47A37E3EDBEF51DE67B2CA831887612C /* CleverTapFeatureFlags.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTapFeatureFlags.m; path = CleverTapSDK/FeatureFlags/models/CleverTapFeatureFlags.m; sourceTree = "<group>"; };
-		47FFF9CD136BE1D0B38BFAA210F64D36 /* FIRAppAssociationRegistration.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRAppAssociationRegistration.m; path = FirebaseCore/Sources/FIRAppAssociationRegistration.m; sourceTree = "<group>"; };
+		37572FD8BA9D1CD9094005DCBF0CFBD9 /* CTKnownProfileFields.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTKnownProfileFields.h; path = CleverTapSDK/CTKnownProfileFields.h; sourceTree = "<group>"; };
+		375D9D9FE3DD850DA84BA4C3D575E991 /* CTCarouselImageMessageCell.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTCarouselImageMessageCell.h; path = CleverTapSDK/Inbox/cells/CTCarouselImageMessageCell.h; sourceTree = "<group>"; };
+		37C4618AA2E8113FA4C024192E171623 /* FIRMessagingTokenStore.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingTokenStore.h; path = FirebaseMessaging/Sources/Token/FIRMessagingTokenStore.h; sourceTree = "<group>"; };
+		37DFB75A09D5AF98A8821876B8FC67C8 /* CTLocalDataStore.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTLocalDataStore.m; path = CleverTapSDK/CTLocalDataStore.m; sourceTree = "<group>"; };
+		37E89C1DAA5CE245080969A6AF47AD1F /* SDAnimatedImage.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDAnimatedImage.h; path = SDWebImage/Core/SDAnimatedImage.h; sourceTree = "<group>"; };
+		37F9FEFCBEBE428AC5629F0271D35B25 /* GULHeartbeatDateStorageUserDefaults.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULHeartbeatDateStorageUserDefaults.h; path = GoogleUtilities/Environment/Public/GoogleUtilities/GULHeartbeatDateStorageUserDefaults.h; sourceTree = "<group>"; };
+		38067080E934240A05B4E487843C08BB /* PagingMenuHorizontalAlignment.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingMenuHorizontalAlignment.swift; path = Parchment/Enums/PagingMenuHorizontalAlignment.swift; sourceTree = "<group>"; };
+		382FF818196B494E3B5A986C69DFBFA2 /* FIRCLSReportAdapter_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSReportAdapter_Private.h; path = Crashlytics/Crashlytics/Models/Record/FIRCLSReportAdapter_Private.h; sourceTree = "<group>"; };
+		388966DF89AFC74FA305CCB536E2F03A /* UIImage+ExtendedCacheData.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIImage+ExtendedCacheData.h"; path = "SDWebImage/Core/UIImage+ExtendedCacheData.h"; sourceTree = "<group>"; };
+		388E5B7BC08650529411FBBD7823F88A /* FIRCLSReportManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSReportManager.m; path = Crashlytics/Crashlytics/Controllers/FIRCLSReportManager.m; sourceTree = "<group>"; };
+		39366A8616AFAF0C5DED1ED80CC8D7F5 /* FIRInstallationsHTTPError.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsHTTPError.h; path = FirebaseInstallations/Source/Library/Errors/FIRInstallationsHTTPError.h; sourceTree = "<group>"; };
+		3962EB8D20C9D9D03BD15FED8D13C0EE /* FIRCLSRecordHost.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSRecordHost.h; path = Crashlytics/Crashlytics/Models/Record/FIRCLSRecordHost.h; sourceTree = "<group>"; };
+		3975B9FE2A799125C4900233AB3A69F3 /* FIRCoreDiagnosticsInterop.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCoreDiagnosticsInterop.h; path = Interop/CoreDiagnostics/Public/FIRCoreDiagnosticsInterop.h; sourceTree = "<group>"; };
+		397B25BD42483D57228B894C203C6ABB /* SwiftLint.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = SwiftLint.release.xcconfig; sourceTree = "<group>"; };
+		3990F0876DAE1A33A9ECEBAE5B467A2D /* FIRFirebaseUserAgent.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRFirebaseUserAgent.m; path = FirebaseCore/Sources/FIRFirebaseUserAgent.m; sourceTree = "<group>"; };
+		399828B9A50CDDA00D5E7888A6CC9B7E /* FIRConfigurationInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRConfigurationInternal.h; path = FirebaseCore/Sources/FIRConfigurationInternal.h; sourceTree = "<group>"; };
+		3A27377063A864B846BCFB821EAB6C26 /* FIRInstallationsLogger.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallationsLogger.m; path = FirebaseInstallations/Source/Library/FIRInstallationsLogger.m; sourceTree = "<group>"; };
+		3A8AA639F8D5149D5A5F3C80C9F5AD92 /* FIRCLSMachOSlice.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSMachOSlice.h; path = Crashlytics/Shared/FIRCLSMachO/FIRCLSMachOSlice.h; sourceTree = "<group>"; };
+		3AB0CE84191CF69A2EE36D3973B7C603 /* FIRCLSManagerData.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSManagerData.h; path = Crashlytics/Crashlytics/Controllers/FIRCLSManagerData.h; sourceTree = "<group>"; };
+		3ADD2FA6B3DDDC7AF7485F2EBB4E0E82 /* FIRInteropEventNames.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInteropEventNames.h; path = Interop/Analytics/Public/FIRInteropEventNames.h; sourceTree = "<group>"; };
+		3B132563B0EDE9325C098E7EFA3977A4 /* ct_default_landscape_image.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = ct_default_landscape_image.png; path = CleverTapSDK/Inbox/resources/ct_default_landscape_image.png; sourceTree = "<group>"; };
+		3B2DD11DA850D245E6195111E1FAC804 /* FIRLogger.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRLogger.m; path = FirebaseCore/Sources/FIRLogger.m; sourceTree = "<group>"; };
+		3B47D8F756F8EE3C082C38E7541FBF1B /* SDImageLoader.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageLoader.h; path = SDWebImage/Core/SDImageLoader.h; sourceTree = "<group>"; };
+		3B4E8062C0A904E711E7755801C2E9F5 /* FBLPromise+Always.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Always.m"; path = "Sources/FBLPromises/FBLPromise+Always.m"; sourceTree = "<group>"; };
+		3BDAE877776519BED573C6A61454DBAB /* FirebaseInstallations-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "FirebaseInstallations-dummy.m"; sourceTree = "<group>"; };
+		3C0D24FC19C26534418054B10F3AC51F /* FIRCLSExecutionIdentifierModel.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSExecutionIdentifierModel.m; path = Crashlytics/Crashlytics/Models/FIRCLSExecutionIdentifierModel.m; sourceTree = "<group>"; };
+		3C213A746118458288D3D0F0BD08BC2F /* FIRCLSUnwind_arch.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSUnwind_arch.h; path = Crashlytics/Crashlytics/Unwind/FIRCLSUnwind_arch.h; sourceTree = "<group>"; };
+		3C3D834396245AAEB78273B9C3AC73B5 /* FIRExceptionModel_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRExceptionModel_Private.h; path = Crashlytics/Crashlytics/Private/FIRExceptionModel_Private.h; sourceTree = "<group>"; };
+		3C40F43FAB313E440EEBCD7923F50347 /* GDTCORStorageProtocol.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORStorageProtocol.h; path = GoogleDataTransport/GDTCORLibrary/Internal/GDTCORStorageProtocol.h; sourceTree = "<group>"; };
+		3C48D4DD697A3A1A97C0F3B07B918AED /* FIRInstallationsIIDStore.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsIIDStore.h; path = FirebaseInstallations/Source/Library/IIDMigration/FIRInstallationsIIDStore.h; sourceTree = "<group>"; };
+		3C7D6FF73609CD3D6750C37CD16EC3D5 /* youtube-ios-player-helper.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = "youtube-ios-player-helper.release.xcconfig"; sourceTree = "<group>"; };
+		3CBEAEE7AB45CDD44E5D36753B334228 /* SDAnimatedImagePlayer.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDAnimatedImagePlayer.m; path = SDWebImage/Core/SDAnimatedImagePlayer.m; sourceTree = "<group>"; };
+		3CC92207A688836CC8E931A67DE9E73F /* CTMessageMO+CoreDataProperties.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "CTMessageMO+CoreDataProperties.m"; path = "CleverTapSDK/Inbox/models/CTMessageMO+CoreDataProperties.m"; sourceTree = "<group>"; };
+		3CF20D4CDA4E5E07F73B942F67A7E1F8 /* CTCoverImageViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTCoverImageViewController.m; path = CleverTapSDK/InApps/CTCoverImageViewController.m; sourceTree = "<group>"; };
+		3D42DBB05050C87AC3399564CE109739 /* CTCarouselImageMessageCell~port.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTCarouselImageMessageCell~port.xib"; path = "CleverTapSDK/Inbox/resources/CTCarouselImageMessageCell~port.xib"; sourceTree = "<group>"; };
+		3D9F1C9E31E3C2F89E18CE21D3CAE051 /* IQKeyboardReturnKeyHandler.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = IQKeyboardReturnKeyHandler.swift; path = IQKeyboardManagerSwift/IQKeyboardReturnKeyHandler.swift; sourceTree = "<group>"; };
+		3DAA1F0FF36A6B57F0299313F69014B1 /* CTCoverViewController~ipad.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTCoverViewController~ipad.xib"; path = "CleverTapSDK/InApps/resources/CTCoverViewController~ipad.xib"; sourceTree = "<group>"; };
+		3DB8FF34B98217A38B079D05F3D9C911 /* FIRCLSFABHost.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSFABHost.m; path = Crashlytics/Shared/FIRCLSFABHost.m; sourceTree = "<group>"; };
+		3DBE9AD1AB2DC6FAC202274CF70E04F7 /* FIRAnalyticsInteropListener.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRAnalyticsInteropListener.h; path = Interop/Analytics/Public/FIRAnalyticsInteropListener.h; sourceTree = "<group>"; };
+		3DD325BEC0B36E64359F1D37FA58018A /* CTPreferences.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTPreferences.h; path = CleverTapSDK/CTPreferences.h; sourceTree = "<group>"; };
+		3E9D1328D6B1C453F36B1384A2410069 /* GoogleAppMeasurementIdentitySupport.xcframework */ = {isa = PBXFileReference; includeInIndex = 1; name = GoogleAppMeasurementIdentitySupport.xcframework; path = Frameworks/GoogleAppMeasurementIdentitySupport.xcframework; sourceTree = "<group>"; };
+		3EE7A7EB1A9E9ADBD166A08718052C24 /* SDWebImage.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = SDWebImage.release.xcconfig; sourceTree = "<group>"; };
+		3F6437729D04D92E50ED8A9DFE7E19D3 /* CTUserMO+CoreDataProperties.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "CTUserMO+CoreDataProperties.m"; path = "CleverTapSDK/Inbox/models/CTUserMO+CoreDataProperties.m"; sourceTree = "<group>"; };
+		3F83E7A273DF35FA7EA0E5F3EE8A412A /* FirebaseMessaging-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "FirebaseMessaging-Info.plist"; sourceTree = "<group>"; };
+		3F89C1EE9F0B125E3A3D207B71079083 /* Position.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Position.swift; path = Sources/Position.swift; sourceTree = "<group>"; };
+		3F97B2F6835BC1198D338DFEF623D71E /* FIRInstallationsLogger.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsLogger.h; path = FirebaseInstallations/Source/Library/FIRInstallationsLogger.h; sourceTree = "<group>"; };
+		3FA222F86387B18A8AB791A0E90C3868 /* CTCarouselImageMessageCell~land.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTCarouselImageMessageCell~land.xib"; path = "CleverTapSDK/Inbox/resources/CTCarouselImageMessageCell~land.xib"; sourceTree = "<group>"; };
+		3FF4DC6E298E60173B0206188C93A48A /* FIRCLSUnwind_x86.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSUnwind_x86.c; path = Crashlytics/Crashlytics/Unwind/FIRCLSUnwind_x86.c; sourceTree = "<group>"; };
+		3FFECE58EE77086345BC12B1FC3B5BBC /* FIRAnalyticsConfiguration.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRAnalyticsConfiguration.h; path = FirebaseCore/Sources/FIRAnalyticsConfiguration.h; sourceTree = "<group>"; };
+		403DDF437FF912A8E30AB2D9A0BF8FD4 /* SDDeviceHelper.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDDeviceHelper.m; path = SDWebImage/Private/SDDeviceHelper.m; sourceTree = "<group>"; };
+		403FCE563BB10DA0DDA90847C606FD61 /* OTPFieldView-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "OTPFieldView-umbrella.h"; sourceTree = "<group>"; };
+		4094B9E7B37298A0960ECEB0FDC57B69 /* Controller.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Controller.swift; path = Sources/Controller.swift; sourceTree = "<group>"; };
+		40A07F18A18B961EC8330AAABC21AD61 /* FIRMessagingTokenManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingTokenManager.h; path = FirebaseMessaging/Sources/Token/FIRMessagingTokenManager.h; sourceTree = "<group>"; };
+		40AF671E8606181D9BA6E631A23FADC5 /* CTInterstitialImageViewController~iphoneport.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTInterstitialImageViewController~iphoneport.xib"; path = "CleverTapSDK/InApps/resources/CTInterstitialImageViewController~iphoneport.xib"; sourceTree = "<group>"; };
+		40DE5B55D6A830A5886E326FB31DE084 /* CleverTap+FeatureFlags.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "CleverTap+FeatureFlags.h"; path = "CleverTapSDK/CleverTap+FeatureFlags.h"; sourceTree = "<group>"; };
+		412B404EE1B1C1E4C239846B59A2C6E2 /* FirebaseCrashlytics.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FirebaseCrashlytics.release.xcconfig; sourceTree = "<group>"; };
+		415F521A4B7DADD0617C4D3272527C07 /* PromisesObjC.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = PromisesObjC.debug.xcconfig; sourceTree = "<group>"; };
+		41616E9CCD4D12F366F56952B914D600 /* NSDictionary+FIRMessaging.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "NSDictionary+FIRMessaging.h"; path = "FirebaseMessaging/Sources/NSDictionary+FIRMessaging.h"; sourceTree = "<group>"; };
+		4195F288B30EAAD2323DB8C0F3635D50 /* FIRCLSConstants.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSConstants.m; path = Crashlytics/Shared/FIRCLSConstants.m; sourceTree = "<group>"; };
+		420BDE5FFE2FB1A9302AF687E5BCBC29 /* State.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = State.swift; path = Sources/State.swift; sourceTree = "<group>"; };
+		4250111C6AF98F257FA51BA7FAFEA6F1 /* CTProfileBuilder.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTProfileBuilder.m; path = CleverTapSDK/CTProfileBuilder.m; sourceTree = "<group>"; };
+		42A126AA811E96338CFE6E565B8EF088 /* PromisesObjC-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "PromisesObjC-Info.plist"; sourceTree = "<group>"; };
+		42D81562815F6BBA281AE3E5BE7BE3B0 /* FIRCLSAsyncOperation_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSAsyncOperation_Private.h; path = Crashlytics/Crashlytics/Operations/FIRCLSAsyncOperation_Private.h; sourceTree = "<group>"; };
+		42D93170CC9F8CA655FDB1C66FDB8F1D /* CALayer+Extensions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "CALayer+Extensions.swift"; path = "SwiftMessages/CALayer+Extensions.swift"; sourceTree = "<group>"; };
+		42EB1F8D3DD0A014BD005287605B5672 /* SwiftMessages.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = SwiftMessages.release.xcconfig; sourceTree = "<group>"; };
+		43099DAF55DFB4B165A671EDEBA81648 /* FIRCLSAllocate.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSAllocate.c; path = Crashlytics/Crashlytics/Helpers/FIRCLSAllocate.c; sourceTree = "<group>"; };
+		4343D0438A075688F834C50E6B066A21 /* XLPagerTabStrip-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "XLPagerTabStrip-umbrella.h"; sourceTree = "<group>"; };
+		4356F45410A9D4950B7F6F726EF89881 /* FIRCLSHost.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSHost.h; path = Crashlytics/Crashlytics/Components/FIRCLSHost.h; sourceTree = "<group>"; };
+		435E6E76DCAD9166F6D5A8C4CF5CDC62 /* SDWebImageIndicator.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageIndicator.m; path = SDWebImage/Core/SDWebImageIndicator.m; sourceTree = "<group>"; };
+		43C44639ED8724B8CC445A280E5512D3 /* CTCoverImageViewController~ipadland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTCoverImageViewController~ipadland.xib"; path = "CleverTapSDK/InApps/resources/CTCoverImageViewController~ipadland.xib"; sourceTree = "<group>"; };
+		43C85DC02AD81F8F1DFFB4EEE8F68DB2 /* FBLPromise+All.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+All.h"; path = "Sources/FBLPromises/include/FBLPromise+All.h"; sourceTree = "<group>"; };
+		43E7F56B404E7EBB75E5235A8CD5108A /* PagingFiniteDataSource.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingFiniteDataSource.swift; path = Parchment/Classes/PagingFiniteDataSource.swift; sourceTree = "<group>"; };
+		44256A54B73F65B50E959A6F29264A60 /* CTHalfInterstitialViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTHalfInterstitialViewController.h; path = CleverTapSDK/InApps/CTHalfInterstitialViewController.h; sourceTree = "<group>"; };
+		442FFF8C75DD7E1ED22945785EF468B1 /* ResourceBundle-XLPagerTabStrip-XLPagerTabStrip-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "ResourceBundle-XLPagerTabStrip-XLPagerTabStrip-Info.plist"; sourceTree = "<group>"; };
+		445645A04F832C6AFC1A7D20429B9C25 /* CTValidationResult.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTValidationResult.m; path = CleverTapSDK/CTValidationResult.m; sourceTree = "<group>"; };
+		447066B9535D8ACD3191668F7C63BE2D /* MarginAdjustable+Extensions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "MarginAdjustable+Extensions.swift"; path = "SwiftMessages/MarginAdjustable+Extensions.swift"; sourceTree = "<group>"; };
+		44AFB46FDE2B799A8F3CBC4E091A23A3 /* CleverTapInstanceConfig.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTapInstanceConfig.m; path = CleverTapSDK/CleverTapInstanceConfig.m; sourceTree = "<group>"; };
+		44C602C79A47C739FD70AE92E0BA2A81 /* IQPreviousNextView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = IQPreviousNextView.swift; path = IQKeyboardManagerSwift/IQToolbar/IQPreviousNextView.swift; sourceTree = "<group>"; };
+		44D5F7F23986E9B54D33105C833692FA /* GDTCORTransport.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCORTransport.m; path = GoogleDataTransport/GDTCORLibrary/GDTCORTransport.m; sourceTree = "<group>"; };
+		4519D44022E96363988DEF72BF10FF9B /* FirebaseCoreDiagnostics.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FirebaseCoreDiagnostics.debug.xcconfig; sourceTree = "<group>"; };
+		453FFEE4FA9D0E121E53C6E44FDF31F0 /* FIRCLSInternalLogging.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSInternalLogging.c; path = Crashlytics/Crashlytics/Helpers/FIRCLSInternalLogging.c; sourceTree = "<group>"; };
+		459F6932A4DD3E8EE8A8659E6BE37E87 /* FirebaseCore-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "FirebaseCore-dummy.m"; sourceTree = "<group>"; };
+		45CF5401BC6AD0B0E50BAA2978172E2E /* CleverTapFeatureFlags.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTapFeatureFlags.m; path = CleverTapSDK/FeatureFlags/models/CleverTapFeatureFlags.m; sourceTree = "<group>"; };
+		45FEE7AF59E7C4AE6AD8BCA40C7B530A /* PagingBorderLayoutAttributes.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingBorderLayoutAttributes.swift; path = Parchment/Classes/PagingBorderLayoutAttributes.swift; sourceTree = "<group>"; };
+		464DE511D4131515782F462353325762 /* FBLPromise+Reduce.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Reduce.h"; path = "Sources/FBLPromises/include/FBLPromise+Reduce.h"; sourceTree = "<group>"; };
+		4698442353C2B02DD2E2933B2C6C4075 /* FirebaseCoreDiagnostics-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "FirebaseCoreDiagnostics-dummy.m"; sourceTree = "<group>"; };
+		46B26F62E9AABE87BD017CD954153172 /* FIRDependency.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRDependency.h; path = FirebaseCore/Sources/Private/FIRDependency.h; sourceTree = "<group>"; };
+		4708D4CB01AA4225BB7F1C91A7139D71 /* FIRCLSReportAdapter.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSReportAdapter.h; path = Crashlytics/Crashlytics/Models/Record/FIRCLSReportAdapter.h; sourceTree = "<group>"; };
+		477D028BCF1A258A3AA0A7A2259A5DFA /* CTEventBuilder.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTEventBuilder.h; path = CleverTapSDK/CTEventBuilder.h; sourceTree = "<group>"; };
+		47A9BCECE3286C6F623A834C9407CA00 /* FIROptionsInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIROptionsInternal.h; path = FirebaseCore/Sources/Private/FIROptionsInternal.h; sourceTree = "<group>"; };
 		4824F23D80FF9070A5F8A452DB11EB9A /* SwiftMessages */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; name = SwiftMessages; path = SwiftMessages.framework; sourceTree = BUILT_PRODUCTS_DIR; };
-		482E5877A48E4162371EFDF236CDF51A /* PagingState.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingState.swift; path = Parchment/Enums/PagingState.swift; sourceTree = "<group>"; };
-		484B224EB43646D7F1BD4A603A864213 /* FIRMessagingPersistentSyncMessage.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingPersistentSyncMessage.m; path = FirebaseMessaging/Sources/FIRMessagingPersistentSyncMessage.m; sourceTree = "<group>"; };
-		4878FC12D64EF094114984D0EABAD312 /* FIRAppInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRAppInternal.h; path = FirebaseCore/Sources/Private/FIRAppInternal.h; sourceTree = "<group>"; };
-		48DFB7445959CDCF3DE71DAE37EFC0DB /* SDImageCache.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageCache.m; path = SDWebImage/Core/SDImageCache.m; sourceTree = "<group>"; };
-		494532F32B9EAFC1A885A73004BD5824 /* CTFooterViewController~ipad.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTFooterViewController~ipad.xib"; path = "CleverTapSDK/InApps/resources/CTFooterViewController~ipad.xib"; sourceTree = "<group>"; };
-		49617C3F8B215055A6B9AE8B0BEE9635 /* FirebaseCrashlytics-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "FirebaseCrashlytics-Info.plist"; sourceTree = "<group>"; };
-		49E70E82DC9CC845BD7313D425C7BB0F /* SDInternalMacros.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDInternalMacros.m; path = SDWebImage/Private/SDInternalMacros.m; sourceTree = "<group>"; };
-		4A044776FA869FD9B80DCA52437BD0C9 /* FBLPromise+Retry.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Retry.m"; path = "Sources/FBLPromises/FBLPromise+Retry.m"; sourceTree = "<group>"; };
-		4A72D812EE8D8A7F630FE26A9353CAE3 /* SDImageTransformer.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageTransformer.h; path = SDWebImage/Core/SDImageTransformer.h; sourceTree = "<group>"; };
-		4A8BE3F03BD3A82B25491EC3FD14ABD5 /* CTSwipeView.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTSwipeView.m; path = CleverTapSDK/Inbox/views/CTSwipeView.m; sourceTree = "<group>"; };
-		4A8C462313F4E8B3759A7A6BE25EBE3E /* CTHeaderViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTHeaderViewController.m; path = CleverTapSDK/InApps/CTHeaderViewController.m; sourceTree = "<group>"; };
-		4AF0FDB86C1AE0D5B85FEC2B4A22BCFC /* SegmentedPagerTabStripViewController.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = SegmentedPagerTabStripViewController.swift; path = Sources/SegmentedPagerTabStripViewController.swift; sourceTree = "<group>"; };
+		484C7C928F7D6F2943B7C0358D0A820D /* nanopb-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "nanopb-Info.plist"; sourceTree = "<group>"; };
+		48862458A4A0A4DE9AB4F870B8F2E777 /* GULHeartbeatDateStorage.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULHeartbeatDateStorage.m; path = GoogleUtilities/Environment/GULHeartbeatDateStorage.m; sourceTree = "<group>"; };
+		489473065CDEEB996E0515571B0C41EF /* OTPFieldView.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = OTPFieldView.modulemap; sourceTree = "<group>"; };
+		48992D6CB52E93F6FA9C68F8766CFC81 /* errorIconLight@3x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "errorIconLight@3x.png"; path = "SwiftMessages/Resources/errorIconLight@3x.png"; sourceTree = "<group>"; };
+		48EE650E18407E2AA77F9972D88C79FF /* FIRCLSDwarfUnwind.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSDwarfUnwind.c; path = Crashlytics/Crashlytics/Unwind/Dwarf/FIRCLSDwarfUnwind.c; sourceTree = "<group>"; };
+		49A74E3908131F729AA16FE2181655D0 /* FIRCLSProcessReportOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSProcessReportOperation.m; path = Crashlytics/Crashlytics/Operations/Reports/FIRCLSProcessReportOperation.m; sourceTree = "<group>"; };
+		49B4D2364E14E9F24589A34EC36BD058 /* GDTCORPlatform.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORPlatform.h; path = GoogleDataTransport/GDTCORLibrary/Internal/GDTCORPlatform.h; sourceTree = "<group>"; };
+		4A288F4D11318E672F918E1C5C6FA39E /* TopBottomAnimation.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = TopBottomAnimation.swift; path = SwiftMessages/TopBottomAnimation.swift; sourceTree = "<group>"; };
+		4A6EBB8F119B3054BE6427E05058C6A6 /* errorIcon@3x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "errorIcon@3x.png"; path = "SwiftMessages/Resources/errorIcon@3x.png"; sourceTree = "<group>"; };
 		4AF2E39AE7CBEB16BDCF1479813767A1 /* AlamofireNetworkActivityLogger */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; name = AlamofireNetworkActivityLogger; path = AlamofireNetworkActivityLogger.framework; sourceTree = BUILT_PRODUCTS_DIR; };
-		4B1636178F27590E832F7380FE0820AA /* FBLPromise+Wrap.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Wrap.h"; path = "Sources/FBLPromises/include/FBLPromise+Wrap.h"; sourceTree = "<group>"; };
-		4BBC9A071E733C77C628A0792CB1A83E /* FIRHeartbeatInfo.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRHeartbeatInfo.m; path = FirebaseCore/Sources/FIRHeartbeatInfo.m; sourceTree = "<group>"; };
-		4BEF43BEE7C4737B19FAE66E56E70FB3 /* CTHalfInterstitialViewController~iphoneland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTHalfInterstitialViewController~iphoneland.xib"; path = "CleverTapSDK/InApps/resources/CTHalfInterstitialViewController~iphoneland.xib"; sourceTree = "<group>"; };
-		4BFFF20F126AAB703185FAB8B2187E6E /* CleverTap-iOS-SDK.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = "CleverTap-iOS-SDK.release.xcconfig"; sourceTree = "<group>"; };
-		4C0F0CB3980153ED08B6349A7898AFF3 /* FIRCLSNetworkResponseHandler.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSNetworkResponseHandler.h; path = Crashlytics/Shared/FIRCLSNetworking/FIRCLSNetworkResponseHandler.h; sourceTree = "<group>"; };
-		4C75AF81AC3B535E92A2A28B831E96A5 /* FIRCLSFABAsyncOperation_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSFABAsyncOperation_Private.h; path = Crashlytics/Shared/FIRCLSOperation/FIRCLSFABAsyncOperation_Private.h; sourceTree = "<group>"; };
-		4C883A782CA0F61C0CC8A1CC224CE189 /* SDImageHEICCoder.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageHEICCoder.m; path = SDWebImage/Core/SDImageHEICCoder.m; sourceTree = "<group>"; };
-		4C9CDC8AB4B8CB49529F37327E067FBB /* CleverTap-iOS-SDK-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "CleverTap-iOS-SDK-dummy.m"; sourceTree = "<group>"; };
-		4CBFA202692750F5FA4D346F9B7ABE66 /* SDImageIOAnimatedCoder.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageIOAnimatedCoder.h; path = SDWebImage/Core/SDImageIOAnimatedCoder.h; sourceTree = "<group>"; };
-		4CD535D06120A3E587B7CDEF081963C5 /* FIRCLSSerializeSymbolicatedFramesOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSSerializeSymbolicatedFramesOperation.h; path = Crashlytics/Crashlytics/Operations/Symbolication/FIRCLSSerializeSymbolicatedFramesOperation.h; sourceTree = "<group>"; };
-		4D298BB1CA2DE09E32B418233BE7937F /* FIRMessagingAnalytics.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingAnalytics.m; path = FirebaseMessaging/Sources/FIRMessagingAnalytics.m; sourceTree = "<group>"; };
-		4D7D75DA29CA2A753272FD3AC0AC4845 /* successIcon@3x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "successIcon@3x.png"; path = "SwiftMessages/Resources/successIcon@3x.png"; sourceTree = "<group>"; };
-		4E31A80B073D35AB305E882CBF919A25 /* GDTCORTransformer.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCORTransformer.m; path = GoogleDataTransport/GDTCORLibrary/GDTCORTransformer.m; sourceTree = "<group>"; };
-		4E4D5D90E76C74F2C708058345FD047E /* FIROptions.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIROptions.m; path = FirebaseCore/Sources/FIROptions.m; sourceTree = "<group>"; };
-		4E833281B3ADEB8D6E4F5111A8443E26 /* FIRComponentType.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRComponentType.h; path = FirebaseCore/Sources/Private/FIRComponentType.h; sourceTree = "<group>"; };
-		4E9DF00A88421BF8DEC41AE0A790694C /* FIRComponent.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRComponent.m; path = FirebaseCore/Sources/FIRComponent.m; sourceTree = "<group>"; };
-		4EE0F503DFEC30FB0A82D1E990D1C7D9 /* FIRCLSAnalyticsManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSAnalyticsManager.m; path = Crashlytics/Crashlytics/Controllers/FIRCLSAnalyticsManager.m; sourceTree = "<group>"; };
-		4FAE11DB7B7FF4F5F841088051D76E80 /* FIRInstallationsLogger.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallationsLogger.m; path = FirebaseInstallations/Source/Library/FIRInstallationsLogger.m; sourceTree = "<group>"; };
-		4FB4227D1E4FC9C8022A1CB094CC3A2B /* SDAssociatedObject.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDAssociatedObject.m; path = SDWebImage/Private/SDAssociatedObject.m; sourceTree = "<group>"; };
-		5081D6438478235FFCB109B7F513F504 /* FIRCrashlytics.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCrashlytics.h; path = Crashlytics/Crashlytics/Public/FirebaseCrashlytics/FIRCrashlytics.h; sourceTree = "<group>"; };
-		50829ABB877127D26B6A8B5EE8F32C02 /* GDTCORFlatFileStorage.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORFlatFileStorage.h; path = GoogleDataTransport/GDTCORLibrary/Private/GDTCORFlatFileStorage.h; sourceTree = "<group>"; };
-		5089C8E81AE751D889F4D4D67AA2DAA5 /* FIRHeartbeatInfo.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRHeartbeatInfo.h; path = FirebaseCore/Sources/Private/FIRHeartbeatInfo.h; sourceTree = "<group>"; };
-		5118A213EEE546D5223ED8065CAEB551 /* CTCoverViewController~ipad.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTCoverViewController~ipad.xib"; path = "CleverTapSDK/InApps/resources/CTCoverViewController~ipad.xib"; sourceTree = "<group>"; };
-		520277CF94E49822137700EBDE050A66 /* FIRCLSFABNetworkClient.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSFABNetworkClient.h; path = Crashlytics/Shared/FIRCLSNetworking/FIRCLSFABNetworkClient.h; sourceTree = "<group>"; };
-		522DAB12AA163A8EEF934307D77C590C /* CleverTapInboxViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTapInboxViewController.m; path = CleverTapSDK/Inbox/controllers/CleverTapInboxViewController.m; sourceTree = "<group>"; };
-		52ACB911F426C86131423C7ECE786AB4 /* PageView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PageView.swift; path = Parchment/Structs/PageView.swift; sourceTree = "<group>"; };
-		52AEE033B337B9BB6BB02E486448FCD6 /* CTInterstitialImageViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTInterstitialImageViewController.h; path = CleverTapSDK/InApps/CTInterstitialImageViewController.h; sourceTree = "<group>"; };
-		531D2CCB0041E3F84983049440173FAC /* PassthroughView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PassthroughView.swift; path = Sources/PassthroughView.swift; sourceTree = "<group>"; };
-		5340E52136B510BFC920AD2F962FB2ED /* RequestInterceptor.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = RequestInterceptor.swift; path = Source/RequestInterceptor.swift; sourceTree = "<group>"; };
-		53BBE600F6DD52F89A90F05AD16D93A7 /* FIRInstallationsIIDTokenStore.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsIIDTokenStore.h; path = FirebaseInstallations/Source/Library/IIDMigration/FIRInstallationsIIDTokenStore.h; sourceTree = "<group>"; };
-		540D2DE36893091E0A8A760A01B5AFD1 /* UserExperior.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = UserExperior.debug.xcconfig; sourceTree = "<group>"; };
-		5428A9561EC6D5F3CDC3FDC8AAD0609F /* FIRCLSRecordHost.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSRecordHost.h; path = Crashlytics/Crashlytics/Models/Record/FIRCLSRecordHost.h; sourceTree = "<group>"; };
+		4B5F9EB6D1E633E871B811768DFA3E03 /* FirebaseInstallationsInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FirebaseInstallationsInternal.h; path = FirebaseInstallations/Source/Library/Private/FirebaseInstallationsInternal.h; sourceTree = "<group>"; };
+		4B97EEECB18AB4F359E111BD75F9678F /* FIRCLSThreadArrayOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSThreadArrayOperation.m; path = Crashlytics/Crashlytics/Operations/Symbolication/FIRCLSThreadArrayOperation.m; sourceTree = "<group>"; };
+		4B9E0A6EE29976A26DB7FAF14A2F273C /* Alamofire.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Alamofire.swift; path = Source/Alamofire.swift; sourceTree = "<group>"; };
+		4BBFC7D490C140218BC95AA8CA0E64B1 /* Weak.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Weak.swift; path = SwiftMessages/Weak.swift; sourceTree = "<group>"; };
+		4BDD14D586BD0C7598E989E0A5C559D4 /* FloatingPanel-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "FloatingPanel-dummy.m"; sourceTree = "<group>"; };
+		4BFC936AFB0D862856F1A8DB0B105BF2 /* Behavior.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Behavior.swift; path = Sources/Behavior.swift; sourceTree = "<group>"; };
+		4C3FC17B79340F3BD7BFF111DE3E957A /* PagingCell.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingCell.swift; path = Parchment/Classes/PagingCell.swift; sourceTree = "<group>"; };
+		4C58FF3F13881534CA9253878358C58B /* GULNetworkLoggerProtocol.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULNetworkLoggerProtocol.h; path = GoogleUtilities/Network/Public/GoogleUtilities/GULNetworkLoggerProtocol.h; sourceTree = "<group>"; };
+		4C83DA1C01C00C0FB921DC109BF13DDD /* NSData+ImageContentType.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "NSData+ImageContentType.h"; path = "SDWebImage/Core/NSData+ImageContentType.h"; sourceTree = "<group>"; };
+		4D27417CCD853E7F17C87C974F672805 /* FIRAppAssociationRegistration.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRAppAssociationRegistration.h; path = FirebaseCore/Sources/FIRAppAssociationRegistration.h; sourceTree = "<group>"; };
+		4D460C8077A403C03767144B5DAA7688 /* CTFooterViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTFooterViewController.m; path = CleverTapSDK/InApps/CTFooterViewController.m; sourceTree = "<group>"; };
+		4D4DA4CBB9DB8DFE391FF87354EDB81B /* FIRCLSBinaryImage.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSBinaryImage.m; path = Crashlytics/Crashlytics/Components/FIRCLSBinaryImage.m; sourceTree = "<group>"; };
+		4D7403BA9BDF02D00EE41F01A2048F3A /* FIRComponent.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRComponent.h; path = FirebaseCore/Sources/Private/FIRComponent.h; sourceTree = "<group>"; };
+		4D9A93493223F8879F75B6B7E6E9E3B7 /* Alamofire-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "Alamofire-prefix.pch"; sourceTree = "<group>"; };
+		4D9B615C3328AA3EE6062F04D3DAB5E4 /* GULSceneDelegateSwizzler_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULSceneDelegateSwizzler_Private.h; path = GoogleUtilities/AppDelegateSwizzler/Internal/GULSceneDelegateSwizzler_Private.h; sourceTree = "<group>"; };
+		4DB7D0044BBC6BE5C9A616774558EB43 /* FirebaseCoreDiagnostics.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FirebaseCoreDiagnostics.release.xcconfig; sourceTree = "<group>"; };
+		4DEC70362434095523615EFDB7189F35 /* GULKeychainStorage.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULKeychainStorage.h; path = GoogleUtilities/Environment/Public/GoogleUtilities/GULKeychainStorage.h; sourceTree = "<group>"; };
+		4DFB92EEF69CBF8BE4A85451C58E8AE5 /* FIRMessagingCheckinService.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingCheckinService.h; path = FirebaseMessaging/Sources/Token/FIRMessagingCheckinService.h; sourceTree = "<group>"; };
+		4E0BE61455AEB434673F99B0B7D30EFF /* CTInboxBaseMessageCell.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTInboxBaseMessageCell.m; path = CleverTapSDK/Inbox/cells/CTInboxBaseMessageCell.m; sourceTree = "<group>"; };
+		4E3B2331512ED7E802587450B12AD18F /* FloatingPanel-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "FloatingPanel-umbrella.h"; sourceTree = "<group>"; };
+		4E7BDB0266F380177C72601E23E5CE76 /* SDFileAttributeHelper.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDFileAttributeHelper.h; path = SDWebImage/Private/SDFileAttributeHelper.h; sourceTree = "<group>"; };
+		4E874F721614ECD1328D5A44D663AA19 /* NSURLSession+GULPromises.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "NSURLSession+GULPromises.h"; path = "GoogleUtilities/Environment/Public/GoogleUtilities/NSURLSession+GULPromises.h"; sourceTree = "<group>"; };
+		4EF61E36C3D717165439919E9A7341DD /* FBLPromiseError.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FBLPromiseError.h; path = Sources/FBLPromises/include/FBLPromiseError.h; sourceTree = "<group>"; };
+		4F049D6AD2EEAF811F6FC75FB21501C0 /* GDTCCTCompressionHelper.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCCTCompressionHelper.m; path = GoogleDataTransport/GDTCCTLibrary/GDTCCTCompressionHelper.m; sourceTree = "<group>"; };
+		4F0A2E4017AC579885330E448BCFFAD7 /* GULSecureCoding.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULSecureCoding.m; path = GoogleUtilities/Environment/GULSecureCoding.m; sourceTree = "<group>"; };
+		4F0EBFEF8768EC58C84D9D5C252267B4 /* FIRCLSSerializeSymbolicatedFramesOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSSerializeSymbolicatedFramesOperation.h; path = Crashlytics/Crashlytics/Operations/Symbolication/FIRCLSSerializeSymbolicatedFramesOperation.h; sourceTree = "<group>"; };
+		4F29F996BC87B5DAF0B3C7A4FA0BD091 /* FIRCLSLogger.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSLogger.h; path = Crashlytics/Crashlytics/Helpers/FIRCLSLogger.h; sourceTree = "<group>"; };
+		4F6E34F663058F62FA45A3BC489754AA /* SDImageHEICCoder.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageHEICCoder.m; path = SDWebImage/Core/SDImageHEICCoder.m; sourceTree = "<group>"; };
+		4F9C558075BCF3BA467A34D145DED2FE /* GULURLSessionDataResponse.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULURLSessionDataResponse.m; path = GoogleUtilities/Environment/URLSessionPromiseWrapper/GULURLSessionDataResponse.m; sourceTree = "<group>"; };
+		4FD367005B662FDDAD905941D9A32DF7 /* FIRInstallationsIIDTokenStore.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsIIDTokenStore.h; path = FirebaseInstallations/Source/Library/IIDMigration/FIRInstallationsIIDTokenStore.h; sourceTree = "<group>"; };
+		4FDD8BA7D0BA6DEF23523CA56B1DF741 /* PagingViewControllerDelegate.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingViewControllerDelegate.swift; path = Parchment/Protocols/PagingViewControllerDelegate.swift; sourceTree = "<group>"; };
+		4FEC174D12F1FB76901D4AC3AC2FFC01 /* CTInAppUtils.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTInAppUtils.h; path = CleverTapSDK/CTInAppUtils.h; sourceTree = "<group>"; };
+		502B01691F65390017C4AB52583CC8C6 /* PagingIndicatorLayoutAttributes.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingIndicatorLayoutAttributes.swift; path = Parchment/Classes/PagingIndicatorLayoutAttributes.swift; sourceTree = "<group>"; };
+		505F626652833F2B8E2F23076B20DD18 /* FIRCLSProfiling.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSProfiling.h; path = Crashlytics/Crashlytics/Helpers/FIRCLSProfiling.h; sourceTree = "<group>"; };
+		50B259385978D2156E6668B273B6BC4B /* PagingSelectedScrollPosition.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingSelectedScrollPosition.swift; path = Parchment/Enums/PagingSelectedScrollPosition.swift; sourceTree = "<group>"; };
+		50DC733DEE4D98F8042737E72D57C1A6 /* youtube-ios-player-helper-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "youtube-ios-player-helper-prefix.pch"; sourceTree = "<group>"; };
+		50EF5AA646DA5B62C399A7A6ADB78FEC /* CTValidator.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTValidator.m; path = CleverTapSDK/CTValidator.m; sourceTree = "<group>"; };
+		51490CA5355B9B219A0C923442B642EC /* youtube-ios-player-helper-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "youtube-ios-player-helper-Info.plist"; sourceTree = "<group>"; };
+		515F8265E37CF0EF6DFBCDD20448A4F1 /* CleverTapURLDelegate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTapURLDelegate.h; path = CleverTapSDK/CleverTapURLDelegate.h; sourceTree = "<group>"; };
+		51C1B2ED5787536D09E9B9563F3FFE8A /* FirebaseCrashlytics.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = FirebaseCrashlytics.modulemap; sourceTree = "<group>"; };
+		51D36670663B6985F453150464C3A44D /* SDWebImageTransition.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageTransition.m; path = SDWebImage/Core/SDWebImageTransition.m; sourceTree = "<group>"; };
+		51D3A193B50EBB9C1F88A6DED0E97701 /* FIRDependency.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRDependency.h; path = FirebaseCore/Sources/Private/FIRDependency.h; sourceTree = "<group>"; };
+		52115CD6B6DF37FBADFA9F4732065B10 /* Parchment.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = Parchment.modulemap; sourceTree = "<group>"; };
+		522619785402161F1071952C7BAEA407 /* CTConstants.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTConstants.h; path = CleverTapSDK/CTConstants.h; sourceTree = "<group>"; };
+		52305295B3648E312C7426ECF8336F8E /* URLConvertible+URLRequestConvertible.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "URLConvertible+URLRequestConvertible.swift"; path = "Source/URLConvertible+URLRequestConvertible.swift"; sourceTree = "<group>"; };
+		52565D54E73967345E1E0E95476379E6 /* CTHalfInterstitialImageViewController~iphoneport.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTHalfInterstitialImageViewController~iphoneport.xib"; path = "CleverTapSDK/InApps/resources/CTHalfInterstitialImageViewController~iphoneport.xib"; sourceTree = "<group>"; };
+		52682AD0B63497B536C42A85B469CD47 /* warningIconLight@2x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "warningIconLight@2x.png"; path = "SwiftMessages/Resources/warningIconLight@2x.png"; sourceTree = "<group>"; };
+		52BA99414E0D7634F434771659661C12 /* Combine.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Combine.swift; path = Source/Combine.swift; sourceTree = "<group>"; };
+		53734179FDBA72AC8E7668723EEC52EB /* XLPagerTabStrip-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "XLPagerTabStrip-Info.plist"; sourceTree = "<group>"; };
+		53B6B417DFD80C4FFD7FFFC67FE2BF0E /* PagingLayout.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingLayout.swift; path = Parchment/Protocols/PagingLayout.swift; sourceTree = "<group>"; };
+		542EC7867C0E5DE2E34AD904FB677276 /* GDTCOREvent.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCOREvent.h; path = GoogleDataTransport/GDTCORLibrary/Public/GoogleDataTransport/GDTCOREvent.h; sourceTree = "<group>"; };
+		5434F64A7F1BF16550451736733F6B20 /* GoogleUtilities-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "GoogleUtilities-umbrella.h"; sourceTree = "<group>"; };
+		543931A43AC3CD23F5522DE796869CDF /* ct_volume_on.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = ct_volume_on.png; path = CleverTapSDK/Inbox/resources/ct_volume_on.png; sourceTree = "<group>"; };
+		543F53D1BC5837C1FD9E7D12B27EDE08 /* ScrollingFollowView.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = ScrollingFollowView.modulemap; sourceTree = "<group>"; };
 		544065BA7D1202329397F6CEE19EB5A2 /* UIKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = UIKit.framework; path = Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS14.0.sdk/System/Library/Frameworks/UIKit.framework; sourceTree = DEVELOPER_DIR; };
-		54589BA49F7AF676119E363B14005BCD /* CTInterstitialImageViewController~iphoneport.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTInterstitialImageViewController~iphoneport.xib"; path = "CleverTapSDK/InApps/resources/CTInterstitialImageViewController~iphoneport.xib"; sourceTree = "<group>"; };
-		5490CA538BA9A830F1E9D856640557AA /* FIRCLSSettingsManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSSettingsManager.h; path = Crashlytics/Crashlytics/Settings/FIRCLSSettingsManager.h; sourceTree = "<group>"; };
-		54A66D644E688DA077308A0C4C27E728 /* FIRCoreDiagnosticsData.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCoreDiagnosticsData.h; path = Interop/CoreDiagnostics/Public/FIRCoreDiagnosticsData.h; sourceTree = "<group>"; };
-		54CF931336B440CE2C13524EB70A9905 /* ResourceBundle-SwiftMessages-SwiftMessages-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "ResourceBundle-SwiftMessages-SwiftMessages-Info.plist"; sourceTree = "<group>"; };
+		546290BA2BB9D23E3C445A4285E77C7C /* CTValidationResult.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTValidationResult.h; path = CleverTapSDK/CTValidationResult.h; sourceTree = "<group>"; };
+		548B9AE5A9B717FC7AA8567D4F0F8B05 /* successIconSubtle@2x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "successIconSubtle@2x.png"; path = "SwiftMessages/Resources/successIconSubtle@2x.png"; sourceTree = "<group>"; };
 		5519782215DB0D67497CDCAA4371458E /* Pods-OpenBook */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; name = "Pods-OpenBook"; path = Pods_OpenBook.framework; sourceTree = BUILT_PRODUCTS_DIR; };
-		556D9DA2DF707B1553CFCD90669B248A /* CTUserMO+CoreDataProperties.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "CTUserMO+CoreDataProperties.m"; path = "CleverTapSDK/Inbox/models/CTUserMO+CoreDataProperties.m"; sourceTree = "<group>"; };
-		55A0DE0A80D35402C4F28849F2E4DC92 /* FIRComponent.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRComponent.h; path = FirebaseCore/Sources/Private/FIRComponent.h; sourceTree = "<group>"; };
-		55DA021BA2AF3FB8303DB83DCA84E493 /* RetryPolicy.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = RetryPolicy.swift; path = Source/RetryPolicy.swift; sourceTree = "<group>"; };
-		55DC76677AF5A69494B1C8A4FE869FEF /* FIRCLSContext.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSContext.m; path = Crashlytics/Crashlytics/Components/FIRCLSContext.m; sourceTree = "<group>"; };
-		5613A08634D273E5EBF3E885286C62CC /* FIRCLSAsyncOperation_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSAsyncOperation_Private.h; path = Crashlytics/Crashlytics/Operations/FIRCLSAsyncOperation_Private.h; sourceTree = "<group>"; };
-		56362F034BF93311AF8B0949F38AD0B0 /* FBLPromise+Reduce.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Reduce.h"; path = "Sources/FBLPromises/include/FBLPromise+Reduce.h"; sourceTree = "<group>"; };
-		5682CBAD9E6B6533E38D36E50A44299E /* ParameterEncoding.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ParameterEncoding.swift; path = Source/ParameterEncoding.swift; sourceTree = "<group>"; };
-		56DD7FFAC0BCA8E9D06614C5CEA24354 /* FBLPromiseError.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FBLPromiseError.h; path = Sources/FBLPromises/include/FBLPromiseError.h; sourceTree = "<group>"; };
-		5727434255A7500465236A155BE8CF9E /* FIRCLSOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSOperation.h; path = Crashlytics/Shared/FIRCLSOperation/FIRCLSOperation.h; sourceTree = "<group>"; };
-		573B3725941D6C19A925B318E8122F2C /* SDImageCacheDefine.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageCacheDefine.h; path = SDWebImage/Core/SDImageCacheDefine.h; sourceTree = "<group>"; };
-		579A58FA4FDD9B1D14A60A6217921F62 /* SDWeakProxy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWeakProxy.m; path = SDWebImage/Private/SDWeakProxy.m; sourceTree = "<group>"; };
-		57A1092BA4F39540045C4D5992ABF776 /* UIColor+SDHexString.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIColor+SDHexString.h"; path = "SDWebImage/Private/UIColor+SDHexString.h"; sourceTree = "<group>"; };
-		57A1418379F5A271083E84F8D8B8ED56 /* SDWebImageCacheSerializer.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageCacheSerializer.h; path = SDWebImage/Core/SDWebImageCacheSerializer.h; sourceTree = "<group>"; };
-		57ABB6AF9A3DD75EDD42A880F20E8D71 /* CTInAppHTMLViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTInAppHTMLViewController.h; path = CleverTapSDK/InApps/CTInAppHTMLViewController.h; sourceTree = "<group>"; };
-		57C188D6F367FE03226FA4151A552406 /* SDDisplayLink.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDDisplayLink.h; path = SDWebImage/Private/SDDisplayLink.h; sourceTree = "<group>"; };
-		57CA0E1B82972BBCB373E22278D51278 /* Core.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Core.swift; path = Sources/Core.swift; sourceTree = "<group>"; };
-		57D746CF359351C753F1696487C0989F /* FIRCLSThreadArrayOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSThreadArrayOperation.m; path = Crashlytics/Crashlytics/Operations/Symbolication/FIRCLSThreadArrayOperation.m; sourceTree = "<group>"; };
-		57EE38947BE9512096C1C281147DEF84 /* FIRCLSCompoundOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSCompoundOperation.h; path = Crashlytics/Shared/FIRCLSOperation/FIRCLSCompoundOperation.h; sourceTree = "<group>"; };
-		57F2269C07C2D4E6C56C6C45E7356B9D /* warningIconLight@3x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "warningIconLight@3x.png"; path = "SwiftMessages/Resources/warningIconLight@3x.png"; sourceTree = "<group>"; };
-		57FCE11FDBBE8F95121B58B797CA2782 /* CTUserMO.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTUserMO.h; path = CleverTapSDK/Inbox/models/CTUserMO.h; sourceTree = "<group>"; };
-		582B2C9E7BDF1AC55577071A28BD5F10 /* FIRAppInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRAppInternal.h; path = FirebaseCore/Sources/Private/FIRAppInternal.h; sourceTree = "<group>"; };
+		55254199CDD0DC8A98D31B63DE6A42CF /* CTInAppNotification.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTInAppNotification.h; path = CleverTapSDK/CTInAppNotification.h; sourceTree = "<group>"; };
+		5549F3D68AF33A0A5CD45C1AA777765D /* FIRCLSDataCollectionToken.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSDataCollectionToken.h; path = Crashlytics/Crashlytics/DataCollection/FIRCLSDataCollectionToken.h; sourceTree = "<group>"; };
+		55A8D51C3918D86A609057423BCF0597 /* FBLPromise+Validate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Validate.h"; path = "Sources/FBLPromises/include/FBLPromise+Validate.h"; sourceTree = "<group>"; };
+		55AD4ADCD1AA1110F584DB80C648D33A /* FIRCLSDemangleOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSDemangleOperation.h; path = Crashlytics/Crashlytics/Operations/Symbolication/FIRCLSDemangleOperation.h; sourceTree = "<group>"; };
+		56388C04D8F7A44F49F8AF8A66A58A04 /* FIRCLSURLBuilder.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSURLBuilder.m; path = Crashlytics/Shared/FIRCLSNetworking/FIRCLSURLBuilder.m; sourceTree = "<group>"; };
+		565A6C8FA38EFEE4824C1E55F307EFE5 /* OTPFieldView-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "OTPFieldView-Info.plist"; sourceTree = "<group>"; };
+		5675FB5F1B85DDC84BFA59B5AC142ACB /* GoogleUtilities-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "GoogleUtilities-Info.plist"; sourceTree = "<group>"; };
+		56BCD35B8F352A8517F060325851669D /* SDImageGraphics.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageGraphics.h; path = SDWebImage/Core/SDImageGraphics.h; sourceTree = "<group>"; };
+		57163559F68783F9E30DD03AF90F15DF /* CleverTap-iOS-SDK-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "CleverTap-iOS-SDK-umbrella.h"; sourceTree = "<group>"; };
+		572A32411CDBD2F851D1E96F9B90DD54 /* PagingIndexItem.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingIndexItem.swift; path = Parchment/Structs/PagingIndexItem.swift; sourceTree = "<group>"; };
+		575DA62335E9D2A7981D3CB881F8C83F /* UIView+WebCache.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIView+WebCache.h"; path = "SDWebImage/Core/UIView+WebCache.h"; sourceTree = "<group>"; };
+		57B40F99176598C1C0DA5A9FBFA01FB8 /* CleverTapBuildInfo.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTapBuildInfo.h; path = CleverTapSDK/CleverTapBuildInfo.h; sourceTree = "<group>"; };
+		57E64AB864A1035B3C190694A886A521 /* FBLPromise+Do.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Do.m"; path = "Sources/FBLPromises/FBLPromise+Do.m"; sourceTree = "<group>"; };
+		57FFEE15C4926B4C90AA9266F3A43B63 /* GDTCORRegistrar_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORRegistrar_Private.h; path = GoogleDataTransport/GDTCORLibrary/Private/GDTCORRegistrar_Private.h; sourceTree = "<group>"; };
+		581CF8EB713B8BDD38D4FBD00D06228A /* FirebaseCrashlytics-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "FirebaseCrashlytics-umbrella.h"; sourceTree = "<group>"; };
 		586DFA51695907453FC2C9865DC0FF45 /* ImageIO.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = ImageIO.framework; path = Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS14.0.sdk/System/Library/Frameworks/ImageIO.framework; sourceTree = DEVELOPER_DIR; };
-		58A2AB02C45888EC65FAFB7AC034CB45 /* CleverTap-iOS-SDK-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "CleverTap-iOS-SDK-prefix.pch"; sourceTree = "<group>"; };
-		58D9CAC47DDA43E0EE9863CCF5147C07 /* FirebaseCoreDiagnostics.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = FirebaseCoreDiagnostics.modulemap; sourceTree = "<group>"; };
-		58EDFFCC387A91F5AD809835986A4FBD /* PagingCell.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingCell.swift; path = Parchment/Classes/PagingCell.swift; sourceTree = "<group>"; };
-		59A17B0CE021306CF92FDB0B37E41F05 /* CTInterstitialViewController~iphoneport.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTInterstitialViewController~iphoneport.xib"; path = "CleverTapSDK/InApps/resources/CTInterstitialViewController~iphoneport.xib"; sourceTree = "<group>"; };
-		59A4BF2C0A4C98FCFAED5C4F9D804E97 /* GDTCORLifecycle.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORLifecycle.h; path = GoogleDataTransport/GDTCORLibrary/Internal/GDTCORLifecycle.h; sourceTree = "<group>"; };
-		59B080D266EFC817F38443E832CB86EC /* CTAlertViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTAlertViewController.h; path = CleverTapSDK/InApps/CTAlertViewController.h; sourceTree = "<group>"; };
-		59C1E8BF6D2F7663ADB43041D6D9E523 /* UIImage+GIF.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIImage+GIF.h"; path = "SDWebImage/Core/UIImage+GIF.h"; sourceTree = "<group>"; };
-		59EC1CA5CD6D1B4165F9F6676852A5D5 /* SDImageCoderHelper.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageCoderHelper.m; path = SDWebImage/Core/SDImageCoderHelper.m; sourceTree = "<group>"; };
-		59F0C0A013C5C87E1708530D64F047D7 /* UIView+WebCache.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIView+WebCache.m"; path = "SDWebImage/Core/UIView+WebCache.m"; sourceTree = "<group>"; };
-		5A179F45FE5832B10D972620375BC6C0 /* FIRInstallationsSingleOperationPromiseCache.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallationsSingleOperationPromiseCache.m; path = FirebaseInstallations/Source/Library/InstallationsIDController/FIRInstallationsSingleOperationPromiseCache.m; sourceTree = "<group>"; };
-		5A34BFAD941D4D5592F84577482B0755 /* nanopb-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "nanopb-dummy.m"; sourceTree = "<group>"; };
-		5A48EF2750C860328430143A27412AB9 /* successIconSubtle@3x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "successIconSubtle@3x.png"; path = "SwiftMessages/Resources/successIconSubtle@3x.png"; sourceTree = "<group>"; };
-		5A5CBA20E5E23D5B660ED637DD960445 /* pb.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = pb.h; sourceTree = "<group>"; };
-		5ABA133336F73356FE4E25195FAE4CF2 /* SDImageAWebPCoder.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageAWebPCoder.h; path = SDWebImage/Core/SDImageAWebPCoder.h; sourceTree = "<group>"; };
-		5AE660F98874CC1C68739312DA234FB5 /* FloatingPanel-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "FloatingPanel-umbrella.h"; sourceTree = "<group>"; };
-		5B2ADC9FFFE49A441972C3719ECC4ACC /* FIRMessagingUtilities.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingUtilities.m; path = FirebaseMessaging/Sources/FIRMessagingUtilities.m; sourceTree = "<group>"; };
+		586FE46D13BAE29B758E52774C6C2B90 /* FIRInstallationsItem+RegisterInstallationAPI.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FIRInstallationsItem+RegisterInstallationAPI.m"; path = "FirebaseInstallations/Source/Library/InstallationsAPI/FIRInstallationsItem+RegisterInstallationAPI.m"; sourceTree = "<group>"; };
+		58C6DC4366CC90E41FCFEBC0C9E70F2F /* NetworkReachabilityManager.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = NetworkReachabilityManager.swift; path = Source/NetworkReachabilityManager.swift; sourceTree = "<group>"; };
+		593D8432FF014CFBE3C6C22EC3D7BBE2 /* CTInboxIconMessageCell~port.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTInboxIconMessageCell~port.xib"; path = "CleverTapSDK/Inbox/resources/CTInboxIconMessageCell~port.xib"; sourceTree = "<group>"; };
+		5946337CB950C243ACA1FC968E968FAE /* FIRCLSReportManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSReportManager.h; path = Crashlytics/Crashlytics/Controllers/FIRCLSReportManager.h; sourceTree = "<group>"; };
+		5959E942BB092F1A124425A20036ABAE /* FIRInstallations.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallations.h; path = FirebaseInstallations/Source/Library/Public/FirebaseInstallations/FIRInstallations.h; sourceTree = "<group>"; };
+		59620E32181DC5A4206291E838B08366 /* ParameterEncoding.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ParameterEncoding.swift; path = Source/ParameterEncoding.swift; sourceTree = "<group>"; };
+		59752C7F2EFD0A278A396686B9E086AA /* CTVideoThumbnailGenerator.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTVideoThumbnailGenerator.m; path = CleverTapSDK/Inbox/views/CTVideoThumbnailGenerator.m; sourceTree = "<group>"; };
+		5998C2E65EB243AC008B30FB9E66E1D5 /* MessageView.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = MessageView.xib; path = SwiftMessages/Resources/MessageView.xib; sourceTree = "<group>"; };
+		599B86EB87730F2D46AE8432C9C35FC8 /* UIView+constraints.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "UIView+constraints.swift"; path = "Parchment/Extensions/UIView+constraints.swift"; sourceTree = "<group>"; };
+		599B93267E755F9D67A5E2A9BD32FF8C /* GoogleAppMeasurement.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = GoogleAppMeasurement.release.xcconfig; sourceTree = "<group>"; };
+		59EA141399384AEAC894DAB13B0F6F55 /* FIRCLSProcess.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSProcess.c; path = Crashlytics/Crashlytics/Components/FIRCLSProcess.c; sourceTree = "<group>"; };
+		59F947238622E9B72A9B02BAAB53D1C9 /* CTCoverImageViewController~iphoneport.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTCoverImageViewController~iphoneport.xib"; path = "CleverTapSDK/InApps/resources/CTCoverImageViewController~iphoneport.xib"; sourceTree = "<group>"; };
+		5A0604B1BE78F6A792F1DD029CBEE413 /* CTAlertViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTAlertViewController.m; path = CleverTapSDK/InApps/CTAlertViewController.m; sourceTree = "<group>"; };
+		5A62EE8BDBCB74A29388D5E8860AAF62 /* CardView.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = CardView.xib; path = SwiftMessages/Resources/CardView.xib; sourceTree = "<group>"; };
+		5A85FAB4E757C7AB105A7CE740D1401D /* FIRCLSAsyncOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSAsyncOperation.m; path = Crashlytics/Crashlytics/Operations/FIRCLSAsyncOperation.m; sourceTree = "<group>"; };
+		5A93F73CD114DF4B5C0556016C6AB4F2 /* FirebaseInstallations.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = FirebaseInstallations.modulemap; sourceTree = "<group>"; };
+		5AB8B31A0435C61EC96CB0879B31536C /* FIRCLSRecordIdentity.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSRecordIdentity.h; path = Crashlytics/Crashlytics/Models/Record/FIRCLSRecordIdentity.h; sourceTree = "<group>"; };
+		5B03FE29D20B833C09F6F9C7CC61D478 /* PageViewControllerDataSource.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PageViewControllerDataSource.swift; path = Parchment/Protocols/PageViewControllerDataSource.swift; sourceTree = "<group>"; };
+		5B3EC699426A74EC7891730C5BC7F61E /* CleverTapConfigValue.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTapConfigValue.m; path = CleverTapSDK/ProductConfig/models/CleverTapConfigValue.m; sourceTree = "<group>"; };
+		5B4D537D0A79E63DA68FEA8E02E9DD89 /* FBLPromise+Timeout.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Timeout.h"; path = "Sources/FBLPromises/include/FBLPromise+Timeout.h"; sourceTree = "<group>"; };
 		5B654B4B042BA7DC93766943A643E42B /* FirebaseMessaging */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; name = FirebaseMessaging; path = FirebaseMessaging.framework; sourceTree = BUILT_PRODUCTS_DIR; };
-		5C42E34C2C748B6243FDE9BEEFAA9B71 /* IQTitleBarButtonItem.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = IQTitleBarButtonItem.swift; path = IQKeyboardManagerSwift/IQToolbar/IQTitleBarButtonItem.swift; sourceTree = "<group>"; };
-		5C4E358B18A952F85B92867F9EC69FFD /* OTPFieldView.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = OTPFieldView.debug.xcconfig; sourceTree = "<group>"; };
-		5C4F756CD1EB9EB5C132FB36C1496634 /* FIRMessagingUtilities.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingUtilities.h; path = FirebaseMessaging/Sources/FIRMessagingUtilities.h; sourceTree = "<group>"; };
-		5C71605760E808C2DA00F475E83D6FBF /* GDTCCTUploadOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCCTUploadOperation.h; path = GoogleDataTransport/GDTCCTLibrary/Private/GDTCCTUploadOperation.h; sourceTree = "<group>"; };
-		5C7D25069F48134A38BC9FB5B0A28872 /* FIRCoreDiagnosticsInterop.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCoreDiagnosticsInterop.h; path = Interop/CoreDiagnostics/Public/FIRCoreDiagnosticsInterop.h; sourceTree = "<group>"; };
-		5CBBF3D4CE3AF56685D6134DCFD93BEE /* FirebaseCrashlytics.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FirebaseCrashlytics.h; path = Crashlytics/Crashlytics/Public/FirebaseCrashlytics/FirebaseCrashlytics.h; sourceTree = "<group>"; };
-		5CDD428BE9E7A1E0C4C4034D60E425A3 /* GDTCOREventDataObject.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCOREventDataObject.h; path = GoogleDataTransport/GDTCORLibrary/Public/GoogleDataTransport/GDTCOREventDataObject.h; sourceTree = "<group>"; };
-		5CEED2EBE72FA169950D1B0C6EA09768 /* CleverTap+InAppNotifications.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "CleverTap+InAppNotifications.h"; path = "CleverTapSDK/CleverTap+InAppNotifications.h"; sourceTree = "<group>"; };
-		5CFF3E912112E9C85236791474B56485 /* FIRCLSApplicationIdentifierModel.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSApplicationIdentifierModel.h; path = Crashlytics/Crashlytics/Settings/Models/FIRCLSApplicationIdentifierModel.h; sourceTree = "<group>"; };
-		5D0460FD32FF65CA5139639F0B129CE0 /* FIRMessagingCheckinService.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingCheckinService.h; path = FirebaseMessaging/Sources/Token/FIRMessagingCheckinService.h; sourceTree = "<group>"; };
-		5D68B788273AF6EED0567E4DE881AF34 /* youtube-ios-player-helper-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "youtube-ios-player-helper-dummy.m"; sourceTree = "<group>"; };
-		5D7661D27B5533D9866E33519FB723E3 /* CTUtils.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTUtils.h; path = CleverTapSDK/CTUtils.h; sourceTree = "<group>"; };
+		5B78F3209CA839471013A2D38D81E3B0 /* FIRCLSExistingReportManager_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSExistingReportManager_Private.h; path = Crashlytics/Crashlytics/Private/FIRCLSExistingReportManager_Private.h; sourceTree = "<group>"; };
+		5BD74976777151ACE3E0D71069F50F58 /* IQUIViewController+Additions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "IQUIViewController+Additions.swift"; path = "IQKeyboardManagerSwift/Categories/IQUIViewController+Additions.swift"; sourceTree = "<group>"; };
+		5BFEEA18DEE94E0508C802D6640DCD7D /* SDImageCachesManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageCachesManager.m; path = SDWebImage/Core/SDImageCachesManager.m; sourceTree = "<group>"; };
+		5C4C1A6EF4E83D7593576DC343AE3774 /* FIRMessagingPersistentSyncMessage.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingPersistentSyncMessage.h; path = FirebaseMessaging/Sources/FIRMessagingPersistentSyncMessage.h; sourceTree = "<group>"; };
+		5C977E8E5DEA7B63064C5E3FB1104345 /* CleverTapUTMDetail.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTapUTMDetail.h; path = CleverTapSDK/CleverTapUTMDetail.h; sourceTree = "<group>"; };
+		5CD4E38062B2DC81954AFE1F54EA059A /* PassthroughView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PassthroughView.swift; path = SwiftMessages/PassthroughView.swift; sourceTree = "<group>"; };
+		5D5617CF4F2792AC7D8984514042DC6A /* FirebaseMessaging.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FirebaseMessaging.h; path = FirebaseMessaging/Sources/FirebaseMessaging.h; sourceTree = "<group>"; };
+		5D5C44382B6B2C5CFEF6E835B0572600 /* DigiCertSHA2SecureServerCA.crt */ = {isa = PBXFileReference; includeInIndex = 1; name = DigiCertSHA2SecureServerCA.crt; path = CleverTapSDK/DigiCertSHA2SecureServerCA.crt; sourceTree = "<group>"; };
 		5D797E9A5C5782CE845840781FA1CC81 /* Alamofire */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; name = Alamofire; path = Alamofire.framework; sourceTree = BUILT_PRODUCTS_DIR; };
-		5DC9064FB2DDAF05EC6E92E8FD019B94 /* youtube-ios-player-helper-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "youtube-ios-player-helper-umbrella.h"; sourceTree = "<group>"; };
-		5DE1BE167CE0A04556684A2C4FB351BA /* TabView.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = TabView.xib; path = SwiftMessages/Resources/TabView.xib; sourceTree = "<group>"; };
-		5DEFD9855223581B52BFA84EBA6E7A93 /* UIImageView+WebCache.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIImageView+WebCache.m"; path = "SDWebImage/Core/UIImageView+WebCache.m"; sourceTree = "<group>"; };
-		5E28F0DF903CEDEDF0FB366CACB8CADE /* IQKeyboardManagerConstants.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = IQKeyboardManagerConstants.swift; path = IQKeyboardManagerSwift/Constants/IQKeyboardManagerConstants.swift; sourceTree = "<group>"; };
-		5EFBDFFCEB582EFAE7688314A06B64BC /* FIRCLSReportAdapter.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSReportAdapter.h; path = Crashlytics/Crashlytics/Models/Record/FIRCLSReportAdapter.h; sourceTree = "<group>"; };
-		5F0DB71E436B5DF4B447A58D6AF6C1DB /* Extensions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Extensions.swift; path = Sources/Extensions.swift; sourceTree = "<group>"; };
-		5F28ED8B8211559E1FD9AD39565510D7 /* GoogleUtilities.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = GoogleUtilities.modulemap; sourceTree = "<group>"; };
-		5F35FDD606E5DC51D20B960AF8BDA799 /* SDImageGraphics.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageGraphics.m; path = SDWebImage/Core/SDImageGraphics.m; sourceTree = "<group>"; };
-		5F518A7682685E5A6A70B34D30DAA51F /* SDWebImageDownloaderRequestModifier.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageDownloaderRequestModifier.h; path = SDWebImage/Core/SDWebImageDownloaderRequestModifier.h; sourceTree = "<group>"; };
-		5F939EBE99F4616962CEFDE594CEFD9E /* FloatingPanel-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "FloatingPanel-Info.plist"; sourceTree = "<group>"; };
-		600B020B6BEF83E761CD90700477B952 /* CTInterstitialViewController~iphoneland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTInterstitialViewController~iphoneland.xib"; path = "CleverTapSDK/InApps/resources/CTInterstitialViewController~iphoneland.xib"; sourceTree = "<group>"; };
-		6033D5A4056246D310B127421EBC27B5 /* FirebaseCoreDiagnostics.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FirebaseCoreDiagnostics.release.xcconfig; sourceTree = "<group>"; };
-		6039452C1B3B834A0E312B8EC9B3AFB1 /* FIRAppInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRAppInternal.h; path = FirebaseCore/Sources/Private/FIRAppInternal.h; sourceTree = "<group>"; };
-		608EE03031A94391261EBE3D9545491B /* GULNetworkLoggerProtocol.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULNetworkLoggerProtocol.h; path = GoogleUtilities/Network/Public/GoogleUtilities/GULNetworkLoggerProtocol.h; sourceTree = "<group>"; };
-		60BE1FD4AB219B8E426667EA69952754 /* FIRMessagingTokenOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingTokenOperation.m; path = FirebaseMessaging/Sources/Token/FIRMessagingTokenOperation.m; sourceTree = "<group>"; };
-		612C46F450B1E0AE94D55C97AB701096 /* FIRMessagingKeychain.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingKeychain.m; path = FirebaseMessaging/Sources/Token/FIRMessagingKeychain.m; sourceTree = "<group>"; };
-		61398311EC1CF6F442FA19F1041B26E3 /* FIRCLSApplication.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSApplication.h; path = Crashlytics/Crashlytics/Components/FIRCLSApplication.h; sourceTree = "<group>"; };
-		616B5C3063F1AEE193358A55CC584631 /* CTLocationManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTLocationManager.h; path = CleverTapSDK/CTLocationManager.h; sourceTree = "<group>"; };
-		61ED8CFA697531876B8504349AAFADC8 /* CTInboxMessageActionView.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTInboxMessageActionView.m; path = CleverTapSDK/Inbox/views/CTInboxMessageActionView.m; sourceTree = "<group>"; };
-		623568BEFCE289FC6807E0458B0830DB /* GoogleDataTransport.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = GoogleDataTransport.modulemap; sourceTree = "<group>"; };
-		624F45663805D58CBE2ED940F81CBD5F /* GDTCORUploadBatch.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORUploadBatch.h; path = GoogleDataTransport/GDTCORLibrary/Private/GDTCORUploadBatch.h; sourceTree = "<group>"; };
-		6255482EC00536C98D20A09A8B6B45FD /* GDTCORUploadCoordinator.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORUploadCoordinator.h; path = GoogleDataTransport/GDTCORLibrary/Private/GDTCORUploadCoordinator.h; sourceTree = "<group>"; };
-		625833768D28DEC6611768458187BE9F /* FIRCLSReportAdapter.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSReportAdapter.m; path = Crashlytics/Crashlytics/Models/Record/FIRCLSReportAdapter.m; sourceTree = "<group>"; };
-		627DC84D45B2DE549AEF37742FDD550C /* errorIcon@2x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "errorIcon@2x.png"; path = "SwiftMessages/Resources/errorIcon@2x.png"; sourceTree = "<group>"; };
-		628BD629D941706AE4E2AF8BFFBF65D8 /* GDTCORConsoleLogger.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCORConsoleLogger.m; path = GoogleDataTransport/GDTCORLibrary/GDTCORConsoleLogger.m; sourceTree = "<group>"; };
-		62B2D24D82EC3B7249BF77C3CEE96AA1 /* GULURLSessionDataResponse.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULURLSessionDataResponse.m; path = GoogleUtilities/Environment/URLSessionPromiseWrapper/GULURLSessionDataResponse.m; sourceTree = "<group>"; };
-		62C0A8A3EEC142D1247177B84270C84C /* CTUIUtils.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTUIUtils.h; path = CleverTapSDK/CTUIUtils.h; sourceTree = "<group>"; };
-		62C58E049003EFF6B9A139522A9F70EE /* PassthroughWindow.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PassthroughWindow.swift; path = SwiftMessages/PassthroughWindow.swift; sourceTree = "<group>"; };
-		6342B3402BA98B8613171528F348901B /* CleverTapInboxViewControllerPrivate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTapInboxViewControllerPrivate.h; path = CleverTapSDK/Inbox/controllers/CleverTapInboxViewControllerPrivate.h; sourceTree = "<group>"; };
-		6368CB0B70E79D3B060047C9BA8DC493 /* FIRVersion.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRVersion.h; path = FirebaseCore/Sources/Public/FirebaseCore/FIRVersion.h; sourceTree = "<group>"; };
-		63904F311AC7AF7CF936D5EB23ECE387 /* ScrollingFollowView.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = ScrollingFollowView.debug.xcconfig; sourceTree = "<group>"; };
-		63F82A163425A4D34299B4F575DDB49F /* UIImage+ForceDecode.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIImage+ForceDecode.h"; path = "SDWebImage/Core/UIImage+ForceDecode.h"; sourceTree = "<group>"; };
-		63F8DEBB4968FAE12A41DCACEC1D98B6 /* FIRMessagingAuthKeychain.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingAuthKeychain.m; path = FirebaseMessaging/Sources/Token/FIRMessagingAuthKeychain.m; sourceTree = "<group>"; };
-		646F8905B97215EAFDA2AA731A0494E9 /* crashlytics.nanopb.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = crashlytics.nanopb.h; path = Crashlytics/Protogen/nanopb/crashlytics.nanopb.h; sourceTree = "<group>"; };
-		64C034536F1F42CBFA45EAF2EC02A006 /* GULLoggerCodes.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULLoggerCodes.h; path = GoogleUtilities/Common/GULLoggerCodes.h; sourceTree = "<group>"; };
-		64D895180BDF6A79C2AB32A704E39B9A /* FIRConfigurationInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRConfigurationInternal.h; path = FirebaseCore/Sources/FIRConfigurationInternal.h; sourceTree = "<group>"; };
-		65110ECEDD0D7DB2CEC87956D7EE9EFF /* CALayer+Extensions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "CALayer+Extensions.swift"; path = "SwiftMessages/CALayer+Extensions.swift"; sourceTree = "<group>"; };
-		65404EB6DDE823D6EE46638E3FD11F55 /* CTInAppFCManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTInAppFCManager.m; path = CleverTapSDK/CTInAppFCManager.m; sourceTree = "<group>"; };
-		65586851C5B163BC0B663B861D998777 /* FIRCLSUserDefaults.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSUserDefaults.m; path = Crashlytics/Crashlytics/FIRCLSUserDefaults/FIRCLSUserDefaults.m; sourceTree = "<group>"; };
-		656B24099E7A1FD2BC425BEB2DE9C366 /* FIRCLSDownloadAndSaveSettingsOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSDownloadAndSaveSettingsOperation.m; path = Crashlytics/Crashlytics/Settings/Operations/FIRCLSDownloadAndSaveSettingsOperation.m; sourceTree = "<group>"; };
-		658D3FE121AC043D8C58C811B8AFFC99 /* FIRCLSThreadState.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSThreadState.h; path = Crashlytics/Crashlytics/Helpers/FIRCLSThreadState.h; sourceTree = "<group>"; };
-		659DA25C01A61F2F020D52966AC8C7AE /* FIRLogger.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRLogger.h; path = FirebaseCore/Sources/Private/FIRLogger.h; sourceTree = "<group>"; };
-		65AE7A120F479FFD5829B7E3D1C8AC34 /* FBLPromise+All.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+All.m"; path = "Sources/FBLPromises/FBLPromise+All.m"; sourceTree = "<group>"; };
-		66049DAF9DCDDB04D15D1D80E0EF5135 /* Combine.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Combine.swift; path = Source/Combine.swift; sourceTree = "<group>"; };
-		664817FD8F5F848F85464D9AD2E37123 /* FirebaseInstallations-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "FirebaseInstallations-umbrella.h"; sourceTree = "<group>"; };
-		66771A7B5101D0CE83D1385C5359480C /* FIRComponent.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRComponent.h; path = FirebaseCore/Sources/Private/FIRComponent.h; sourceTree = "<group>"; };
-		66F88E5CE8D96634B0916858BD426203 /* CTBaseHeaderFooterViewControllerPrivate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTBaseHeaderFooterViewControllerPrivate.h; path = CleverTapSDK/InApps/CTBaseHeaderFooterViewControllerPrivate.h; sourceTree = "<group>"; };
-		671EE3F9D5C02E2464E3FAF1F6D1B777 /* CTDeviceInfo.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTDeviceInfo.h; path = CleverTapSDK/CTDeviceInfo.h; sourceTree = "<group>"; };
-		674A086658963014EDFED481D6C8748E /* SDAnimatedImageRep.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDAnimatedImageRep.h; path = SDWebImage/Core/SDAnimatedImageRep.h; sourceTree = "<group>"; };
-		678C8641BDE5A8270185739D7B020641 /* FIRComponent.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRComponent.h; path = FirebaseCore/Sources/Private/FIRComponent.h; sourceTree = "<group>"; };
-		67BC23996785C855441EC0991B0E75A8 /* FIRMessagingTokenStore.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingTokenStore.m; path = FirebaseMessaging/Sources/Token/FIRMessagingTokenStore.m; sourceTree = "<group>"; };
-		680527CBAA8A1A6808A96049731EAA88 /* SDImageCachesManagerOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageCachesManagerOperation.m; path = SDWebImage/Private/SDImageCachesManagerOperation.m; sourceTree = "<group>"; };
-		68CAD1434CF737768EB5E6448FAB200D /* XLPagerTabStrip-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "XLPagerTabStrip-Info.plist"; sourceTree = "<group>"; };
-		696063D6CB86EA8EA472E8E99C09054C /* SDAnimatedImageView.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDAnimatedImageView.h; path = SDWebImage/Core/SDAnimatedImageView.h; sourceTree = "<group>"; };
-		69667D18EC612E71AB1F6A12C0C21778 /* PageViewControllerDelegate.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PageViewControllerDelegate.swift; path = Parchment/Protocols/PageViewControllerDelegate.swift; sourceTree = "<group>"; };
-		69C2FC1EE5D86D089AACC62662FD3683 /* FIRInstallationsItem.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsItem.h; path = FirebaseInstallations/Source/Library/FIRInstallationsItem.h; sourceTree = "<group>"; };
-		69F64AE6EB6B3E3EB5BD78E868EFE258 /* CTBaseHeaderFooterViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTBaseHeaderFooterViewController.h; path = CleverTapSDK/InApps/CTBaseHeaderFooterViewController.h; sourceTree = "<group>"; };
-		6A1EF3569B9392CB4AF990C02F433818 /* ResponseSerialization.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ResponseSerialization.swift; path = Source/ResponseSerialization.swift; sourceTree = "<group>"; };
-		6AAC36F3447A9CDE86ED9FF19479634C /* FIRAnalyticsInterop.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRAnalyticsInterop.h; path = Interop/Analytics/Public/FIRAnalyticsInterop.h; sourceTree = "<group>"; };
-		6ABEF729F6524C8D5A99059A015271FB /* FIRInstallationsAuthTokenResult.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsAuthTokenResult.h; path = FirebaseInstallations/Source/Library/Public/FirebaseInstallations/FIRInstallationsAuthTokenResult.h; sourceTree = "<group>"; };
-		6B06CD7E8CA42D15A110B5217CEE2ED7 /* FIRCLSInternalReport.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSInternalReport.m; path = Crashlytics/Crashlytics/Models/FIRCLSInternalReport.m; sourceTree = "<group>"; };
-		6B3774F2C85143534603407C0FF8C0A2 /* OTPFieldView-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "OTPFieldView-umbrella.h"; sourceTree = "<group>"; };
-		6C12705F38B217C44452C374AEDC6705 /* errorIcon.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = errorIcon.png; path = SwiftMessages/Resources/errorIcon.png; sourceTree = "<group>"; };
-		6C5413BF1DAC53D78AE91ADE7FC77EEF /* PagingCellLayoutAttributes.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingCellLayoutAttributes.swift; path = Parchment/Classes/PagingCellLayoutAttributes.swift; sourceTree = "<group>"; };
-		6C715D8139473324EAF522E1DFCDD168 /* FIRCLSUserLogging.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSUserLogging.h; path = Crashlytics/Crashlytics/Components/FIRCLSUserLogging.h; sourceTree = "<group>"; };
-		6C9810BEA45EF4B270DA3A935D3EFD5E /* successIconLight.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = successIconLight.png; path = SwiftMessages/Resources/successIconLight.png; sourceTree = "<group>"; };
-		6CB18333803888F8614C9A7C5295604F /* PagingMenuInteraction.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingMenuInteraction.swift; path = Parchment/Enums/PagingMenuInteraction.swift; sourceTree = "<group>"; };
-		6D27286DC8AA87FA975B331235150C67 /* SDImageTransformer.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageTransformer.m; path = SDWebImage/Core/SDImageTransformer.m; sourceTree = "<group>"; };
-		6D3BD5FEA5AD94E88DF03D4D71B70F75 /* FBLPromiseError.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FBLPromiseError.m; path = Sources/FBLPromises/FBLPromiseError.m; sourceTree = "<group>"; };
-		6DC8B5664447D1B589456927BB92E928 /* FIRCLSFABAsyncOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSFABAsyncOperation.h; path = Crashlytics/Shared/FIRCLSOperation/FIRCLSFABAsyncOperation.h; sourceTree = "<group>"; };
-		6DCCDC46DEF12922D6A1A8D58F6C2AF8 /* FIRMessagingPendingTopicsList.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingPendingTopicsList.h; path = FirebaseMessaging/Sources/FIRMessagingPendingTopicsList.h; sourceTree = "<group>"; };
-		6DF4DFD316E8C581A47E9C6D5F28776C /* GoogleAppMeasurement.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = GoogleAppMeasurement.debug.xcconfig; sourceTree = "<group>"; };
-		6E534F29660E0E93BF230D6167398F09 /* FIROptionsInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIROptionsInternal.h; path = FirebaseCore/Sources/Private/FIROptionsInternal.h; sourceTree = "<group>"; };
-		6EAFF27C482495C4F8BBB52ED240988D /* PromisesObjC.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = PromisesObjC.release.xcconfig; sourceTree = "<group>"; };
-		6EB0D7D4A5F54018D43C41257496959A /* SDImageIOCoder.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageIOCoder.h; path = SDWebImage/Core/SDImageIOCoder.h; sourceTree = "<group>"; };
-		6F25AEED8CB554235070A5204C98CFF7 /* GDTCOREventTransformer.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCOREventTransformer.h; path = GoogleDataTransport/GDTCORLibrary/Public/GoogleDataTransport/GDTCOREventTransformer.h; sourceTree = "<group>"; };
-		6F2F9449F6FA5359270E434C659AF1B0 /* GULSceneDelegateSwizzler.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULSceneDelegateSwizzler.m; path = GoogleUtilities/AppDelegateSwizzler/GULSceneDelegateSwizzler.m; sourceTree = "<group>"; };
-		6F84DF94244E383042D706ADC1D00F6E /* FIRExceptionModel.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRExceptionModel.m; path = Crashlytics/Crashlytics/FIRExceptionModel.m; sourceTree = "<group>"; };
+		5DC2A5052482E78F537285D6B55C084B /* FIRComponentContainer.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRComponentContainer.h; path = FirebaseCore/Sources/Private/FIRComponentContainer.h; sourceTree = "<group>"; };
+		5DCB6EF2B78FE13C68BB0562F33E428A /* nanopb-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "nanopb-prefix.pch"; sourceTree = "<group>"; };
+		5DDB004CA87387B8317BFF5604824FAD /* warningIconSubtle@2x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "warningIconSubtle@2x.png"; path = "SwiftMessages/Resources/warningIconSubtle@2x.png"; sourceTree = "<group>"; };
+		5E59B2F7A16BB657DE329E113DE876A3 /* GoogleAppMeasurement-xcframeworks.sh */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.script.sh; path = "GoogleAppMeasurement-xcframeworks.sh"; sourceTree = "<group>"; };
+		5E6298C4E04D5D0B2217D19E4F507CE2 /* GDTCORRegistrar.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCORRegistrar.m; path = GoogleDataTransport/GDTCORLibrary/GDTCORRegistrar.m; sourceTree = "<group>"; };
+		5E8965C34CCB928DCD4EA90569B1E504 /* FirebaseCoreDiagnostics.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = FirebaseCoreDiagnostics.modulemap; sourceTree = "<group>"; };
+		5E9533D6C692AAB573E718CB804456A0 /* SDWebImage-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "SDWebImage-umbrella.h"; sourceTree = "<group>"; };
+		5EB36D703D88F16708F2D7F83DA4858A /* FIRLibrary.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRLibrary.h; path = FirebaseCore/Sources/Private/FIRLibrary.h; sourceTree = "<group>"; };
+		5F5A4694830D46808474ED142AD1753C /* GULSwizzler.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULSwizzler.m; path = GoogleUtilities/MethodSwizzler/GULSwizzler.m; sourceTree = "<group>"; };
+		5F7A636703BA71803F18A70D1069FF09 /* FIRExceptionModel.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRExceptionModel.m; path = Crashlytics/Crashlytics/FIRExceptionModel.m; sourceTree = "<group>"; };
+		5F7D3570204556D6137073AEBE000B7D /* GDTCORFlatFileStorage+Promises.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "GDTCORFlatFileStorage+Promises.m"; path = "GoogleDataTransport/GDTCORLibrary/GDTCORFlatFileStorage+Promises.m"; sourceTree = "<group>"; };
+		5F863D83371585D8BC18511D9B54DADC /* FIRInstallationsAuthTokenResult.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallationsAuthTokenResult.m; path = FirebaseInstallations/Source/Library/FIRInstallationsAuthTokenResult.m; sourceTree = "<group>"; };
+		6092BD5DFE8052E7C6139333E21FCA35 /* GULLogger.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULLogger.m; path = GoogleUtilities/Logger/GULLogger.m; sourceTree = "<group>"; };
+		609D948B372B5FDD3A11A23FE893B308 /* CTSwipeView.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTSwipeView.m; path = CleverTapSDK/Inbox/views/CTSwipeView.m; sourceTree = "<group>"; };
+		609DAA51432A0B744386D3FC98E1901C /* CleverTapDisplayUnit.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTapDisplayUnit.m; path = CleverTapSDK/DisplayUnit/models/CleverTapDisplayUnit.m; sourceTree = "<group>"; };
+		60AE513218F5D3AFFCA9792B8C2E9EF0 /* GDTCORLifecycle.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCORLifecycle.m; path = GoogleDataTransport/GDTCORLibrary/GDTCORLifecycle.m; sourceTree = "<group>"; };
+		60FF54EC9247B6101870C24D91A2C543 /* CTCarouselMessageCell.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTCarouselMessageCell.m; path = CleverTapSDK/Inbox/cells/CTCarouselMessageCell.m; sourceTree = "<group>"; };
+		6135A5B940448D22239E9E06C8CDCEDF /* ScrollingFollowView-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "ScrollingFollowView-dummy.m"; sourceTree = "<group>"; };
+		6141569F84C571ABF9B039239F6C6330 /* CleverTap-iOS-SDK.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = "CleverTap-iOS-SDK.release.xcconfig"; sourceTree = "<group>"; };
+		619950B07F5483B8EA753C04FF0D08A1 /* AlamofireNetworkActivityLogger-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "AlamofireNetworkActivityLogger-dummy.m"; sourceTree = "<group>"; };
+		624A921ED3D6FFBD7CE13F0F6E8B6723 /* Firebase.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = Firebase.release.xcconfig; sourceTree = "<group>"; };
+		62828417C60E69CC39611115B629A09F /* SDAnimatedImagePlayer.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDAnimatedImagePlayer.h; path = SDWebImage/Core/SDAnimatedImagePlayer.h; sourceTree = "<group>"; };
+		630C2D12DD25A08A9D84B40F1391C3DF /* CleverTapTrackedViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTapTrackedViewController.m; path = CleverTapSDK/CleverTapTrackedViewController.m; sourceTree = "<group>"; };
+		63148198B708E46DC7635789681B8376 /* BackgroundViewable.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = BackgroundViewable.swift; path = SwiftMessages/BackgroundViewable.swift; sourceTree = "<group>"; };
+		63338322A28B340DF3DBB9DA1E44F2AC /* GULAppDelegateSwizzler.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULAppDelegateSwizzler.h; path = GoogleUtilities/AppDelegateSwizzler/Public/GoogleUtilities/GULAppDelegateSwizzler.h; sourceTree = "<group>"; };
+		633E6CDEBCBDCCAAE9F68F71128FFA4A /* SwiftMessages.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = SwiftMessages.modulemap; sourceTree = "<group>"; };
+		63608B743866BBC20999279228C08F4F /* GoogleDataTransport-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "GoogleDataTransport-dummy.m"; sourceTree = "<group>"; };
+		6372652B9C41599EF9FB6D1F9B6D201F /* PageViewManagerDataSource.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PageViewManagerDataSource.swift; path = Parchment/Protocols/PageViewManagerDataSource.swift; sourceTree = "<group>"; };
+		63997407C61817869F00568B253D6CCB /* CTCarouselMessageCell.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTCarouselMessageCell.h; path = CleverTapSDK/Inbox/cells/CTCarouselMessageCell.h; sourceTree = "<group>"; };
+		63B03A6364380903FD7148111C0AE313 /* CTInterstitialImageViewController~ipad.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTInterstitialImageViewController~ipad.xib"; path = "CleverTapSDK/InApps/resources/CTInterstitialImageViewController~ipad.xib"; sourceTree = "<group>"; };
+		63E155F417870E25E88412060628410E /* CTImageInAppViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTImageInAppViewController.h; path = CleverTapSDK/InApps/CTImageInAppViewController.h; sourceTree = "<group>"; };
+		64201A78E382EB319009B9B1E22FD48E /* pb_encode.c */ = {isa = PBXFileReference; includeInIndex = 1; path = pb_encode.c; sourceTree = "<group>"; };
+		645AC5BA1D0DAF3767A9A58913E80A81 /* UIView+WebCacheOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIView+WebCacheOperation.h"; path = "SDWebImage/Core/UIView+WebCacheOperation.h"; sourceTree = "<group>"; };
+		6472E1C7B8DF7939683253FB80F9A7EF /* CTPinnedNSURLSessionDelegate.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTPinnedNSURLSessionDelegate.m; path = CleverTapSDK/CTPinnedNSURLSessionDelegate.m; sourceTree = "<group>"; };
+		64A9974ABB0109A89864671FF955A19C /* XLPagerTabStrip.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = XLPagerTabStrip.modulemap; sourceTree = "<group>"; };
+		6504694C431494CC95B4CC310FE30CCC /* GULMutableDictionary.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULMutableDictionary.h; path = GoogleUtilities/Network/Public/GoogleUtilities/GULMutableDictionary.h; sourceTree = "<group>"; };
+		651C749EAA4998CA5425D60D2712C618 /* FIRCLSAnalyticsManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSAnalyticsManager.h; path = Crashlytics/Crashlytics/Controllers/FIRCLSAnalyticsManager.h; sourceTree = "<group>"; };
+		6549897108C17BCC06880FEE925C8636 /* FIRHeartbeatInfo.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRHeartbeatInfo.m; path = FirebaseCore/Sources/FIRHeartbeatInfo.m; sourceTree = "<group>"; };
+		655C7A7A2D77D535F64B6ED73FC1D40D /* FIRCLSThreadState.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSThreadState.c; path = Crashlytics/Crashlytics/Helpers/FIRCLSThreadState.c; sourceTree = "<group>"; };
+		65F753EAF81D72BE5B6CDA55E06CEBBD /* FIRAnalyticsInterop.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRAnalyticsInterop.h; path = Interop/Analytics/Public/FIRAnalyticsInterop.h; sourceTree = "<group>"; };
+		660CE1D13BE6A891D26775384BB8B152 /* FIRCLSDataCollectionToken.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSDataCollectionToken.m; path = Crashlytics/Crashlytics/DataCollection/FIRCLSDataCollectionToken.m; sourceTree = "<group>"; };
+		6626BAAF7D476EE2F5D7EFD6E447C27F /* SDImageLoadersManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageLoadersManager.h; path = SDWebImage/Core/SDImageLoadersManager.h; sourceTree = "<group>"; };
+		66A58A540C05E615DB4F42EDB0DD3D9A /* CTImageInAppViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTImageInAppViewController.m; path = CleverTapSDK/InApps/CTImageInAppViewController.m; sourceTree = "<group>"; };
+		66AE1CA9000E3F4B8789D0D8DEC0CD52 /* IQUITextFieldView+Additions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "IQUITextFieldView+Additions.swift"; path = "IQKeyboardManagerSwift/Categories/IQUITextFieldView+Additions.swift"; sourceTree = "<group>"; };
+		66E97302FA67DC7B7ACA4CC26C612F3B /* FIRCLSdSYM.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSdSYM.h; path = Crashlytics/Shared/FIRCLSMachO/FIRCLSdSYM.h; sourceTree = "<group>"; };
+		671EA038B2ED1401F11F037F7726F0DF /* GDTCOREvent+GDTCCTSupport.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "GDTCOREvent+GDTCCTSupport.m"; path = "GoogleDataTransport/GDTCCTLibrary/GDTCOREvent+GDTCCTSupport.m"; sourceTree = "<group>"; };
+		6759CCC1316CC381D10353BAEC910715 /* FIRMessagingTopicOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingTopicOperation.m; path = FirebaseMessaging/Sources/FIRMessagingTopicOperation.m; sourceTree = "<group>"; };
+		68DE76508BDA559739A3D4CF2E2696FE /* ResponseSerialization.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ResponseSerialization.swift; path = Source/ResponseSerialization.swift; sourceTree = "<group>"; };
+		6910098C40B2CE9C8161B771D61F3CE7 /* SDImageCodersManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageCodersManager.h; path = SDWebImage/Core/SDImageCodersManager.h; sourceTree = "<group>"; };
+		6917FBBB1634CC3EB2A77177319BD91B /* CTInAppHTMLViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTInAppHTMLViewController.m; path = CleverTapSDK/InApps/CTInAppHTMLViewController.m; sourceTree = "<group>"; };
+		6921B53F6F2D536240E3875A0F3F68BC /* BarPagerTabStripViewController.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = BarPagerTabStripViewController.swift; path = Sources/BarPagerTabStripViewController.swift; sourceTree = "<group>"; };
+		6944FCA2E8B8ADB24900CE5439C41D1E /* IQKeyboardManagerSwift.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = IQKeyboardManagerSwift.debug.xcconfig; sourceTree = "<group>"; };
+		69721EDA49271D9D092FD451A5FA13D5 /* FIRComponentType.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRComponentType.h; path = FirebaseCore/Sources/Private/FIRComponentType.h; sourceTree = "<group>"; };
+		69AC3B8909B1E0DBE3F60C919B890B00 /* NSURLSession+GULPromises.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "NSURLSession+GULPromises.m"; path = "GoogleUtilities/Environment/URLSessionPromiseWrapper/NSURLSession+GULPromises.m"; sourceTree = "<group>"; };
+		69FF19D06CCDFDFA96C07F877D8BE2F2 /* CTInterstitialViewController~iphoneport.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTInterstitialViewController~iphoneport.xib"; path = "CleverTapSDK/InApps/resources/CTInterstitialViewController~iphoneport.xib"; sourceTree = "<group>"; };
+		6A6BBCC3DDA24A2FBA30A7E0EA41A29C /* SDWebImageCacheSerializer.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageCacheSerializer.m; path = SDWebImage/Core/SDWebImageCacheSerializer.m; sourceTree = "<group>"; };
+		6A91CE4EE2922EF88E5E5B591182F677 /* FirebaseAnalytics.xcframework */ = {isa = PBXFileReference; includeInIndex = 1; name = FirebaseAnalytics.xcframework; path = Frameworks/FirebaseAnalytics.xcframework; sourceTree = "<group>"; };
+		6BB8EE9920FB6D6BDA084E542D65798E /* SDDeviceHelper.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDDeviceHelper.h; path = SDWebImage/Private/SDDeviceHelper.h; sourceTree = "<group>"; };
+		6C0549C770D4674B5386FC6252D9F5F4 /* IndicatorInfo.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = IndicatorInfo.swift; path = Sources/IndicatorInfo.swift; sourceTree = "<group>"; };
+		6C286A086FC337834F62B88833A952E5 /* GULReachabilityChecker.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULReachabilityChecker.m; path = GoogleUtilities/Reachability/GULReachabilityChecker.m; sourceTree = "<group>"; };
+		6C2BAF5AB4973BE041CBF30E746A9053 /* IQKeyboardManagerConstantsInternal.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = IQKeyboardManagerConstantsInternal.swift; path = IQKeyboardManagerSwift/Constants/IQKeyboardManagerConstantsInternal.swift; sourceTree = "<group>"; };
+		6CF0C6ABE3E75E950F25D8B8F9CFA066 /* UIImage+GIF.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIImage+GIF.m"; path = "SDWebImage/Core/UIImage+GIF.m"; sourceTree = "<group>"; };
+		6D24F5227F017C41F04B0B438AB421B9 /* FIRInstallationsErrors.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsErrors.h; path = FirebaseInstallations/Source/Library/Public/FirebaseInstallations/FIRInstallationsErrors.h; sourceTree = "<group>"; };
+		6E1ADE1A2E9CF5807B15D238D5D4D771 /* FirebaseMessaging-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "FirebaseMessaging-dummy.m"; sourceTree = "<group>"; };
+		6ECC13266B461167A54724AED1D72EFD /* PagingMenuInteraction.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingMenuInteraction.swift; path = Parchment/Enums/PagingMenuInteraction.swift; sourceTree = "<group>"; };
+		6F2365A0507828F4F82D50B35BE710F2 /* CTInterstitialViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTInterstitialViewController.m; path = CleverTapSDK/InApps/CTInterstitialViewController.m; sourceTree = "<group>"; };
+		6F52B54A15572161B60F4185F519BD12 /* FIRCLSApplication.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSApplication.h; path = Crashlytics/Crashlytics/Components/FIRCLSApplication.h; sourceTree = "<group>"; };
+		6F99F80788C2841279C7B5DC7738C28D /* SDImageIOAnimatedCoder.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageIOAnimatedCoder.m; path = SDWebImage/Core/SDImageIOAnimatedCoder.m; sourceTree = "<group>"; };
 		6FAAB7D3DE9B2564509ABD18687E938E /* FloatingPanel */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; name = FloatingPanel; path = FloatingPanel.framework; sourceTree = BUILT_PRODUCTS_DIR; };
-		6FAAE740EF4591A0ABA8EBF8A2B840ED /* UIViewController+Extensions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "UIViewController+Extensions.swift"; path = "SwiftMessages/UIViewController+Extensions.swift"; sourceTree = "<group>"; };
-		6FADB945789CC98C9EB5D7D778F67B42 /* PagingBorderLayoutAttributes.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingBorderLayoutAttributes.swift; path = Parchment/Classes/PagingBorderLayoutAttributes.swift; sourceTree = "<group>"; };
-		6FF9465C0188F8F49650CC14A2326B29 /* CTCarouselImageMessageCell~port.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTCarouselImageMessageCell~port.xib"; path = "CleverTapSDK/Inbox/resources/CTCarouselImageMessageCell~port.xib"; sourceTree = "<group>"; };
-		700204BEE12AEA18A72E2AFFAFC5E11D /* GULNSData+zlib.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "GULNSData+zlib.m"; path = "GoogleUtilities/NSData+zlib/GULNSData+zlib.m"; sourceTree = "<group>"; };
-		700C267616DA118338875B315AB6AF23 /* SDMemoryCache.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDMemoryCache.m; path = SDWebImage/Core/SDMemoryCache.m; sourceTree = "<group>"; };
-		7083693CC7EBCD34C761ADC817B359C1 /* FIRInteropParameterNames.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInteropParameterNames.h; path = Interop/Analytics/Public/FIRInteropParameterNames.h; sourceTree = "<group>"; };
-		7088FC2DBC965B8F024B483857067DF8 /* FIRCLSMachOBinary.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSMachOBinary.m; path = Crashlytics/Shared/FIRCLSMachO/FIRCLSMachOBinary.m; sourceTree = "<group>"; };
-		708A1D597A391F09849EA505C1B81346 /* IQTextView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = IQTextView.swift; path = IQKeyboardManagerSwift/IQTextView/IQTextView.swift; sourceTree = "<group>"; };
-		70A12B186856B08B4AF700A4A7A028FE /* CTCarouselMessageCell.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTCarouselMessageCell.m; path = CleverTapSDK/Inbox/cells/CTCarouselMessageCell.m; sourceTree = "<group>"; };
-		70B78676E486E5735745926630A81D3C /* FIRCoreDiagnosticsInterop.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCoreDiagnosticsInterop.h; path = Interop/CoreDiagnostics/Public/FIRCoreDiagnosticsInterop.h; sourceTree = "<group>"; };
-		71623D99B096A3A471223B894F59296C /* FirebaseInstallationsInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FirebaseInstallationsInternal.h; path = FirebaseInstallations/Source/Library/Private/FirebaseInstallationsInternal.h; sourceTree = "<group>"; };
-		719CE6BEB5A7CE0F73FD19932D929736 /* CleverTapInboxStyleConfig.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTapInboxStyleConfig.m; path = CleverTapSDK/Inbox/config/CleverTapInboxStyleConfig.m; sourceTree = "<group>"; };
-		71ED1C30791BC819A46E74CADCCEA730 /* NSError+FIRMessaging.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "NSError+FIRMessaging.m"; path = "FirebaseMessaging/Sources/NSError+FIRMessaging.m"; sourceTree = "<group>"; };
-		7203B59682BADF2A519317E7A9DD9079 /* SDWebImageDownloaderOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageDownloaderOperation.m; path = SDWebImage/Core/SDWebImageDownloaderOperation.m; sourceTree = "<group>"; };
-		7282E5A21A0C0FCC8335A4D2FB5E9761 /* PagerTabStripViewController.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagerTabStripViewController.swift; path = Sources/PagerTabStripViewController.swift; sourceTree = "<group>"; };
-		7296C85693271B7CC3B4BC37EFD1D153 /* DigiCertSHA2SecureServerCA.crt */ = {isa = PBXFileReference; includeInIndex = 1; name = DigiCertSHA2SecureServerCA.crt; path = CleverTapSDK/DigiCertSHA2SecureServerCA.crt; sourceTree = "<group>"; };
-		7298FC012AF1742AB599688543610891 /* GDTCORReachability.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORReachability.h; path = GoogleDataTransport/GDTCORLibrary/Internal/GDTCORReachability.h; sourceTree = "<group>"; };
-		72AE5AAF9B6C6DC2473BFC6B78A44B3F /* PagingCellViewModel.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingCellViewModel.swift; path = Parchment/Structs/PagingCellViewModel.swift; sourceTree = "<group>"; };
-		72E371F001BD53415EBBBC968629B4D4 /* CTInboxSimpleMessageCell~port.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTInboxSimpleMessageCell~port.xib"; path = "CleverTapSDK/Inbox/resources/CTInboxSimpleMessageCell~port.xib"; sourceTree = "<group>"; };
-		72F370F1CB968143725F10FA1B9848E1 /* warningIconLight.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = warningIconLight.png; path = SwiftMessages/Resources/warningIconLight.png; sourceTree = "<group>"; };
-		734412A5601575FC3BC84B4C15737BD1 /* CleverTap-iOS-SDK.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = "CleverTap-iOS-SDK.modulemap"; sourceTree = "<group>"; };
-		7348B9F38C5BC51DC40308F3D4DA54A2 /* NSURLSession+GULPromises.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "NSURLSession+GULPromises.m"; path = "GoogleUtilities/Environment/URLSessionPromiseWrapper/NSURLSession+GULPromises.m"; sourceTree = "<group>"; };
-		738ABC6EB266AF2C57773B6CEAA731E4 /* SurfaceView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = SurfaceView.swift; path = Sources/SurfaceView.swift; sourceTree = "<group>"; };
-		7394484066B32499D3E818FEBF2854DB /* FIRCrashlyticsReport.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCrashlyticsReport.m; path = Crashlytics/Crashlytics/FIRCrashlyticsReport.m; sourceTree = "<group>"; };
-		739893C82F24CC6EE8EAF89D937A3CD9 /* Presenter.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Presenter.swift; path = SwiftMessages/Presenter.swift; sourceTree = "<group>"; };
-		73A8D8A536F91AEF8955CA6F8062B3A6 /* GDTCORAssert.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORAssert.h; path = GoogleDataTransport/GDTCORLibrary/Internal/GDTCORAssert.h; sourceTree = "<group>"; };
-		73C35E7DF3168EADB8911900859A9473 /* FIRCLSInternalLogging.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSInternalLogging.c; path = Crashlytics/Crashlytics/Helpers/FIRCLSInternalLogging.c; sourceTree = "<group>"; };
-		73D9B6DAC09A7A50B4A7EEC44247E5DC /* SDWebImage.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = SDWebImage.release.xcconfig; sourceTree = "<group>"; };
-		73E1E591BBC89BEF65FF38624D19D85A /* FIRMessaging.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessaging.m; path = FirebaseMessaging/Sources/FIRMessaging.m; sourceTree = "<group>"; };
-		7430F4537B2DD427CE94C8BB5016491C /* PagingMenuItemSource.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingMenuItemSource.swift; path = Parchment/Enums/PagingMenuItemSource.swift; sourceTree = "<group>"; };
-		74626D082CAB504E6EF569F6F8476070 /* SDWebImageTransition.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageTransition.h; path = SDWebImage/Core/SDWebImageTransition.h; sourceTree = "<group>"; };
-		7478B459679964B2060A73FD82CD553D /* Alamofire-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "Alamofire-umbrella.h"; sourceTree = "<group>"; };
-		748F2B0B1D7D6F8344615257771E32B3 /* SwiftMessages.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = SwiftMessages.debug.xcconfig; sourceTree = "<group>"; };
-		7515B4F331EDB0347B73596B801BCBE9 /* ScrollingFollowView-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "ScrollingFollowView-prefix.pch"; sourceTree = "<group>"; };
-		7538EF8DEF0292A516861C0429EC9279 /* cct.nanopb.c */ = {isa = PBXFileReference; includeInIndex = 1; name = cct.nanopb.c; path = GoogleDataTransport/GDTCCTLibrary/Protogen/nanopb/cct.nanopb.c; sourceTree = "<group>"; };
+		6FB00B23DF0B51440A195F03DEF46339 /* SDWebImageDownloaderResponseModifier.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageDownloaderResponseModifier.h; path = SDWebImage/Core/SDWebImageDownloaderResponseModifier.h; sourceTree = "<group>"; };
+		6FFA542398080E443CEE883BED840042 /* UIImage+ForceDecode.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIImage+ForceDecode.h"; path = "SDWebImage/Core/UIImage+ForceDecode.h"; sourceTree = "<group>"; };
+		7000F81E483D701478C188DCA5600175 /* IQBarButtonItem.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = IQBarButtonItem.swift; path = IQKeyboardManagerSwift/IQToolbar/IQBarButtonItem.swift; sourceTree = "<group>"; };
+		704A3BBD09FCEEBFD143CD9948C2C47A /* CTFooterViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTFooterViewController.h; path = CleverTapSDK/InApps/CTFooterViewController.h; sourceTree = "<group>"; };
+		7082B4098ED08EB747058DDE40A00874 /* CleverTap+DisplayUnit.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "CleverTap+DisplayUnit.h"; path = "CleverTapSDK/CleverTap+DisplayUnit.h"; sourceTree = "<group>"; };
+		70AF0E4133E987AE5B9977ECB06AE6F3 /* GoogleAppMeasurement.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = GoogleAppMeasurement.debug.xcconfig; sourceTree = "<group>"; };
+		70B1A5237C3912D676A52F61570BA198 /* UIView+WebCacheOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIView+WebCacheOperation.m"; path = "SDWebImage/Core/UIView+WebCacheOperation.m"; sourceTree = "<group>"; };
+		70F895F9280EB9DF8809A6BDEA2C7B36 /* MaskingView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = MaskingView.swift; path = SwiftMessages/MaskingView.swift; sourceTree = "<group>"; };
+		71233380E6A65EBF19839301CF38DE2F /* FIRComponent.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRComponent.h; path = FirebaseCore/Sources/Private/FIRComponent.h; sourceTree = "<group>"; };
+		7190E30191BF9A241C04AD969B9C624B /* CTCoverImageViewController~ipad.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTCoverImageViewController~ipad.xib"; path = "CleverTapSDK/InApps/resources/CTCoverImageViewController~ipad.xib"; sourceTree = "<group>"; };
+		719B504E36D0A9E6BE09C8226378C90F /* FIRCoreDiagnostics.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCoreDiagnostics.m; path = Firebase/CoreDiagnostics/FIRCDLibrary/FIRCoreDiagnostics.m; sourceTree = "<group>"; };
+		71A992955D309D9E3C02B07B74C31575 /* FIRCLSUnwind.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSUnwind.h; path = Crashlytics/Crashlytics/Unwind/FIRCLSUnwind.h; sourceTree = "<group>"; };
+		71D285A1878E9D22AD352EBC9A3EC28D /* FIRCLSLogger.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSLogger.m; path = Crashlytics/Crashlytics/Helpers/FIRCLSLogger.m; sourceTree = "<group>"; };
+		7225D5F08A2446219A3C5BEDD2ACE8B3 /* FIRCoreDiagnosticsData.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCoreDiagnosticsData.h; path = Interop/CoreDiagnostics/Public/FIRCoreDiagnosticsData.h; sourceTree = "<group>"; };
+		7272293863517BAB5FDB5B9C2845AB7D /* SDAnimatedImageRep.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDAnimatedImageRep.m; path = SDWebImage/Core/SDAnimatedImageRep.m; sourceTree = "<group>"; };
+		7282A29AF98EDCB2629552B3D9989414 /* PagingBorderOptions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingBorderOptions.swift; path = Parchment/Enums/PagingBorderOptions.swift; sourceTree = "<group>"; };
+		72EEECCB5CA8BFDBC19EFDD0600CF909 /* FIRVersion.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRVersion.m; path = FirebaseCore/Sources/FIRVersion.m; sourceTree = "<group>"; };
+		72F08C751A42A85DA8A21B237C8BD657 /* AlamofireNetworkActivityLogger.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = AlamofireNetworkActivityLogger.release.xcconfig; sourceTree = "<group>"; };
+		73431BE418F7294C6578F0ECB34A11C8 /* FIRCLSContext.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSContext.h; path = Crashlytics/Crashlytics/Components/FIRCLSContext.h; sourceTree = "<group>"; };
+		73B7CC9C89ED5CF7E6050A1B87F1204A /* FIRCLSUserLogging.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSUserLogging.m; path = Crashlytics/Crashlytics/Components/FIRCLSUserLogging.m; sourceTree = "<group>"; };
+		73DCC30A0975CF8EC7D374DC264B75C6 /* FIRCLSInstallIdentifierModel.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSInstallIdentifierModel.m; path = Crashlytics/Crashlytics/Models/FIRCLSInstallIdentifierModel.m; sourceTree = "<group>"; };
+		73F0AD6C9701EA1D57564E339C059ACB /* CleverTapInAppNotificationDelegate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTapInAppNotificationDelegate.h; path = CleverTapSDK/CleverTapInAppNotificationDelegate.h; sourceTree = "<group>"; };
+		7450D9CE4694B6A115DBC5294D2B733B /* FIRMessagingAnalytics.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingAnalytics.h; path = FirebaseMessaging/Sources/FIRMessagingAnalytics.h; sourceTree = "<group>"; };
+		7454FA163F52B12515744F83B0EF8BD5 /* ct_default_audio.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = ct_default_audio.png; path = CleverTapSDK/Inbox/resources/ct_default_audio.png; sourceTree = "<group>"; };
+		747839390FEB32C0B31CDE1F1DE7173C /* FIRCoreDiagnosticsConnector.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCoreDiagnosticsConnector.h; path = FirebaseCore/Sources/Private/FIRCoreDiagnosticsConnector.h; sourceTree = "<group>"; };
+		74C338F218E0D5A07922A259EE01FD7A /* FIRCLSException.mm */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSException.mm; path = Crashlytics/Crashlytics/Handlers/FIRCLSException.mm; sourceTree = "<group>"; };
+		74C5078638ED7085EB5749A170D8B922 /* FIRComponentType.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRComponentType.h; path = FirebaseCore/Sources/Private/FIRComponentType.h; sourceTree = "<group>"; };
+		74CD825D1618E30060A1808C80796172 /* FIRCLSSignal.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSSignal.c; path = Crashlytics/Crashlytics/Handlers/FIRCLSSignal.c; sourceTree = "<group>"; };
+		752787D4D5E2ADC44F9DCB12A5AE7D4F /* FIRInstallationsStoredItem.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallationsStoredItem.m; path = FirebaseInstallations/Source/Library/InstallationsStore/FIRInstallationsStoredItem.m; sourceTree = "<group>"; };
+		752CE7AB184C7AE09F2AF537BB3ADC3D /* FIRCLSApplication.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSApplication.m; path = Crashlytics/Crashlytics/Components/FIRCLSApplication.m; sourceTree = "<group>"; };
 		753DD909979478A0C1B33E0524504EF1 /* SwiftMessages-SwiftMessages */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; name = "SwiftMessages-SwiftMessages"; path = SwiftMessages.bundle; sourceTree = BUILT_PRODUCTS_DIR; };
-		755180C0315E923E5652A4F2576DD5A3 /* SDWebImageManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageManager.h; path = SDWebImage/Core/SDWebImageManager.h; sourceTree = "<group>"; };
-		7568F7FE4F07602CA9A872F9363899C4 /* FIRCLSProcess.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSProcess.h; path = Crashlytics/Crashlytics/Components/FIRCLSProcess.h; sourceTree = "<group>"; };
-		756F769010C936D6B55A0773AADC2E82 /* IQUIView+IQKeyboardToolbar.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "IQUIView+IQKeyboardToolbar.swift"; path = "IQKeyboardManagerSwift/IQToolbar/IQUIView+IQKeyboardToolbar.swift"; sourceTree = "<group>"; };
-		75908DED122FC101810EF698FF35EB23 /* FIRCLSReportUploader_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSReportUploader_Private.h; path = Crashlytics/Crashlytics/Controllers/FIRCLSReportUploader_Private.h; sourceTree = "<group>"; };
-		75E7D06D46E3A476A2BD6FD433AF8BC7 /* CleverTapTrackedViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTapTrackedViewController.m; path = CleverTapSDK/CleverTapTrackedViewController.m; sourceTree = "<group>"; };
-		75E9623933DB8FA15D43BAE5F30743B1 /* FirebaseAnalytics.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FirebaseAnalytics.debug.xcconfig; sourceTree = "<group>"; };
-		75F5B3C66E2B3D7F850C7F7EC707E4B4 /* RequestTaskMap.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = RequestTaskMap.swift; path = Source/RequestTaskMap.swift; sourceTree = "<group>"; };
-		75FBA4C8CAFB900A6AB5946D068EFCFC /* FIRCoreDiagnosticsConnector.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCoreDiagnosticsConnector.h; path = FirebaseCore/Sources/Private/FIRCoreDiagnosticsConnector.h; sourceTree = "<group>"; };
-		760A8E38BFD99B8926146F8BB503CDC2 /* SwiftLint.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = SwiftLint.debug.xcconfig; sourceTree = "<group>"; };
-		760BCD065C82519877CEEDDCF808CD52 /* FIRCLSExecutionIdentifierModel.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSExecutionIdentifierModel.m; path = Crashlytics/Crashlytics/Models/FIRCLSExecutionIdentifierModel.m; sourceTree = "<group>"; };
-		763E6569A86EDE0CB24795D23ADEB525 /* FIRCLSLogger.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSLogger.m; path = Crashlytics/Crashlytics/Helpers/FIRCLSLogger.m; sourceTree = "<group>"; };
-		764852E59DB4FABA95EA778158B97C7A /* CTInboxIconMessageCell.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTInboxIconMessageCell.m; path = CleverTapSDK/Inbox/cells/CTInboxIconMessageCell.m; sourceTree = "<group>"; };
-		766E09648795C48BBBE87FFB14FE65A3 /* nanopb.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = nanopb.debug.xcconfig; sourceTree = "<group>"; };
+		7560252785F4534B0A7DF2DE8BF88202 /* CTUIUtils.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTUIUtils.m; path = CleverTapSDK/CTUIUtils.m; sourceTree = "<group>"; };
+		75A2B92908925D9D4100AEF8A268BF5A /* FIRMessagingDefines.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingDefines.h; path = FirebaseMessaging/Sources/FIRMessagingDefines.h; sourceTree = "<group>"; };
+		760C0A7EA500745AFCABBA8558A238D7 /* UIView+CTToast.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIView+CTToast.h"; path = "CleverTapSDK/Inbox/views/UIView+CTToast.h"; sourceTree = "<group>"; };
+		762642292C091B3CB4047404E6818F75 /* FBLPromise+Validate.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Validate.m"; path = "Sources/FBLPromises/FBLPromise+Validate.m"; sourceTree = "<group>"; };
+		764527D4AF483A9664434CC804DF21B2 /* FIRCLSInternalReport.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSInternalReport.h; path = Crashlytics/Crashlytics/Models/FIRCLSInternalReport.h; sourceTree = "<group>"; };
+		76645EC5F250FAA55A16C7C62D128B88 /* CTUIUtils.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTUIUtils.h; path = CleverTapSDK/CTUIUtils.h; sourceTree = "<group>"; };
+		7694C95B8F3082D324819B612E5E9CC1 /* GULLoggerLevel.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULLoggerLevel.h; path = GoogleUtilities/Logger/Public/GoogleUtilities/GULLoggerLevel.h; sourceTree = "<group>"; };
+		76A55EEAD99A8DC13B2CCD7E4204A129 /* GoogleAppMeasurement.xcframework */ = {isa = PBXFileReference; includeInIndex = 1; name = GoogleAppMeasurement.xcframework; path = Frameworks/GoogleAppMeasurement.xcframework; sourceTree = "<group>"; };
+		7708A2B7CDA55281214684B732DDBE1E /* FIRMessagingAuthService.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingAuthService.h; path = FirebaseMessaging/Sources/Token/FIRMessagingAuthService.h; sourceTree = "<group>"; };
 		7713751266FBC492D8D0FFCC2E5075BC /* Pods-OpenBook.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = "Pods-OpenBook.debug.xcconfig"; sourceTree = "<group>"; };
-		77305BBD431BE71B0CEC87444ACF6894 /* successIcon@2x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "successIcon@2x.png"; path = "SwiftMessages/Resources/successIcon@2x.png"; sourceTree = "<group>"; };
-		7743516977969390EB004AEDA9585F78 /* SDImageCoder.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageCoder.h; path = SDWebImage/Core/SDImageCoder.h; sourceTree = "<group>"; };
-		779D2029CCF5E5B39853F9E65484489C /* PageViewManager.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PageViewManager.swift; path = Parchment/Classes/PageViewManager.swift; sourceTree = "<group>"; };
-		77A814124D5C92ED1CC98E882B5C81C5 /* Position.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Position.swift; path = Sources/Position.swift; sourceTree = "<group>"; };
-		77B583500A4AE470229923AB7EFA97E8 /* FirebaseCrashlytics.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FirebaseCrashlytics.debug.xcconfig; sourceTree = "<group>"; };
-		786A63EB1306995666534BE6B1CFBFF0 /* CTHalfInterstitialImageViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTHalfInterstitialImageViewController.h; path = CleverTapSDK/InApps/CTHalfInterstitialImageViewController.h; sourceTree = "<group>"; };
-		787117CA07066D83A09EE6DE395463B4 /* FirebaseMessaging.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FirebaseMessaging.h; path = FirebaseMessaging/Sources/Public/FirebaseMessaging/FirebaseMessaging.h; sourceTree = "<group>"; };
-		788BA2FFC52FB77B68DE39E6C6E19DFB /* CleverTap-iOS-SDK-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "CleverTap-iOS-SDK-umbrella.h"; sourceTree = "<group>"; };
+		7718E943FB36AC09DFA783A183BC7B92 /* SwiftMessages-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "SwiftMessages-Info.plist"; sourceTree = "<group>"; };
+		777EEA6E589115848D5A1E78D7FBA756 /* Firebase.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = Firebase.debug.xcconfig; sourceTree = "<group>"; };
+		77B61DDEB4547953A6B9A8A50A4A5520 /* Identifiable.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Identifiable.swift; path = SwiftMessages/Identifiable.swift; sourceTree = "<group>"; };
+		77FCA99F448DEB88FB1F44D119955CEA /* CTDisplayUnitController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTDisplayUnitController.m; path = CleverTapSDK/DisplayUnit/controllers/CTDisplayUnitController.m; sourceTree = "<group>"; };
+		78101452E375C73DC363DFB7A00D9F9E /* errorIconLight.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = errorIconLight.png; path = SwiftMessages/Resources/errorIconLight.png; sourceTree = "<group>"; };
+		78213D1FD58E095F7BBB866084420727 /* SDDisplayLink.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDDisplayLink.h; path = SDWebImage/Private/SDDisplayLink.h; sourceTree = "<group>"; };
+		78307D57ABD9E31903729F7F3326348F /* FIRInstallationsIDController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsIDController.h; path = FirebaseInstallations/Source/Library/InstallationsIDController/FIRInstallationsIDController.h; sourceTree = "<group>"; };
+		78854ED4BAFD39A4BFB32B34CA94DD0E /* PagingMenuPosition.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingMenuPosition.swift; path = Parchment/Enums/PagingMenuPosition.swift; sourceTree = "<group>"; };
+		788FB7545C6CE038423F7C7441DAF8B1 /* FIRComponentContainer.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRComponentContainer.m; path = FirebaseCore/Sources/FIRComponentContainer.m; sourceTree = "<group>"; };
 		78BA4BB1A553AB4136F879792D99C87D /* XLPagerTabStrip-XLPagerTabStrip */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; name = "XLPagerTabStrip-XLPagerTabStrip"; path = XLPagerTabStrip.bundle; sourceTree = BUILT_PRODUCTS_DIR; };
-		78F72047CE712C88DD51E6474A146423 /* FIRMessagingTopicOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingTopicOperation.m; path = FirebaseMessaging/Sources/FIRMessagingTopicOperation.m; sourceTree = "<group>"; };
-		79216AD063CE4AB3746D04BD07507CEE /* FIRMessagingCheckinStore.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingCheckinStore.m; path = FirebaseMessaging/Sources/Token/FIRMessagingCheckinStore.m; sourceTree = "<group>"; };
-		7987E06267A5AC0AD78A400EC533844E /* FIRCLSFABHost.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSFABHost.m; path = Crashlytics/Shared/FIRCLSFABHost.m; sourceTree = "<group>"; };
-		79D9F07C90BE045C8C035600C20C276F /* AlamofireNetworkActivityLogger-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "AlamofireNetworkActivityLogger-dummy.m"; sourceTree = "<group>"; };
-		7A6520F836D83ACAB5994C3EB22EB43B /* infoIconSubtle.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = infoIconSubtle.png; path = SwiftMessages/Resources/infoIconSubtle.png; sourceTree = "<group>"; };
-		7A7F9FA718C68D82A114B0D40ACE04BF /* FIRCLSSignal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSSignal.h; path = Crashlytics/Crashlytics/Handlers/FIRCLSSignal.h; sourceTree = "<group>"; };
-		7A83EAAED9E524396B455FEFC76F052E /* SDAnimatedImageView+WebCache.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "SDAnimatedImageView+WebCache.m"; path = "SDWebImage/Core/SDAnimatedImageView+WebCache.m"; sourceTree = "<group>"; };
-		7A932CF055888D58AC5364A9BB4E4126 /* SDWebImageTransitionInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageTransitionInternal.h; path = SDWebImage/Private/SDWebImageTransitionInternal.h; sourceTree = "<group>"; };
-		7AC50911851E67B8319C4DCE5AE00CE6 /* GDTCORFlatFileStorage.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCORFlatFileStorage.m; path = GoogleDataTransport/GDTCORLibrary/GDTCORFlatFileStorage.m; sourceTree = "<group>"; };
-		7AE13F62F63F0793892128446B79B076 /* YTPlayerView.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = YTPlayerView.h; path = Classes/YTPlayerView.h; sourceTree = "<group>"; };
-		7B811F777909A902B640AAB8B8E1AF20 /* KeyboardTrackingView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = KeyboardTrackingView.swift; path = SwiftMessages/KeyboardTrackingView.swift; sourceTree = "<group>"; };
-		7C13B5F523FFAA9CF31890D5AC33277A /* FBLPromise+Catch.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Catch.h"; path = "Sources/FBLPromises/include/FBLPromise+Catch.h"; sourceTree = "<group>"; };
-		7C3C0EBDDAF3A350054ED0598CB10786 /* GULKeychainUtils.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULKeychainUtils.h; path = GoogleUtilities/Environment/Public/GoogleUtilities/GULKeychainUtils.h; sourceTree = "<group>"; };
-		7C6A77E0314D89B6181E54CB5B13AB86 /* FIRMessagingTokenFetchOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingTokenFetchOperation.m; path = FirebaseMessaging/Sources/Token/FIRMessagingTokenFetchOperation.m; sourceTree = "<group>"; };
-		7C9FFFAA3424193DD5CCAD72A9B377EF /* FIRInstallationsErrorUtil.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallationsErrorUtil.m; path = FirebaseInstallations/Source/Library/Errors/FIRInstallationsErrorUtil.m; sourceTree = "<group>"; };
-		7CA1B945A08C1A34B3BD939029C64433 /* CTMessageMO.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTMessageMO.h; path = CleverTapSDK/Inbox/models/CTMessageMO.h; sourceTree = "<group>"; };
-		7CA4E34730D1C1BC863D8D7CF2F69BF8 /* FirebaseMessaging.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FirebaseMessaging.debug.xcconfig; sourceTree = "<group>"; };
-		7CDB6237D6B781C493F37FE346D34043 /* GoogleAppMeasurement.xcframework */ = {isa = PBXFileReference; includeInIndex = 1; name = GoogleAppMeasurement.xcframework; path = Frameworks/GoogleAppMeasurement.xcframework; sourceTree = "<group>"; };
-		7CFFD8242DEBD1263960EC06A75789C9 /* CTDisplayUnitController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTDisplayUnitController.h; path = CleverTapSDK/DisplayUnit/controllers/CTDisplayUnitController.h; sourceTree = "<group>"; };
-		7D190753A1EA146A856C3ACAD5C5AB09 /* FIRMessagingLogger.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingLogger.h; path = FirebaseMessaging/Sources/FIRMessagingLogger.h; sourceTree = "<group>"; };
-		7D898A05E335F5579D54DC190DE6F5F0 /* FIRInstallationsAPIService.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallationsAPIService.m; path = FirebaseInstallations/Source/Library/InstallationsAPI/FIRInstallationsAPIService.m; sourceTree = "<group>"; };
-		7DFF0FF2D841C95E0AC41E9B97CB3442 /* ic_pause@3x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "ic_pause@3x.png"; path = "CleverTapSDK/Inbox/resources/ic_pause@3x.png"; sourceTree = "<group>"; };
-		7E0C2719D067664A68653A76CF38FBB9 /* Weak.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Weak.swift; path = SwiftMessages/Weak.swift; sourceTree = "<group>"; };
-		7E9132E25E101C6406254D4819633C94 /* SDAnimatedImageView+WebCache.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "SDAnimatedImageView+WebCache.h"; path = "SDWebImage/Core/SDAnimatedImageView+WebCache.h"; sourceTree = "<group>"; };
-		7E97897E1D3BC1E0A926C9812091ADCD /* PhysicsAnimation.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PhysicsAnimation.swift; path = SwiftMessages/PhysicsAnimation.swift; sourceTree = "<group>"; };
-		7EAABCFEE60DFBB16A63A2DA5CF86E93 /* SDDeviceHelper.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDDeviceHelper.m; path = SDWebImage/Private/SDDeviceHelper.m; sourceTree = "<group>"; };
-		7F13B05E1343F172F13E3F5A79EBEAC3 /* SDImageGraphics.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageGraphics.h; path = SDWebImage/Core/SDImageGraphics.h; sourceTree = "<group>"; };
-		7F13DABDD01C960E2CD79E1ACDCBA0F7 /* PromisesObjC-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "PromisesObjC-umbrella.h"; sourceTree = "<group>"; };
-		7F4F668C8866F21B6D1E05E2F415F32E /* FIRInstallations.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallations.m; path = FirebaseInstallations/Source/Library/FIRInstallations.m; sourceTree = "<group>"; };
-		7F53103EE456620E8551DE4198710519 /* IQKeyboardReturnKeyHandler.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = IQKeyboardReturnKeyHandler.swift; path = IQKeyboardManagerSwift/IQKeyboardReturnKeyHandler.swift; sourceTree = "<group>"; };
-		7F54A22CBA30E804ABDBB1B07783A24A /* FIRMessagingExtensionHelper.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingExtensionHelper.m; path = FirebaseMessaging/Sources/FIRMessagingExtensionHelper.m; sourceTree = "<group>"; };
-		7FB06F5D34A53BC7BC2028D4349F5E1B /* PagingContentInteraction.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingContentInteraction.swift; path = Parchment/Enums/PagingContentInteraction.swift; sourceTree = "<group>"; };
-		7FDFF3BF94A1E41BB053B847BCCF5AE2 /* SDImageCachesManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageCachesManager.h; path = SDWebImage/Core/SDImageCachesManager.h; sourceTree = "<group>"; };
-		7FE9990AFCD3E31A0337B2B5F95A9537 /* FirebaseInstallations-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "FirebaseInstallations-dummy.m"; sourceTree = "<group>"; };
-		802B7339CC68A24D3C90DCB8D98DEDB9 /* CTMessageMO+CoreDataProperties.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "CTMessageMO+CoreDataProperties.h"; path = "CleverTapSDK/Inbox/models/CTMessageMO+CoreDataProperties.h"; sourceTree = "<group>"; };
-		80546A2524AE0F9B2829BD6CF96BDBD6 /* CenteredView.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = CenteredView.xib; path = SwiftMessages/Resources/CenteredView.xib; sourceTree = "<group>"; };
-		80AB4406E8DA952BD699B38D9C8237A1 /* GoogleDataTransport-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "GoogleDataTransport-Info.plist"; sourceTree = "<group>"; };
-		8188DDB43C025E0E3CDA638C06789DD0 /* CTBaseHeaderFooterViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTBaseHeaderFooterViewController.m; path = CleverTapSDK/InApps/CTBaseHeaderFooterViewController.m; sourceTree = "<group>"; };
-		818D9AB4C1E64600C9B3F0AF19FB3B29 /* NSImage+Compatibility.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "NSImage+Compatibility.h"; path = "SDWebImage/Core/NSImage+Compatibility.h"; sourceTree = "<group>"; };
-		81EA77B4B64C7968F7A0FD180FFD7D4C /* CTHeaderViewController~ipadland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTHeaderViewController~ipadland.xib"; path = "CleverTapSDK/InApps/resources/CTHeaderViewController~ipadland.xib"; sourceTree = "<group>"; };
-		821D9C79E575786B0F34EAB942697691 /* FIRAppAssociationRegistration.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRAppAssociationRegistration.h; path = FirebaseCore/Sources/FIRAppAssociationRegistration.h; sourceTree = "<group>"; };
-		822C75E96351338100F6A5C5BDA46DF5 /* PagingIndicatorView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingIndicatorView.swift; path = Parchment/Classes/PagingIndicatorView.swift; sourceTree = "<group>"; };
-		826F55875800C8CB6DA104A12F8B67B4 /* FIRCLSMachException.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSMachException.h; path = Crashlytics/Crashlytics/Handlers/FIRCLSMachException.h; sourceTree = "<group>"; };
-		8270984355B406E62C5ADEABEF37E0EF /* SDWebImageDefine.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageDefine.h; path = SDWebImage/Core/SDWebImageDefine.h; sourceTree = "<group>"; };
-		82A6EDCDA1893B806C9D9127580714CA /* GULLogger.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULLogger.m; path = GoogleUtilities/Logger/GULLogger.m; sourceTree = "<group>"; };
-		8377150BB08B6742FD664B31A822BB61 /* GDTCOREndpoints.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCOREndpoints.m; path = GoogleDataTransport/GDTCORLibrary/GDTCOREndpoints.m; sourceTree = "<group>"; };
-		838417595BF002594868A1A0F6583C4D /* FIRMessagingInterop.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingInterop.h; path = FirebaseMessaging/Sources/Interop/FIRMessagingInterop.h; sourceTree = "<group>"; };
+		78BDDDD68F7B11012F2AC398E69730A0 /* FIRAnalyticsInterop.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRAnalyticsInterop.h; path = Interop/Analytics/Public/FIRAnalyticsInterop.h; sourceTree = "<group>"; };
+		792E6BC26BD4A63ABBE9107A874D57D4 /* FBLPromise+Await.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Await.m"; path = "Sources/FBLPromises/FBLPromise+Await.m"; sourceTree = "<group>"; };
+		7974271D2EFBF3AE8F80084BB87AD7AC /* PassthroughView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PassthroughView.swift; path = Sources/PassthroughView.swift; sourceTree = "<group>"; };
+		79794729394378A2B3C432B9F016005B /* SDDisplayLink.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDDisplayLink.m; path = SDWebImage/Private/SDDisplayLink.m; sourceTree = "<group>"; };
+		79A94AE3F2421FC4C4484A739082A5E4 /* FirebaseAnalytics-xcframeworks.sh */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.script.sh; path = "FirebaseAnalytics-xcframeworks.sh"; sourceTree = "<group>"; };
+		7A0DCDF4EE5E096A2825164D0E7F8427 /* FIRCLSURLBuilder.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSURLBuilder.h; path = Crashlytics/Shared/FIRCLSNetworking/FIRCLSURLBuilder.h; sourceTree = "<group>"; };
+		7AB36873712063E242B27D55D9A9016F /* FirebaseCrashlytics.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FirebaseCrashlytics.debug.xcconfig; sourceTree = "<group>"; };
+		7AD928C62D1CCDA81DFFE70C46E4DE0E /* FIRMessagingAuthKeychain.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingAuthKeychain.m; path = FirebaseMessaging/Sources/Token/FIRMessagingAuthKeychain.m; sourceTree = "<group>"; };
+		7AEAA0DB2BC4D4FD8EF27B6A56436111 /* FIRDiagnosticsData.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRDiagnosticsData.h; path = FirebaseCore/Sources/FIRDiagnosticsData.h; sourceTree = "<group>"; };
+		7B247E27A8ECCBAF86D722F73C11E4EE /* FIRDependency.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRDependency.m; path = FirebaseCore/Sources/FIRDependency.m; sourceTree = "<group>"; };
+		7B75BF0F03E3798DBA62A4B46B2E83F9 /* CTUtils.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTUtils.h; path = CleverTapSDK/CTUtils.h; sourceTree = "<group>"; };
+		7B89A1C90EA3B4A508C1263744B58035 /* FIRCLSSymbolResolver.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSSymbolResolver.h; path = Crashlytics/Crashlytics/Models/FIRCLSSymbolResolver.h; sourceTree = "<group>"; };
+		7BCD620DD6A5E6B62B5DA5D1164E882B /* CTPreferences.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTPreferences.m; path = CleverTapSDK/CTPreferences.m; sourceTree = "<group>"; };
+		7BD061EE78E4F468D393D20532287189 /* IQKeyboardManager+OrientationNotification.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "IQKeyboardManager+OrientationNotification.swift"; path = "IQKeyboardManagerSwift/IQKeyboardManager+OrientationNotification.swift"; sourceTree = "<group>"; };
+		7BE69E55CCA4C73AAD30E53F324FBFB4 /* SDImageIOCoder.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageIOCoder.m; path = SDWebImage/Core/SDImageIOCoder.m; sourceTree = "<group>"; };
+		7C02DAF75A9C5E4B5ADCA840BAC111B9 /* FIRMessagingTokenFetchOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingTokenFetchOperation.m; path = FirebaseMessaging/Sources/Token/FIRMessagingTokenFetchOperation.m; sourceTree = "<group>"; };
+		7C6DEA778DA7892977E16C88B95320C2 /* PromisesObjC-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "PromisesObjC-dummy.m"; sourceTree = "<group>"; };
+		7C705EF5B2F8D0AB0F671FF2ACBB658D /* FIRCLSReportAdapter.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSReportAdapter.m; path = Crashlytics/Crashlytics/Models/Record/FIRCLSReportAdapter.m; sourceTree = "<group>"; };
+		7CA2C1F5242D07F703A4AFDBDC6CDB02 /* SDWebImageManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageManager.m; path = SDWebImage/Core/SDWebImageManager.m; sourceTree = "<group>"; };
+		7CA2DA0805D1A3856588886B5EB8BA9E /* FIRMessagingBackupExcludedPlist.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingBackupExcludedPlist.h; path = FirebaseMessaging/Sources/Token/FIRMessagingBackupExcludedPlist.h; sourceTree = "<group>"; };
+		7CA6813EE4F976B65FECCB56747E7B37 /* FIRInstallationsStatus.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsStatus.h; path = FirebaseInstallations/Source/Library/InstallationsIDController/FIRInstallationsStatus.h; sourceTree = "<group>"; };
+		7CBA4B276C1D5ECE2594DC93F243D07A /* SwiftMessages.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = SwiftMessages.debug.xcconfig; sourceTree = "<group>"; };
+		7CBA9F017FB12EF747D1533FF5CD3B16 /* FIRInstallationsAuthTokenResult.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsAuthTokenResult.h; path = FirebaseInstallations/Source/Library/Public/FirebaseInstallations/FIRInstallationsAuthTokenResult.h; sourceTree = "<group>"; };
+		7CC354E905EBAEA58982A67562A49595 /* CleverTapInboxViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTapInboxViewController.m; path = CleverTapSDK/Inbox/controllers/CleverTapInboxViewController.m; sourceTree = "<group>"; };
+		7CE80FB43381B929002E704471D37209 /* GULNetwork.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULNetwork.m; path = GoogleUtilities/Network/GULNetwork.m; sourceTree = "<group>"; };
+		7CFE9934C6354CBC9666B1554A1555EF /* PagingIndicatorOptions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingIndicatorOptions.swift; path = Parchment/Enums/PagingIndicatorOptions.swift; sourceTree = "<group>"; };
+		7D3F59D4E1525AAE0497DF7607D0B12A /* NSBezierPath+SDRoundedCorners.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "NSBezierPath+SDRoundedCorners.h"; path = "SDWebImage/Private/NSBezierPath+SDRoundedCorners.h"; sourceTree = "<group>"; };
+		7D930E572AA8419DE7E020E638D4F6DE /* CleverTapTrackedViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTapTrackedViewController.h; path = CleverTapSDK/CleverTapTrackedViewController.h; sourceTree = "<group>"; };
+		7DB942B6CD3D39B695ACB5FD6E2F5B41 /* SDMemoryCache.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDMemoryCache.h; path = SDWebImage/Core/SDMemoryCache.h; sourceTree = "<group>"; };
+		7DF4A53A8A3E75C8D42C491EC9BAF1FA /* CTInterstitialViewController~ipadland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTInterstitialViewController~ipadland.xib"; path = "CleverTapSDK/InApps/resources/CTInterstitialViewController~ipadland.xib"; sourceTree = "<group>"; };
+		7E2BF31DE2A8F1494A25954A8227A263 /* FIRCLSCallStackTree.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSCallStackTree.h; path = Crashlytics/Crashlytics/Helpers/FIRCLSCallStackTree.h; sourceTree = "<group>"; };
+		7E66765019894D3036AE0C813011F2B4 /* FIRMessagingTokenDeleteOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingTokenDeleteOperation.h; path = FirebaseMessaging/Sources/Token/FIRMessagingTokenDeleteOperation.h; sourceTree = "<group>"; };
+		7E966BAF1557E2838242B2A4667C553A /* CleverTapUTMDetail.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTapUTMDetail.m; path = CleverTapSDK/CleverTapUTMDetail.m; sourceTree = "<group>"; };
+		7EA8E8496DC3A9BAE0360D73E94DE12C /* CTHalfInterstitialImageViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTHalfInterstitialImageViewController.m; path = CleverTapSDK/InApps/CTHalfInterstitialImageViewController.m; sourceTree = "<group>"; };
+		7EBD86F4B1E4291FD8DC8558F94F0BD3 /* FIRMessagingTopicsCommon.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingTopicsCommon.h; path = FirebaseMessaging/Sources/FIRMessagingTopicsCommon.h; sourceTree = "<group>"; };
+		7F1A2C303BC16F887293F7802EE0734C /* CTHalfInterstitialViewController~ipad.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTHalfInterstitialViewController~ipad.xib"; path = "CleverTapSDK/InApps/resources/CTHalfInterstitialViewController~ipad.xib"; sourceTree = "<group>"; };
+		7F8093B2B1E1DDFA8228657F4507F898 /* CTDisplayUnitController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTDisplayUnitController.h; path = CleverTapSDK/DisplayUnit/controllers/CTDisplayUnitController.h; sourceTree = "<group>"; };
+		7F842FD28DB8C393443BACAC674D713C /* SDWebImageCacheKeyFilter.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageCacheKeyFilter.m; path = SDWebImage/Core/SDWebImageCacheKeyFilter.m; sourceTree = "<group>"; };
+		7FAF43665F9F949DCF5F45A7ED10134B /* RetryPolicy.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = RetryPolicy.swift; path = Source/RetryPolicy.swift; sourceTree = "<group>"; };
+		7FAF71FBC938AF2E65DF089170227F59 /* FIRMessagingTokenFetchOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingTokenFetchOperation.h; path = FirebaseMessaging/Sources/Token/FIRMessagingTokenFetchOperation.h; sourceTree = "<group>"; };
+		7FC162E2C7133D351C2899E8FD257538 /* FIRCoreDiagnostics.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCoreDiagnostics.h; path = Firebase/CoreDiagnostics/FIRCDLibrary/Public/FIRCoreDiagnostics.h; sourceTree = "<group>"; };
+		7FEEA7A60DEF3B4DCA68E7387D457AA7 /* ButtonBarView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ButtonBarView.swift; path = Sources/ButtonBarView.swift; sourceTree = "<group>"; };
+		8008DC799F95A945AAA2A9EB5D53F25A /* GULHeartbeatDateStorageUserDefaults.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULHeartbeatDateStorageUserDefaults.m; path = GoogleUtilities/Environment/GULHeartbeatDateStorageUserDefaults.m; sourceTree = "<group>"; };
+		8058CC9855C0B30193537921040F7BB5 /* FIRLogger.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRLogger.h; path = FirebaseCore/Sources/Private/FIRLogger.h; sourceTree = "<group>"; };
+		80738D8C03065055470B986F4C9B3D56 /* CleverTap-iOS-SDK-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "CleverTap-iOS-SDK-Info.plist"; sourceTree = "<group>"; };
+		807ABE3ED4CBDCAAF00262B5461AF595 /* FIRCLSFABAsyncOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSFABAsyncOperation.m; path = Crashlytics/Shared/FIRCLSOperation/FIRCLSFABAsyncOperation.m; sourceTree = "<group>"; };
+		807E502B15A3354A8978D3F82C1E946D /* AlamofireExtended.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = AlamofireExtended.swift; path = Source/AlamofireExtended.swift; sourceTree = "<group>"; };
+		80A435F15E725B3B1B09DC2133C17486 /* SDWeakProxy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWeakProxy.m; path = SDWebImage/Private/SDWeakProxy.m; sourceTree = "<group>"; };
+		8102A8D65B9F1A3A7029EF28F4200421 /* AlamofireNetworkActivityLogger-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "AlamofireNetworkActivityLogger-umbrella.h"; sourceTree = "<group>"; };
+		8127F67ED29059568E5D4EBA4FACC4BD /* GDTCOREvent+GDTCCTSupport.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "GDTCOREvent+GDTCCTSupport.h"; path = "GoogleDataTransport/GDTCCTLibrary/Public/GDTCOREvent+GDTCCTSupport.h"; sourceTree = "<group>"; };
+		815BA03830C480C163DE3C2BB3F1E080 /* CTInboxUtils.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTInboxUtils.h; path = CleverTapSDK/Inbox/models/CTInboxUtils.h; sourceTree = "<group>"; };
+		815BD71E117B44F96659FC0009FC0F27 /* KeyboardTrackingView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = KeyboardTrackingView.swift; path = SwiftMessages/KeyboardTrackingView.swift; sourceTree = "<group>"; };
+		81C32EB162B887200E3435F4655794E7 /* SwipeDirection.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = SwipeDirection.swift; path = Sources/SwipeDirection.swift; sourceTree = "<group>"; };
+		81C97557B8F1734FD4BCCAB7B8457A67 /* GULOriginalIMPConvenienceMacros.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULOriginalIMPConvenienceMacros.h; path = GoogleUtilities/MethodSwizzler/Public/GoogleUtilities/GULOriginalIMPConvenienceMacros.h; sourceTree = "<group>"; };
+		81CC485136EE60347DB61D49F3052C7A /* FIROptionsInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIROptionsInternal.h; path = FirebaseCore/Sources/Private/FIROptionsInternal.h; sourceTree = "<group>"; };
+		821F94D67D5E22AF10988F62A49DCF29 /* SDImageGraphics.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageGraphics.m; path = SDWebImage/Core/SDImageGraphics.m; sourceTree = "<group>"; };
+		822399CFB5FC8428DC3EE2286B7DB9B0 /* CenteredView.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = CenteredView.xib; path = SwiftMessages/Resources/CenteredView.xib; sourceTree = "<group>"; };
+		82335BDB9831F033D58933E5818E7CB2 /* FIRCLSRecordIdentity.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSRecordIdentity.m; path = Crashlytics/Crashlytics/Models/Record/FIRCLSRecordIdentity.m; sourceTree = "<group>"; };
+		823DCBA686896433A569B3DA7DD70855 /* CornerRoundingView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = CornerRoundingView.swift; path = SwiftMessages/CornerRoundingView.swift; sourceTree = "<group>"; };
+		824F2741AEB1151D0520CD0D747056E1 /* GULSecureCoding.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULSecureCoding.h; path = GoogleUtilities/Environment/Public/GoogleUtilities/GULSecureCoding.h; sourceTree = "<group>"; };
+		82B057D10FEECE1662DCC037ADDC71BD /* SDWebImageTransitionInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageTransitionInternal.h; path = SDWebImage/Private/SDWebImageTransitionInternal.h; sourceTree = "<group>"; };
+		82D41435B03D4AF1236F9A7A826ABB30 /* FIRCLSProcessReportOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSProcessReportOperation.h; path = Crashlytics/Crashlytics/Operations/Reports/FIRCLSProcessReportOperation.h; sourceTree = "<group>"; };
+		8325E877A8C0F7BB10F4511725950CF1 /* CTFooterViewController~iphoneland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTFooterViewController~iphoneland.xib"; path = "CleverTapSDK/InApps/resources/CTFooterViewController~iphoneland.xib"; sourceTree = "<group>"; };
+		832FB13474AC09FBA89ACF4DF632BB34 /* CleverTap+ProductConfig.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "CleverTap+ProductConfig.h"; path = "CleverTapSDK/CleverTap+ProductConfig.h"; sourceTree = "<group>"; };
 		838750511E8B5BB64F45DC607A98C2F4 /* QuartzCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = QuartzCore.framework; path = Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS14.0.sdk/System/Library/Frameworks/QuartzCore.framework; sourceTree = DEVELOPER_DIR; };
-		84029CD3312F9535FB2A92F72EC7397F /* warningIconSubtle.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = warningIconSubtle.png; path = SwiftMessages/Resources/warningIconSubtle.png; sourceTree = "<group>"; };
-		8476EBCE8FE72232211A2048FCF39A41 /* SDDiskCache.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDDiskCache.h; path = SDWebImage/Core/SDDiskCache.h; sourceTree = "<group>"; };
-		84905C0015E2703A1B6CA71B1434B68C /* FirebaseInstallationsInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FirebaseInstallationsInternal.h; path = FirebaseInstallations/Source/Library/Private/FirebaseInstallationsInternal.h; sourceTree = "<group>"; };
+		83B46FCF91548D15150A98E66F009016 /* FIRLogger.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRLogger.h; path = FirebaseCore/Sources/Private/FIRLogger.h; sourceTree = "<group>"; };
+		83C84F5C915CAE6DC703E963D2DECB8D /* FBLPromise+Then.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Then.m"; path = "Sources/FBLPromises/FBLPromise+Then.m"; sourceTree = "<group>"; };
+		83EF2DBF3BF501A477ABF7E255C8603B /* TabView.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = TabView.xib; path = SwiftMessages/Resources/TabView.xib; sourceTree = "<group>"; };
+		842DFE1506CA6B19D1DAB42541A7BF59 /* SDImageCache.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageCache.m; path = SDWebImage/Core/SDImageCache.m; sourceTree = "<group>"; };
+		84351528A6BDE691996F70277D6447A9 /* FirebaseMessaging-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "FirebaseMessaging-umbrella.h"; sourceTree = "<group>"; };
 		8498A1B2C60117E181CA67921DDAE0B6 /* youtube-ios-player-helper */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; name = "youtube-ios-player-helper"; path = youtube_ios_player_helper.framework; sourceTree = BUILT_PRODUCTS_DIR; };
-		84A7A81D0D4B91641DACD30B4BBEDDFE /* FIRCLSProfiling.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSProfiling.c; path = Crashlytics/Crashlytics/Helpers/FIRCLSProfiling.c; sourceTree = "<group>"; };
-		84ACC7C4B995CDEB3D9D4E3EEF718793 /* GoogleDataTransport-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "GoogleDataTransport-dummy.m"; sourceTree = "<group>"; };
-		84D01F252C842C7E47FA7F845BE955BE /* CleverTapEventDetail.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTapEventDetail.m; path = CleverTapSDK/CleverTapEventDetail.m; sourceTree = "<group>"; };
-		84D7B50AC994E625AD273ECC9465472D /* CTKnownProfileFields.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTKnownProfileFields.m; path = CleverTapSDK/CTKnownProfileFields.m; sourceTree = "<group>"; };
-		853DBA32A3BB85358E4C9C0434DF3F42 /* AnyPagingItem.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = AnyPagingItem.swift; path = Parchment/Structs/AnyPagingItem.swift; sourceTree = "<group>"; };
+		84F190402674640F7E58B609A5BDAE56 /* CTAVPlayerViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTAVPlayerViewController.h; path = CleverTapSDK/InApps/CTAVPlayerViewController.h; sourceTree = "<group>"; };
+		850A1FB83379528CECFAD5F02818CB5E /* dwarf.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = dwarf.h; path = Crashlytics/third_party/libunwind/dwarf.h; sourceTree = "<group>"; };
+		85100D6207E6207EC4F1082089488C94 /* FIRInstallationsStoredItem.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsStoredItem.h; path = FirebaseInstallations/Source/Library/InstallationsStore/FIRInstallationsStoredItem.h; sourceTree = "<group>"; };
+		8544617C5CAFEBA13508E25C142DFD2A /* FIRMessagingTokenOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingTokenOperation.m; path = FirebaseMessaging/Sources/Token/FIRMessagingTokenOperation.m; sourceTree = "<group>"; };
 		856B5CD56F194FAD26EA91620B66D614 /* GoogleDataTransport */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; name = GoogleDataTransport; path = GoogleDataTransport.framework; sourceTree = BUILT_PRODUCTS_DIR; };
-		85D2F1ED5F32FCD0417D115214DEA5EE /* CleverTap+FeatureFlags.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "CleverTap+FeatureFlags.h"; path = "CleverTapSDK/CleverTap+FeatureFlags.h"; sourceTree = "<group>"; };
-		85D3CC83CA98FE162EA3DD72E4211C56 /* GULNetworkURLSession.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULNetworkURLSession.h; path = GoogleUtilities/Network/Public/GoogleUtilities/GULNetworkURLSession.h; sourceTree = "<group>"; };
-		8608679AF47AAB1CD9D266215435F82D /* youtube-ios-player-helper-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "youtube-ios-player-helper-Info.plist"; sourceTree = "<group>"; };
-		861DF4E98795EA19E36032CCF79B9294 /* FIRCLSExistingReportManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSExistingReportManager.m; path = Crashlytics/Crashlytics/Controllers/FIRCLSExistingReportManager.m; sourceTree = "<group>"; };
+		85AAE72414FAD59ECE4074D8D39C447A /* UIEdgeInsets+Extensions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "UIEdgeInsets+Extensions.swift"; path = "SwiftMessages/UIEdgeInsets+Extensions.swift"; sourceTree = "<group>"; };
+		85BA35675CCEFDA69DECB9E7C4EF04A1 /* MessageView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = MessageView.swift; path = SwiftMessages/MessageView.swift; sourceTree = "<group>"; };
+		85C0362C259A9F61E4DACA0C9E18A894 /* PagerTabStripViewController.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagerTabStripViewController.swift; path = Sources/PagerTabStripViewController.swift; sourceTree = "<group>"; };
+		85F201C68A064F85DABD45F98D593C2D /* GULReachabilityChecker.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULReachabilityChecker.h; path = GoogleUtilities/Reachability/Public/GoogleUtilities/GULReachabilityChecker.h; sourceTree = "<group>"; };
+		8612893FD2EE151350A0A0F7B84D3029 /* PagingMenuDataSource.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingMenuDataSource.swift; path = Parchment/Protocols/PagingMenuDataSource.swift; sourceTree = "<group>"; };
 		86375444C196BA272DDBB8165BF64A15 /* FirebaseCrashlytics */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; name = FirebaseCrashlytics; path = FirebaseCrashlytics.framework; sourceTree = BUILT_PRODUCTS_DIR; };
-		871262A2190E9EBEEFCF00537115479A /* FIRAnalyticsInterop.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRAnalyticsInterop.h; path = Interop/Analytics/Public/FIRAnalyticsInterop.h; sourceTree = "<group>"; };
-		874E2B7B95BF66268EC37F75AF3B0250 /* FirebaseCoreInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FirebaseCoreInternal.h; path = FirebaseCore/Sources/Private/FirebaseCoreInternal.h; sourceTree = "<group>"; };
-		876CCC1EDBFD286B794AF73CCA3ED7DB /* SwiftMessages-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "SwiftMessages-prefix.pch"; sourceTree = "<group>"; };
-		877C5A5FEEFE802A183B3B7974721719 /* CleverTap+ProductConfig.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "CleverTap+ProductConfig.h"; path = "CleverTapSDK/CleverTap+ProductConfig.h"; sourceTree = "<group>"; };
-		87895F532510D188132DC92818334735 /* UIView+WebCache.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIView+WebCache.h"; path = "SDWebImage/Core/UIView+WebCache.h"; sourceTree = "<group>"; };
-		883CF636F15D3F18676D1B08DF4DFDB5 /* FIRCLSException.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSException.h; path = Crashlytics/Crashlytics/Handlers/FIRCLSException.h; sourceTree = "<group>"; };
-		886CF9E5C57438EB2106F241D558079D /* CTInboxIconMessageCell~port.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTInboxIconMessageCell~port.xib"; path = "CleverTapSDK/Inbox/resources/CTInboxIconMessageCell~port.xib"; sourceTree = "<group>"; };
-		8885565B95BA312BD6FBC3FB399B1541 /* SDImageLoader.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageLoader.m; path = SDWebImage/Core/SDImageLoader.m; sourceTree = "<group>"; };
-		88871A0385DA9AAD9FC3FF1AEC5A2D57 /* BarView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = BarView.swift; path = Sources/BarView.swift; sourceTree = "<group>"; };
-		889E27D4D711F55471A5C798809CD161 /* GDTCORFlatFileStorage+Promises.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "GDTCORFlatFileStorage+Promises.h"; path = "GoogleDataTransport/GDTCORLibrary/Private/GDTCORFlatFileStorage+Promises.h"; sourceTree = "<group>"; };
-		88C1448212EFBDAF7C588A9C5C5D41EC /* FIRCLSNetworkOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSNetworkOperation.h; path = Crashlytics/Crashlytics/Settings/Operations/FIRCLSNetworkOperation.h; sourceTree = "<group>"; };
-		88E0310A35A5001544C1B323B0CB1D9D /* UIView+constraints.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "UIView+constraints.swift"; path = "Parchment/Extensions/UIView+constraints.swift"; sourceTree = "<group>"; };
-		88EA3748DF0ECF35456D56123BD1059B /* FIRCLSUserDefaults.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSUserDefaults.h; path = Crashlytics/Crashlytics/FIRCLSUserDefaults/FIRCLSUserDefaults.h; sourceTree = "<group>"; };
-		88EF017E160D4C160DD8D9FE8D6231AB /* ScrollingFollowView.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = ScrollingFollowView.release.xcconfig; sourceTree = "<group>"; };
-		89282490EB7FC0E5997226BAE0A1FB0C /* CTInboxIconMessageCell.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTInboxIconMessageCell.h; path = CleverTapSDK/Inbox/cells/CTInboxIconMessageCell.h; sourceTree = "<group>"; };
-		89D1F3E559544561EE3ADD29D1AEF250 /* CleverTapInboxMessageContent.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTapInboxMessageContent.m; path = CleverTapSDK/Inbox/models/CleverTapInboxMessageContent.m; sourceTree = "<group>"; };
-		89FA258287F0704599FF690DA1AE180C /* FirebaseCrashlytics-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "FirebaseCrashlytics-umbrella.h"; sourceTree = "<group>"; };
-		8A469C9723F7490FE5E742E00D883686 /* UIImageView+HighlightedWebCache.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIImageView+HighlightedWebCache.m"; path = "SDWebImage/Core/UIImageView+HighlightedWebCache.m"; sourceTree = "<group>"; };
-		8A8A168C6765675B3DA33C8F05F27563 /* PagingOptions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingOptions.swift; path = Parchment/Classes/PagingOptions.swift; sourceTree = "<group>"; };
-		8B1F42A93F025F7076545B461EB4145E /* SwipeDirection.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = SwipeDirection.swift; path = Sources/SwipeDirection.swift; sourceTree = "<group>"; };
-		8B990EA3DDD0D58C9F3EB3CFD921D68B /* CTLogger.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTLogger.m; path = CleverTapSDK/CTLogger.m; sourceTree = "<group>"; };
-		8B9979F40822FBE74DC74DC854D21FB3 /* FIRCoreDiagnostics.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCoreDiagnostics.m; path = Firebase/CoreDiagnostics/FIRCDLibrary/FIRCoreDiagnostics.m; sourceTree = "<group>"; };
-		8BAD1FD418AE2B2DA06B844E1B9EF9A7 /* FIRMessaging_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessaging_Private.h; path = FirebaseMessaging/Sources/FIRMessaging_Private.h; sourceTree = "<group>"; };
-		8BB27E0FAEF358C73C44E246A95F64E9 /* CTHalfInterstitialImageViewController~iphoneport.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTHalfInterstitialImageViewController~iphoneport.xib"; path = "CleverTapSDK/InApps/resources/CTHalfInterstitialImageViewController~iphoneport.xib"; sourceTree = "<group>"; };
-		8BEC191E7B3D2C0A3148A1B7208E9ABD /* ScrollingFollowView.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = ScrollingFollowView.modulemap; sourceTree = "<group>"; };
-		8BEFB5D072EBDBECDC26E36B44F2380C /* FIRMessagingRemoteNotificationsProxy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingRemoteNotificationsProxy.m; path = FirebaseMessaging/Sources/FIRMessagingRemoteNotificationsProxy.m; sourceTree = "<group>"; };
-		8C6FFA6506E7E6DCB794D03E632F694B /* CleverTap.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTap.m; path = CleverTapSDK/CleverTap.m; sourceTree = "<group>"; };
-		8C8073138FD1BE6B579712D8DB109407 /* CTDismissButton.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTDismissButton.m; path = CleverTapSDK/InApps/CTDismissButton.m; sourceTree = "<group>"; };
+		8666B444C8BE8A77C385E2A83A6427E0 /* CTLocalDataStore.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTLocalDataStore.h; path = CleverTapSDK/CTLocalDataStore.h; sourceTree = "<group>"; };
+		8677B938A7B82A80A82B426E298CDED9 /* FIRCLSFileManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSFileManager.m; path = Crashlytics/Crashlytics/Models/FIRCLSFileManager.m; sourceTree = "<group>"; };
+		86A775A7D2D5BB174236FC6CE2A71A42 /* Firebase.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = Firebase.h; path = CoreOnly/Sources/Firebase.h; sourceTree = "<group>"; };
+		871C9D15B4CF04F255E71D7D250BEB86 /* SDImageAPNGCoder.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageAPNGCoder.h; path = SDWebImage/Core/SDImageAPNGCoder.h; sourceTree = "<group>"; };
+		876D329B0601100EB3CB9508C3ACF1EB /* SDAnimatedImageRep.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDAnimatedImageRep.h; path = SDWebImage/Core/SDAnimatedImageRep.h; sourceTree = "<group>"; };
+		878F0399C25A9F9322826A058A750257 /* GULNSData+zlib.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "GULNSData+zlib.m"; path = "GoogleUtilities/NSData+zlib/GULNSData+zlib.m"; sourceTree = "<group>"; };
+		87BF32056B130A2164EA410EB6CEDB89 /* CTCarouselImageView.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTCarouselImageView.m; path = CleverTapSDK/Inbox/views/CTCarouselImageView.m; sourceTree = "<group>"; };
+		8808DA65E8A631593F1599A3A28505DF /* GULMutableDictionary.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULMutableDictionary.m; path = GoogleUtilities/Network/GULMutableDictionary.m; sourceTree = "<group>"; };
+		8812E545356454B705FC9AE2141F5087 /* GDTCCTUploader.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCCTUploader.h; path = GoogleDataTransport/GDTCCTLibrary/Private/GDTCCTUploader.h; sourceTree = "<group>"; };
+		8821DEA526DB43990F96020E6436059D /* FIRCLSDownloadAndSaveSettingsOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSDownloadAndSaveSettingsOperation.m; path = Crashlytics/Crashlytics/Settings/Operations/FIRCLSDownloadAndSaveSettingsOperation.m; sourceTree = "<group>"; };
+		88444739B5FE5D321CE078925E96438E /* Response.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Response.swift; path = Source/Response.swift; sourceTree = "<group>"; };
+		8898492117477E7A71AE31CC32DE347D /* GDTCORStorageEventSelector.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORStorageEventSelector.h; path = GoogleDataTransport/GDTCORLibrary/Internal/GDTCORStorageEventSelector.h; sourceTree = "<group>"; };
+		88C9A3AE4CDA298CD3C52384D7F1089C /* FIRMessagingTokenDeleteOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingTokenDeleteOperation.m; path = FirebaseMessaging/Sources/Token/FIRMessagingTokenDeleteOperation.m; sourceTree = "<group>"; };
+		88F132F2EFEA5887B1CD32757CF7D692 /* PagingDirection.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingDirection.swift; path = Parchment/Enums/PagingDirection.swift; sourceTree = "<group>"; };
+		893B156140C14072085D3FA300C2633C /* UIImage+MemoryCacheCost.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIImage+MemoryCacheCost.h"; path = "SDWebImage/Core/UIImage+MemoryCacheCost.h"; sourceTree = "<group>"; };
+		899A27D877296BCEAAA70B967DC15BCA /* CTCarouselMessageCell~land.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTCarouselMessageCell~land.xib"; path = "CleverTapSDK/Inbox/resources/CTCarouselMessageCell~land.xib"; sourceTree = "<group>"; };
+		89B00168907F9E9A59D299AC67D71873 /* FIRInstallationsStoredAuthToken.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsStoredAuthToken.h; path = FirebaseInstallations/Source/Library/InstallationsStore/FIRInstallationsStoredAuthToken.h; sourceTree = "<group>"; };
+		89C7672D1CFC10457CAB96C3D527FFCB /* CTKnownProfileFields.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTKnownProfileFields.m; path = CleverTapSDK/CTKnownProfileFields.m; sourceTree = "<group>"; };
+		89D2ABE67FA0B9803ACCD8A4E0F015D0 /* CleverTapInstanceConfigPrivate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTapInstanceConfigPrivate.h; path = CleverTapSDK/CleverTapInstanceConfigPrivate.h; sourceTree = "<group>"; };
+		89E12DD140EA7D36051822BB8AC57660 /* OTPFieldView-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "OTPFieldView-dummy.m"; sourceTree = "<group>"; };
+		8A19BD3918328C434D43F37208AB6782 /* FBLPromise+Race.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Race.h"; path = "Sources/FBLPromises/include/FBLPromise+Race.h"; sourceTree = "<group>"; };
+		8A2501AF38D44C5004E8CB35E066D9AB /* PagingTitleCell.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingTitleCell.swift; path = Parchment/Classes/PagingTitleCell.swift; sourceTree = "<group>"; };
+		8A30EF3CB3C0409BCFD0618B2E2EC2B2 /* UIColor+SDHexString.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIColor+SDHexString.m"; path = "SDWebImage/Private/UIColor+SDHexString.m"; sourceTree = "<group>"; };
+		8A41C3706BB80D823399D02A6F597B1A /* GULNetworkInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULNetworkInternal.h; path = GoogleUtilities/Network/GULNetworkInternal.h; sourceTree = "<group>"; };
+		8A4E0AE7EF470ED5C78E27AC2BD0B7FD /* FIRCLSDataParsing.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSDataParsing.h; path = Crashlytics/Crashlytics/Unwind/Dwarf/FIRCLSDataParsing.h; sourceTree = "<group>"; };
+		8AD62AA1AFA5EB5550B63F704960B934 /* SDImageIOAnimatedCoder.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageIOAnimatedCoder.h; path = SDWebImage/Core/SDImageIOAnimatedCoder.h; sourceTree = "<group>"; };
+		8AF17ED36E1A3CCC7F5A67282180A96F /* CTFooterViewController~ipad.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTFooterViewController~ipad.xib"; path = "CleverTapSDK/InApps/resources/CTFooterViewController~ipad.xib"; sourceTree = "<group>"; };
+		8B4CCD3D90FCDEA5A24B2BDD41A6C939 /* CTInboxSimpleMessageCell~port.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTInboxSimpleMessageCell~port.xib"; path = "CleverTapSDK/Inbox/resources/CTInboxSimpleMessageCell~port.xib"; sourceTree = "<group>"; };
+		8BAE39769DDA52C82BE369705404E0A5 /* FIRCLSReportUploader.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSReportUploader.h; path = Crashlytics/Crashlytics/Controllers/FIRCLSReportUploader.h; sourceTree = "<group>"; };
+		8BB08E19E8D97BFFD2C53552F17F27B2 /* FIRMessagingRemoteNotificationsProxy.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingRemoteNotificationsProxy.h; path = FirebaseMessaging/Sources/FIRMessagingRemoteNotificationsProxy.h; sourceTree = "<group>"; };
+		8BD7F9AF9C5F163A766986934462E26F /* FIRCLSSymbolResolver.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSSymbolResolver.m; path = Crashlytics/Crashlytics/Models/FIRCLSSymbolResolver.m; sourceTree = "<group>"; };
+		8BDB8E0D141837AF7D840A1F4754C676 /* FIRHeartbeatInfo.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRHeartbeatInfo.h; path = FirebaseCore/Sources/Private/FIRHeartbeatInfo.h; sourceTree = "<group>"; };
+		8C1250CF093D3709E588E88E530AE8F6 /* GDTCORUploadBatch.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCORUploadBatch.m; path = GoogleDataTransport/GDTCORLibrary/GDTCORUploadBatch.m; sourceTree = "<group>"; };
+		8C2697936939C6F54F2DFD4A17C621B3 /* FIRBundleUtil.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRBundleUtil.h; path = FirebaseCore/Sources/FIRBundleUtil.h; sourceTree = "<group>"; };
+		8C48377EA077671A39B5574C3FCADEEB /* IQKeyboardManagerConstants.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = IQKeyboardManagerConstants.swift; path = IQKeyboardManagerSwift/Constants/IQKeyboardManagerConstants.swift; sourceTree = "<group>"; };
+		8C58EAD198CD5634640FE3FC830AD125 /* Result+Alamofire.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "Result+Alamofire.swift"; path = "Source/Result+Alamofire.swift"; sourceTree = "<group>"; };
+		8C70B5BEC06679A03EE0B1420B43D534 /* SDImageAWebPCoder.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageAWebPCoder.h; path = SDWebImage/Core/SDImageAWebPCoder.h; sourceTree = "<group>"; };
+		8C78B4E70B98B897F48F44E87E48A999 /* FirebaseMessaging.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FirebaseMessaging.debug.xcconfig; sourceTree = "<group>"; };
+		8C7BE4FD0EFB1CAC40B559E9F55E06DC /* IQKeyboardManager+Internal.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "IQKeyboardManager+Internal.swift"; path = "IQKeyboardManagerSwift/IQKeyboardManager+Internal.swift"; sourceTree = "<group>"; };
 		8CC9178C366942FD6FF6A115604EAD58 /* FirebaseCoreDiagnostics */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; name = FirebaseCoreDiagnostics; path = FirebaseCoreDiagnostics.framework; sourceTree = BUILT_PRODUCTS_DIR; };
-		8D010E182533AC29F338DE7D4CF44E55 /* FBLPromise+Any.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Any.m"; path = "Sources/FBLPromises/FBLPromise+Any.m"; sourceTree = "<group>"; };
-		8E00E549BEDD54FFB6B1FC8B380D81C1 /* Session.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Session.swift; path = Source/Session.swift; sourceTree = "<group>"; };
-		8E03D74B551468D06B5BC2534B94B1F7 /* SDWebImageOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageOperation.h; path = SDWebImage/Core/SDWebImageOperation.h; sourceTree = "<group>"; };
-		8E137D34CAA621220F816A7EAC7F3BA4 /* FIRDependency.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRDependency.h; path = FirebaseCore/Sources/Private/FIRDependency.h; sourceTree = "<group>"; };
-		8E3EA6A4C5E939BD5B8B625072B294BD /* CTFooterViewController~iphoneland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTFooterViewController~iphoneland.xib"; path = "CleverTapSDK/InApps/resources/CTFooterViewController~iphoneland.xib"; sourceTree = "<group>"; };
-		8E4EDE4902E1AC4FBB53E56CCC3443EB /* FIRCLSBinaryImage.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSBinaryImage.m; path = Crashlytics/Crashlytics/Components/FIRCLSBinaryImage.m; sourceTree = "<group>"; };
-		8E8B054C21340B1F9894D0AC04BD9E6B /* CTFeatureFlagsController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTFeatureFlagsController.h; path = CleverTapSDK/FeatureFlags/controllers/CTFeatureFlagsController.h; sourceTree = "<group>"; };
-		8EC8A9A0A188CE8C4D904FEB0E19E31E /* FIRCoreDiagnosticsConnector.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCoreDiagnosticsConnector.h; path = FirebaseCore/Sources/Private/FIRCoreDiagnosticsConnector.h; sourceTree = "<group>"; };
-		8F33D17A76ADEC3475B379D4FCBB4394 /* FIRCLSDefines.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSDefines.h; path = Crashlytics/Crashlytics/Helpers/FIRCLSDefines.h; sourceTree = "<group>"; };
-		8F5544B383C38E15D962DC93F451F55D /* FBLPromise+Validate.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Validate.m"; path = "Sources/FBLPromises/FBLPromise+Validate.m"; sourceTree = "<group>"; };
-		8F576B8745941F0B9576451A8502BAD5 /* FIRStackFrame.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRStackFrame.h; path = Crashlytics/Crashlytics/Public/FirebaseCrashlytics/FIRStackFrame.h; sourceTree = "<group>"; };
-		8F816475B58D1FC1B234E73F3A8AEE18 /* ic_play@1x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "ic_play@1x.png"; path = "CleverTapSDK/Inbox/resources/ic_play@1x.png"; sourceTree = "<group>"; };
-		8F8D19E7D75BCAF9C1D1E8247761E74F /* SDImageAPNGCoder.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageAPNGCoder.h; path = SDWebImage/Core/SDImageAPNGCoder.h; sourceTree = "<group>"; };
-		8FCB8BC041B6196AEE39DFA0C35A0049 /* FIRHeartbeatInfo.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRHeartbeatInfo.h; path = FirebaseCore/Sources/Private/FIRHeartbeatInfo.h; sourceTree = "<group>"; };
-		8FE4C240C4F6FCC7608FDC4FA941F7A7 /* CleverTapDisplayUnitContent.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTapDisplayUnitContent.m; path = CleverTapSDK/DisplayUnit/models/CleverTapDisplayUnitContent.m; sourceTree = "<group>"; };
-		8FFA1950443624F29BFE8CE349AF2194 /* CTInterstitialImageViewController~iphoneland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTInterstitialImageViewController~iphoneland.xib"; path = "CleverTapSDK/InApps/resources/CTInterstitialImageViewController~iphoneland.xib"; sourceTree = "<group>"; };
-		90033078E7C78E82A34D4E0788C963F5 /* CTCertificatePinning.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTCertificatePinning.h; path = CleverTapSDK/CTCertificatePinning.h; sourceTree = "<group>"; };
-		9052D0467EA3D3C93681E0B89A55D2A6 /* Theme.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Theme.swift; path = SwiftMessages/Theme.swift; sourceTree = "<group>"; };
-		906CCED1F94B2364B9573CF09FB7ECA4 /* FIRCrashlyticsReport.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCrashlyticsReport.h; path = Crashlytics/Crashlytics/Public/FirebaseCrashlytics/FIRCrashlyticsReport.h; sourceTree = "<group>"; };
-		906EFA98705B9C2B9A78A45F348042D2 /* FIRMessagingCheckinPreferences.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingCheckinPreferences.h; path = FirebaseMessaging/Sources/Token/FIRMessagingCheckinPreferences.h; sourceTree = "<group>"; };
-		90BB666EC5201F2FA54312EAC22809A3 /* FIRCLSSerializeSymbolicatedFramesOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSSerializeSymbolicatedFramesOperation.m; path = Crashlytics/Crashlytics/Operations/Symbolication/FIRCLSSerializeSymbolicatedFramesOperation.m; sourceTree = "<group>"; };
-		911FAA185DBDAD474CECC6BE4D6BCAA4 /* AlamofireNetworkActivityLogger-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "AlamofireNetworkActivityLogger-umbrella.h"; sourceTree = "<group>"; };
-		912E04A442516622BB0AE2A760CEC600 /* NSDictionary+FIRMessaging.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "NSDictionary+FIRMessaging.h"; path = "FirebaseMessaging/Sources/NSDictionary+FIRMessaging.h"; sourceTree = "<group>"; };
-		9165DB006FDEABE5B7F62C3B6C24D65F /* CTProductConfigController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTProductConfigController.m; path = CleverTapSDK/ProductConfig/controllers/CTProductConfigController.m; sourceTree = "<group>"; };
-		916CEAC0F3D978E9948D9E6BE151748E /* GDTCCTCompressionHelper.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCCTCompressionHelper.h; path = GoogleDataTransport/GDTCCTLibrary/Private/GDTCCTCompressionHelper.h; sourceTree = "<group>"; };
-		917E0E3B4EABA4BC5D66B3716EF570AF /* FBLPromise+Await.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Await.h"; path = "Sources/FBLPromises/include/FBLPromise+Await.h"; sourceTree = "<group>"; };
-		919E1894635DD309D65FA8A2BD85BCFC /* AFError.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = AFError.swift; path = Source/AFError.swift; sourceTree = "<group>"; };
-		9220CFF1F07FCC368C9E8AAE4623E75F /* successIcon.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = successIcon.png; path = SwiftMessages/Resources/successIcon.png; sourceTree = "<group>"; };
-		9231E31B41DA869B29BCA0E5F3335487 /* PagingIndicatorMetric.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingIndicatorMetric.swift; path = Parchment/Structs/PagingIndicatorMetric.swift; sourceTree = "<group>"; };
-		93827B788B439C0A060A6986FC939A49 /* Parchment.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = Parchment.release.xcconfig; sourceTree = "<group>"; };
-		93C71324FE90163B975465235FE4A8F1 /* FIRDependency.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRDependency.h; path = FirebaseCore/Sources/Private/FIRDependency.h; sourceTree = "<group>"; };
-		9410220FC9507D1021FC3A2F0B0C3BE5 /* SDAnimatedImage.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDAnimatedImage.m; path = SDWebImage/Core/SDAnimatedImage.m; sourceTree = "<group>"; };
-		9485D23C14C2058CF4E4AF7EDCC063B3 /* FIRMessagingPubSub.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingPubSub.m; path = FirebaseMessaging/Sources/FIRMessagingPubSub.m; sourceTree = "<group>"; };
-		9561A529D797E84B7343430455F6CC7A /* errorIconLight.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = errorIconLight.png; path = SwiftMessages/Resources/errorIconLight.png; sourceTree = "<group>"; };
-		9566B492619F64B3A722F10FF9EF00D1 /* SDImageCodersManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageCodersManager.h; path = SDWebImage/Core/SDImageCodersManager.h; sourceTree = "<group>"; };
-		95D5B6E97FDE785D91A4C0339BDEC798 /* FIRCLSdSYM.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSdSYM.h; path = Crashlytics/Shared/FIRCLSMachO/FIRCLSdSYM.h; sourceTree = "<group>"; };
-		95DE539A37976263D044F56C7CF29714 /* CleverTap.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTap.h; path = CleverTapSDK/CleverTap.h; sourceTree = "<group>"; };
-		95FB18E80F52F61760B032ADE7865B35 /* FIRCoreDiagnosticsConnector.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCoreDiagnosticsConnector.m; path = FirebaseCore/Sources/FIRCoreDiagnosticsConnector.m; sourceTree = "<group>"; };
-		96257BCB5C5DB41B65B014FE0D82A428 /* FIRMessagingConstants.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingConstants.h; path = FirebaseMessaging/Sources/FIRMessagingConstants.h; sourceTree = "<group>"; };
-		9676D41170DC2498D22F5CE285AB5532 /* URLConvertible+URLRequestConvertible.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "URLConvertible+URLRequestConvertible.swift"; path = "Source/URLConvertible+URLRequestConvertible.swift"; sourceTree = "<group>"; };
-		967777FD15E7C5626002F1DA3A97C42F /* infoIconSubtle@2x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "infoIconSubtle@2x.png"; path = "SwiftMessages/Resources/infoIconSubtle@2x.png"; sourceTree = "<group>"; };
-		9692C8A23221BF6AA4A81656705FA829 /* SDWeakProxy.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWeakProxy.h; path = SDWebImage/Private/SDWeakProxy.h; sourceTree = "<group>"; };
-		9697FCED8695506B1265039952431D29 /* FIRMessagingTokenDeleteOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingTokenDeleteOperation.m; path = FirebaseMessaging/Sources/Token/FIRMessagingTokenDeleteOperation.m; sourceTree = "<group>"; };
-		96B7DF903F9482BD723BEAA657753BFA /* nanopb-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "nanopb-prefix.pch"; sourceTree = "<group>"; };
-		96ED27AA89926A1702A380F0C36EA9EF /* GDTCORTransport.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORTransport.h; path = GoogleDataTransport/GDTCORLibrary/Public/GoogleDataTransport/GDTCORTransport.h; sourceTree = "<group>"; };
-		96FA9E3EEA03333F3658A39E9F4BEFD7 /* Tween.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Tween.swift; path = Parchment/Protocols/Tween.swift; sourceTree = "<group>"; };
-		9721B2D23EDFF5914B379E5C265D5915 /* SDWebImageDownloaderDecryptor.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageDownloaderDecryptor.m; path = SDWebImage/Core/SDWebImageDownloaderDecryptor.m; sourceTree = "<group>"; };
-		97643C28FC2A46888AE4AFCB827821F2 /* AlamofireNetworkActivityLogger-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "AlamofireNetworkActivityLogger-prefix.pch"; sourceTree = "<group>"; };
-		97684A5DE6686ACDBBE735803B590387 /* FIRCLSRecordApplication.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSRecordApplication.h; path = Crashlytics/Crashlytics/Models/Record/FIRCLSRecordApplication.h; sourceTree = "<group>"; };
-		97E7A867A0C5A6EFF322E9C95D2B3E34 /* CTCarouselImageView.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = CTCarouselImageView.xib; path = CleverTapSDK/Inbox/resources/CTCarouselImageView.xib; sourceTree = "<group>"; };
-		9809D78B778001C807DF70A70F275DBF /* FIRCLSDwarfUnwind.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSDwarfUnwind.c; path = Crashlytics/Crashlytics/Unwind/Dwarf/FIRCLSDwarfUnwind.c; sourceTree = "<group>"; };
-		9825BF1B7EF6CF5A6A814B6ABE0514D3 /* FIRInstallationsStatus.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsStatus.h; path = FirebaseInstallations/Source/Library/InstallationsIDController/FIRInstallationsStatus.h; sourceTree = "<group>"; };
-		9827847E378C4738FBBC77F51BA71E73 /* FIRCLSCompactUnwind_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSCompactUnwind_Private.h; path = Crashlytics/Crashlytics/Unwind/Compact/FIRCLSCompactUnwind_Private.h; sourceTree = "<group>"; };
-		9843A6A35C6A6B0D1BF532EE54F9B667 /* FIRDependency.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRDependency.m; path = FirebaseCore/Sources/FIRDependency.m; sourceTree = "<group>"; };
-		985924DD0E5E7A4597039E3D4F1767E7 /* CTCarouselMessageCell.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTCarouselMessageCell.h; path = CleverTapSDK/Inbox/cells/CTCarouselMessageCell.h; sourceTree = "<group>"; };
-		987E4DDB2428B6DB57707688E66009C9 /* UIView+WebCacheOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIView+WebCacheOperation.m"; path = "SDWebImage/Core/UIView+WebCacheOperation.m"; sourceTree = "<group>"; };
-		9892B1791D53BCF74B4C1FAA234A1B69 /* Parchment.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = Parchment.modulemap; sourceTree = "<group>"; };
-		98E2F8AE46DF9D2BC1E4EEF80C13B1B0 /* ButtonBarViewCell.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ButtonBarViewCell.swift; path = Sources/ButtonBarViewCell.swift; sourceTree = "<group>"; };
-		99059BDE8FA7C29DA77DE9E84F727FFD /* GDTCORRegistrar_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORRegistrar_Private.h; path = GoogleDataTransport/GDTCORLibrary/Private/GDTCORRegistrar_Private.h; sourceTree = "<group>"; };
-		9931F7F2DAA308FF821725944EB246D5 /* FIRApp.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRApp.m; path = FirebaseCore/Sources/FIRApp.m; sourceTree = "<group>"; };
-		993E60C6D9CA6206CE06289C4899B641 /* successIconSubtle.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = successIconSubtle.png; path = SwiftMessages/Resources/successIconSubtle.png; sourceTree = "<group>"; };
-		9983C076CB57126DAEF0E41E63D02226 /* XLPagerTabStrip-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "XLPagerTabStrip-umbrella.h"; sourceTree = "<group>"; };
-		999E0B6E41E8A7FF7633B8E2D5DE2E8F /* FIRCLSdSYM.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSdSYM.m; path = Crashlytics/Shared/FIRCLSMachO/FIRCLSdSYM.m; sourceTree = "<group>"; };
-		99CD7F5F453DB76C5296C4CD35BB51F4 /* HTTPMethod.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = HTTPMethod.swift; path = Source/HTTPMethod.swift; sourceTree = "<group>"; };
-		99CF8268005E0BEBC4A220184DAEDF4E /* FBLPromise+Testing.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Testing.m"; path = "Sources/FBLPromises/FBLPromise+Testing.m"; sourceTree = "<group>"; };
-		99EA333F95AA40E95E397660E5E7D4E3 /* Parchment-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "Parchment-prefix.pch"; sourceTree = "<group>"; };
-		9A179B4D5B8104D4A797E1220C3E2EA5 /* IQKeyboardManagerSwift-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "IQKeyboardManagerSwift-prefix.pch"; sourceTree = "<group>"; };
-		9A4986A40B6980684145409300DE696E /* PagingViewControllerDataSource.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingViewControllerDataSource.swift; path = Parchment/Protocols/PagingViewControllerDataSource.swift; sourceTree = "<group>"; };
-		9A69DF1ECA1CD488A88CD708A0B85C87 /* FIRCoreDiagnostics.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCoreDiagnostics.h; path = Firebase/CoreDiagnostics/FIRCDLibrary/Public/FIRCoreDiagnostics.h; sourceTree = "<group>"; };
-		9AB99E0AA0FB268DD001E20CCCC49EB6 /* warningIconSubtle@2x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "warningIconSubtle@2x.png"; path = "SwiftMessages/Resources/warningIconSubtle@2x.png"; sourceTree = "<group>"; };
-		9B104B286BAE12003C7FEAF54BE34B41 /* PagingDistance.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingDistance.swift; path = Parchment/Structs/PagingDistance.swift; sourceTree = "<group>"; };
-		9B30BE11411E25C5FB9070D4F7E9137D /* FIRMessagingBackupExcludedPlist.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingBackupExcludedPlist.h; path = FirebaseMessaging/Sources/Token/FIRMessagingBackupExcludedPlist.h; sourceTree = "<group>"; };
-		9B6C75A8F843B49C51FCC12222980977 /* FIRMessagingTokenManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingTokenManager.m; path = FirebaseMessaging/Sources/Token/FIRMessagingTokenManager.m; sourceTree = "<group>"; };
-		9BC02B4D8C7992AAE8721A366B872BFE /* GULHeartbeatDateStorageUserDefaults.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULHeartbeatDateStorageUserDefaults.h; path = GoogleUtilities/Environment/Public/GoogleUtilities/GULHeartbeatDateStorageUserDefaults.h; sourceTree = "<group>"; };
-		9C37615ED8AAF4905DA0D0A519CD9B7B /* FIRInstallationsStoredItem.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallationsStoredItem.m; path = FirebaseInstallations/Source/Library/InstallationsStore/FIRInstallationsStoredItem.m; sourceTree = "<group>"; };
-		9C5B7AE76A11C98231AB107ABEBF3230 /* CTHalfInterstitialViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTHalfInterstitialViewController.m; path = CleverTapSDK/InApps/CTHalfInterstitialViewController.m; sourceTree = "<group>"; };
-		9CBAB230B52011D281364F6E40E7C97A /* GULSecureCoding.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULSecureCoding.m; path = GoogleUtilities/Environment/GULSecureCoding.m; sourceTree = "<group>"; };
-		9CBACED061EFFA1429437A81091E9A64 /* CTPinnedNSURLSessionDelegate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTPinnedNSURLSessionDelegate.h; path = CleverTapSDK/CTPinnedNSURLSessionDelegate.h; sourceTree = "<group>"; };
-		9CC040A11E58795C21FC469190365F42 /* FIRAnalyticsInteropListener.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRAnalyticsInteropListener.h; path = Interop/Analytics/Public/FIRAnalyticsInteropListener.h; sourceTree = "<group>"; };
-		9CE7D8469085D78E3DA0B99485AA8A92 /* ic_pause@1x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "ic_pause@1x.png"; path = "CleverTapSDK/Inbox/resources/ic_pause@1x.png"; sourceTree = "<group>"; };
-		9D00B44D3DB63F1887E7D94475D98C62 /* FIRCLSLaunchMarkerModel.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSLaunchMarkerModel.m; path = Crashlytics/Crashlytics/Models/FIRCLSLaunchMarkerModel.m; sourceTree = "<group>"; };
-		9D55BD06FFA3CE7F30684EE0F71841C3 /* FBLPromise+Wrap.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Wrap.m"; path = "Sources/FBLPromises/FBLPromise+Wrap.m"; sourceTree = "<group>"; };
-		9D6322F4DEFC3581BB62ED0FE5E88A3F /* FIRCLSSymbolicationOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSSymbolicationOperation.m; path = Crashlytics/Crashlytics/Operations/Symbolication/FIRCLSSymbolicationOperation.m; sourceTree = "<group>"; };
-		9D70539784EC1076DB5A5694278C3DD9 /* IQKeyboardManagerSwift-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "IQKeyboardManagerSwift-umbrella.h"; sourceTree = "<group>"; };
-		9D7DFB458D13423895508525C657B297 /* FirebaseCoreDiagnostics.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FirebaseCoreDiagnostics.debug.xcconfig; sourceTree = "<group>"; };
+		8D2D1FAA36D637015F09312D3F89E024 /* FIRCLSContext.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSContext.m; path = Crashlytics/Crashlytics/Components/FIRCLSContext.m; sourceTree = "<group>"; };
+		8D4308628EC5B4294723917C0223D0F1 /* GULKeychainUtils.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULKeychainUtils.m; path = GoogleUtilities/Environment/SecureStorage/GULKeychainUtils.m; sourceTree = "<group>"; };
+		8D5297BB76E3039E0D40586E8B40C404 /* FIRCLSNetworkOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSNetworkOperation.m; path = Crashlytics/Crashlytics/Settings/Operations/FIRCLSNetworkOperation.m; sourceTree = "<group>"; };
+		8D686797AD46FCA9A10A9BB0E4002893 /* FIRCurrentDateProvider.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCurrentDateProvider.h; path = FirebaseInstallations/Source/Library/InstallationsIDController/FIRCurrentDateProvider.h; sourceTree = "<group>"; };
+		8E63827255DEB5C62D6F7CCD45C675C8 /* PagingViewControllerDataSource.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingViewControllerDataSource.swift; path = Parchment/Protocols/PagingViewControllerDataSource.swift; sourceTree = "<group>"; };
+		8E8A2CE3665E75A5871D387ECBACAA80 /* AlamofireNetworkActivityLogger-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "AlamofireNetworkActivityLogger-prefix.pch"; sourceTree = "<group>"; };
+		8EFD792B63709FF0D329A1AB55BD9EE3 /* SDWebImage.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = SDWebImage.debug.xcconfig; sourceTree = "<group>"; };
+		8F1E468A5E80D420613B5E955B518E07 /* FIRCrashlytics.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCrashlytics.h; path = Crashlytics/Crashlytics/Public/FirebaseCrashlytics/FIRCrashlytics.h; sourceTree = "<group>"; };
+		8F5A8569D6E87FAA12F400B5AF6A9CE4 /* PageView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PageView.swift; path = Parchment/Structs/PageView.swift; sourceTree = "<group>"; };
+		8F6C5AB32DADD269DB52620DE3C9526A /* Alamofire.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = Alamofire.debug.xcconfig; sourceTree = "<group>"; };
+		8FBE86D2ECED64F9BC72628D808964CF /* PagingController.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingController.swift; path = Parchment/Classes/PagingController.swift; sourceTree = "<group>"; };
+		8FC981347811B8BC0F5538970C3CBF75 /* ServerTrustEvaluation.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ServerTrustEvaluation.swift; path = Source/ServerTrustEvaluation.swift; sourceTree = "<group>"; };
+		8FCF6F6EA2F77476F21C81B459D196CB /* infoIconLight@3x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "infoIconLight@3x.png"; path = "SwiftMessages/Resources/infoIconLight@3x.png"; sourceTree = "<group>"; };
+		8FF77F66E3D37F506ECB88297BFA161D /* GDTCORRegistrar.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORRegistrar.h; path = GoogleDataTransport/GDTCORLibrary/Internal/GDTCORRegistrar.h; sourceTree = "<group>"; };
+		8FFD5A06BF3897955B2D589F6B8CC017 /* FIRCLSFABNetworkClient.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSFABNetworkClient.m; path = Crashlytics/Shared/FIRCLSNetworking/FIRCLSFABNetworkClient.m; sourceTree = "<group>"; };
+		900AA697B5A35B02A8FDC9EE42406422 /* FirebaseInstallations.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FirebaseInstallations.h; path = FirebaseInstallations/Source/Library/Public/FirebaseInstallations/FirebaseInstallations.h; sourceTree = "<group>"; };
+		9011CD99A7594C717B50614473A5BE32 /* UIWindow+Extensions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "UIWindow+Extensions.swift"; path = "SwiftMessages/UIWindow+Extensions.swift"; sourceTree = "<group>"; };
+		902AE51961A56236E846455515371AEA /* crashlytics.nanopb.c */ = {isa = PBXFileReference; includeInIndex = 1; name = crashlytics.nanopb.c; path = Crashlytics/Protogen/nanopb/crashlytics.nanopb.c; sourceTree = "<group>"; };
+		9044B30EE88D7F37DF950735DF51E560 /* FIRCLSInstallIdentifierModel.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSInstallIdentifierModel.h; path = Crashlytics/Crashlytics/Models/FIRCLSInstallIdentifierModel.h; sourceTree = "<group>"; };
+		904B9657904509D35CC8C93DC541F3F8 /* FIRAppInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRAppInternal.h; path = FirebaseCore/Sources/Private/FIRAppInternal.h; sourceTree = "<group>"; };
+		905812BF78DA7ECAC7EE8268A8B94114 /* UIImage+MultiFormat.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIImage+MultiFormat.m"; path = "SDWebImage/Core/UIImage+MultiFormat.m"; sourceTree = "<group>"; };
+		90616E6C039FFEBA03FD844B0AC5C7A3 /* SDMemoryCache.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDMemoryCache.m; path = SDWebImage/Core/SDMemoryCache.m; sourceTree = "<group>"; };
+		9061DBC856B3BED71F1FF9A0A067FFD4 /* GoogleDataTransport.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = GoogleDataTransport.release.xcconfig; sourceTree = "<group>"; };
+		906D5B9D0103EBE1A117A73B96FFA89E /* SDImageFrame.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageFrame.h; path = SDWebImage/Core/SDImageFrame.h; sourceTree = "<group>"; };
+		9105F3678131BCF1B051EB0C94E21BB1 /* CTUserMO.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTUserMO.m; path = CleverTapSDK/Inbox/models/CTUserMO.m; sourceTree = "<group>"; };
+		910DCC2263B4A4BC016B7E4F43C16E90 /* FIRCLSMultipartMimeStreamEncoder.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSMultipartMimeStreamEncoder.h; path = Crashlytics/Shared/FIRCLSNetworking/FIRCLSMultipartMimeStreamEncoder.h; sourceTree = "<group>"; };
+		91289D59F183805921D7269BDA6B9D3D /* FIRMessagingCheckinPreferences.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingCheckinPreferences.m; path = FirebaseMessaging/Sources/Token/FIRMessagingCheckinPreferences.m; sourceTree = "<group>"; };
+		913A839635390958E3E2D0F1FB58A314 /* IQKeyboardManager+UITextFieldViewNotification.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "IQKeyboardManager+UITextFieldViewNotification.swift"; path = "IQKeyboardManagerSwift/IQKeyboardManager+UITextFieldViewNotification.swift"; sourceTree = "<group>"; };
+		913C860DB6D228EB89CE6D9D9A202AFF /* SDFileAttributeHelper.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDFileAttributeHelper.m; path = SDWebImage/Private/SDFileAttributeHelper.m; sourceTree = "<group>"; };
+		91824D89C03F4B8EBA57C98533427251 /* CTHeaderViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTHeaderViewController.h; path = CleverTapSDK/InApps/CTHeaderViewController.h; sourceTree = "<group>"; };
+		9187BC036B0CC8B889EA2C64E96E88EF /* PagingContentInteraction.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingContentInteraction.swift; path = Parchment/Enums/PagingContentInteraction.swift; sourceTree = "<group>"; };
+		919D4992262B4EA21193C1B1B7372411 /* FIRInstallationsItem.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsItem.h; path = FirebaseInstallations/Source/Library/FIRInstallationsItem.h; sourceTree = "<group>"; };
+		91F1F6539E33D21751BDD85CA7734F83 /* GDTCORAssert.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORAssert.h; path = GoogleDataTransport/GDTCORLibrary/Internal/GDTCORAssert.h; sourceTree = "<group>"; };
+		91F9CE9E532A10DF6F7FA69C598A0FB1 /* pb_decode.c */ = {isa = PBXFileReference; includeInIndex = 1; path = pb_decode.c; sourceTree = "<group>"; };
+		921C0511E5F26C5AC0A2FE3AE08ADB84 /* SDImageCodersManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageCodersManager.m; path = SDWebImage/Core/SDImageCodersManager.m; sourceTree = "<group>"; };
+		92501A38D36200C2F9623F245A4788FC /* GDTCORClock.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCORClock.m; path = GoogleDataTransport/GDTCORLibrary/GDTCORClock.m; sourceTree = "<group>"; };
+		92C915F834AFDD3A55969B67D33F06C9 /* FIRCLSCrashedMarkerFile.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSCrashedMarkerFile.c; path = Crashlytics/Crashlytics/Components/FIRCLSCrashedMarkerFile.c; sourceTree = "<group>"; };
+		930CF5ECEDCB86BFF9BC29BD048F88C8 /* IQKeyboardManager.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = IQKeyboardManager.swift; path = IQKeyboardManagerSwift/IQKeyboardManager.swift; sourceTree = "<group>"; };
+		930EA3CC4D4A792B4D2F74D75FEC2FAE /* FIRCLSExistingReportManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSExistingReportManager.m; path = Crashlytics/Crashlytics/Controllers/FIRCLSExistingReportManager.m; sourceTree = "<group>"; };
+		9374EC2B1FC9846AC5348C44358EAD6F /* CTInboxUtils.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTInboxUtils.m; path = CleverTapSDK/Inbox/models/CTInboxUtils.m; sourceTree = "<group>"; };
+		937741281C8DD41A313A176A915F48AA /* FBLPromise+Timeout.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Timeout.m"; path = "Sources/FBLPromises/FBLPromise+Timeout.m"; sourceTree = "<group>"; };
+		9390ABEFD49352F1AC9C0DA27C28BEB0 /* FIRCoreDiagnosticsInterop.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCoreDiagnosticsInterop.h; path = Interop/CoreDiagnostics/Public/FIRCoreDiagnosticsInterop.h; sourceTree = "<group>"; };
+		93A8E700678193A09067ADC31C73C35E /* IQKeyboardManagerSwift.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = IQKeyboardManagerSwift.release.xcconfig; sourceTree = "<group>"; };
+		93E7AB46E2511D25D9AF79D1E812E057 /* FIRMessagingAuthKeychain.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingAuthKeychain.h; path = FirebaseMessaging/Sources/Token/FIRMessagingAuthKeychain.h; sourceTree = "<group>"; };
+		93EFA7BB758C54E43D006C8692587986 /* CTLocationManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTLocationManager.h; path = CleverTapSDK/CTLocationManager.h; sourceTree = "<group>"; };
+		9427C0C5EE54092D8C85D46DD228BB66 /* FirebaseCoreInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FirebaseCoreInternal.h; path = FirebaseCore/Sources/Private/FirebaseCoreInternal.h; sourceTree = "<group>"; };
+		948BF456D345DDC2580E15C319666FF9 /* CleverTap-iOS-SDK.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = "CleverTap-iOS-SDK.modulemap"; sourceTree = "<group>"; };
+		94A37ADF6299F8CE4EDE0672C6C6343F /* Layout.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Layout.swift; path = Sources/Layout.swift; sourceTree = "<group>"; };
+		94F57A8670BA6CDCD1B488C2E9D8E79B /* CleverTapInstanceConfig.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTapInstanceConfig.h; path = CleverTapSDK/CleverTapInstanceConfig.h; sourceTree = "<group>"; };
+		9515D774425CFBF73EBE142666EB89CD /* FIRMessagingInterop.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingInterop.h; path = FirebaseMessaging/Sources/Interop/FIRMessagingInterop.h; sourceTree = "<group>"; };
+		95909AB0FA2085F0C5C33BE92A491E7A /* XLPagerTabStrip.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = XLPagerTabStrip.debug.xcconfig; sourceTree = "<group>"; };
+		95A11A2F98D798B4C88693ACDEC66670 /* FIRCLSConstants.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSConstants.h; path = Crashlytics/Shared/FIRCLSConstants.h; sourceTree = "<group>"; };
+		95A76B67F30BC91C646DEEA20408C4E1 /* GULLogger.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULLogger.h; path = GoogleUtilities/Logger/Public/GoogleUtilities/GULLogger.h; sourceTree = "<group>"; };
+		95F4F21376B82FD388597D5D7E11A69B /* GDTCORTransport_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORTransport_Private.h; path = GoogleDataTransport/GDTCORLibrary/Private/GDTCORTransport_Private.h; sourceTree = "<group>"; };
+		95F6D6E2B8C3D9BD2F7CDE259A7EF32C /* FIRInstallationsAPIService.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsAPIService.h; path = FirebaseInstallations/Source/Library/InstallationsAPI/FIRInstallationsAPIService.h; sourceTree = "<group>"; };
+		961516AE4170E2690DE2EFFBDC5CF0B4 /* ic_play@2x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "ic_play@2x.png"; path = "CleverTapSDK/Inbox/resources/ic_play@2x.png"; sourceTree = "<group>"; };
+		96A57EE0B36CC5CE671568F51622ABFE /* FIRCLSExecutionIdentifierModel.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSExecutionIdentifierModel.h; path = Crashlytics/Crashlytics/Models/FIRCLSExecutionIdentifierModel.h; sourceTree = "<group>"; };
+		96A9BF5791F9ECDE01D0E01AC26A7C88 /* FIRCLSNetworkResponseHandler.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSNetworkResponseHandler.m; path = Crashlytics/Shared/FIRCLSNetworking/FIRCLSNetworkResponseHandler.m; sourceTree = "<group>"; };
+		97145410F0E6B675B42873449AE71350 /* SDImageCachesManagerOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageCachesManagerOperation.m; path = SDWebImage/Private/SDImageCachesManagerOperation.m; sourceTree = "<group>"; };
+		971FF2AFFDF10D7D2D1181CA28564D27 /* NSError+FIRMessaging.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "NSError+FIRMessaging.h"; path = "FirebaseMessaging/Sources/NSError+FIRMessaging.h"; sourceTree = "<group>"; };
+		97691BC38478749CE509F05895C24C86 /* UIImage+ForceDecode.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIImage+ForceDecode.m"; path = "SDWebImage/Core/UIImage+ForceDecode.m"; sourceTree = "<group>"; };
+		976E2ECDF89D2C0F32FE82DF42FE4AB4 /* GDTCORReachability.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORReachability.h; path = GoogleDataTransport/GDTCORLibrary/Internal/GDTCORReachability.h; sourceTree = "<group>"; };
+		979FD5785D9976152F580CACD9C43802 /* nanopb-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "nanopb-umbrella.h"; sourceTree = "<group>"; };
+		97A21C11C1A4FAF7251A6AA06C034AC7 /* CTLogger.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTLogger.h; path = CleverTapSDK/CTLogger.h; sourceTree = "<group>"; };
+		97DF05DB4FC5D5E127E180FA85ACC4E6 /* FIRCLSDefines.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSDefines.h; path = Crashlytics/Crashlytics/Helpers/FIRCLSDefines.h; sourceTree = "<group>"; };
+		9807EE4404C4749868F977A2F50ABBBC /* UIImage+GIF.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIImage+GIF.h"; path = "SDWebImage/Core/UIImage+GIF.h"; sourceTree = "<group>"; };
+		987880D115593E242CD4DD4E186F4B8C /* SDImageAWebPCoder.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageAWebPCoder.m; path = SDWebImage/Core/SDImageAWebPCoder.m; sourceTree = "<group>"; };
+		99083F1111E52B93CB0D75C2F36CED13 /* FirebaseCoreInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FirebaseCoreInternal.h; path = FirebaseCore/Sources/Private/FirebaseCoreInternal.h; sourceTree = "<group>"; };
+		992383111143FE844CF9DE6025C34787 /* FIRMessaging.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessaging.m; path = FirebaseMessaging/Sources/FIRMessaging.m; sourceTree = "<group>"; };
+		994334386DDF9F19120F7CEBDCEABA88 /* XLPagerTabStrip-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "XLPagerTabStrip-dummy.m"; sourceTree = "<group>"; };
+		994F5CD467B359E644267D90E1B1D5D3 /* GDTCORTransformer_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORTransformer_Private.h; path = GoogleDataTransport/GDTCORLibrary/Private/GDTCORTransformer_Private.h; sourceTree = "<group>"; };
+		99570CD14755AF52CA6FB413ECD617F6 /* firebasecore.nanopb.c */ = {isa = PBXFileReference; includeInIndex = 1; name = firebasecore.nanopb.c; path = Firebase/CoreDiagnostics/FIRCDLibrary/Protogen/nanopb/firebasecore.nanopb.c; sourceTree = "<group>"; };
+		99AB2186CE97C4A6E68A30A8276A39FF /* CTInboxMessageActionView.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTInboxMessageActionView.m; path = CleverTapSDK/Inbox/views/CTInboxMessageActionView.m; sourceTree = "<group>"; };
+		99D6D1B737590FB6E8EDF5B8C882C66A /* SDWebImageDownloaderConfig.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageDownloaderConfig.h; path = SDWebImage/Core/SDWebImageDownloaderConfig.h; sourceTree = "<group>"; };
+		9A13B1575F6CEC6ED85D507AE89E58AD /* FIRInstallationsSingleOperationPromiseCache.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallationsSingleOperationPromiseCache.m; path = FirebaseInstallations/Source/Library/InstallationsIDController/FIRInstallationsSingleOperationPromiseCache.m; sourceTree = "<group>"; };
+		9A1F2636580718538B3DB4B995B2109F /* FIRCLSDwarfUnwindRegisters.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSDwarfUnwindRegisters.h; path = Crashlytics/Crashlytics/Unwind/Dwarf/FIRCLSDwarfUnwindRegisters.h; sourceTree = "<group>"; };
+		9A26B21CFC64A56D095561C9959DC848 /* FXPageControl.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FXPageControl.h; path = Sources/FXPageControl.h; sourceTree = "<group>"; };
+		9A34E7D3AB5382BAABA61C274FA913C4 /* CTValidator.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTValidator.h; path = CleverTapSDK/CTValidator.h; sourceTree = "<group>"; };
+		9A565055D27D9CE403117510F6A244A3 /* FIRCLSApplicationIdentifierModel.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSApplicationIdentifierModel.m; path = Crashlytics/Crashlytics/Settings/Models/FIRCLSApplicationIdentifierModel.m; sourceTree = "<group>"; };
+		9A5D3DBD21753C092E20EFF97F4D4554 /* FBLPromise+Any.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Any.h"; path = "Sources/FBLPromises/include/FBLPromise+Any.h"; sourceTree = "<group>"; };
+		9A6325839AB31B1E1E20294CBD91E4C9 /* PagingView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingView.swift; path = Parchment/Classes/PagingView.swift; sourceTree = "<group>"; };
+		9A7C79C9C27E5C3E4C0171376F3F20D4 /* FIRInteropParameterNames.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInteropParameterNames.h; path = Interop/Analytics/Public/FIRInteropParameterNames.h; sourceTree = "<group>"; };
+		9AC56E16ED8B41958181D4A351C1F915 /* PagingBorderView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingBorderView.swift; path = Parchment/Classes/PagingBorderView.swift; sourceTree = "<group>"; };
+		9AF84B1D5B3B6DF4CEF58CDF184DFD60 /* PagingInvalidationContext.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingInvalidationContext.swift; path = Parchment/Classes/PagingInvalidationContext.swift; sourceTree = "<group>"; };
+		9B14ADDA449C1A0017FDD1A6F51A9ABB /* CTHeaderViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTHeaderViewController.m; path = CleverTapSDK/InApps/CTHeaderViewController.m; sourceTree = "<group>"; };
+		9B22FA8A6DDFFB53375A65F9A192BC02 /* HTTPMethod.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = HTTPMethod.swift; path = Source/HTTPMethod.swift; sourceTree = "<group>"; };
+		9B69D3F6380635FCFCD8D16A606EF8D5 /* FIRCLSCompactUnwind.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSCompactUnwind.h; path = Crashlytics/Crashlytics/Unwind/Compact/FIRCLSCompactUnwind.h; sourceTree = "<group>"; };
+		9BD8F811477FD70843AD82BBD33C4933 /* AuthenticationInterceptor.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = AuthenticationInterceptor.swift; path = Source/AuthenticationInterceptor.swift; sourceTree = "<group>"; };
+		9C092A3CE0A954009E8EC3D7D006851B /* FIRVersion.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRVersion.h; path = FirebaseCore/Sources/Public/FirebaseCore/FIRVersion.h; sourceTree = "<group>"; };
+		9C835A170A029CF8EB7AA5F2B16BAB07 /* FIRConfiguration.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRConfiguration.h; path = FirebaseCore/Sources/Public/FirebaseCore/FIRConfiguration.h; sourceTree = "<group>"; };
+		9CA69B69FEE5A8261FF7D19FA599E300 /* FBLPromise.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FBLPromise.m; path = Sources/FBLPromises/FBLPromise.m; sourceTree = "<group>"; };
+		9CC98E99A7B3882475A89A615274189B /* FIRCLSCompoundOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSCompoundOperation.h; path = Crashlytics/Shared/FIRCLSOperation/FIRCLSCompoundOperation.h; sourceTree = "<group>"; };
+		9D10443BC8E26AEEC44B20D4915B3C8C /* Request.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Request.swift; path = Source/Request.swift; sourceTree = "<group>"; };
 		9D940727FF8FB9C785EB98E56350EF41 /* Podfile */ = {isa = PBXFileReference; explicitFileType = text.script.ruby; includeInIndex = 1; indentWidth = 2; lastKnownFileType = text; name = Podfile; path = ../Podfile; sourceTree = SOURCE_ROOT; tabWidth = 2; xcLanguageSpecificationIdentifier = xcode.lang.ruby; };
-		9D96A96964379EFFBFE3E75D31176CE0 /* UIImage+ExtendedCacheData.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIImage+ExtendedCacheData.h"; path = "SDWebImage/Core/UIImage+ExtendedCacheData.h"; sourceTree = "<group>"; };
-		9D9AB9070F0810A2C6FAA6E838D11628 /* FIRBundleUtil.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRBundleUtil.m; path = FirebaseCore/Sources/FIRBundleUtil.m; sourceTree = "<group>"; };
-		9D9CF029929AF09A237A05FB114F8E0A /* TwitterPagerTabStripViewController.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = TwitterPagerTabStripViewController.swift; path = Sources/TwitterPagerTabStripViewController.swift; sourceTree = "<group>"; };
-		9DF4657CCE1BA03932924366A4EDB8A5 /* successIconLight@3x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "successIconLight@3x.png"; path = "SwiftMessages/Resources/successIconLight@3x.png"; sourceTree = "<group>"; };
-		9E0F9E6A74FCA87F3D48D63DE5EFA1E4 /* GULAppDelegateSwizzler_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULAppDelegateSwizzler_Private.h; path = GoogleUtilities/AppDelegateSwizzler/Internal/GULAppDelegateSwizzler_Private.h; sourceTree = "<group>"; };
-		9ED58F6564654DBCFD4CB1FD7AF4B244 /* CTCarouselImageView.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTCarouselImageView.m; path = CleverTapSDK/Inbox/views/CTCarouselImageView.m; sourceTree = "<group>"; };
-		9EFBABC49E653B4D35063042D6FBE755 /* FXPageControl.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FXPageControl.m; path = Sources/FXPageControl.m; sourceTree = "<group>"; };
-		9F02746315F1386A921B85E0DD2BE3BE /* UIImage+MemoryCacheCost.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIImage+MemoryCacheCost.m"; path = "SDWebImage/Core/UIImage+MemoryCacheCost.m"; sourceTree = "<group>"; };
-		9F061AFFAACF1DE908E71981725F9AA9 /* AlamofireNetworkActivityLogger-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "AlamofireNetworkActivityLogger-Info.plist"; sourceTree = "<group>"; };
-		9F59C1668C1D78A23B2369824B939414 /* NSData+ImageContentType.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "NSData+ImageContentType.h"; path = "SDWebImage/Core/NSData+ImageContentType.h"; sourceTree = "<group>"; };
-		9F7D1D4E6535122668AC67BAAECD0997 /* PagingBorderOptions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingBorderOptions.swift; path = Parchment/Enums/PagingBorderOptions.swift; sourceTree = "<group>"; };
-		9F83A3363A53A1BBB42DC24B4260BD91 /* GULNetwork.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULNetwork.m; path = GoogleUtilities/Network/GULNetwork.m; sourceTree = "<group>"; };
-		9F896A2A324137945198575DF2E0A9FC /* CTHalfInterstitialImageViewController~ipad.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTHalfInterstitialImageViewController~ipad.xib"; path = "CleverTapSDK/InApps/resources/CTHalfInterstitialImageViewController~ipad.xib"; sourceTree = "<group>"; };
-		9F902DAE4A28172F9BD7D2DA2075C437 /* CTPreferences.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTPreferences.h; path = CleverTapSDK/CTPreferences.h; sourceTree = "<group>"; };
-		9FD5A565F680A72ECBFFAA71B7F8F643 /* Firebase.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = Firebase.release.xcconfig; sourceTree = "<group>"; };
-		A01F586FCC9B1508602A91929FD0D9D1 /* SDGraphicsImageRenderer.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDGraphicsImageRenderer.m; path = SDWebImage/Core/SDGraphicsImageRenderer.m; sourceTree = "<group>"; };
-		A03E1EF67E5982B32333A70F99B101FE /* GDTCORDirectorySizeTracker.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCORDirectorySizeTracker.m; path = GoogleDataTransport/GDTCORLibrary/GDTCORDirectorySizeTracker.m; sourceTree = "<group>"; };
-		A055960F42A5D25BFEF6917BFF9BBFAC /* GDTCOREndpoints.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCOREndpoints.h; path = GoogleDataTransport/GDTCORLibrary/Public/GoogleDataTransport/GDTCOREndpoints.h; sourceTree = "<group>"; };
-		A0805FE6455F77E9327129188255ABF4 /* FIRMessagingKeychain.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingKeychain.h; path = FirebaseMessaging/Sources/Token/FIRMessagingKeychain.h; sourceTree = "<group>"; };
-		A0A755A9C675F27F2936D9F7EB47644B /* CTCoverViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTCoverViewController.h; path = CleverTapSDK/InApps/CTCoverViewController.h; sourceTree = "<group>"; };
-		A0C1027DB4311ED3CFA1338F593FE7B6 /* SDAsyncBlockOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDAsyncBlockOperation.m; path = SDWebImage/Private/SDAsyncBlockOperation.m; sourceTree = "<group>"; };
-		A11D908D175E3FC81E1F5B7F01245C4E /* FIRMessagingCheckinService.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingCheckinService.m; path = FirebaseMessaging/Sources/Token/FIRMessagingCheckinService.m; sourceTree = "<group>"; };
-		A13431C6827DEA6FAAA4666481365FAF /* Parchment-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "Parchment-umbrella.h"; sourceTree = "<group>"; };
-		A1690915CAB67426ADBE1E58443062FA /* CTCarouselImageMessageCell~land.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTCarouselImageMessageCell~land.xib"; path = "CleverTapSDK/Inbox/resources/CTCarouselImageMessageCell~land.xib"; sourceTree = "<group>"; };
-		A17A65C2BAF429438DD737EC197F9363 /* CTInAppUtils.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTInAppUtils.h; path = CleverTapSDK/CTInAppUtils.h; sourceTree = "<group>"; };
-		A1970E2B78E641DF33587356A39613DE /* CTPlistInfo.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTPlistInfo.h; path = CleverTapSDK/CTPlistInfo.h; sourceTree = "<group>"; };
-		A1D929390EEA9740F8803DE24F7349E6 /* CTCoverImageViewController~ipadland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTCoverImageViewController~ipadland.xib"; path = "CleverTapSDK/InApps/resources/CTCoverImageViewController~ipadland.xib"; sourceTree = "<group>"; };
-		A21EF762C8DE622DE82BA964011ECCFA /* GDTCCTNanopbHelpers.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCCTNanopbHelpers.m; path = GoogleDataTransport/GDTCCTLibrary/GDTCCTNanopbHelpers.m; sourceTree = "<group>"; };
-		A25E6CF5CC16DE6FE9763C6384D3A443 /* PagingInvalidationContext.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingInvalidationContext.swift; path = Parchment/Classes/PagingInvalidationContext.swift; sourceTree = "<group>"; };
-		A36FEC3990DB96B50E820C3095A6D56C /* CTSwipeView.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTSwipeView.h; path = CleverTapSDK/Inbox/views/CTSwipeView.h; sourceTree = "<group>"; };
-		A39B28332C0C49D5AC0AB09F3EA8F5F6 /* GULUserDefaults.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULUserDefaults.m; path = GoogleUtilities/UserDefaults/GULUserDefaults.m; sourceTree = "<group>"; };
-		A3BF925A217EFA01ED33C93857697B46 /* ic_play@2x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "ic_play@2x.png"; path = "CleverTapSDK/Inbox/resources/ic_play@2x.png"; sourceTree = "<group>"; };
-		A3DBA737E3FA37B8FB8E47C246199DC9 /* FirebaseInstallations-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "FirebaseInstallations-Info.plist"; sourceTree = "<group>"; };
-		A3E324633C044D4E7224E6E1F01BB0F1 /* FIRCLSCompactUnwind.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSCompactUnwind.c; path = Crashlytics/Crashlytics/Unwind/Compact/FIRCLSCompactUnwind.c; sourceTree = "<group>"; };
-		A4094D74BE3B723D5B480DC5F33EAF80 /* FirebaseInstallations.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FirebaseInstallations.debug.xcconfig; sourceTree = "<group>"; };
-		A443F4A2FB363D515A34E507BDD193C7 /* FIRCurrentDateProvider.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCurrentDateProvider.h; path = FirebaseInstallations/Source/Library/InstallationsIDController/FIRCurrentDateProvider.h; sourceTree = "<group>"; };
-		A4466E4714FA30E1D83D5DEF20BF491A /* CleverTapProductConfig.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTapProductConfig.m; path = CleverTapSDK/ProductConfig/models/CleverTapProductConfig.m; sourceTree = "<group>"; };
-		A48A1D5F3678EAF4CF0BFB2EFD185FB9 /* CTCoverImageViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTCoverImageViewController.h; path = CleverTapSDK/InApps/CTCoverImageViewController.h; sourceTree = "<group>"; };
-		A4B3D3CA6C08BC8963F680585851E999 /* UIImage+MemoryCacheCost.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIImage+MemoryCacheCost.h"; path = "SDWebImage/Core/UIImage+MemoryCacheCost.h"; sourceTree = "<group>"; };
-		A4BD1F2825928136CE79B7D998AFABEE /* FIRCLSSettings.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSSettings.h; path = Crashlytics/Crashlytics/Models/FIRCLSSettings.h; sourceTree = "<group>"; };
-		A4C44169D7B3D53241CE2982F560F1D0 /* GDTCORTransport.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCORTransport.m; path = GoogleDataTransport/GDTCORLibrary/GDTCORTransport.m; sourceTree = "<group>"; };
-		A5713F4ED93B5359C325C23CF6F7848A /* CTUtils.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTUtils.m; path = CleverTapSDK/CTUtils.m; sourceTree = "<group>"; };
-		A5B9FD0FB9924376668723D423C2DC8D /* GULSceneDelegateSwizzler_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULSceneDelegateSwizzler_Private.h; path = GoogleUtilities/AppDelegateSwizzler/Internal/GULSceneDelegateSwizzler_Private.h; sourceTree = "<group>"; };
-		A5C7717A34C600C73F2270977F131C77 /* CleverTapProductConfigPrivate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTapProductConfigPrivate.h; path = CleverTapSDK/ProductConfig/models/CleverTapProductConfigPrivate.h; sourceTree = "<group>"; };
-		A63AEC1C2E0D76A49C48A3240D09D990 /* ct_default_landscape_image.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = ct_default_landscape_image.png; path = CleverTapSDK/Inbox/resources/ct_default_landscape_image.png; sourceTree = "<group>"; };
-		A64E248226A3C36E256AC409B50BD991 /* FIRCLSUnwind_arch.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSUnwind_arch.h; path = Crashlytics/Crashlytics/Unwind/FIRCLSUnwind_arch.h; sourceTree = "<group>"; };
-		A6AA74BF3D050FC80D88C8CE01725718 /* SDImageGIFCoder.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageGIFCoder.h; path = SDWebImage/Core/SDImageGIFCoder.h; sourceTree = "<group>"; };
-		A73B4EE21629A51D50E84FEB84089F02 /* IQPreviousNextView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = IQPreviousNextView.swift; path = IQKeyboardManagerSwift/IQToolbar/IQPreviousNextView.swift; sourceTree = "<group>"; };
-		A7485948639937EE80EC1D5A957BCDF7 /* CTUriHelper.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTUriHelper.h; path = CleverTapSDK/CTUriHelper.h; sourceTree = "<group>"; };
-		A74EC733D269CAF01282AD1095F5743D /* NSDictionary+FIRMessaging.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "NSDictionary+FIRMessaging.m"; path = "FirebaseMessaging/Sources/NSDictionary+FIRMessaging.m"; sourceTree = "<group>"; };
-		A7B924FE4984B477990FD67919155416 /* UIButton+WebCache.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIButton+WebCache.m"; path = "SDWebImage/Core/UIButton+WebCache.m"; sourceTree = "<group>"; };
-		A8337D8F717E66217894DE6286F19AC3 /* FIRComponentType.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRComponentType.h; path = FirebaseCore/Sources/Private/FIRComponentType.h; sourceTree = "<group>"; };
-		A8743A3F4DFAB718F7A90C4CC9558F6B /* SDWebImage.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = SDWebImage.debug.xcconfig; sourceTree = "<group>"; };
-		A874F8F3DBFF978B119F3269DE3A591C /* RedirectHandler.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = RedirectHandler.swift; path = Source/RedirectHandler.swift; sourceTree = "<group>"; };
-		A88EEAB6EE42765AC2E93BCAA8747DFA /* SDDiskCache.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDDiskCache.m; path = SDWebImage/Core/SDDiskCache.m; sourceTree = "<group>"; };
+		9DA216EBBF572D3F3B549059A18B1742 /* IQKeyboardManagerSwift.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = IQKeyboardManagerSwift.modulemap; sourceTree = "<group>"; };
+		9DA2DBE103108D378C37099A0B5A0F72 /* FirebaseCore.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FirebaseCore.release.xcconfig; sourceTree = "<group>"; };
+		9DBE220FF4F6A09718E89D30711663C7 /* SDImageCachesManagerOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageCachesManagerOperation.h; path = SDWebImage/Private/SDImageCachesManagerOperation.h; sourceTree = "<group>"; };
+		9DC444B95245C764B86A8A1FE5825916 /* URLRequest+Alamofire.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "URLRequest+Alamofire.swift"; path = "Source/URLRequest+Alamofire.swift"; sourceTree = "<group>"; };
+		9E10F9480FB9A06F6745A36A4DB58380 /* FIRCLSThreadArrayOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSThreadArrayOperation.h; path = Crashlytics/Crashlytics/Operations/Symbolication/FIRCLSThreadArrayOperation.h; sourceTree = "<group>"; };
+		9E3B409662DD2BF2C57414A31366CB21 /* FBLPromise+Then.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Then.h"; path = "Sources/FBLPromises/include/FBLPromise+Then.h"; sourceTree = "<group>"; };
+		9E7F1C2ED4DACAE60D6A0C567621179E /* FIRMessagingAPNSInfo.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingAPNSInfo.h; path = FirebaseMessaging/Sources/Token/FIRMessagingAPNSInfo.h; sourceTree = "<group>"; };
+		9EA10FE8174E6D08E0E3E4E3D15092FD /* FBLPromise+Delay.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Delay.h"; path = "Sources/FBLPromises/include/FBLPromise+Delay.h"; sourceTree = "<group>"; };
+		9EEA79382B4353C77F0D7CC4FA34B544 /* CTCoverViewController~iphoneport.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTCoverViewController~iphoneport.xib"; path = "CleverTapSDK/InApps/resources/CTCoverViewController~iphoneport.xib"; sourceTree = "<group>"; };
+		9EFDDA7BFF6A4FF5882F190C1DDE30E4 /* FIRCrashlytics.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCrashlytics.m; path = Crashlytics/Crashlytics/FIRCrashlytics.m; sourceTree = "<group>"; };
+		9F8F17918E912696D4D5EB546D0C2D14 /* youtube-ios-player-helper.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = "youtube-ios-player-helper.debug.xcconfig"; sourceTree = "<group>"; };
+		9FA8A04148635EF81606D98D8EF1F491 /* CleverTap+Inbox.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "CleverTap+Inbox.h"; path = "CleverTapSDK/CleverTap+Inbox.h"; sourceTree = "<group>"; };
+		9FD87D315E3BFE9C6F4A01F621854769 /* GULReachabilityChecker+Internal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "GULReachabilityChecker+Internal.h"; path = "GoogleUtilities/Reachability/GULReachabilityChecker+Internal.h"; sourceTree = "<group>"; };
+		A01003C443CE67BA354A21DF52151C37 /* warningIconLight.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = warningIconLight.png; path = SwiftMessages/Resources/warningIconLight.png; sourceTree = "<group>"; };
+		A0335F91A337CF3C12C7BFE700E21739 /* FIRCLSHost.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSHost.m; path = Crashlytics/Crashlytics/Components/FIRCLSHost.m; sourceTree = "<group>"; };
+		A052B06F0F06C7B457CA7BD8A756E842 /* CTProductConfigController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTProductConfigController.h; path = CleverTapSDK/ProductConfig/controllers/CTProductConfigController.h; sourceTree = "<group>"; };
+		A052EAF5432D2DD07EB9F8B03EDFC4E1 /* PhysicsPanHandler.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PhysicsPanHandler.swift; path = SwiftMessages/PhysicsPanHandler.swift; sourceTree = "<group>"; };
+		A05A33EB539E0FB09313F605D32DA638 /* FIRInstallationsIIDTokenStore.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallationsIIDTokenStore.m; path = FirebaseInstallations/Source/Library/IIDMigration/FIRInstallationsIIDTokenStore.m; sourceTree = "<group>"; };
+		A074965257F6045BE96CD46CA1DF36DB /* ic_pause@3x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "ic_pause@3x.png"; path = "CleverTapSDK/Inbox/resources/ic_pause@3x.png"; sourceTree = "<group>"; };
+		A081898EB902DE6398A74CA4FCEAAAC0 /* Theme.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Theme.swift; path = SwiftMessages/Theme.swift; sourceTree = "<group>"; };
+		A101FCB1021D037343DFE042B1476C9F /* FIRMessagingPubSub.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingPubSub.h; path = FirebaseMessaging/Sources/FIRMessagingPubSub.h; sourceTree = "<group>"; };
+		A1C4D4B232B6C8A3F3800687B9E94F9C /* UIImage+Transform.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIImage+Transform.m"; path = "SDWebImage/Core/UIImage+Transform.m"; sourceTree = "<group>"; };
+		A1F011913EF4A13CE973C72080D6D646 /* CTFooterViewController~ipadland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTFooterViewController~ipadland.xib"; path = "CleverTapSDK/InApps/resources/CTFooterViewController~ipadland.xib"; sourceTree = "<group>"; };
+		A225015DDE6D3C950FE011A063C839D3 /* SDImageCoderHelper.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageCoderHelper.h; path = SDWebImage/Core/SDImageCoderHelper.h; sourceTree = "<group>"; };
+		A24DE840E4E7EFB4A724355D82884192 /* FIRCLSNotificationManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSNotificationManager.m; path = Crashlytics/Crashlytics/Controllers/FIRCLSNotificationManager.m; sourceTree = "<group>"; };
+		A26D4BCC11F327801F3D688FCB65EB65 /* GULNetworkMessageCode.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULNetworkMessageCode.h; path = GoogleUtilities/Network/Public/GoogleUtilities/GULNetworkMessageCode.h; sourceTree = "<group>"; };
+		A28AA21654E7A535B0D68055707EC5C8 /* GoogleDataTransport-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "GoogleDataTransport-umbrella.h"; sourceTree = "<group>"; };
+		A2BFD6BE65034BE7F3FC634A5BCA181A /* Alamofire.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = Alamofire.modulemap; sourceTree = "<group>"; };
+		A2F09130F4013AFFC7DA4D62B6262878 /* CTInAppHTMLViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTInAppHTMLViewController.h; path = CleverTapSDK/InApps/CTInAppHTMLViewController.h; sourceTree = "<group>"; };
+		A2F25633C96DBF77ABC7972F54429AD1 /* FIRCLSException.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSException.h; path = Crashlytics/Crashlytics/Handlers/FIRCLSException.h; sourceTree = "<group>"; };
+		A36895ABAA4DFF5D53C1AF1DBBEA2431 /* BaseView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = BaseView.swift; path = SwiftMessages/BaseView.swift; sourceTree = "<group>"; };
+		A3718B35B506221E40756C1D5E13E8BB /* SDDiskCache.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDDiskCache.m; path = SDWebImage/Core/SDDiskCache.m; sourceTree = "<group>"; };
+		A376990628CA5ACEB2316F138309F5E0 /* FIRCLSSignal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSSignal.h; path = Crashlytics/Crashlytics/Handlers/FIRCLSSignal.h; sourceTree = "<group>"; };
+		A3CF6E3318AD8E81A9CDC8C7A7239EA3 /* CTCarouselImageView.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = CTCarouselImageView.xib; path = CleverTapSDK/Inbox/resources/CTCarouselImageView.xib; sourceTree = "<group>"; };
+		A3F272AA1CDC6BB1DB55A0BC7BF90BED /* cct.nanopb.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = cct.nanopb.h; path = GoogleDataTransport/GDTCCTLibrary/Protogen/nanopb/cct.nanopb.h; sourceTree = "<group>"; };
+		A3F3BE757105AB7A600FE52AD68B917C /* FIRApp.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRApp.m; path = FirebaseCore/Sources/FIRApp.m; sourceTree = "<group>"; };
+		A418BF64A237037CA82D67C7F793DC04 /* FIRMessagingPendingTopicsList.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingPendingTopicsList.h; path = FirebaseMessaging/Sources/FIRMessagingPendingTopicsList.h; sourceTree = "<group>"; };
+		A43F9351E9C47590B5DF954F3C5E1725 /* GDTCORPlatform.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCORPlatform.m; path = GoogleDataTransport/GDTCORLibrary/GDTCORPlatform.m; sourceTree = "<group>"; };
+		A47CFCE9015FE2C414EF3BD4BF724756 /* GDTCORUploader.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORUploader.h; path = GoogleDataTransport/GDTCORLibrary/Internal/GDTCORUploader.h; sourceTree = "<group>"; };
+		A4D09DD7955FFF33CB085240804572C0 /* FIRCLSMachException.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSMachException.h; path = Crashlytics/Crashlytics/Handlers/FIRCLSMachException.h; sourceTree = "<group>"; };
+		A4D1868AF28247465DE1AE281F1C7B06 /* CleverTapEventDetail.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTapEventDetail.h; path = CleverTapSDK/CleverTapEventDetail.h; sourceTree = "<group>"; };
+		A4E6564E69E7A92F5272508055BDD56A /* SDWebImageDownloaderRequestModifier.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageDownloaderRequestModifier.h; path = SDWebImage/Core/SDWebImageDownloaderRequestModifier.h; sourceTree = "<group>"; };
+		A4F4C099F6382321262B3DE0289FF4A9 /* GULUserDefaults.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULUserDefaults.h; path = GoogleUtilities/UserDefaults/Public/GoogleUtilities/GULUserDefaults.h; sourceTree = "<group>"; };
+		A520A6D5E883724F3E3E76F3C2590F10 /* ct_default_video.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = ct_default_video.png; path = CleverTapSDK/Inbox/resources/ct_default_video.png; sourceTree = "<group>"; };
+		A54AA84DD5AB6B276E0D51214B4DC9EC /* FIRCLSSettings.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSSettings.h; path = Crashlytics/Crashlytics/Models/FIRCLSSettings.h; sourceTree = "<group>"; };
+		A59258BE5C497F70043B12CE440BFB95 /* FIRCLSMetricKitManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSMetricKitManager.h; path = Crashlytics/Crashlytics/Controllers/FIRCLSMetricKitManager.h; sourceTree = "<group>"; };
+		A5E00AE665B423B73FAA5905044BBFB9 /* SDWebImageCompat.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageCompat.m; path = SDWebImage/Core/SDWebImageCompat.m; sourceTree = "<group>"; };
+		A62F813215EE670424BAB999A770252E /* FIRInstallationsIIDStore.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallationsIIDStore.m; path = FirebaseInstallations/Source/Library/IIDMigration/FIRInstallationsIIDStore.m; sourceTree = "<group>"; };
+		A6E6DCF68C06096E3487C0F36AD38851 /* FIRMessagingAnalytics.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingAnalytics.m; path = FirebaseMessaging/Sources/FIRMessagingAnalytics.m; sourceTree = "<group>"; };
+		A6E77C1D23954B2EDD7504B81A9BF821 /* FIRCLSUnwind_arm.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSUnwind_arm.c; path = Crashlytics/Crashlytics/Unwind/FIRCLSUnwind_arm.c; sourceTree = "<group>"; };
+		A7D714E6FAE501B391F302D1940BB647 /* pb_encode.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = pb_encode.h; sourceTree = "<group>"; };
+		A7F9BC8A9E161DB95FD4668F10FEDE0B /* CTNotificationButton.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTNotificationButton.m; path = CleverTapSDK/CTNotificationButton.m; sourceTree = "<group>"; };
+		A80F15ADC0AAE008F5B3BDA48C2BC025 /* FIRCrashlyticsReport.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCrashlyticsReport.m; path = Crashlytics/Crashlytics/FIRCrashlyticsReport.m; sourceTree = "<group>"; };
+		A81367045340DA860EDA13FC91901944 /* CTSwizzle.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTSwizzle.h; path = CleverTapSDK/CTSwizzle.h; sourceTree = "<group>"; };
+		A8325797F0FC35992CD9A1FA6D5711F2 /* GULSceneDelegateSwizzler.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULSceneDelegateSwizzler.h; path = GoogleUtilities/AppDelegateSwizzler/Public/GoogleUtilities/GULSceneDelegateSwizzler.h; sourceTree = "<group>"; };
+		A86AA2EB5FBAB8868EFC42CFA9B41728 /* nanopb.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = nanopb.release.xcconfig; sourceTree = "<group>"; };
+		A8832C447C669CD1098202D9A6BA33A3 /* CTInboxSimpleMessageCell.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTInboxSimpleMessageCell.h; path = CleverTapSDK/Inbox/cells/CTInboxSimpleMessageCell.h; sourceTree = "<group>"; };
+		A8AA2E4F9732DA578BD598BD91C4CA96 /* CTLocationManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTLocationManager.m; path = CleverTapSDK/CTLocationManager.m; sourceTree = "<group>"; };
+		A8C010169E95F1031ACA109CA8670704 /* SDWebImage-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "SDWebImage-dummy.m"; sourceTree = "<group>"; };
 		A8E950A16D00F649C54FFB30F81D7842 /* IQKeyboardManagerSwift */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; name = IQKeyboardManagerSwift; path = IQKeyboardManagerSwift.framework; sourceTree = BUILT_PRODUCTS_DIR; };
-		A8F4D63FEB24703BFEBD3891E82FB7C3 /* OTPFieldView-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "OTPFieldView-dummy.m"; sourceTree = "<group>"; };
-		A9269AF6ACD3357BB517C432FC6D83FA /* ic_pause@2x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "ic_pause@2x.png"; path = "CleverTapSDK/Inbox/resources/ic_pause@2x.png"; sourceTree = "<group>"; };
-		A94A253D9632B76609D7EDE2905703AB /* CTSwizzle.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTSwizzle.m; path = CleverTapSDK/CTSwizzle.m; sourceTree = "<group>"; };
-		A959623953DE35CE5E503C62F77E6C41 /* PagingBorderView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingBorderView.swift; path = Parchment/Classes/PagingBorderView.swift; sourceTree = "<group>"; };
-		A9718BBC57F84A21F024CCCC0B431585 /* SDWebImageCompat.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageCompat.m; path = SDWebImage/Core/SDWebImageCompat.m; sourceTree = "<group>"; };
-		A9CC2452F12510951789FD6D970073DF /* URLEncodedFormEncoder.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = URLEncodedFormEncoder.swift; path = Source/URLEncodedFormEncoder.swift; sourceTree = "<group>"; };
-		A9EE62BAE006A549C377A176E008CF3D /* FIRCLSFABHost.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSFABHost.h; path = Crashlytics/Shared/FIRCLSFABHost.h; sourceTree = "<group>"; };
-		AA19817919F2E81C16D4B120B5D2EB8E /* CleverTap-iOS-SDK-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "CleverTap-iOS-SDK-Info.plist"; sourceTree = "<group>"; };
-		AAACBC6FA666DE1B5BADFB9DA21AD2E4 /* FIRCLSDataCollectionToken.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSDataCollectionToken.m; path = Crashlytics/Crashlytics/DataCollection/FIRCLSDataCollectionToken.m; sourceTree = "<group>"; };
-		AAE91F7E2427CD3DDF06C37A54FAD248 /* FIRMessagingTokenManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingTokenManager.h; path = FirebaseMessaging/Sources/Token/FIRMessagingTokenManager.h; sourceTree = "<group>"; };
-		AB298F77943B429A4B74693E34040AA3 /* SDImageCoderHelper.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageCoderHelper.h; path = SDWebImage/Core/SDImageCoderHelper.h; sourceTree = "<group>"; };
-		AB4A6D4A42E512F4B682FEA6ABD2D5FD /* Alamofire.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Alamofire.swift; path = Source/Alamofire.swift; sourceTree = "<group>"; };
-		AB5A85BFE6E1D720BD9F6389C8357EE4 /* Response.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Response.swift; path = Source/Response.swift; sourceTree = "<group>"; };
-		AB7C02CD704274009CDC25506ABECC3E /* CTProfileBuilder.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTProfileBuilder.m; path = CleverTapSDK/CTProfileBuilder.m; sourceTree = "<group>"; };
-		AB869C87291579008E99BAF00D8BEA56 /* FIRCLSUserLogging.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSUserLogging.m; path = Crashlytics/Crashlytics/Components/FIRCLSUserLogging.m; sourceTree = "<group>"; };
-		AB91781765ABDC630DB42B610C4086DF /* SDWebImageDefine.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageDefine.m; path = SDWebImage/Core/SDWebImageDefine.m; sourceTree = "<group>"; };
-		ABF2E3CF2B928FAF975CE0F53D309CDD /* FIRInstallationsBackoffController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallationsBackoffController.m; path = FirebaseInstallations/Source/Library/InstallationsIDController/FIRInstallationsBackoffController.m; sourceTree = "<group>"; };
-		AC18EF964D0806F4B56484C581F4B44E /* FIRLibrary.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRLibrary.h; path = FirebaseCore/Sources/Private/FIRLibrary.h; sourceTree = "<group>"; };
-		ACB47AAD35A3872B37372819081F7DFA /* CTInterstitialImageViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTInterstitialImageViewController.m; path = CleverTapSDK/InApps/CTInterstitialImageViewController.m; sourceTree = "<group>"; };
+		A9C62A4A227DEF32C8E68296D59F6F54 /* IQKeyboardManager+Position.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "IQKeyboardManager+Position.swift"; path = "IQKeyboardManagerSwift/IQKeyboardManager+Position.swift"; sourceTree = "<group>"; };
+		AA3D6E0F92D2A446F8F18EAE586B6CFC /* GULAppEnvironmentUtil.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULAppEnvironmentUtil.m; path = GoogleUtilities/Environment/third_party/GULAppEnvironmentUtil.m; sourceTree = "<group>"; };
+		AA441242F2FCB9A773DE3F87B5336F99 /* CleverTapProductConfigPrivate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTapProductConfigPrivate.h; path = CleverTapSDK/ProductConfig/models/CleverTapProductConfigPrivate.h; sourceTree = "<group>"; };
+		AA44E189CDA52D7B615513D6CACF1480 /* DigiCertGlobalRootCA.crt */ = {isa = PBXFileReference; includeInIndex = 1; name = DigiCertGlobalRootCA.crt; path = CleverTapSDK/DigiCertGlobalRootCA.crt; sourceTree = "<group>"; };
+		AA48E61CE0A1CD2E6B046D1E92616989 /* AlamofireNetworkActivityLogger.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = AlamofireNetworkActivityLogger.debug.xcconfig; sourceTree = "<group>"; };
+		AAB430493CE26ACB75C9037AD5316891 /* CleverTapInboxViewControllerPrivate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTapInboxViewControllerPrivate.h; path = CleverTapSDK/Inbox/controllers/CleverTapInboxViewControllerPrivate.h; sourceTree = "<group>"; };
+		AB4E39DA261FED1805CC324D526E074F /* GULReachabilityMessageCode.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULReachabilityMessageCode.h; path = GoogleUtilities/Reachability/GULReachabilityMessageCode.h; sourceTree = "<group>"; };
+		AB9FDADC9CEE9F6124F18DC7FC7767D9 /* IQKeyboardManager+Toolbar.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "IQKeyboardManager+Toolbar.swift"; path = "IQKeyboardManagerSwift/IQKeyboardManager+Toolbar.swift"; sourceTree = "<group>"; };
+		ABB870902EB1468066E55945DE2D9B6A /* FIRCLSSymbolicationOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSSymbolicationOperation.m; path = Crashlytics/Crashlytics/Operations/Symbolication/FIRCLSSymbolicationOperation.m; sourceTree = "<group>"; };
+		AC1EAA01471A7E530CD3DEC57973F9C2 /* PagingOptions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingOptions.swift; path = Parchment/Classes/PagingOptions.swift; sourceTree = "<group>"; };
+		AC60683E7EE51AAE0F4499D3C08BBAA8 /* ResourceBundle-SwiftMessages-SwiftMessages-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "ResourceBundle-SwiftMessages-SwiftMessages-Info.plist"; sourceTree = "<group>"; };
+		AC6A3A1216BF0F6B7524B913900EC73F /* FIRComponentType.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRComponentType.h; path = FirebaseCore/Sources/Private/FIRComponentType.h; sourceTree = "<group>"; };
+		AC8BA51F09AE7B4FBAEBBD8EEF72944E /* CTHalfInterstitialImageViewController~iphoneland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTHalfInterstitialImageViewController~iphoneland.xib"; path = "CleverTapSDK/InApps/resources/CTHalfInterstitialImageViewController~iphoneland.xib"; sourceTree = "<group>"; };
+		ACA65376FF075BA0B56D5D290F3F13E9 /* CTInboxMessageActionView.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTInboxMessageActionView.h; path = CleverTapSDK/Inbox/views/CTInboxMessageActionView.h; sourceTree = "<group>"; };
+		ACE21E0B86B22799E14B4AFC681E7416 /* LayoutReferences.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = LayoutReferences.swift; path = Sources/LayoutReferences.swift; sourceTree = "<group>"; };
 		ACED0CAC917CE6072D247179FADEFA37 /* CFNetwork.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = CFNetwork.framework; path = Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS14.0.sdk/System/Library/Frameworks/CFNetwork.framework; sourceTree = DEVELOPER_DIR; };
-		AD552BC080B93D2D90744D1B98BE3472 /* crashlytics.nanopb.c */ = {isa = PBXFileReference; includeInIndex = 1; name = crashlytics.nanopb.c; path = Crashlytics/Protogen/nanopb/crashlytics.nanopb.c; sourceTree = "<group>"; };
-		AD6666FFF9FE5A56BB871926AB7F04A1 /* FirebaseCore-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "FirebaseCore-dummy.m"; sourceTree = "<group>"; };
-		AD6A09900EE7DB3C372F0809ED70D95D /* GDTCORLifecycle.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCORLifecycle.m; path = GoogleDataTransport/GDTCORLibrary/GDTCORLifecycle.m; sourceTree = "<group>"; };
-		AD8C5F5EEB4BF34AAA7A49BDF51F6C05 /* SDWebImageManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageManager.m; path = SDWebImage/Core/SDWebImageManager.m; sourceTree = "<group>"; };
-		ADAC7B9405416991D09BC5EF42580E9B /* FIRAnalyticsInteropListener.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRAnalyticsInteropListener.h; path = Interop/Analytics/Public/FIRAnalyticsInteropListener.h; sourceTree = "<group>"; };
-		AE1BECB62A01FA0CD9249D8A33CA9D36 /* FIRCLSCodeMapping.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSCodeMapping.h; path = Crashlytics/Shared/FIRCLSMachO/FIRCLSCodeMapping.h; sourceTree = "<group>"; };
-		AE33F43AC9FB7D28E522A4E1558A8A05 /* CTMessageMO+CoreDataProperties.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "CTMessageMO+CoreDataProperties.m"; path = "CleverTapSDK/Inbox/models/CTMessageMO+CoreDataProperties.m"; sourceTree = "<group>"; };
-		AE974509C2D33D80776CF805E088CD72 /* FIRCLSInternalReport.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSInternalReport.h; path = Crashlytics/Crashlytics/Models/FIRCLSInternalReport.h; sourceTree = "<group>"; };
-		AE9829D4640DE2B8E0A8FCFBCBCF0E65 /* UIEdgeInsets.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = UIEdgeInsets.swift; path = Parchment/Extensions/UIEdgeInsets.swift; sourceTree = "<group>"; };
-		AEE4A180E9700369FD8C9B1F2EEA519D /* FirebaseCrashlytics-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "FirebaseCrashlytics-dummy.m"; sourceTree = "<group>"; };
-		AF1B2FA2CA5C721AF347832886C886E3 /* FIRInstallationsIDController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallationsIDController.m; path = FirebaseInstallations/Source/Library/InstallationsIDController/FIRInstallationsIDController.m; sourceTree = "<group>"; };
-		AF5591EAE7469A8D5564B71615D0ED47 /* IQKeyboardManagerSwift.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = IQKeyboardManagerSwift.modulemap; sourceTree = "<group>"; };
-		AFB887168D5B1E5E77CDC1D569F4BF17 /* SwiftMessages-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "SwiftMessages-umbrella.h"; sourceTree = "<group>"; };
-		AFD7A6D93187CD27721315591515092D /* youtube-ios-player-helper.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = "youtube-ios-player-helper.modulemap"; sourceTree = "<group>"; };
-		AFF7B711EA1D4E0D80B7C423C8AFA927 /* SwiftMessages.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = SwiftMessages.modulemap; sourceTree = "<group>"; };
-		B01663682A537C03A360C89C7D3F1E80 /* FBLPromise+Delay.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Delay.m"; path = "Sources/FBLPromises/FBLPromise+Delay.m"; sourceTree = "<group>"; };
-		B04999EBB95E9EE5B7D3D53CE98848F3 /* CTSwizzle.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTSwizzle.h; path = CleverTapSDK/CTSwizzle.h; sourceTree = "<group>"; };
-		B04BD3F902DB09F56E1391DBF4856700 /* FIRComponentContainer.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRComponentContainer.h; path = FirebaseCore/Sources/Private/FIRComponentContainer.h; sourceTree = "<group>"; };
-		B0A35EE1E6FF5F15A43AF04760C54B9E /* PagingItem.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingItem.swift; path = Parchment/Protocols/PagingItem.swift; sourceTree = "<group>"; };
-		B0A6208547611AD9A08FA6CAD905E7EB /* GULHeartbeatDateStorage.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULHeartbeatDateStorage.h; path = GoogleUtilities/Environment/Public/GoogleUtilities/GULHeartbeatDateStorage.h; sourceTree = "<group>"; };
+		ACF43001C088A976C6DE8B5CE34C3450 /* CTMessageMO+CoreDataProperties.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "CTMessageMO+CoreDataProperties.h"; path = "CleverTapSDK/Inbox/models/CTMessageMO+CoreDataProperties.h"; sourceTree = "<group>"; };
+		AD26AB3B6DFB83733A15190591100CBC /* FIRCLSMachOBinary.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSMachOBinary.h; path = Crashlytics/Shared/FIRCLSMachO/FIRCLSMachOBinary.h; sourceTree = "<group>"; };
+		AD6C4F88B3A8264787F02157EFDE180A /* nanopb.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = nanopb.debug.xcconfig; sourceTree = "<group>"; };
+		AD751BE1E4CDEB38E77F14C092DD8DD3 /* GDTCORTransformer.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORTransformer.h; path = GoogleDataTransport/GDTCORLibrary/Private/GDTCORTransformer.h; sourceTree = "<group>"; };
+		ADBA061B2123719621518556ACF6B9E9 /* CTCarouselImageMessageCell.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTCarouselImageMessageCell.m; path = CleverTapSDK/Inbox/cells/CTCarouselImageMessageCell.m; sourceTree = "<group>"; };
+		ADBFDABBBA19F38EE98C769E6B7C056C /* CTHeaderViewController~iphoneland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTHeaderViewController~iphoneland.xib"; path = "CleverTapSDK/InApps/resources/CTHeaderViewController~iphoneland.xib"; sourceTree = "<group>"; };
+		ADCCE7F86F38610580152D664B579B3D /* CTCoverImageViewController~iphoneland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTCoverImageViewController~iphoneland.xib"; path = "CleverTapSDK/InApps/resources/CTCoverImageViewController~iphoneland.xib"; sourceTree = "<group>"; };
+		AE2AEC160DD5E5B784415F2C907626DA /* successIcon@2x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "successIcon@2x.png"; path = "SwiftMessages/Resources/successIcon@2x.png"; sourceTree = "<group>"; };
+		AE2FBACF611688F415582C70C8D2AEC9 /* SDAnimatedImage.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDAnimatedImage.m; path = SDWebImage/Core/SDAnimatedImage.m; sourceTree = "<group>"; };
+		AE458D12347582753E6CDBB2F7FF70A3 /* GDTCORDirectorySizeTracker.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCORDirectorySizeTracker.m; path = GoogleDataTransport/GDTCORLibrary/GDTCORDirectorySizeTracker.m; sourceTree = "<group>"; };
+		AE49506FBF5EA47DD171595B89BC5921 /* Alamofire-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "Alamofire-umbrella.h"; sourceTree = "<group>"; };
+		AED9F50E1917C372E6C3A39E0EB70D99 /* ct_volume_off.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = ct_volume_off.png; path = CleverTapSDK/Inbox/resources/ct_volume_off.png; sourceTree = "<group>"; };
+		AEFD367F0AC26371885D31C3B851494B /* Parchment-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "Parchment-Info.plist"; sourceTree = "<group>"; };
+		AF0172D538670EEB5B18C87AEE7AB54A /* FIRCLSDataCollectionArbiter.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSDataCollectionArbiter.h; path = Crashlytics/Crashlytics/DataCollection/FIRCLSDataCollectionArbiter.h; sourceTree = "<group>"; };
+		AF600171DA5571A20A288CE4788087DF /* CTInterstitialImageViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTInterstitialImageViewController.m; path = CleverTapSDK/InApps/CTInterstitialImageViewController.m; sourceTree = "<group>"; };
+		AF6224C5CE6EA91F3373AC8E64389806 /* UIButton+WebCache.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIButton+WebCache.h"; path = "SDWebImage/Core/UIButton+WebCache.h"; sourceTree = "<group>"; };
+		AF62F773E2ABCA7554D0DEF7545929B4 /* FIRCLSRecordBase.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSRecordBase.m; path = Crashlytics/Crashlytics/Models/Record/FIRCLSRecordBase.m; sourceTree = "<group>"; };
+		AFAABCA5AD134D7B13A55DA86748F1F5 /* FBLPromisePrivate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FBLPromisePrivate.h; path = Sources/FBLPromises/include/FBLPromisePrivate.h; sourceTree = "<group>"; };
+		AFD7FF7AD188A2E32715996C287FB500 /* FIRInstallationsItem.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallationsItem.m; path = FirebaseInstallations/Source/Library/FIRInstallationsItem.m; sourceTree = "<group>"; };
 		B0B214D775196BA7CA8E17E53048A493 /* SDWebImage */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; name = SDWebImage; path = SDWebImage.framework; sourceTree = BUILT_PRODUCTS_DIR; };
-		B0DFDB230BC07FD241DB0E6DF2137650 /* CTCarouselImageView.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTCarouselImageView.h; path = CleverTapSDK/Inbox/views/CTCarouselImageView.h; sourceTree = "<group>"; };
-		B101740E994BD1C030B5A4E9011BC7F5 /* CachedResponseHandler.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = CachedResponseHandler.swift; path = Source/CachedResponseHandler.swift; sourceTree = "<group>"; };
-		B14052BDCE53C4B44B778BA3499F5386 /* CleverTapTrackedViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTapTrackedViewController.h; path = CleverTapSDK/CleverTapTrackedViewController.h; sourceTree = "<group>"; };
-		B16DA940F8BB5796D640D93EA7384578 /* GDTCORRegistrar.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCORRegistrar.m; path = GoogleDataTransport/GDTCORLibrary/GDTCORRegistrar.m; sourceTree = "<group>"; };
-		B19FE5924A546AE7C1E1726784CE9157 /* GULLoggerLevel.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULLoggerLevel.h; path = GoogleUtilities/Logger/Public/GoogleUtilities/GULLoggerLevel.h; sourceTree = "<group>"; };
-		B1A38B1A7856F52025E1915547077366 /* CTInboxBaseMessageCell.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTInboxBaseMessageCell.m; path = CleverTapSDK/Inbox/cells/CTInboxBaseMessageCell.m; sourceTree = "<group>"; };
-		B21201B1748C7C26A24CFB9848F95A16 /* FIRCrashlyticsReport_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCrashlyticsReport_Private.h; path = Crashlytics/Crashlytics/Private/FIRCrashlyticsReport_Private.h; sourceTree = "<group>"; };
-		B243A501712C2C834CAB76A0A6DFAE71 /* pb_common.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = pb_common.h; sourceTree = "<group>"; };
-		B2597CDB1FE651972477EDEC65B66C70 /* SDWebImageOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageOperation.m; path = SDWebImage/Core/SDWebImageOperation.m; sourceTree = "<group>"; };
-		B2946A683C74EB0AFBAD306665EDC902 /* MultipartFormData.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = MultipartFormData.swift; path = Source/MultipartFormData.swift; sourceTree = "<group>"; };
-		B2BCED4FF15422BFC7117598D6316508 /* FBLPromise+Await.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Await.m"; path = "Sources/FBLPromises/FBLPromise+Await.m"; sourceTree = "<group>"; };
-		B2FE8165EE1136F188FD65FB36D1BC7F /* BackdropView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = BackdropView.swift; path = Sources/BackdropView.swift; sourceTree = "<group>"; };
-		B30623974B16AA5D2E33D834A1E5FD8E /* SDImageLoadersManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageLoadersManager.h; path = SDWebImage/Core/SDImageLoadersManager.h; sourceTree = "<group>"; };
-		B3151CD44CF2CC39C1E9BD0C8F2C6563 /* CTFeatureFlagsController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTFeatureFlagsController.m; path = CleverTapSDK/FeatureFlags/controllers/CTFeatureFlagsController.m; sourceTree = "<group>"; };
-		B347D8DF8F8047ED97696A2C1D59DFB6 /* PageViewManagerDelegate.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PageViewManagerDelegate.swift; path = Parchment/Protocols/PageViewManagerDelegate.swift; sourceTree = "<group>"; };
-		B36F53CA1F8B2A0A9D5695DF7DEB9B9E /* CleverTapUTMDetail.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTapUTMDetail.h; path = CleverTapSDK/CleverTapUTMDetail.h; sourceTree = "<group>"; };
-		B37F64F4B2E9ACC045B2584EC9AF6819 /* Alamofire-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "Alamofire-prefix.pch"; sourceTree = "<group>"; };
-		B3EAD0E383C7B51C63828663256064DB /* FIRCLSMultipartMimeStreamEncoder.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSMultipartMimeStreamEncoder.m; path = Crashlytics/Shared/FIRCLSNetworking/FIRCLSMultipartMimeStreamEncoder.m; sourceTree = "<group>"; };
+		B0F63AA0457B4688CB2AED57F4A199D4 /* errorIconSubtle@2x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "errorIconSubtle@2x.png"; path = "SwiftMessages/Resources/errorIconSubtle@2x.png"; sourceTree = "<group>"; };
+		B11CA7D0465BA46A6855E5424B2A2554 /* FIRMessagingSyncMessageManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingSyncMessageManager.m; path = FirebaseMessaging/Sources/FIRMessagingSyncMessageManager.m; sourceTree = "<group>"; };
+		B130344935054793314B75BFF96748D0 /* FIRInstallationsStore.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallationsStore.m; path = FirebaseInstallations/Source/Library/InstallationsStore/FIRInstallationsStore.m; sourceTree = "<group>"; };
+		B1505782C0A2D38796E5A6A7D4D5C73F /* GDTCORConsoleLogger.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORConsoleLogger.h; path = GoogleDataTransport/GDTCORLibrary/Public/GoogleDataTransport/GDTCORConsoleLogger.h; sourceTree = "<group>"; };
+		B1E93004743319B728BB3C3E2A8B8D85 /* GDTCORUploadBatch.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORUploadBatch.h; path = GoogleDataTransport/GDTCORLibrary/Private/GDTCORUploadBatch.h; sourceTree = "<group>"; };
+		B1FF5313AFD3914607BA94D9192ECDF5 /* SDImageIOCoder.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageIOCoder.h; path = SDWebImage/Core/SDImageIOCoder.h; sourceTree = "<group>"; };
+		B248E793B2D9A8C2D1C43B2319C40FEF /* OTPFieldView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = OTPFieldView.swift; path = OTPFieldView/OTPFieldView.swift; sourceTree = "<group>"; };
+		B26F7C70C74DDE71441AA961279A3DF5 /* successIconLight@3x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "successIconLight@3x.png"; path = "SwiftMessages/Resources/successIconLight@3x.png"; sourceTree = "<group>"; };
+		B2B942EA18BC89BCAEACBF54F1A70AB2 /* FBLPromise.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FBLPromise.h; path = Sources/FBLPromises/include/FBLPromise.h; sourceTree = "<group>"; };
+		B2C5D4287559880143C3CD4104E5C2DB /* SDWebImageDownloader.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageDownloader.h; path = SDWebImage/Core/SDWebImageDownloader.h; sourceTree = "<group>"; };
+		B3305D8FD81E0ABEB906AE18B8B397BB /* CTHalfInterstitialImageViewController~ipadland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTHalfInterstitialImageViewController~ipadland.xib"; path = "CleverTapSDK/InApps/resources/CTHalfInterstitialImageViewController~ipadland.xib"; sourceTree = "<group>"; };
+		B34615E6A2780D3388056B237AB08A5E /* FIRCurrentDateProvider.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCurrentDateProvider.m; path = FirebaseInstallations/Source/Library/InstallationsIDController/FIRCurrentDateProvider.m; sourceTree = "<group>"; };
+		B374527FA3E07E3963CA0F1D034A0117 /* CTCarouselImageView.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTCarouselImageView.h; path = CleverTapSDK/Inbox/views/CTCarouselImageView.h; sourceTree = "<group>"; };
+		B3869CF044F0EFE17B6DF9FA5CECEF4D /* FIRAppAssociationRegistration.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRAppAssociationRegistration.m; path = FirebaseCore/Sources/FIRAppAssociationRegistration.m; sourceTree = "<group>"; };
+		B38DE103409B4D2D2B3BCA18176AFC45 /* SwiftMessages-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "SwiftMessages-dummy.m"; sourceTree = "<group>"; };
+		B39FDDDD184D41F0EB65A56CB04DCB68 /* FIRCLSMachOBinary.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSMachOBinary.m; path = Crashlytics/Shared/FIRCLSMachO/FIRCLSMachOBinary.m; sourceTree = "<group>"; };
+		B3D38EBE8AB93F9244F766EC1644C2A6 /* PromisesObjC-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "PromisesObjC-umbrella.h"; sourceTree = "<group>"; };
+		B3D6F9C340E055D31D157832905C0EE0 /* FIRCLSFABAsyncOperation_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSFABAsyncOperation_Private.h; path = Crashlytics/Shared/FIRCLSOperation/FIRCLSFABAsyncOperation_Private.h; sourceTree = "<group>"; };
+		B42893864AA904371053A6855998F1DE /* FirebaseMessaging.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = FirebaseMessaging.modulemap; sourceTree = "<group>"; };
+		B42FA772FD30F8B5837F10995D2A171C /* AFError.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = AFError.swift; path = Source/AFError.swift; sourceTree = "<group>"; };
 		B43874C6CBB50E7134FBEC24BABFE14F /* GoogleUtilities */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; name = GoogleUtilities; path = GoogleUtilities.framework; sourceTree = BUILT_PRODUCTS_DIR; };
-		B49D36688B4E2CC488F9617586137363 /* ScrollingFollowView-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "ScrollingFollowView-umbrella.h"; sourceTree = "<group>"; };
-		B4B8099B2A03D7994DA634BF9C3EC8D8 /* SwiftMessages-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "SwiftMessages-Info.plist"; sourceTree = "<group>"; };
-		B4E0A4E0D393D02C6B63DEF41C47BCCB /* GoogleDataTransport.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = GoogleDataTransport.release.xcconfig; sourceTree = "<group>"; };
-		B4EA01E664CC7E8BDDC0E30A06370EA0 /* PagingViewControllerInfiniteDataSource.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingViewControllerInfiniteDataSource.swift; path = Parchment/Protocols/PagingViewControllerInfiniteDataSource.swift; sourceTree = "<group>"; };
-		B54D7C4933120FE1208FFD70EB56C3DC /* SDImageCodersManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageCodersManager.m; path = SDWebImage/Core/SDImageCodersManager.m; sourceTree = "<group>"; };
-		B577364D6AFC1E66172F25CB1074410B /* GULSceneDelegateSwizzler.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULSceneDelegateSwizzler.h; path = GoogleUtilities/AppDelegateSwizzler/Public/GoogleUtilities/GULSceneDelegateSwizzler.h; sourceTree = "<group>"; };
-		B599B1FE91900AA47BE4871A4EEE0155 /* CTCoverViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTCoverViewController.m; path = CleverTapSDK/InApps/CTCoverViewController.m; sourceTree = "<group>"; };
-		B5BD97286C8C7B42CBC1496E96A541CB /* SDImageIOCoder.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageIOCoder.m; path = SDWebImage/Core/SDImageIOCoder.m; sourceTree = "<group>"; };
-		B61CEB697DFBF15606B424CF5C89B00F /* CleverTapInAppNotificationDelegate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTapInAppNotificationDelegate.h; path = CleverTapSDK/CleverTapInAppNotificationDelegate.h; sourceTree = "<group>"; };
-		B630050E88D825BE7E5E7086BBAAA640 /* HTTPHeaders.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = HTTPHeaders.swift; path = Source/HTTPHeaders.swift; sourceTree = "<group>"; };
-		B654495B8C321B40B2AE97E9B2504B93 /* GoogleUtilities-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "GoogleUtilities-umbrella.h"; sourceTree = "<group>"; };
-		B664672DF9AAEA47420CBE49AF2463D4 /* MarginAdjustable.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = MarginAdjustable.swift; path = SwiftMessages/MarginAdjustable.swift; sourceTree = "<group>"; };
-		B6A263741C9017DF5BA30FEFF69F6649 /* CleverTapURLDelegate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTapURLDelegate.h; path = CleverTapSDK/CleverTapURLDelegate.h; sourceTree = "<group>"; };
+		B46F1CF71B02E779BE0CE538EE606D5E /* errorIconSubtle.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = errorIconSubtle.png; path = SwiftMessages/Resources/errorIconSubtle.png; sourceTree = "<group>"; };
+		B4B5B6C948CEB64F26CF9868558D1ED5 /* FIRInstallationsErrorUtil.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsErrorUtil.h; path = FirebaseInstallations/Source/Library/Errors/FIRInstallationsErrorUtil.h; sourceTree = "<group>"; };
+		B4C37A71F8B6C5EDFE241432F8F8F00F /* CTDeviceInfo.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTDeviceInfo.m; path = CleverTapSDK/CTDeviceInfo.m; sourceTree = "<group>"; };
+		B4D06E82E649EFD16EFA1623522AAB09 /* WindowViewController.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = WindowViewController.swift; path = SwiftMessages/WindowViewController.swift; sourceTree = "<group>"; };
+		B4D6EE000A0751F6CD9A0759BE81E9DF /* SDWebImageTransition.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageTransition.h; path = SDWebImage/Core/SDWebImageTransition.h; sourceTree = "<group>"; };
+		B4E337745488943D7696563EB4F0728D /* successIcon.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = successIcon.png; path = SwiftMessages/Resources/successIcon.png; sourceTree = "<group>"; };
+		B4E842C465B5B2FEA3F98E2A987334EB /* XLPagerTabStrip.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = XLPagerTabStrip.release.xcconfig; sourceTree = "<group>"; };
+		B57A24CE4FB67F9F1242DF33E05A408B /* FBLPromise+Do.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Do.h"; path = "Sources/FBLPromises/include/FBLPromise+Do.h"; sourceTree = "<group>"; };
+		B59AF08D6EA4DB230212564951F098FA /* UIEdgeInsets.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = UIEdgeInsets.swift; path = Parchment/Extensions/UIEdgeInsets.swift; sourceTree = "<group>"; };
+		B5AE1BE59422B53142C1F2E0214CD610 /* FIRCLSNetworkResponseHandler.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSNetworkResponseHandler.h; path = Crashlytics/Shared/FIRCLSNetworking/FIRCLSNetworkResponseHandler.h; sourceTree = "<group>"; };
+		B5B8DBE83A77DCFE1F9B45D813182DEA /* ScrollingFollowView-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "ScrollingFollowView-Info.plist"; sourceTree = "<group>"; };
+		B5C951E580F57F50F8E1AA4C7B8E7169 /* FIRCrashlyticsReport_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCrashlyticsReport_Private.h; path = Crashlytics/Crashlytics/Private/FIRCrashlyticsReport_Private.h; sourceTree = "<group>"; };
+		B5CABFCCB55360EEADD3B61E2CB7EF4B /* FBLPromise+Recover.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Recover.h"; path = "Sources/FBLPromises/include/FBLPromise+Recover.h"; sourceTree = "<group>"; };
+		B60C0AEFBDD87F60170C914C0C921532 /* PromisesObjC.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = PromisesObjC.modulemap; sourceTree = "<group>"; };
+		B672DD1F47ADD7BB6AAE8A75E6118078 /* FIRCLSRecordApplication.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSRecordApplication.m; path = Crashlytics/Crashlytics/Models/Record/FIRCLSRecordApplication.m; sourceTree = "<group>"; };
+		B6937A1363783BBDE2A241AD04E39E5C /* SDWebImageManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageManager.h; path = SDWebImage/Core/SDWebImageManager.h; sourceTree = "<group>"; };
+		B6C22DCEA4BD90A8D0260E41C403578B /* FIRHeartbeatInfo.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRHeartbeatInfo.h; path = FirebaseCore/Sources/Private/FIRHeartbeatInfo.h; sourceTree = "<group>"; };
+		B6DA84841AE0CBE101E4CE4B1B2CF0A8 /* CTBaseHeaderFooterViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTBaseHeaderFooterViewController.h; path = CleverTapSDK/InApps/CTBaseHeaderFooterViewController.h; sourceTree = "<group>"; };
+		B6EF61D47A870DFF36A42ADFE0742403 /* FIRComponent.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRComponent.m; path = FirebaseCore/Sources/FIRComponent.m; sourceTree = "<group>"; };
+		B70D7C55A7F1473AFCB7F80BFE6962C1 /* successIconLight.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = successIconLight.png; path = SwiftMessages/Resources/successIconLight.png; sourceTree = "<group>"; };
+		B71407694A0F8035B64808555496F341 /* FIRAppInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRAppInternal.h; path = FirebaseCore/Sources/Private/FIRAppInternal.h; sourceTree = "<group>"; };
 		B732A56AC4EAB244F5E819E7DA7BBFC9 /* Pods-OpenBook-frameworks.sh */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.script.sh; path = "Pods-OpenBook-frameworks.sh"; sourceTree = "<group>"; };
-		B739D9595B02A6543342082ACE2A4636 /* CleverTapUTMDetail.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTapUTMDetail.m; path = CleverTapSDK/CleverTapUTMDetail.m; sourceTree = "<group>"; };
-		B740361408CBA391F8A2D2C219DE2438 /* GDTCOREndpoints_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCOREndpoints_Private.h; path = GoogleDataTransport/GDTCORLibrary/Private/GDTCOREndpoints_Private.h; sourceTree = "<group>"; };
-		B75D4CD64E3C06A1EF21009F2278C11D /* SDWebImageIndicator.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageIndicator.m; path = SDWebImage/Core/SDWebImageIndicator.m; sourceTree = "<group>"; };
-		B7D97B13EA1201A430CC35B10031F9E4 /* ct_default_video.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = ct_default_video.png; path = CleverTapSDK/Inbox/resources/ct_default_video.png; sourceTree = "<group>"; };
-		B84C3E7598D801D37DE0E3C039594D52 /* PagingSizeCache.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingSizeCache.swift; path = Parchment/Classes/PagingSizeCache.swift; sourceTree = "<group>"; };
-		B90205993364995A78A38ACDFE449499 /* FIRLibrary.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRLibrary.h; path = FirebaseCore/Sources/Private/FIRLibrary.h; sourceTree = "<group>"; };
-		B92B8E8CCF020B4DFC0F9A5508BDD4B2 /* FIRCLSDemangleOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSDemangleOperation.h; path = Crashlytics/Crashlytics/Operations/Symbolication/FIRCLSDemangleOperation.h; sourceTree = "<group>"; };
-		B9514E98D070927B794A7DCE91BEC351 /* SDImageIOAnimatedCoder.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageIOAnimatedCoder.m; path = SDWebImage/Core/SDImageIOAnimatedCoder.m; sourceTree = "<group>"; };
-		B99952FFFFCCF1339CB4381C2B2FFD5F /* FIRComponentType.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRComponentType.m; path = FirebaseCore/Sources/FIRComponentType.m; sourceTree = "<group>"; };
-		B9D8307154625CB5623407784264A9F4 /* UIImage+Transform.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIImage+Transform.m"; path = "SDWebImage/Core/UIImage+Transform.m"; sourceTree = "<group>"; };
-		B9D9671DB4D5382C5B565FC82ED10588 /* FirebaseAnalytics.xcframework */ = {isa = PBXFileReference; includeInIndex = 1; name = FirebaseAnalytics.xcframework; path = Frameworks/FirebaseAnalytics.xcframework; sourceTree = "<group>"; };
-		BA098CF4507C82BA86F6FEB4C05B0063 /* PageViewDirection.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PageViewDirection.swift; path = Parchment/Enums/PageViewDirection.swift; sourceTree = "<group>"; };
-		BA0DF4012A80B1DCC3B101C6A9A0963C /* GULReachabilityChecker.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULReachabilityChecker.h; path = GoogleUtilities/Reachability/Public/GoogleUtilities/GULReachabilityChecker.h; sourceTree = "<group>"; };
-		BA19AA33BA511990A545A2B0152E25E5 /* pb_encode.c */ = {isa = PBXFileReference; includeInIndex = 1; path = pb_encode.c; sourceTree = "<group>"; };
-		BA58B6AD486F00AA91DFCF5D34F396B0 /* GDTCORPlatform.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORPlatform.h; path = GoogleDataTransport/GDTCORLibrary/Internal/GDTCORPlatform.h; sourceTree = "<group>"; };
-		BA807E41EFBCEC6052E2AB4349831591 /* SDDeviceHelper.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDDeviceHelper.h; path = SDWebImage/Private/SDDeviceHelper.h; sourceTree = "<group>"; };
-		BA8F589056E7F0AE3432CC7FBCD59E9B /* OTPFieldView.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = OTPFieldView.modulemap; sourceTree = "<group>"; };
-		BAB569F16D887D6DEB7F3A98EC7BA03B /* CTInterstitialImageViewController~ipad.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTInterstitialImageViewController~ipad.xib"; path = "CleverTapSDK/InApps/resources/CTInterstitialImageViewController~ipad.xib"; sourceTree = "<group>"; };
-		BB15A04517F303A1D38CC4EB6BB2E6C6 /* AccessibleMessage.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = AccessibleMessage.swift; path = SwiftMessages/AccessibleMessage.swift; sourceTree = "<group>"; };
-		BB462A701620C7D115B52335CCDABDC4 /* FloatingPanel-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "FloatingPanel-prefix.pch"; sourceTree = "<group>"; };
-		BB5D124F4716B0BA0EE714A1763F7E39 /* SDWebImageOptionsProcessor.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageOptionsProcessor.h; path = SDWebImage/Core/SDWebImageOptionsProcessor.h; sourceTree = "<group>"; };
-		BB617648B6A168E17E0DD60699480B63 /* IQKeyboardManagerSwift.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = IQKeyboardManagerSwift.release.xcconfig; sourceTree = "<group>"; };
-		BB7113D45B7CA4D01D52DDDE4F438EA1 /* FIRCoreDiagnosticsData.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCoreDiagnosticsData.h; path = Interop/CoreDiagnostics/Public/FIRCoreDiagnosticsData.h; sourceTree = "<group>"; };
-		BB873B0C48D9DB5373539A3D30C03B2A /* errorIconSubtle@3x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "errorIconSubtle@3x.png"; path = "SwiftMessages/Resources/errorIconSubtle@3x.png"; sourceTree = "<group>"; };
-		BB96493DB80BC929B0C4953144A2EFD1 /* FIRCLSApplication.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSApplication.m; path = Crashlytics/Crashlytics/Components/FIRCLSApplication.m; sourceTree = "<group>"; };
-		BB96D8862AB6DEAC3171A9D1D9FD45D6 /* SDImageHEICCoder.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageHEICCoder.h; path = SDWebImage/Core/SDImageHEICCoder.h; sourceTree = "<group>"; };
-		BB9F0624D8002399E818C9E453F05331 /* errorIconSubtle.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = errorIconSubtle.png; path = SwiftMessages/Resources/errorIconSubtle.png; sourceTree = "<group>"; };
-		BBC2D5ADBC6C94CD93F6F0F9ADB32AAD /* FIRCrashlytics.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCrashlytics.m; path = Crashlytics/Crashlytics/FIRCrashlytics.m; sourceTree = "<group>"; };
+		B778F4591A7B516DBCEB1F52CE5CD418 /* UIView+CTToast.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIView+CTToast.m"; path = "CleverTapSDK/Inbox/views/UIView+CTToast.m"; sourceTree = "<group>"; };
+		B79CB94D58DB7969CB483288F070EC32 /* Error.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Error.swift; path = SwiftMessages/Error.swift; sourceTree = "<group>"; };
+		B7E7CEBCCC3961A8F387BCFB258C5C3F /* CTBaseHeaderFooterViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTBaseHeaderFooterViewController.m; path = CleverTapSDK/InApps/CTBaseHeaderFooterViewController.m; sourceTree = "<group>"; };
+		B879EC1C1AE9F5A79D7B0D2F62F5F9E7 /* Extensions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Extensions.swift; path = Sources/Extensions.swift; sourceTree = "<group>"; };
+		B8A7E4909001B056B4FC6ADAFEBD45F8 /* ScrollingFollowView-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "ScrollingFollowView-umbrella.h"; sourceTree = "<group>"; };
+		B8CE77F2FECAAF1B074BFF49D897441A /* CleverTapInboxMessageContent.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTapInboxMessageContent.m; path = CleverTapSDK/Inbox/models/CleverTapInboxMessageContent.m; sourceTree = "<group>"; };
+		B90F08318CEA7128A5FE1FADA5514B15 /* UIImageView+HighlightedWebCache.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIImageView+HighlightedWebCache.m"; path = "SDWebImage/Core/UIImageView+HighlightedWebCache.m"; sourceTree = "<group>"; };
+		B92CE8AA08FDDA5D582BB8DAECE0D6C6 /* SwiftMessages-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "SwiftMessages-umbrella.h"; sourceTree = "<group>"; };
+		B96887F917A1A6F204BA5504597642A5 /* PagingTransition.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingTransition.swift; path = Parchment/Structs/PagingTransition.swift; sourceTree = "<group>"; };
+		B989619D86415C94F6FA58D5B9033008 /* FIRCLSFABNetworkClient.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSFABNetworkClient.h; path = Crashlytics/Shared/FIRCLSNetworking/FIRCLSFABNetworkClient.h; sourceTree = "<group>"; };
+		BA0D3FECC53BE39845E9ECD6B61E2615 /* GULUserDefaults.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULUserDefaults.m; path = GoogleUtilities/UserDefaults/GULUserDefaults.m; sourceTree = "<group>"; };
+		BA934F57ECA230A357ADD82CFF2B6B98 /* SDWebImageError.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageError.m; path = SDWebImage/Core/SDWebImageError.m; sourceTree = "<group>"; };
+		BAD41434D5637C38E35DD97234EEF20F /* GoogleUtilities.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = GoogleUtilities.release.xcconfig; sourceTree = "<group>"; };
+		BB1D70F3BB1D1BAD433DA9D3BE3E7EA8 /* FIRCLSManagerData.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSManagerData.m; path = Crashlytics/Crashlytics/Controllers/FIRCLSManagerData.m; sourceTree = "<group>"; };
+		BB986A7CD435F5F2CD388CADC8B6C1D3 /* FIRLibrary.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRLibrary.h; path = FirebaseCore/Sources/Private/FIRLibrary.h; sourceTree = "<group>"; };
+		BBCFC2FA53F5D7599F000308309A1E7C /* UIImage+Metadata.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIImage+Metadata.h"; path = "SDWebImage/Core/UIImage+Metadata.h"; sourceTree = "<group>"; };
+		BBE02FF646366491B61386699D63DF3A /* GDTCORTargets.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORTargets.h; path = GoogleDataTransport/GDTCORLibrary/Public/GoogleDataTransport/GDTCORTargets.h; sourceTree = "<group>"; };
 		BC9697B5ADF3FE65E9F98359286A5698 /* Pods-OpenBook-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "Pods-OpenBook-Info.plist"; sourceTree = "<group>"; };
-		BCA8A1D82F4DB1C41D38CC50053347DF /* CTCertificatePinning.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTCertificatePinning.m; path = CleverTapSDK/CTCertificatePinning.m; sourceTree = "<group>"; };
-		BCB16C6BDF7364F9A45E87474A157C3D /* FIRCLSFABNetworkClient.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSFABNetworkClient.m; path = Crashlytics/Shared/FIRCLSNetworking/FIRCLSFABNetworkClient.m; sourceTree = "<group>"; };
-		BCB9FED070EBA3AE0A9A26634E70DF3D /* CTFooterViewController~iphoneport.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTFooterViewController~iphoneport.xib"; path = "CleverTapSDK/InApps/resources/CTFooterViewController~iphoneport.xib"; sourceTree = "<group>"; };
-		BD77FD8C7229889F47A4D79803F59DD7 /* FIRMessagingSyncMessageManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingSyncMessageManager.m; path = FirebaseMessaging/Sources/FIRMessagingSyncMessageManager.m; sourceTree = "<group>"; };
-		BD7CC3D4767C35B2E2A928F17EF10F05 /* ScrollingFollowView-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "ScrollingFollowView-dummy.m"; sourceTree = "<group>"; };
-		BD81C09B15F101B235C2A45BEE1339E7 /* FirebaseCoreInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FirebaseCoreInternal.h; path = FirebaseCore/Sources/Private/FirebaseCoreInternal.h; sourceTree = "<group>"; };
+		BCA50FDF0477D18B39E5996C5FF1C3D2 /* UIImage+MultiFormat.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIImage+MultiFormat.h"; path = "SDWebImage/Core/UIImage+MultiFormat.h"; sourceTree = "<group>"; };
+		BCF32232117D9DABBF7DCC3F23632E0D /* CachedResponseHandler.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = CachedResponseHandler.swift; path = Source/CachedResponseHandler.swift; sourceTree = "<group>"; };
+		BD9E974E79FD851E241F31C55472E31A /* FIRCLSMultipartMimeStreamEncoder.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSMultipartMimeStreamEncoder.m; path = Crashlytics/Shared/FIRCLSNetworking/FIRCLSMultipartMimeStreamEncoder.m; sourceTree = "<group>"; };
+		BDC070F9E9D17369DA255E60ADA1F57A /* SDImageFrame.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageFrame.m; path = SDWebImage/Core/SDImageFrame.m; sourceTree = "<group>"; };
 		BDD18ACB625B597CC06D7006C44D7FE5 /* Parchment */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; name = Parchment; path = Parchment.framework; sourceTree = BUILT_PRODUCTS_DIR; };
 		BDF31731A49B9A1CCC27A6A3B4306075 /* Pods-OpenBook.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = "Pods-OpenBook.release.xcconfig"; sourceTree = "<group>"; };
-		BE0D6D88D3B65ED7387D33ED0C3CDFD5 /* Parchment-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "Parchment-Info.plist"; sourceTree = "<group>"; };
-		BE25C259424B1D8032D0F1442C0CA5FB /* CTFooterViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTFooterViewController.m; path = CleverTapSDK/InApps/CTFooterViewController.m; sourceTree = "<group>"; };
-		BE5BEE7E7B9D95349E1C4D522BCF5EF0 /* GDTCORConsoleLogger.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORConsoleLogger.h; path = GoogleDataTransport/GDTCORLibrary/Public/GoogleDataTransport/GDTCORConsoleLogger.h; sourceTree = "<group>"; };
-		BE927A70AEB4C69DCE02FB0522907B23 /* FIRCLSRecordHost.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSRecordHost.m; path = Crashlytics/Crashlytics/Models/Record/FIRCLSRecordHost.m; sourceTree = "<group>"; };
-		BEA5821C1BFCD6DD6B1DC05E8FFBDFA9 /* GDTCOREvent+GDTCCTSupport.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "GDTCOREvent+GDTCCTSupport.h"; path = "GoogleDataTransport/GDTCCTLibrary/Public/GDTCOREvent+GDTCCTSupport.h"; sourceTree = "<group>"; };
-		BED335FBAE7175751880FAB9331A608C /* FIRLoggerLevel.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRLoggerLevel.h; path = FirebaseCore/Sources/Public/FirebaseCore/FIRLoggerLevel.h; sourceTree = "<group>"; };
-		BF53FE4ECF5BD02A6858BE57469E473C /* UIView+CTToast.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIView+CTToast.h"; path = "CleverTapSDK/Inbox/views/UIView+CTToast.h"; sourceTree = "<group>"; };
-		BF56C48CA3C04A987EF9C7987B2293BF /* FIRMessagingLogger.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingLogger.m; path = FirebaseMessaging/Sources/FIRMessagingLogger.m; sourceTree = "<group>"; };
-		BFEFAC856E0DF52FE88A00404E496A87 /* GULNetworkMessageCode.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULNetworkMessageCode.h; path = GoogleUtilities/Network/Public/GoogleUtilities/GULNetworkMessageCode.h; sourceTree = "<group>"; };
-		C01E39F6A9F1F8B96313AA88D8B66336 /* SDAnimatedImageView.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDAnimatedImageView.m; path = SDWebImage/Core/SDAnimatedImageView.m; sourceTree = "<group>"; };
-		C02D5C472AFAD6490490FF1B3B5284F7 /* FIRHeartbeatInfo.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRHeartbeatInfo.h; path = FirebaseCore/Sources/Private/FIRHeartbeatInfo.h; sourceTree = "<group>"; };
-		C036B331555009735B7AE1B4A7BE9F9C /* FIRComponentType.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRComponentType.h; path = FirebaseCore/Sources/Private/FIRComponentType.h; sourceTree = "<group>"; };
-		C06F55269FE297F8B9A981B1E0A9C70D /* SDAssociatedObject.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDAssociatedObject.h; path = SDWebImage/Private/SDAssociatedObject.h; sourceTree = "<group>"; };
-		C0C10C1F39975002B7550267F7DAB512 /* FIRCLSMachOBinary.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSMachOBinary.h; path = Crashlytics/Shared/FIRCLSMachO/FIRCLSMachOBinary.h; sourceTree = "<group>"; };
-		C0CF7C5E30B8C78F191D582B90DE7343 /* CTInboxIconMessageCell~land.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTInboxIconMessageCell~land.xib"; path = "CleverTapSDK/Inbox/resources/CTInboxIconMessageCell~land.xib"; sourceTree = "<group>"; };
-		C0D1D731B883544F59CD54AE4B60EF4F /* PagingItems.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingItems.swift; path = Parchment/Structs/PagingItems.swift; sourceTree = "<group>"; };
-		C0EACE32EC497755197764D655F2B6E2 /* UserExperiorSDK.xcframework */ = {isa = PBXFileReference; includeInIndex = 1; path = UserExperiorSDK.xcframework; sourceTree = "<group>"; };
-		C12C155811E12F969887E1AF566F9FA4 /* CleverTap+SSLPinning.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "CleverTap+SSLPinning.h"; path = "CleverTapSDK/CleverTap+SSLPinning.h"; sourceTree = "<group>"; };
-		C1637780844F15EBBB583D5A0C97F8CF /* CTDismissButton.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTDismissButton.h; path = CleverTapSDK/InApps/CTDismissButton.h; sourceTree = "<group>"; };
-		C205FCB6C3CDFA83FAC19623D3C217B2 /* infoIconLight@3x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "infoIconLight@3x.png"; path = "SwiftMessages/Resources/infoIconLight@3x.png"; sourceTree = "<group>"; };
-		C21CDF5DEE8144AC10518D874970659F /* FIRCLSThreadArrayOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSThreadArrayOperation.h; path = Crashlytics/Crashlytics/Operations/Symbolication/FIRCLSThreadArrayOperation.h; sourceTree = "<group>"; };
-		C240847CF85DE0D09AD836AB7C810B89 /* PagingViewController.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingViewController.swift; path = Parchment/Classes/PagingViewController.swift; sourceTree = "<group>"; };
-		C249D796D2C7B67F92E96A300FBDB866 /* OTPFieldView.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = OTPFieldView.h; path = OTPFieldView/OTPFieldView.h; sourceTree = "<group>"; };
-		C27C55DAC0875ADBF8746087AF0A6722 /* OperationQueue+Alamofire.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "OperationQueue+Alamofire.swift"; path = "Source/OperationQueue+Alamofire.swift"; sourceTree = "<group>"; };
-		C28DCE3FE9EEDC182E6C509BFF86581B /* SDImageCacheConfig.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageCacheConfig.m; path = SDWebImage/Core/SDImageCacheConfig.m; sourceTree = "<group>"; };
-		C2EBFA6F43EBE088EA9BD60BDD23AA9D /* errorIcon@3x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "errorIcon@3x.png"; path = "SwiftMessages/Resources/errorIcon@3x.png"; sourceTree = "<group>"; };
-		C369CED5F620B86F92CE2A45D9387E3F /* FIRCLSLogger.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSLogger.h; path = Crashlytics/Crashlytics/Helpers/FIRCLSLogger.h; sourceTree = "<group>"; };
-		C37742B99752EFDAFF2B53668ADEAF2F /* CTCarouselMessageCell~land.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTCarouselMessageCell~land.xib"; path = "CleverTapSDK/Inbox/resources/CTCarouselMessageCell~land.xib"; sourceTree = "<group>"; };
-		C3954D0B6904DE628FC5CA3EA946EDB4 /* FIRMessagingExtensionHelper.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingExtensionHelper.h; path = FirebaseMessaging/Sources/Public/FirebaseMessaging/FIRMessagingExtensionHelper.h; sourceTree = "<group>"; };
-		C3C8FD63AD41103CFFA2316E189A313B /* FIRCLSInstallIdentifierModel.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSInstallIdentifierModel.h; path = Crashlytics/Crashlytics/Models/FIRCLSInstallIdentifierModel.h; sourceTree = "<group>"; };
-		C3E3761BBCB4B2BDA008444208BB9D14 /* nanopb.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = nanopb.modulemap; sourceTree = "<group>"; };
-		C41BF03B42A9CED5B799F7931D49FCB3 /* CTHalfInterstitialImageViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTHalfInterstitialImageViewController.m; path = CleverTapSDK/InApps/CTHalfInterstitialImageViewController.m; sourceTree = "<group>"; };
-		C46D837C0E9A07F1DC29CBB9A06517F3 /* PagingMenuItemSize.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingMenuItemSize.swift; path = Parchment/Enums/PagingMenuItemSize.swift; sourceTree = "<group>"; };
-		C470E3018E1258C523008B60114D67FC /* Alamofire-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "Alamofire-Info.plist"; sourceTree = "<group>"; };
-		C47C50BD6C1BB1F8EF0928E0F3608A71 /* Transitioning.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Transitioning.swift; path = Sources/Transitioning.swift; sourceTree = "<group>"; };
-		C4920EAA85FB12FABB705C3D2938A565 /* FIROptionsInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIROptionsInternal.h; path = FirebaseCore/Sources/Private/FIROptionsInternal.h; sourceTree = "<group>"; };
-		C4B1F0FA204CB08919ACF3C8D211ABEE /* FIRCLSMachO.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSMachO.m; path = Crashlytics/Shared/FIRCLSMachO/FIRCLSMachO.m; sourceTree = "<group>"; };
-		C4BC67AADD9D70A9E0EEDB48EA3E8996 /* SDWebImagePrefetcher.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImagePrefetcher.m; path = SDWebImage/Core/SDWebImagePrefetcher.m; sourceTree = "<group>"; };
-		C4C568C303C88E83A5FD67B95A5010B7 /* GDTCORPlatform.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCORPlatform.m; path = GoogleDataTransport/GDTCORLibrary/GDTCORPlatform.m; sourceTree = "<group>"; };
-		C5029FFE97B99DDB841E6AE4B16BA8CA /* FIRCLSConstants.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSConstants.h; path = Crashlytics/Shared/FIRCLSConstants.h; sourceTree = "<group>"; };
-		C50C1EE0BC3F280DC2D77F32FDE45CA6 /* SwiftMessages.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = SwiftMessages.swift; path = SwiftMessages/SwiftMessages.swift; sourceTree = "<group>"; };
-		C59BCC9486E886FB159887927CB7BC9E /* FBLPromise+Timeout.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Timeout.m"; path = "Sources/FBLPromises/FBLPromise+Timeout.m"; sourceTree = "<group>"; };
-		C59D442781140D05BF43860E77AC02C5 /* GDTCCTNanopbHelpers.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCCTNanopbHelpers.h; path = GoogleDataTransport/GDTCCTLibrary/Private/GDTCCTNanopbHelpers.h; sourceTree = "<group>"; };
-		C5DB1C51337BCC893796386425FE6125 /* GDTCOREvent_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCOREvent_Private.h; path = GoogleDataTransport/GDTCORLibrary/Private/GDTCOREvent_Private.h; sourceTree = "<group>"; };
-		C60C0C18E077BEEE2296990DFB3B1B4E /* CTCoverImageViewController~ipad.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTCoverImageViewController~ipad.xib"; path = "CleverTapSDK/InApps/resources/CTCoverImageViewController~ipad.xib"; sourceTree = "<group>"; };
-		C620389BB7A48EF31C6FD9C566AA2C5B /* FIRInteropEventNames.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInteropEventNames.h; path = Interop/Analytics/Public/FIRInteropEventNames.h; sourceTree = "<group>"; };
-		C6759E39ED9C04C430EFF0CDC2C3F35D /* GULReachabilityChecker+Internal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "GULReachabilityChecker+Internal.h"; path = "GoogleUtilities/Reachability/GULReachabilityChecker+Internal.h"; sourceTree = "<group>"; };
-		C68612371C3345685BE0D3657382192C /* CleverTapEventDetail.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTapEventDetail.h; path = CleverTapSDK/CleverTapEventDetail.h; sourceTree = "<group>"; };
-		C6DD7DCCAFCE1A20C07D96E91B4A4436 /* FIRInstallations.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallations.h; path = FirebaseInstallations/Source/Library/Public/FirebaseInstallations/FIRInstallations.h; sourceTree = "<group>"; };
-		C7ABB3B35D529DDDF5D476CBCF50A8A1 /* GoogleUtilities-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "GoogleUtilities-Info.plist"; sourceTree = "<group>"; };
-		C7CF2A927325D677C74A1252DDF9DBD8 /* CTHalfInterstitialImageViewController~ipadland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTHalfInterstitialImageViewController~ipadland.xib"; path = "CleverTapSDK/InApps/resources/CTHalfInterstitialImageViewController~ipadland.xib"; sourceTree = "<group>"; };
-		C7FDAAD23A9F1C0007BA0B30786193CE /* FIRCLSDwarfExpressionMachine.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSDwarfExpressionMachine.h; path = Crashlytics/Crashlytics/Unwind/Dwarf/FIRCLSDwarfExpressionMachine.h; sourceTree = "<group>"; };
-		C8617530BEC7B9D9725FCA23B90C21F1 /* FIRCLSFile.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSFile.m; path = Crashlytics/Crashlytics/Helpers/FIRCLSFile.m; sourceTree = "<group>"; };
-		C890FDEF500580702ADB2DB8913765BC /* CTInterstitialViewController~ipad.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTInterstitialViewController~ipad.xib"; path = "CleverTapSDK/InApps/resources/CTInterstitialViewController~ipad.xib"; sourceTree = "<group>"; };
-		C8ED0CA0EB9E1484BA355DC33DC9DAA1 /* FIRCLSAsyncOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSAsyncOperation.m; path = Crashlytics/Crashlytics/Operations/FIRCLSAsyncOperation.m; sourceTree = "<group>"; };
-		C90EFA0F9CD3945BF7A333A61172809C /* CTInAppDisplayViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTInAppDisplayViewController.m; path = CleverTapSDK/CTInAppDisplayViewController.m; sourceTree = "<group>"; };
-		C917C8933A49E50D23B3566695681715 /* FIRInstallationsItem.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallationsItem.m; path = FirebaseInstallations/Source/Library/FIRInstallationsItem.m; sourceTree = "<group>"; };
-		C946F86246FA4CD309365664A5E15AB1 /* Notifications.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Notifications.swift; path = Source/Notifications.swift; sourceTree = "<group>"; };
-		C968FF2570A9B9B1003219C89BEB7616 /* firebasecore.nanopb.c */ = {isa = PBXFileReference; includeInIndex = 1; name = firebasecore.nanopb.c; path = Firebase/CoreDiagnostics/FIRCDLibrary/Protogen/nanopb/firebasecore.nanopb.c; sourceTree = "<group>"; };
-		C9BCF3C46016439498328D0C3342FDEB /* CardView.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = CardView.xib; path = SwiftMessages/Resources/CardView.xib; sourceTree = "<group>"; };
-		C9D2DD8BA626C50B702D0CF3B4089851 /* FBLPromise+Then.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Then.h"; path = "Sources/FBLPromises/include/FBLPromise+Then.h"; sourceTree = "<group>"; };
-		CA1CE06F528FAF5306DC64C769AC38DC /* SDWebImageDownloader.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageDownloader.m; path = SDWebImage/Core/SDWebImageDownloader.m; sourceTree = "<group>"; };
-		CA451C5D09C7D317C3FDAAEE98A21093 /* FIRCLSUnwind_x86.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSUnwind_x86.c; path = Crashlytics/Crashlytics/Unwind/FIRCLSUnwind_x86.c; sourceTree = "<group>"; };
-		CA57BCE42C48DD1B5C5BC938F40144E2 /* FIRCLSRecordBase.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSRecordBase.m; path = Crashlytics/Crashlytics/Models/Record/FIRCLSRecordBase.m; sourceTree = "<group>"; };
-		CA5ED9824AB0FE290C87D118069781E3 /* FIRMessagingTokenInfo.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingTokenInfo.h; path = FirebaseMessaging/Sources/Token/FIRMessagingTokenInfo.h; sourceTree = "<group>"; };
-		CA71E94E5F96DD62381A6E47013C5391 /* Parchment.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = Parchment.debug.xcconfig; sourceTree = "<group>"; };
-		CAE4355C71122E92E7FE27BCE22075DC /* BarPagerTabStripViewController.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = BarPagerTabStripViewController.swift; path = Sources/BarPagerTabStripViewController.swift; sourceTree = "<group>"; };
-		CB1A77E88850B1D902F3CDBA6571B7B3 /* CTInboxSimpleMessageCell~land.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTInboxSimpleMessageCell~land.xib"; path = "CleverTapSDK/Inbox/resources/CTInboxSimpleMessageCell~land.xib"; sourceTree = "<group>"; };
-		CBA2F9D2D3F8169AFD2FD52EB9676ACA /* Controller.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Controller.swift; path = Sources/Controller.swift; sourceTree = "<group>"; };
-		CBCB9ADBA97088291F8E154B4FE36AB2 /* SDImageFrame.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageFrame.h; path = SDWebImage/Core/SDImageFrame.h; sourceTree = "<group>"; };
-		CBCD9098276BD32832002FBA59C5ECF6 /* CTUserMO+CoreDataProperties.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "CTUserMO+CoreDataProperties.h"; path = "CleverTapSDK/Inbox/models/CTUserMO+CoreDataProperties.h"; sourceTree = "<group>"; };
-		CC26A8E447AAB7CF51FEF426E335CB3F /* UIImage+Metadata.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIImage+Metadata.m"; path = "SDWebImage/Core/UIImage+Metadata.m"; sourceTree = "<group>"; };
-		CC754D32ECF02FCAAD7A7A08B578B260 /* GULKeychainStorage.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULKeychainStorage.h; path = GoogleUtilities/Environment/Public/GoogleUtilities/GULKeychainStorage.h; sourceTree = "<group>"; };
+		BE35C6ED2D0716C6000AC37D258AE0D2 /* SDImageTransformer.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageTransformer.h; path = SDWebImage/Core/SDImageTransformer.h; sourceTree = "<group>"; };
+		BE7D1BBB2E2E79889115EF5304C4AAAD /* GULHeartbeatDateStorable.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULHeartbeatDateStorable.h; path = GoogleUtilities/Environment/Public/GoogleUtilities/GULHeartbeatDateStorable.h; sourceTree = "<group>"; };
+		BE980061605D7F51A8A4BADAA9BF17D0 /* CTCoverImageViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTCoverImageViewController.h; path = CleverTapSDK/InApps/CTCoverImageViewController.h; sourceTree = "<group>"; };
+		BEE034AAF1B23D5E08D0338E82541CE1 /* CTInterstitialViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTInterstitialViewController.h; path = CleverTapSDK/InApps/CTInterstitialViewController.h; sourceTree = "<group>"; };
+		BF779B2BD7C91D3BAF599B26EE2410CE /* FIRCLSCompactUnwind_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSCompactUnwind_Private.h; path = Crashlytics/Crashlytics/Unwind/Compact/FIRCLSCompactUnwind_Private.h; sourceTree = "<group>"; };
+		BF9482696EBE0CFFF7D442C652781D9C /* SDGraphicsImageRenderer.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDGraphicsImageRenderer.h; path = SDWebImage/Core/SDGraphicsImageRenderer.h; sourceTree = "<group>"; };
+		C062DAC18FA57B20568C60F79D33DBE6 /* FIRCLSMachOSlice.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSMachOSlice.m; path = Crashlytics/Shared/FIRCLSMachO/FIRCLSMachOSlice.m; sourceTree = "<group>"; };
+		C099E7F5D5840C3BDB3FA7FD602F34F9 /* CTMessageMO.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTMessageMO.m; path = CleverTapSDK/Inbox/models/CTMessageMO.m; sourceTree = "<group>"; };
+		C0BD82E7C8294EF017901B2316BEEE88 /* GDTCORClock.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORClock.h; path = GoogleDataTransport/GDTCORLibrary/Public/GoogleDataTransport/GDTCORClock.h; sourceTree = "<group>"; };
+		C0DEDE4F8A0F73EA05DB5FD3F92504D3 /* GULAppEnvironmentUtil.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULAppEnvironmentUtil.h; path = GoogleUtilities/Environment/Public/GoogleUtilities/GULAppEnvironmentUtil.h; sourceTree = "<group>"; };
+		C12FCD8CC2CA85CB5C152778FB1EE717 /* GULNSData+zlib.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "GULNSData+zlib.h"; path = "GoogleUtilities/NSData+zlib/Public/GoogleUtilities/GULNSData+zlib.h"; sourceTree = "<group>"; };
+		C1642A62C6B1625D142D6EA0D8FE929C /* CTMessageMO.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTMessageMO.h; path = CleverTapSDK/Inbox/models/CTMessageMO.h; sourceTree = "<group>"; };
+		C1A6B0C42A8EB5133836DFA9B74A9919 /* GDTCORUploadCoordinator.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCORUploadCoordinator.m; path = GoogleDataTransport/GDTCORLibrary/GDTCORUploadCoordinator.m; sourceTree = "<group>"; };
+		C272FD52F06D48EE30858AFC6E94C1C1 /* FIROptions.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIROptions.h; path = FirebaseCore/Sources/Public/FirebaseCore/FIROptions.h; sourceTree = "<group>"; };
+		C2AE1EC590B88A0032AB83911B486F62 /* PageViewState.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PageViewState.swift; path = Parchment/Enums/PageViewState.swift; sourceTree = "<group>"; };
+		C32D4F35505CE6EB1749562DC5BBFEC3 /* FIRCLSSettingsManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSSettingsManager.h; path = Crashlytics/Crashlytics/Settings/FIRCLSSettingsManager.h; sourceTree = "<group>"; };
+		C3629827915D8FB9631546E8BF8B71FD /* CTPlistInfo.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTPlistInfo.h; path = CleverTapSDK/CTPlistInfo.h; sourceTree = "<group>"; };
+		C38C87978E84A87BC1DC43B13AB2624D /* infoIconLight@2x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "infoIconLight@2x.png"; path = "SwiftMessages/Resources/infoIconLight@2x.png"; sourceTree = "<group>"; };
+		C3C3EC08DF96B282D53BB925A57C0738 /* CleverTap.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTap.m; path = CleverTapSDK/CleverTap.m; sourceTree = "<group>"; };
+		C3C84CEFA7D0D383BC507CA9F9B61D8E /* PagingCellViewModel.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingCellViewModel.swift; path = Parchment/Structs/PagingCellViewModel.swift; sourceTree = "<group>"; };
+		C43211FC56B503EC2907E2913213B308 /* firebasecore.nanopb.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = firebasecore.nanopb.h; path = Firebase/CoreDiagnostics/FIRCDLibrary/Protogen/nanopb/firebasecore.nanopb.h; sourceTree = "<group>"; };
+		C4750A50AB35D04BA2071B618556D64D /* GDTCORLifecycle.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORLifecycle.h; path = GoogleDataTransport/GDTCORLibrary/Internal/GDTCORLifecycle.h; sourceTree = "<group>"; };
+		C53E19C6221DC7A404EF1CD08520CB65 /* CTInAppDisplayViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTInAppDisplayViewController.h; path = CleverTapSDK/CTInAppDisplayViewController.h; sourceTree = "<group>"; };
+		C55E151EDE8921A13FCBF9EEA61EA996 /* SDWebImageDefine.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageDefine.h; path = SDWebImage/Core/SDWebImageDefine.h; sourceTree = "<group>"; };
+		C56CB6D9716847074976C6696925DD56 /* PagingStaticDataSource.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingStaticDataSource.swift; path = Parchment/Classes/PagingStaticDataSource.swift; sourceTree = "<group>"; };
+		C5FD8C023790B090F07FB6E3DE8B7339 /* warningIconSubtle.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = warningIconSubtle.png; path = SwiftMessages/Resources/warningIconSubtle.png; sourceTree = "<group>"; };
+		C61C4FB152630D54FC285D76E46C0A94 /* FIRCLSThreadState.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSThreadState.h; path = Crashlytics/Crashlytics/Helpers/FIRCLSThreadState.h; sourceTree = "<group>"; };
+		C62067F0C542D3CD718E1FE3E02F5770 /* FIRCLSCodeMapping.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSCodeMapping.h; path = Crashlytics/Shared/FIRCLSMachO/FIRCLSCodeMapping.h; sourceTree = "<group>"; };
+		C65A8331F06233EC900B1D8AD03DFB38 /* SDImageGIFCoder.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageGIFCoder.h; path = SDWebImage/Core/SDImageGIFCoder.h; sourceTree = "<group>"; };
+		C66192C29204895D397E3E3BA91D28FE /* SDWebImage-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "SDWebImage-prefix.pch"; sourceTree = "<group>"; };
+		C67B0B5A5050700A802602A2FAA3E4E4 /* IQKeyboardManager+UIKeyboardNotification.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "IQKeyboardManager+UIKeyboardNotification.swift"; path = "IQKeyboardManagerSwift/IQKeyboardManager+UIKeyboardNotification.swift"; sourceTree = "<group>"; };
+		C6A2961B2CC9F6787A17C0D08F45EDA3 /* GULKeychainUtils.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULKeychainUtils.h; path = GoogleUtilities/Environment/Public/GoogleUtilities/GULKeychainUtils.h; sourceTree = "<group>"; };
+		C6DD4783B189B50343A77AB941BB4BB6 /* FirebaseInstallationsInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FirebaseInstallationsInternal.h; path = FirebaseInstallations/Source/Library/Private/FirebaseInstallationsInternal.h; sourceTree = "<group>"; };
+		C707200F796DC80FA2DF53E9E7D2D40A /* RequestTaskMap.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = RequestTaskMap.swift; path = Source/RequestTaskMap.swift; sourceTree = "<group>"; };
+		C727E9EAA23402382A843AF24F8DCF95 /* GDTCORTransport.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORTransport.h; path = GoogleDataTransport/GDTCORLibrary/Public/GoogleDataTransport/GDTCORTransport.h; sourceTree = "<group>"; };
+		C72920E33F894FB94F1FFF84A4CC61FC /* warningIconSubtle@3x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "warningIconSubtle@3x.png"; path = "SwiftMessages/Resources/warningIconSubtle@3x.png"; sourceTree = "<group>"; };
+		C731E6387D356C31F8840C687B8BDF0E /* FIRStackFrame.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRStackFrame.h; path = Crashlytics/Crashlytics/Public/FirebaseCrashlytics/FIRStackFrame.h; sourceTree = "<group>"; };
+		C736A281BCA10CA1D7F2B2CE2FB82765 /* GoogleDataTransport.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = GoogleDataTransport.modulemap; sourceTree = "<group>"; };
+		C76E1F6674DCC16AB4A20B92604BCD24 /* FirebaseCrashlytics-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "FirebaseCrashlytics-Info.plist"; sourceTree = "<group>"; };
+		C7F444D81C9CEEE2EE13AD0066222860 /* GDTCORFlatFileStorage.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORFlatFileStorage.h; path = GoogleDataTransport/GDTCORLibrary/Private/GDTCORFlatFileStorage.h; sourceTree = "<group>"; };
+		C80B424D5F76A66C0E64A0B92C0EDC08 /* SwiftMessages.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = SwiftMessages.swift; path = SwiftMessages/SwiftMessages.swift; sourceTree = "<group>"; };
+		C843D97D17CF8D4DBC31E4274FF6C93E /* MultipartUpload.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = MultipartUpload.swift; path = Source/MultipartUpload.swift; sourceTree = "<group>"; };
+		C84A8C60205DA3206920D8315CA4204D /* ic_play@3x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "ic_play@3x.png"; path = "CleverTapSDK/Inbox/resources/ic_play@3x.png"; sourceTree = "<group>"; };
+		C89515E7E2C8B7A75DBE9B1ACA28FB56 /* FIRCLSRecordBase.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSRecordBase.h; path = Crashlytics/Crashlytics/Models/Record/FIRCLSRecordBase.h; sourceTree = "<group>"; };
+		C8B8E1808EEDD9E0DA6643BC7F437BC8 /* CTFooterViewController~iphoneport.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTFooterViewController~iphoneport.xib"; path = "CleverTapSDK/InApps/resources/CTFooterViewController~iphoneport.xib"; sourceTree = "<group>"; };
+		C8BA42ABDBDF2D4E0C039C4D2EEA7C62 /* CTCarouselMessageCell~port.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTCarouselMessageCell~port.xib"; path = "CleverTapSDK/Inbox/resources/CTCarouselMessageCell~port.xib"; sourceTree = "<group>"; };
+		C8FBE79C44CF1CAA093B8023CECE8428 /* UIImageView+WebCache.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIImageView+WebCache.m"; path = "SDWebImage/Core/UIImageView+WebCache.m"; sourceTree = "<group>"; };
+		C8FE442AA7FBA8DBE2E67DE62C2A75E1 /* FIRCLSReportUploader.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSReportUploader.m; path = Crashlytics/Crashlytics/Controllers/FIRCLSReportUploader.m; sourceTree = "<group>"; };
+		C915C4E4FA554409D36E673ED00843C0 /* FloatingPanel.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = FloatingPanel.modulemap; sourceTree = "<group>"; };
+		C94D200368610897A527880B0F55B295 /* FBLPromise+All.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+All.m"; path = "Sources/FBLPromises/FBLPromise+All.m"; sourceTree = "<group>"; };
+		C9D81382570A20230DAAFBEEC2F367A4 /* CTHeaderViewController~ipad.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTHeaderViewController~ipad.xib"; path = "CleverTapSDK/InApps/resources/CTHeaderViewController~ipad.xib"; sourceTree = "<group>"; };
+		C9EA946C13353D9489395B1946FDD738 /* PagingMenuTransition.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingMenuTransition.swift; path = Parchment/Enums/PagingMenuTransition.swift; sourceTree = "<group>"; };
+		C9F2DC920BDD22F20D92E26E5DBACF6B /* SDWebImageDownloaderDecryptor.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageDownloaderDecryptor.h; path = SDWebImage/Core/SDWebImageDownloaderDecryptor.h; sourceTree = "<group>"; };
+		C9F5C546497A4DC863BCC2A91FC316E2 /* successIconSubtle@3x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "successIconSubtle@3x.png"; path = "SwiftMessages/Resources/successIconSubtle@3x.png"; sourceTree = "<group>"; };
+		CA29C6CDDEDF4EB295AA25CC25645812 /* SDWebImageCacheKeyFilter.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageCacheKeyFilter.h; path = SDWebImage/Core/SDWebImageCacheKeyFilter.h; sourceTree = "<group>"; };
+		CA572FE1B888500AAC417ADB8D939CB5 /* CTCertificatePinning.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTCertificatePinning.h; path = CleverTapSDK/CTCertificatePinning.h; sourceTree = "<group>"; };
+		CA58B3CE3D831F501FC6C61EE42A1D37 /* CTInAppFCManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTInAppFCManager.m; path = CleverTapSDK/CTInAppFCManager.m; sourceTree = "<group>"; };
+		CA58C08AD34B9E83B33D4235F8CDD612 /* SDWebImageDownloaderOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageDownloaderOperation.h; path = SDWebImage/Core/SDWebImageDownloaderOperation.h; sourceTree = "<group>"; };
+		CA8A6578E42953ABB8D18BBCC3976634 /* SDWebImageDownloaderResponseModifier.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageDownloaderResponseModifier.m; path = SDWebImage/Core/SDWebImageDownloaderResponseModifier.m; sourceTree = "<group>"; };
+		CAD1D3AE5623D405813457B8711A88D7 /* FIRCLSDwarfExpressionMachine.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSDwarfExpressionMachine.c; path = Crashlytics/Crashlytics/Unwind/Dwarf/FIRCLSDwarfExpressionMachine.c; sourceTree = "<group>"; };
+		CADC88554C9D1F5B26204930AD632DAC /* PagingSizeCache.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingSizeCache.swift; path = Parchment/Classes/PagingSizeCache.swift; sourceTree = "<group>"; };
+		CAF03610D17B9C263036CED3BACF3388 /* CTSwizzle.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTSwizzle.m; path = CleverTapSDK/CTSwizzle.m; sourceTree = "<group>"; };
+		CB0EF27C8C83049EFDBA6A478040AA07 /* FIRCLSReportUploader_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSReportUploader_Private.h; path = Crashlytics/Crashlytics/Controllers/FIRCLSReportUploader_Private.h; sourceTree = "<group>"; };
+		CB6D984B7D32094D8F6EE83AB66DF472 /* ButtonBarViewCell.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ButtonBarViewCell.swift; path = Sources/ButtonBarViewCell.swift; sourceTree = "<group>"; };
+		CB8AF3A314A7DAFB3F405FE6C8B54F1D /* FIRInstallationsAuthTokenResultInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsAuthTokenResultInternal.h; path = FirebaseInstallations/Source/Library/FIRInstallationsAuthTokenResultInternal.h; sourceTree = "<group>"; };
+		CBA3E6FCD323CA2F046030EE273CF168 /* NSData+ImageContentType.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "NSData+ImageContentType.m"; path = "SDWebImage/Core/NSData+ImageContentType.m"; sourceTree = "<group>"; };
+		CC03923835F8DBECFA9DE8B7A62ABC5C /* errorIconSubtle@3x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "errorIconSubtle@3x.png"; path = "SwiftMessages/Resources/errorIconSubtle@3x.png"; sourceTree = "<group>"; };
+		CC3315B28F61B22AB235B49DC58918D8 /* CleverTapEventDetail.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTapEventDetail.m; path = CleverTapSDK/CleverTapEventDetail.m; sourceTree = "<group>"; };
+		CC604C9539C9AB820ACBE9344D1D4C59 /* CTImageInAppViewControllerPrivate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTImageInAppViewControllerPrivate.h; path = CleverTapSDK/InApps/CTImageInAppViewControllerPrivate.h; sourceTree = "<group>"; };
+		CCA07FC8BB7A48B6B63A0BF3DAFE9DFB /* pb_common.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = pb_common.h; sourceTree = "<group>"; };
+		CCB10EC396D1199C8971F2C4DECFF515 /* IQKeyboardManagerSwift-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "IQKeyboardManagerSwift-Info.plist"; sourceTree = "<group>"; };
 		CCB4FF9EE947104384513B695B8B466D /* Pods-OpenBook-acknowledgements.markdown */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text; path = "Pods-OpenBook-acknowledgements.markdown"; sourceTree = "<group>"; };
-		CCB741FA14DEE4C2163BA20E9690757F /* SDWebImageDownloaderOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageDownloaderOperation.h; path = SDWebImage/Core/SDWebImageDownloaderOperation.h; sourceTree = "<group>"; };
-		CCD53F74A28B58B81C4D6F2B0FC96CD8 /* FIRInstallationsItem+RegisterInstallationAPI.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FIRInstallationsItem+RegisterInstallationAPI.h"; path = "FirebaseInstallations/Source/Library/InstallationsAPI/FIRInstallationsItem+RegisterInstallationAPI.h"; sourceTree = "<group>"; };
+		CCFB8FE90C489201EF7A124A5006AD25 /* PagingIndicatorView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingIndicatorView.swift; path = Parchment/Classes/PagingIndicatorView.swift; sourceTree = "<group>"; };
+		CD124BEBF5B56CF682F73506F5A5D258 /* youtube-ios-player-helper-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "youtube-ios-player-helper-umbrella.h"; sourceTree = "<group>"; };
+		CD1C1C23F916B41334AC9BF081872423 /* FIRCLSCallStackTree.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSCallStackTree.m; path = Crashlytics/Crashlytics/Helpers/FIRCLSCallStackTree.m; sourceTree = "<group>"; };
+		CD2B58AC1B5C433F32A32019B7EC2689 /* ScrollingFollowView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ScrollingFollowView.swift; path = ScrollingFollowView/ScrollingFollowView.swift; sourceTree = "<group>"; };
+		CD7914D44479CE4E2EDFC7E1F48DEB1A /* GULNetwork.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULNetwork.h; path = GoogleUtilities/Network/Public/GoogleUtilities/GULNetwork.h; sourceTree = "<group>"; };
 		CDC94D9C30849BD1C7AEB03090DFBF9E /* Pods-OpenBook-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "Pods-OpenBook-dummy.m"; sourceTree = "<group>"; };
-		CDCA9C89AA26AE3321E6E8F22D4A12A6 /* GDTCORTargets.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORTargets.h; path = GoogleDataTransport/GDTCORLibrary/Public/GoogleDataTransport/GDTCORTargets.h; sourceTree = "<group>"; };
-		CE54166909992272EAD05AF846AF6A6E /* infoIconLight.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = infoIconLight.png; path = SwiftMessages/Resources/infoIconLight.png; sourceTree = "<group>"; };
-		CE67BA38717305589B2A7D5A5EEBAD9E /* FirebaseMessaging-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "FirebaseMessaging-Info.plist"; sourceTree = "<group>"; };
-		CEE2A726663496696FAFCE61E0F49D7C /* ct_default_portrait_image.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = ct_default_portrait_image.png; path = CleverTapSDK/Inbox/resources/ct_default_portrait_image.png; sourceTree = "<group>"; };
-		CEE5AEDADB5CB7436CDA3B05D0B24AFB /* CTValidator.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTValidator.m; path = CleverTapSDK/CTValidator.m; sourceTree = "<group>"; };
-		CEEB70698CC9991E398C6070FE7BB763 /* Request.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Request.swift; path = Source/Request.swift; sourceTree = "<group>"; };
-		CF01775F9C29EEBECBCBBC0CE9D44B98 /* FIRInstallationsStore.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsStore.h; path = FirebaseInstallations/Source/Library/InstallationsStore/FIRInstallationsStore.h; sourceTree = "<group>"; };
-		CF47E5863ACCD5ADA6A6B8FD9D33A5FC /* GDTCOREvent.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCOREvent.m; path = GoogleDataTransport/GDTCORLibrary/GDTCOREvent.m; sourceTree = "<group>"; };
-		CF9864D521D729623F0DA726CD7534C3 /* FIRCoreDiagnosticsConnector.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCoreDiagnosticsConnector.h; path = FirebaseCore/Sources/Private/FIRCoreDiagnosticsConnector.h; sourceTree = "<group>"; };
-		CFD7C088C888D97ED1B2964EF6B86FBD /* SDWebImageTransition.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageTransition.m; path = SDWebImage/Core/SDWebImageTransition.m; sourceTree = "<group>"; };
+		CDCB66C7CE92CAC86021C9BA6D28834D /* Assets.bundle */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = "wrapper.plug-in"; name = Assets.bundle; path = "youtube-ios-player-helper/Assets.bundle"; sourceTree = "<group>"; };
+		CDF8FE99445B840794168CC99558CA56 /* FIRCLSRecordHost.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSRecordHost.m; path = Crashlytics/Crashlytics/Models/Record/FIRCLSRecordHost.m; sourceTree = "<group>"; };
+		CE21A19BFABD6C4E401E715605525B6B /* FirebaseInstallations-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "FirebaseInstallations-Info.plist"; sourceTree = "<group>"; };
+		CE3C0CC436E446E3F2A23807F050D195 /* FloatingPanel-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "FloatingPanel-Info.plist"; sourceTree = "<group>"; };
+		CE67CCCB72022EA1852C74BAC94681B6 /* NSBundle+Extensions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "NSBundle+Extensions.swift"; path = "SwiftMessages/NSBundle+Extensions.swift"; sourceTree = "<group>"; };
+		CE75A2F6F3A6B53F9FF8B5020AFCC05E /* FIRCLSRecordApplication.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSRecordApplication.h; path = Crashlytics/Crashlytics/Models/Record/FIRCLSRecordApplication.h; sourceTree = "<group>"; };
+		CEB8AEF6A7DD8930A3138907FB140D93 /* CleverTapJSInterface.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTapJSInterface.h; path = CleverTapSDK/CleverTapJSInterface.h; sourceTree = "<group>"; };
+		CEE7A87436FDB285C80A56AD8AC8F023 /* SDAsyncBlockOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDAsyncBlockOperation.h; path = SDWebImage/Private/SDAsyncBlockOperation.h; sourceTree = "<group>"; };
+		CF0428472B09C1CB36630E2000609937 /* PassthroughWindow.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PassthroughWindow.swift; path = SwiftMessages/PassthroughWindow.swift; sourceTree = "<group>"; };
+		CF18F0708393816E830C8C896394312C /* PageViewManagerDelegate.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PageViewManagerDelegate.swift; path = Parchment/Protocols/PageViewManagerDelegate.swift; sourceTree = "<group>"; };
+		CF7B693E04B12B6E9C18BE2E46562E2B /* GrabberView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = GrabberView.swift; path = Sources/GrabberView.swift; sourceTree = "<group>"; };
+		CFABA037DB556675C7CB42C4682E148B /* FIRCLSNetworkOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSNetworkOperation.h; path = Crashlytics/Crashlytics/Settings/Operations/FIRCLSNetworkOperation.h; sourceTree = "<group>"; };
+		CFC36C7F7AC1A9920BE10C459AF546F7 /* Parchment.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = Parchment.release.xcconfig; sourceTree = "<group>"; };
 		CFE761258A84BE92424ED9E599B5A083 /* ScrollingFollowView */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; name = ScrollingFollowView; path = ScrollingFollowView.framework; sourceTree = BUILT_PRODUCTS_DIR; };
-		D03FA28EAB024423FFA09524FD4C3883 /* CTHeaderViewController~iphoneport.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTHeaderViewController~iphoneport.xib"; path = "CleverTapSDK/InApps/resources/CTHeaderViewController~iphoneport.xib"; sourceTree = "<group>"; };
-		D087ADFBDBC7AF01A7C020CE36EC58DF /* CTLogger.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTLogger.h; path = CleverTapSDK/CTLogger.h; sourceTree = "<group>"; };
-		D0A63248AF638732E927A11DD5E71DDC /* FIRConfiguration.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRConfiguration.m; path = FirebaseCore/Sources/FIRConfiguration.m; sourceTree = "<group>"; };
-		D0B437121779F5521D8ADC71D733366D /* FIRCLSUUID.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSUUID.h; path = Crashlytics/Shared/FIRCLSUUID.h; sourceTree = "<group>"; };
-		D0CDB7129E8BC265EF3C533EEB332272 /* warningIcon@3x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "warningIcon@3x.png"; path = "SwiftMessages/Resources/warningIcon@3x.png"; sourceTree = "<group>"; };
-		D0FB770DFE550F9815FF5F5E89D8869D /* AuthenticationInterceptor.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = AuthenticationInterceptor.swift; path = Source/AuthenticationInterceptor.swift; sourceTree = "<group>"; };
-		D101B83461490F776773691B17685682 /* PagingMenuTransition.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingMenuTransition.swift; path = Parchment/Enums/PagingMenuTransition.swift; sourceTree = "<group>"; };
-		D10E696D15691811DA86347980DFAE92 /* dwarf.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = dwarf.h; path = Crashlytics/third_party/libunwind/dwarf.h; sourceTree = "<group>"; };
-		D18473CE4CAA9E55A96B11609565168E /* FBLPromise+Then.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Then.m"; path = "Sources/FBLPromises/FBLPromise+Then.m"; sourceTree = "<group>"; };
-		D1B5CD2E0D9E11C4EC651FDA7013A707 /* CTConstants.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTConstants.h; path = CleverTapSDK/CTConstants.h; sourceTree = "<group>"; };
-		D1CDA44F925BA90B928EED7A147D9D50 /* FIRConfiguration.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRConfiguration.h; path = FirebaseCore/Sources/Public/FirebaseCore/FIRConfiguration.h; sourceTree = "<group>"; };
-		D1D4B9A118D6E7132E914D8E3DD32FE1 /* GDTCORStorageEventSelector.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCORStorageEventSelector.m; path = GoogleDataTransport/GDTCORLibrary/GDTCORStorageEventSelector.m; sourceTree = "<group>"; };
-		D29FBC2C73DFA113D0DD6ECB71C54757 /* FIRInstallationsStoredAuthToken.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsStoredAuthToken.h; path = FirebaseInstallations/Source/Library/InstallationsStore/FIRInstallationsStoredAuthToken.h; sourceTree = "<group>"; };
-		D2A20A9D355F7889A1BD68F9C61803B9 /* FBLPromise+Delay.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Delay.h"; path = "Sources/FBLPromises/include/FBLPromise+Delay.h"; sourceTree = "<group>"; };
-		D2C340CD09002D0A687E19E4792DB2F8 /* FIRInstallationsHTTPError.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsHTTPError.h; path = FirebaseInstallations/Source/Library/Errors/FIRInstallationsHTTPError.h; sourceTree = "<group>"; };
-		D2CA7E85155AA6B0A38D4083D39AE918 /* pb_decode.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = pb_decode.h; sourceTree = "<group>"; };
-		D2D6C123A84D5A5BFA1B8258C79689A6 /* FIRCLSUUID.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSUUID.m; path = Crashlytics/Shared/FIRCLSUUID.m; sourceTree = "<group>"; };
-		D2D912AF3DC866C4340AD1442C61B39E /* FirebaseInstallations.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FirebaseInstallations.release.xcconfig; sourceTree = "<group>"; };
-		D2EB30295978AB2D2DEEA3483B393044 /* FBLPromise+Async.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Async.m"; path = "Sources/FBLPromises/FBLPromise+Async.m"; sourceTree = "<group>"; };
-		D2EB40F6A81227EE71D82CD3A99BB555 /* FirebaseCore.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FirebaseCore.release.xcconfig; sourceTree = "<group>"; };
-		D3114537C7124FEFDBC41DDACCFE34CF /* BaseView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = BaseView.swift; path = SwiftMessages/BaseView.swift; sourceTree = "<group>"; };
-		D3572CC4295BBD2187B1627C2695766F /* StringEncoding+Alamofire.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "StringEncoding+Alamofire.swift"; path = "Source/StringEncoding+Alamofire.swift"; sourceTree = "<group>"; };
-		D35E0AB0A9A63A7C53635D8FB47F6F90 /* FIRInstallationsItem+RegisterInstallationAPI.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FIRInstallationsItem+RegisterInstallationAPI.m"; path = "FirebaseInstallations/Source/Library/InstallationsAPI/FIRInstallationsItem+RegisterInstallationAPI.m"; sourceTree = "<group>"; };
-		D369BA43E19F3583F4E55252030A1516 /* GULUserDefaults.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULUserDefaults.h; path = GoogleUtilities/UserDefaults/Public/GoogleUtilities/GULUserDefaults.h; sourceTree = "<group>"; };
-		D3C482034DD24D74C353747CC2F8AD69 /* SDDisplayLink.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDDisplayLink.m; path = SDWebImage/Private/SDDisplayLink.m; sourceTree = "<group>"; };
-		D3D8E4ACA2F8EAB0A54419681789BE7F /* FirebaseCore-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "FirebaseCore-Info.plist"; sourceTree = "<group>"; };
-		D415BC8949433C47B853ED0D8BC7037F /* PagerTabStripBehaviour.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagerTabStripBehaviour.swift; path = Sources/PagerTabStripBehaviour.swift; sourceTree = "<group>"; };
-		D4E6DA8EC473E04BAB8A65C34D5E2E9C /* PagingSelectedScrollPosition.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingSelectedScrollPosition.swift; path = Parchment/Enums/PagingSelectedScrollPosition.swift; sourceTree = "<group>"; };
-		D4EEC25DF2E4B22F64CAE6AC5D18F934 /* CTAlertViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTAlertViewController.m; path = CleverTapSDK/InApps/CTAlertViewController.m; sourceTree = "<group>"; };
-		D51BB0685B2ABC7190E64CD9893D3BD1 /* FIRInstallationsSingleOperationPromiseCache.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsSingleOperationPromiseCache.h; path = FirebaseInstallations/Source/Library/InstallationsIDController/FIRInstallationsSingleOperationPromiseCache.h; sourceTree = "<group>"; };
-		D51D2A4E75D1FA2630A2E5AF65218ED8 /* SDImageCachesManagerOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageCachesManagerOperation.h; path = SDWebImage/Private/SDImageCachesManagerOperation.h; sourceTree = "<group>"; };
-		D54B59D9094AD02C3560F21B3029C07D /* GDTCORUploader.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORUploader.h; path = GoogleDataTransport/GDTCORLibrary/Internal/GDTCORUploader.h; sourceTree = "<group>"; };
-		D5739AAB9E2EFAEE8D4D793FBF9C4A82 /* FIRCLSDwarfUnwindRegisters.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSDwarfUnwindRegisters.h; path = Crashlytics/Crashlytics/Unwind/Dwarf/FIRCLSDwarfUnwindRegisters.h; sourceTree = "<group>"; };
-		D5ADCCB37C00D8468B02B465C2BB7D7B /* MaskingView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = MaskingView.swift; path = SwiftMessages/MaskingView.swift; sourceTree = "<group>"; };
-		D5AF3179F596FE686FED66656AA52E66 /* GULOriginalIMPConvenienceMacros.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULOriginalIMPConvenienceMacros.h; path = GoogleUtilities/MethodSwizzler/Public/GoogleUtilities/GULOriginalIMPConvenienceMacros.h; sourceTree = "<group>"; };
-		D5CE29E0909FD3C6E2E099F75761D1F4 /* ButtonBarPagerTabStripViewController.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ButtonBarPagerTabStripViewController.swift; path = Sources/ButtonBarPagerTabStripViewController.swift; sourceTree = "<group>"; };
-		D5D6A84B1602B61D0A766A26C2B864CA /* SDImageLoadersManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageLoadersManager.m; path = SDWebImage/Core/SDImageLoadersManager.m; sourceTree = "<group>"; };
-		D5F871F384BFFF387B4E26EBEB1844C9 /* CleverTapInboxMessage.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTapInboxMessage.m; path = CleverTapSDK/Inbox/models/CleverTapInboxMessage.m; sourceTree = "<group>"; };
-		D62DF06B22B5183E2998695AD67765D5 /* FIRCLSFABAsyncOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSFABAsyncOperation.m; path = Crashlytics/Shared/FIRCLSOperation/FIRCLSFABAsyncOperation.m; sourceTree = "<group>"; };
-		D6A896B929B4E1199DDEB688197E415A /* CTLocalDataStore.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTLocalDataStore.h; path = CleverTapSDK/CTLocalDataStore.h; sourceTree = "<group>"; };
-		D6BC3392382DB86F65077FE969D3233B /* FIRMessagingDefines.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingDefines.h; path = FirebaseMessaging/Sources/FIRMessagingDefines.h; sourceTree = "<group>"; };
-		D6C49B8E5FB77AF1451EA5F3A807BBAD /* SwiftMessages.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = SwiftMessages.release.xcconfig; sourceTree = "<group>"; };
-		D6D4544A4AF61D8A2B889910E7D62B45 /* PagingIndicatorLayoutAttributes.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingIndicatorLayoutAttributes.swift; path = Parchment/Classes/PagingIndicatorLayoutAttributes.swift; sourceTree = "<group>"; };
-		D70FE2AC0A0E1663BC33C50E0B845CA7 /* FIRMessagingCode.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingCode.h; path = FirebaseMessaging/Sources/FIRMessagingCode.h; sourceTree = "<group>"; };
-		D722630077484106904B5D32BDD292FF /* FIRCLSFile.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSFile.h; path = Crashlytics/Crashlytics/Helpers/FIRCLSFile.h; sourceTree = "<group>"; };
-		D7641BAF92288D74962C3D96BF381580 /* FirebaseInstallations.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FirebaseInstallations.h; path = FirebaseInstallations/Source/Library/Public/FirebaseInstallations/FirebaseInstallations.h; sourceTree = "<group>"; };
-		D8BB2E0F0D297231C1A2BD3CA4EFA86F /* FIRMessagingSyncMessageManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingSyncMessageManager.h; path = FirebaseMessaging/Sources/FIRMessagingSyncMessageManager.h; sourceTree = "<group>"; };
-		D8CB5D0BA35FEB241E6B43E87ABE3A29 /* PromisesObjC.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = PromisesObjC.modulemap; sourceTree = "<group>"; };
-		D94BCB0F99B88FDBFDCD924665A10BF7 /* ResourceBundle-XLPagerTabStrip-XLPagerTabStrip-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "ResourceBundle-XLPagerTabStrip-XLPagerTabStrip-Info.plist"; sourceTree = "<group>"; };
-		D99698AE74FE7B4168A28BE6F16418F8 /* Logger.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Logger.swift; path = Sources/Logger.swift; sourceTree = "<group>"; };
-		D9C26A0E67ADE324B0DFEB9B94B907BA /* FIRCLSSignal.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSSignal.c; path = Crashlytics/Crashlytics/Handlers/FIRCLSSignal.c; sourceTree = "<group>"; };
-		D9C5928B5C09A69C4709184225A5A344 /* GULAppEnvironmentUtil.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULAppEnvironmentUtil.h; path = GoogleUtilities/Environment/Public/GoogleUtilities/GULAppEnvironmentUtil.h; sourceTree = "<group>"; };
-		DA2F9D2985A2956174705BDDCB1B872C /* GULMutableDictionary.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULMutableDictionary.m; path = GoogleUtilities/Network/GULMutableDictionary.m; sourceTree = "<group>"; };
-		DA358F561373EA86A3B359CEB7151769 /* DigiCertGlobalRootCA.crt */ = {isa = PBXFileReference; includeInIndex = 1; name = DigiCertGlobalRootCA.crt; path = CleverTapSDK/DigiCertGlobalRootCA.crt; sourceTree = "<group>"; };
-		DA76B355DF5E5984BDA6B62B7946621D /* Alamofire.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = Alamofire.debug.xcconfig; sourceTree = "<group>"; };
-		DAC8723A5053EFF298CE08388EB1956C /* CTLocalDataStore.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTLocalDataStore.m; path = CleverTapSDK/CTLocalDataStore.m; sourceTree = "<group>"; };
-		DAE7EA43BBB6FF9E391083081C652762 /* FIRCurrentDateProvider.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCurrentDateProvider.m; path = FirebaseInstallations/Source/Library/InstallationsIDController/FIRCurrentDateProvider.m; sourceTree = "<group>"; };
-		DAF9BCA7F059DC8C95BE0B011083B183 /* FIRCLSUnwind.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSUnwind.h; path = Crashlytics/Crashlytics/Unwind/FIRCLSUnwind.h; sourceTree = "<group>"; };
-		DB16176E51887E85DFDFD01A43852722 /* FIRAppInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRAppInternal.h; path = FirebaseCore/Sources/Private/FIRAppInternal.h; sourceTree = "<group>"; };
-		DB16487F2E0A797742A0E4F2B25FB6F7 /* CleverTapBuildInfo.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTapBuildInfo.h; path = CleverTapSDK/CleverTapBuildInfo.h; sourceTree = "<group>"; };
-		DB2F0C61F3F586E74B89D2D35918087F /* FIRCLSCrashedMarkerFile.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSCrashedMarkerFile.h; path = Crashlytics/Crashlytics/Components/FIRCLSCrashedMarkerFile.h; sourceTree = "<group>"; };
-		DB3623DD41CE3B97ACA4B26EB8BC7767 /* FIRInstallationsIIDStore.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallationsIIDStore.m; path = FirebaseInstallations/Source/Library/IIDMigration/FIRInstallationsIIDStore.m; sourceTree = "<group>"; };
-		DB43C934EE9A78BA6DBD9580720F2BA1 /* Behavior.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Behavior.swift; path = Sources/Behavior.swift; sourceTree = "<group>"; };
-		DB8E86495B5AB3557AFFD516490AAA1F /* FBLPromise+Do.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Do.m"; path = "Sources/FBLPromises/FBLPromise+Do.m"; sourceTree = "<group>"; };
-		DBB4B40B6951F0E68B1940FC566C4336 /* FirebaseInstallationsInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FirebaseInstallationsInternal.h; path = FirebaseInstallations/Source/Library/Private/FirebaseInstallationsInternal.h; sourceTree = "<group>"; };
-		DBC80AA06E0B87E619A46B242BF54B18 /* CleverTapJSInterface.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTapJSInterface.m; path = CleverTapSDK/CleverTapJSInterface.m; sourceTree = "<group>"; };
-		DBD3E68DDBD9FA3A02BB49AC76035673 /* FIRCLSAsyncOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSAsyncOperation.h; path = Crashlytics/Crashlytics/Operations/FIRCLSAsyncOperation.h; sourceTree = "<group>"; };
-		DBDB5412379B11337E94D278BE2A1D89 /* SDWebImage-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "SDWebImage-prefix.pch"; sourceTree = "<group>"; };
-		DBE945BF3FCE639292A78AB27166BB34 /* FBLPromise+Catch.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Catch.m"; path = "Sources/FBLPromises/FBLPromise+Catch.m"; sourceTree = "<group>"; };
-		DBF5AA0BE24D16F79D770563371322A6 /* Assets.bundle */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = "wrapper.plug-in"; name = Assets.bundle; path = "youtube-ios-player-helper/Assets.bundle"; sourceTree = "<group>"; };
-		DC01FD9FC5B2A81600B1FE53A5C0CBF0 /* FIRCLSReportManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSReportManager.m; path = Crashlytics/Crashlytics/Controllers/FIRCLSReportManager.m; sourceTree = "<group>"; };
-		DC5E1C4D2B0D498BD74287207B6551DC /* CTLocationManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTLocationManager.m; path = CleverTapSDK/CTLocationManager.m; sourceTree = "<group>"; };
-		DCD2AC3E76D2728FD6C20861C6636AD8 /* FIRCLSNetworkResponseHandler.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSNetworkResponseHandler.m; path = Crashlytics/Shared/FIRCLSNetworking/FIRCLSNetworkResponseHandler.m; sourceTree = "<group>"; };
-		DCDC21580F8C5152C22C2EBEC5320A10 /* nanopb.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = nanopb.release.xcconfig; sourceTree = "<group>"; };
-		DD30F537378C78C3D61A5A10F3CC7F37 /* CTHalfInterstitialViewController~iphoneport.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTHalfInterstitialViewController~iphoneport.xib"; path = "CleverTapSDK/InApps/resources/CTHalfInterstitialViewController~iphoneport.xib"; sourceTree = "<group>"; };
-		DD4844B53EA4AF05DEB513ED7822AA36 /* FIRCLSReportUploader.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSReportUploader.h; path = Crashlytics/Crashlytics/Controllers/FIRCLSReportUploader.h; sourceTree = "<group>"; };
-		DD5CA37EAB06EDEDE27718E450E4D06F /* SDFileAttributeHelper.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDFileAttributeHelper.h; path = SDWebImage/Private/SDFileAttributeHelper.h; sourceTree = "<group>"; };
-		DD5EDAB4513FBA0EA2891E3201B6E26D /* MarginAdjustable+Extensions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "MarginAdjustable+Extensions.swift"; path = "SwiftMessages/MarginAdjustable+Extensions.swift"; sourceTree = "<group>"; };
-		DDA258A4A78E22081F04351D7279D2EB /* IQToolbar.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = IQToolbar.swift; path = IQKeyboardManagerSwift/IQToolbar/IQToolbar.swift; sourceTree = "<group>"; };
-		DDB13D38B0CB85EA82D99898A34FCAE5 /* GDTCORRegistrar.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORRegistrar.h; path = GoogleDataTransport/GDTCORLibrary/Internal/GDTCORRegistrar.h; sourceTree = "<group>"; };
+		D0211FE662A3AF061E9B1EBB2E5DE567 /* FirebaseInstallations.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FirebaseInstallations.debug.xcconfig; sourceTree = "<group>"; };
+		D02568CA0FC7B31B5BD91EB46A0FA223 /* InvalidationState.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = InvalidationState.swift; path = Parchment/Enums/InvalidationState.swift; sourceTree = "<group>"; };
+		D02673B88302D98DB5FB394ACFB279D0 /* CTHalfInterstitialImageViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTHalfInterstitialImageViewController.h; path = CleverTapSDK/InApps/CTHalfInterstitialImageViewController.h; sourceTree = "<group>"; };
+		D026C995A40EB0333C541D13D45A31A4 /* PagingItem.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingItem.swift; path = Parchment/Protocols/PagingItem.swift; sourceTree = "<group>"; };
+		D04535DBF8AD873EB79E73E13E8C95CF /* SessionDelegate.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = SessionDelegate.swift; path = Source/SessionDelegate.swift; sourceTree = "<group>"; };
+		D0784CFD6BFE463DAF418E3A86DE2D6A /* IQUIScrollView+Additions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "IQUIScrollView+Additions.swift"; path = "IQKeyboardManagerSwift/Categories/IQUIScrollView+Additions.swift"; sourceTree = "<group>"; };
+		D0A3BDD81D5C9BB148AB7EC3FC64C175 /* GoogleUtilities.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = GoogleUtilities.modulemap; sourceTree = "<group>"; };
+		D0E54EAA84E9AF21B7CAEADA3970A99E /* GDTCOREndpoints.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCOREndpoints.m; path = GoogleDataTransport/GDTCORLibrary/GDTCOREndpoints.m; sourceTree = "<group>"; };
+		D0F318D8AFA2870D8A87CF0BD4FB6612 /* FIRDependency.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRDependency.h; path = FirebaseCore/Sources/Private/FIRDependency.h; sourceTree = "<group>"; };
+		D16955C627887E38128334E1D824FADF /* HTTPHeaders.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = HTTPHeaders.swift; path = Source/HTTPHeaders.swift; sourceTree = "<group>"; };
+		D1C31A198F845928B18A6F2C7796EBF7 /* CTHalfInterstitialViewController~iphoneport.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTHalfInterstitialViewController~iphoneport.xib"; path = "CleverTapSDK/InApps/resources/CTHalfInterstitialViewController~iphoneport.xib"; sourceTree = "<group>"; };
+		D1EC204BA603EBE0F5A90BF20C88E481 /* FBLPromise+Any.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Any.m"; path = "Sources/FBLPromises/FBLPromise+Any.m"; sourceTree = "<group>"; };
+		D2003C43102EF434911A22C498E7CFD0 /* SDAssociatedObject.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDAssociatedObject.h; path = SDWebImage/Private/SDAssociatedObject.h; sourceTree = "<group>"; };
+		D20286FEBC452E86DC4EAC8EF5722CB7 /* FIRLogger.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRLogger.h; path = FirebaseCore/Sources/Private/FIRLogger.h; sourceTree = "<group>"; };
+		D21C8CFE4842E7FB10D16A900903D0A0 /* GDTCORTransformer.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCORTransformer.m; path = GoogleDataTransport/GDTCORLibrary/GDTCORTransformer.m; sourceTree = "<group>"; };
+		D268C1181FED7843260369844E7EAFF8 /* PagingIndicatorMetric.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingIndicatorMetric.swift; path = Parchment/Structs/PagingIndicatorMetric.swift; sourceTree = "<group>"; };
+		D270624EFF8EE2F812599F6783F70746 /* FIRCLSMachO.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSMachO.m; path = Crashlytics/Shared/FIRCLSMachO/FIRCLSMachO.m; sourceTree = "<group>"; };
+		D29F93B9F07A90FA23C8B1EBB37676BC /* nanopb-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "nanopb-dummy.m"; sourceTree = "<group>"; };
+		D2D785FCC6C97DC6D690DB97C42DD3EA /* IQToolbar.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = IQToolbar.swift; path = IQKeyboardManagerSwift/IQToolbar/IQToolbar.swift; sourceTree = "<group>"; };
+		D2FCF0078787A22262357EA1C300309E /* IQKeyboardManager+Debug.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "IQKeyboardManager+Debug.swift"; path = "IQKeyboardManagerSwift/IQKeyboardManager+Debug.swift"; sourceTree = "<group>"; };
+		D362FE958256ACE5DF9B0E3FC038FD37 /* SDImageLoadersManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageLoadersManager.m; path = SDWebImage/Core/SDImageLoadersManager.m; sourceTree = "<group>"; };
+		D36E0117FF8C4F329FF0C37299C43960 /* FIRCLSCompactUnwind.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSCompactUnwind.c; path = Crashlytics/Crashlytics/Unwind/Compact/FIRCLSCompactUnwind.c; sourceTree = "<group>"; };
+		D3972686BD95412BFCBE53DE7A6B9709 /* Parchment-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "Parchment-umbrella.h"; sourceTree = "<group>"; };
+		D465D7F54D40B3774407D83780D2D729 /* FirebaseCore.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FirebaseCore.debug.xcconfig; sourceTree = "<group>"; };
+		D4AB846F7A0DB298D5AFA5851CC0FE5B /* FIRCLSApplicationIdentifierModel.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSApplicationIdentifierModel.h; path = Crashlytics/Crashlytics/Settings/Models/FIRCLSApplicationIdentifierModel.h; sourceTree = "<group>"; };
+		D533DBC38DC67A0E92D0DCE7180FB98E /* FirebaseCore.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FirebaseCore.h; path = FirebaseCore/Sources/Public/FirebaseCore/FirebaseCore.h; sourceTree = "<group>"; };
+		D573AD7B4FECD8B0C11C8D78CBC5B249 /* PromisesObjC.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = PromisesObjC.release.xcconfig; sourceTree = "<group>"; };
+		D5DF4EAF4F357894D9BDCADE136CFB68 /* PageViewController.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PageViewController.swift; path = Parchment/Classes/PageViewController.swift; sourceTree = "<group>"; };
+		D62497F380059B2DA3BFEB71F50873E5 /* FloatingPanel.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FloatingPanel.debug.xcconfig; sourceTree = "<group>"; };
+		D631E522FA7225175474F78AD8CC4CB3 /* FIRMessagingTokenInfo.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingTokenInfo.h; path = FirebaseMessaging/Sources/Token/FIRMessagingTokenInfo.h; sourceTree = "<group>"; };
+		D6969F1699DFD7D2AE65096976CF1ED6 /* CleverTapProductConfig.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTapProductConfig.m; path = CleverTapSDK/ProductConfig/models/CleverTapProductConfig.m; sourceTree = "<group>"; };
+		D72A658BAF38CA19B214CD6CBBE615B3 /* FBLPromise+Async.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Async.m"; path = "Sources/FBLPromises/FBLPromise+Async.m"; sourceTree = "<group>"; };
+		D76CC009E1C55B9BE4D8B57695ACB977 /* FIRComponentContainer.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRComponentContainer.h; path = FirebaseCore/Sources/Private/FIRComponentContainer.h; sourceTree = "<group>"; };
+		D76D8AB7C6C7DD72A29FFA7E2D12F3A3 /* FIRDiagnosticsData.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRDiagnosticsData.m; path = FirebaseCore/Sources/FIRDiagnosticsData.m; sourceTree = "<group>"; };
+		D7B583AE7B8586E72216E28616C35894 /* pb_common.c */ = {isa = PBXFileReference; includeInIndex = 1; path = pb_common.c; sourceTree = "<group>"; };
+		D7C512953A24F96C992714A723185686 /* SDImageCache.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageCache.h; path = SDWebImage/Core/SDImageCache.h; sourceTree = "<group>"; };
+		D7E71D9CFD82F3048AF2C55DBED5E9DE /* FBLPromise+Async.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Async.h"; path = "Sources/FBLPromises/include/FBLPromise+Async.h"; sourceTree = "<group>"; };
+		D850A6AC3756EC6C167502B52461CF73 /* FIRCLSByteUtility.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSByteUtility.h; path = Crashlytics/Shared/FIRCLSByteUtility.h; sourceTree = "<group>"; };
+		D875F9B74796AB6D4382A1EF152783D1 /* CleverTapSyncDelegate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTapSyncDelegate.h; path = CleverTapSDK/CleverTapSyncDelegate.h; sourceTree = "<group>"; };
+		D8AAA026E03241ECAA98E46CAEAEB9A4 /* warningIcon@2x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "warningIcon@2x.png"; path = "SwiftMessages/Resources/warningIcon@2x.png"; sourceTree = "<group>"; };
+		D8E9EDA86A46F78457366D6821012757 /* IQInvocation.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = IQInvocation.swift; path = IQKeyboardManagerSwift/IQToolbar/IQInvocation.swift; sourceTree = "<group>"; };
+		D90D1BA869EE55E72DF9AE07781DA40D /* PagingMenuView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingMenuView.swift; path = Parchment/Classes/PagingMenuView.swift; sourceTree = "<group>"; };
+		D952E5AE5E8F99516FAF4C1095AFED9C /* FIRMessagingExtensionHelper.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingExtensionHelper.m; path = FirebaseMessaging/Sources/FIRMessagingExtensionHelper.m; sourceTree = "<group>"; };
+		D991489D1C1029C5B84CC3093570F7B2 /* FIRMessagingPendingTopicsList.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingPendingTopicsList.m; path = FirebaseMessaging/Sources/FIRMessagingPendingTopicsList.m; sourceTree = "<group>"; };
+		D9BABE432AAD6C34D64ADD6FC67E5FF9 /* FIRComponentType.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRComponentType.h; path = FirebaseCore/Sources/Private/FIRComponentType.h; sourceTree = "<group>"; };
+		D9C123DC209A3AA01A0AE43A9CF5A44D /* youtube-ios-player-helper-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "youtube-ios-player-helper-dummy.m"; sourceTree = "<group>"; };
+		D9FE2F54B4E13E71A4166999F318D7C4 /* CleverTap-iOS-SDK.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = "CleverTap-iOS-SDK.debug.xcconfig"; sourceTree = "<group>"; };
+		DA2B60DFB6D41743B0A15ED178344712 /* SDWebImage-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "SDWebImage-Info.plist"; sourceTree = "<group>"; };
+		DA9ACD7051A080A89BD6F2D28F6C6FC7 /* CTProductConfigController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTProductConfigController.m; path = CleverTapSDK/ProductConfig/controllers/CTProductConfigController.m; sourceTree = "<group>"; };
+		DAFA55E76FA0299E13967B8590F31F0C /* CTInterstitialViewController~iphoneland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTInterstitialViewController~iphoneland.xib"; path = "CleverTapSDK/InApps/resources/CTInterstitialViewController~iphoneland.xib"; sourceTree = "<group>"; };
+		DB0C2AE413FF17E1914CA5FEC5B38539 /* FirebaseCore.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = FirebaseCore.modulemap; sourceTree = "<group>"; };
+		DB88A82D6F72238D7BC690332193230E /* FIRInstallationsBackoffController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRInstallationsBackoffController.h; path = FirebaseInstallations/Source/Library/InstallationsIDController/FIRInstallationsBackoffController.h; sourceTree = "<group>"; };
+		DB88ED7F029481721F48DB842E7D8DC6 /* CTUtils.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTUtils.m; path = CleverTapSDK/CTUtils.m; sourceTree = "<group>"; };
+		DBA69AB4DC238003B15B502AEBFBD56B /* CTSwipeView.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTSwipeView.h; path = CleverTapSDK/Inbox/views/CTSwipeView.h; sourceTree = "<group>"; };
+		DBB32652FD77C843803D38856981FB4C /* PagingViewControllerInfiniteDataSource.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingViewControllerInfiniteDataSource.swift; path = Parchment/Protocols/PagingViewControllerInfiniteDataSource.swift; sourceTree = "<group>"; };
+		DBC94E7FE9490FAD3BA7ABEC83465D6E /* YTPlayerView.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = YTPlayerView.m; path = Classes/YTPlayerView.m; sourceTree = "<group>"; };
+		DC28A7FFF68840F0B0052ADE81499CE3 /* GDTCORReachability_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORReachability_Private.h; path = GoogleDataTransport/GDTCORLibrary/Private/GDTCORReachability_Private.h; sourceTree = "<group>"; };
+		DC5EC58FD95B2EFCF832658EBD57B4D7 /* FIRMessagingCheckinPreferences.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingCheckinPreferences.h; path = FirebaseMessaging/Sources/Token/FIRMessagingCheckinPreferences.h; sourceTree = "<group>"; };
+		DD4AAD55B3695ED410F2C7795CECC2F4 /* FIRCLSInternalLogging.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSInternalLogging.h; path = Crashlytics/Crashlytics/Helpers/FIRCLSInternalLogging.h; sourceTree = "<group>"; };
+		DD895682159C0F1A91A098DEDCAE68C4 /* SDWebImageCacheSerializer.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageCacheSerializer.h; path = SDWebImage/Core/SDWebImageCacheSerializer.h; sourceTree = "<group>"; };
 		DDC55D0CD2D15D3E411ACD99C6C289B5 /* SystemConfiguration.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = SystemConfiguration.framework; path = Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS14.0.sdk/System/Library/Frameworks/SystemConfiguration.framework; sourceTree = DEVELOPER_DIR; };
-		DE8AA641F5CFFBD0067AB18650A0886A /* GULSwizzler.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULSwizzler.m; path = GoogleUtilities/MethodSwizzler/GULSwizzler.m; sourceTree = "<group>"; };
-		DEBF385E3523B08F8CA8E1635BF40412 /* CTCarouselImageMessageCell.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTCarouselImageMessageCell.h; path = CleverTapSDK/Inbox/cells/CTCarouselImageMessageCell.h; sourceTree = "<group>"; };
-		DED4985C501479E8B3D2DC9E801396CD /* FIRMessagingAuthKeychain.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingAuthKeychain.h; path = FirebaseMessaging/Sources/Token/FIRMessagingAuthKeychain.h; sourceTree = "<group>"; };
-		DF0E987A139B78C7B92480381B799F31 /* GULReachabilityChecker.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULReachabilityChecker.m; path = GoogleUtilities/Reachability/GULReachabilityChecker.m; sourceTree = "<group>"; };
-		DF4FAB09527EA9CCC362D03DB3307695 /* FBLPromise+Recover.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Recover.m"; path = "Sources/FBLPromises/FBLPromise+Recover.m"; sourceTree = "<group>"; };
-		DF832D1BC0ABF51598B6E608C3831051 /* FBLPromise+Always.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Always.m"; path = "Sources/FBLPromises/FBLPromise+Always.m"; sourceTree = "<group>"; };
-		DFDFBEBB73F8E6C5B210978F2B628217 /* FIRCLSMachO.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSMachO.h; path = Crashlytics/Shared/FIRCLSMachO/FIRCLSMachO.h; sourceTree = "<group>"; };
-		E0A7808D885AF884ED5E89C421C5D062 /* IQKeyboardManagerSwift-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "IQKeyboardManagerSwift-dummy.m"; sourceTree = "<group>"; };
-		E0A78F2F6491748E2850BA2D0AC56B2C /* GULNSData+zlib.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "GULNSData+zlib.h"; path = "GoogleUtilities/NSData+zlib/Public/GoogleUtilities/GULNSData+zlib.h"; sourceTree = "<group>"; };
-		E0C7B3FC77DA49983FC7FF8CABE9B2BB /* PagingNavigationOrientation.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingNavigationOrientation.swift; path = Parchment/Structs/PagingNavigationOrientation.swift; sourceTree = "<group>"; };
-		E0D1A70146C42F031269B74235A89D6C /* GoogleDataTransport.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = GoogleDataTransport.debug.xcconfig; sourceTree = "<group>"; };
-		E102DD3A26330F6A315AC46087129022 /* FIRMessagingCheckinStore.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingCheckinStore.h; path = FirebaseMessaging/Sources/Token/FIRMessagingCheckinStore.h; sourceTree = "<group>"; };
-		E17237981E77E6F56A8462D0E7BD985F /* PagingStaticDataSource.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingStaticDataSource.swift; path = Parchment/Classes/PagingStaticDataSource.swift; sourceTree = "<group>"; };
-		E1C4D6A01CC0EF14CF71956CEB259DDC /* CleverTapJSInterface.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTapJSInterface.h; path = CleverTapSDK/CleverTapJSInterface.h; sourceTree = "<group>"; };
-		E23AFD6EB5110F52EA6774AD27972780 /* GDTCCTUploadOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCCTUploadOperation.m; path = GoogleDataTransport/GDTCCTLibrary/GDTCCTUploadOperation.m; sourceTree = "<group>"; };
+		DE6FA8F46B37ECECFE85979B3D216A24 /* CTCoverViewController~ipadland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTCoverViewController~ipadland.xib"; path = "CleverTapSDK/InApps/resources/CTCoverViewController~ipadland.xib"; sourceTree = "<group>"; };
+		DE8DD21FAA5C67FF4EC1E7205405F33C /* FIRInstallationsAPIService.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallationsAPIService.m; path = FirebaseInstallations/Source/Library/InstallationsAPI/FIRInstallationsAPIService.m; sourceTree = "<group>"; };
+		DEABFC3FD1607EA55F70E8840A06580C /* FBLPromise+Retry.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Retry.h"; path = "Sources/FBLPromises/include/FBLPromise+Retry.h"; sourceTree = "<group>"; };
+		DF13CD565132EAAD8737DFBC46F6101A /* CleverTapInboxMessage.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTapInboxMessage.m; path = CleverTapSDK/Inbox/models/CleverTapInboxMessage.m; sourceTree = "<group>"; };
+		DF2B1B5F4ED967D92D9B825196B9F876 /* FIRCLSUnwind_x86.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSUnwind_x86.h; path = Crashlytics/Crashlytics/Unwind/FIRCLSUnwind_x86.h; sourceTree = "<group>"; };
+		DF6A98DB51B733C6ADBE555BCD8A16F9 /* AlamofireNetworkActivityLogger.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = AlamofireNetworkActivityLogger.modulemap; sourceTree = "<group>"; };
+		DF6AA42E72F0867D19FA404C8FFEB603 /* Validation.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Validation.swift; path = Source/Validation.swift; sourceTree = "<group>"; };
+		DF78B795B57F80582BA190162C91F3F0 /* FIRMessagingCheckinStore.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingCheckinStore.m; path = FirebaseMessaging/Sources/Token/FIRMessagingCheckinStore.m; sourceTree = "<group>"; };
+		DF86B36F1AC668226F3955B575CE887F /* GULNetworkConstants.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULNetworkConstants.m; path = GoogleUtilities/Network/GULNetworkConstants.m; sourceTree = "<group>"; };
+		DFA08B716A8E4805E05ABD578C564025 /* CleverTapPushNotificationDelegate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTapPushNotificationDelegate.h; path = CleverTapSDK/CleverTapPushNotificationDelegate.h; sourceTree = "<group>"; };
+		DFCC6FE0A3CF1DE8539E5EDF04AED321 /* infoIcon.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = infoIcon.png; path = SwiftMessages/Resources/infoIcon.png; sourceTree = "<group>"; };
+		DFE9F678DBB5B6206CC9331EF03658F7 /* CollectionView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = CollectionView.swift; path = Parchment/Protocols/CollectionView.swift; sourceTree = "<group>"; };
+		DFFCF93529BF6801ED96C5666EF449E6 /* infoIconLight.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = infoIconLight.png; path = SwiftMessages/Resources/infoIconLight.png; sourceTree = "<group>"; };
+		DFFF7CAD884E0262D9B3A6C9946925C3 /* FBLPromise+Catch.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Catch.m"; path = "Sources/FBLPromises/FBLPromise+Catch.m"; sourceTree = "<group>"; };
+		E0936059163FCD74647AC5FB690BC873 /* PagingDistance.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingDistance.swift; path = Parchment/Structs/PagingDistance.swift; sourceTree = "<group>"; };
+		E0A1FF0CCA3916F8D83DCCC1EBA6F181 /* FBLPromise+Catch.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Catch.h"; path = "Sources/FBLPromises/include/FBLPromise+Catch.h"; sourceTree = "<group>"; };
+		E17DDFFA2040EE80A995DBF526A6C13B /* FIRCLSDemangleOperation.mm */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSDemangleOperation.mm; path = Crashlytics/Crashlytics/Operations/Symbolication/FIRCLSDemangleOperation.mm; sourceTree = "<group>"; };
+		E1BBF3307CC784BFA0DB78B59CA5262C /* URLSessionConfiguration+Alamofire.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "URLSessionConfiguration+Alamofire.swift"; path = "Source/URLSessionConfiguration+Alamofire.swift"; sourceTree = "<group>"; };
+		E1C388AFF19C24CD736891675FCED3BD /* SDWebImageCompat.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageCompat.h; path = SDWebImage/Core/SDWebImageCompat.h; sourceTree = "<group>"; };
+		E2101A1F0F39ADA8849223A02F98D09B /* UIImage+MemoryCacheCost.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIImage+MemoryCacheCost.m"; path = "SDWebImage/Core/UIImage+MemoryCacheCost.m"; sourceTree = "<group>"; };
+		E26AEDFCEE10C9098FA3FBB6082711D9 /* ButtonBarPagerTabStripViewController.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ButtonBarPagerTabStripViewController.swift; path = Sources/ButtonBarPagerTabStripViewController.swift; sourceTree = "<group>"; };
 		E2B63D462DB7F827C4B11FD51E4F8E2D /* FirebaseCore */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; name = FirebaseCore; path = FirebaseCore.framework; sourceTree = BUILT_PRODUCTS_DIR; };
-		E2FAB24C9EFAAE21DAB2D6F469B3B96B /* CTInAppNotification.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTInAppNotification.h; path = CleverTapSDK/CTInAppNotification.h; sourceTree = "<group>"; };
-		E30CC1203300308BF00922DDC1B1E465 /* nanopb-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "nanopb-umbrella.h"; sourceTree = "<group>"; };
-		E31664BE47B2C3497D11F647DF59069A /* ParameterEncoder.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ParameterEncoder.swift; path = Source/ParameterEncoder.swift; sourceTree = "<group>"; };
-		E31865E711FDC9A3E6EC61C5CF8660CF /* BaseButtonBarPagerTabStripViewController.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = BaseButtonBarPagerTabStripViewController.swift; path = Sources/BaseButtonBarPagerTabStripViewController.swift; sourceTree = "<group>"; };
-		E35BD291F61F7A5B46010AFF9BC84F34 /* DispatchQueue+Alamofire.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "DispatchQueue+Alamofire.swift"; path = "Source/DispatchQueue+Alamofire.swift"; sourceTree = "<group>"; };
-		E3FE1C9E86679E0513BCBEC34B287E69 /* FIRCLSProfiling.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSProfiling.h; path = Crashlytics/Crashlytics/Helpers/FIRCLSProfiling.h; sourceTree = "<group>"; };
-		E401B0712C2414DCA7CF2779BE816121 /* NSBezierPath+SDRoundedCorners.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "NSBezierPath+SDRoundedCorners.h"; path = "SDWebImage/Private/NSBezierPath+SDRoundedCorners.h"; sourceTree = "<group>"; };
-		E40345CDF112B4D9E29BDE79FB3ABA45 /* CTValidationResult.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTValidationResult.m; path = CleverTapSDK/CTValidationResult.m; sourceTree = "<group>"; };
-		E424A548431E747F5E002B9C1CA862D8 /* FirebaseCore.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FirebaseCore.debug.xcconfig; sourceTree = "<group>"; };
-		E4C123308546C3ACE890F20B448B1C81 /* GULApplication.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULApplication.h; path = GoogleUtilities/AppDelegateSwizzler/Public/GoogleUtilities/GULApplication.h; sourceTree = "<group>"; };
-		E4D9BC83C600ACC06D9CB95692323A7A /* FirebaseMessaging.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = FirebaseMessaging.modulemap; sourceTree = "<group>"; };
-		E4EA4D4BFDA8CE66D3A4D6468A02F115 /* GDTCCTUploader.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCCTUploader.m; path = GoogleDataTransport/GDTCCTLibrary/GDTCCTUploader.m; sourceTree = "<group>"; };
-		E50591C761DE0BCBB0DEBCA5A17E11D2 /* ScrollingFollowView-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "ScrollingFollowView-Info.plist"; sourceTree = "<group>"; };
-		E550304C18EA374235CD6DED76E51BCD /* SDWebImageDownloaderDecryptor.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageDownloaderDecryptor.h; path = SDWebImage/Core/SDWebImageDownloaderDecryptor.h; sourceTree = "<group>"; };
-		E584F29C8DDDEE49BD1C4C2290A1AB78 /* FBLPromise+Reduce.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Reduce.m"; path = "Sources/FBLPromises/FBLPromise+Reduce.m"; sourceTree = "<group>"; };
+		E2E329A2526A4B4AB0F156BD60B41FDD /* CTInAppDisplayViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTInAppDisplayViewController.m; path = CleverTapSDK/CTInAppDisplayViewController.m; sourceTree = "<group>"; };
+		E35C54EA4A62DEFD78EEC455670B06F9 /* SDWebImageDownloaderOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageDownloaderOperation.m; path = SDWebImage/Core/SDWebImageDownloaderOperation.m; sourceTree = "<group>"; };
+		E388BEB052637D4A214069F8DFFAB1D0 /* FIRCLSUserDefaults.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSUserDefaults.h; path = Crashlytics/Crashlytics/FIRCLSUserDefaults/FIRCLSUserDefaults.h; sourceTree = "<group>"; };
+		E409B55582C666D4707D4172EDFB4BE4 /* NSError+FIRMessaging.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "NSError+FIRMessaging.m"; path = "FirebaseMessaging/Sources/NSError+FIRMessaging.m"; sourceTree = "<group>"; };
+		E40EEC0969E7575D0057FE0605BE50E9 /* AnyPagingItem.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = AnyPagingItem.swift; path = Parchment/Structs/AnyPagingItem.swift; sourceTree = "<group>"; };
+		E467DB19A774982C87B9D225D6F14A12 /* infoIcon@2x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "infoIcon@2x.png"; path = "SwiftMessages/Resources/infoIcon@2x.png"; sourceTree = "<group>"; };
+		E476AC1C3D8DF310FE134E01AC0B0602 /* FIRDependency.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRDependency.h; path = FirebaseCore/Sources/Private/FIRDependency.h; sourceTree = "<group>"; };
+		E48CEB803BFDD3DE7394EA9A0774BD57 /* SDWebImageOptionsProcessor.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageOptionsProcessor.m; path = SDWebImage/Core/SDWebImageOptionsProcessor.m; sourceTree = "<group>"; };
+		E49568E0429B2A2B1F4815729744253E /* BaseButtonBarPagerTabStripViewController.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = BaseButtonBarPagerTabStripViewController.swift; path = Sources/BaseButtonBarPagerTabStripViewController.swift; sourceTree = "<group>"; };
+		E4FAFAD4CAF3236EDF706095FA0EDD06 /* FIRCLSUnwind.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSUnwind.c; path = Crashlytics/Crashlytics/Unwind/FIRCLSUnwind.c; sourceTree = "<group>"; };
+		E50DCB59700054609095E5EEE4F5323C /* Core.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Core.swift; path = Sources/Core.swift; sourceTree = "<group>"; };
+		E52CD80572EE0DF031217943025836D2 /* UserExperior.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = UserExperior.release.xcconfig; sourceTree = "<group>"; };
 		E59EBC47CDD888882ED048EC6F3B6265 /* CoreTelephony.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = CoreTelephony.framework; path = Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS14.0.sdk/System/Library/Frameworks/CoreTelephony.framework; sourceTree = DEVELOPER_DIR; };
-		E5A1F2B9875620F3348F65A855B5D063 /* FIRApp.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRApp.h; path = FirebaseCore/Sources/Public/FirebaseCore/FIRApp.h; sourceTree = "<group>"; };
-		E5C3168052191C61CCCEC7294643C46C /* FIRDependency.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRDependency.h; path = FirebaseCore/Sources/Private/FIRDependency.h; sourceTree = "<group>"; };
-		E5E3FE7215A80A345F9E418555DED574 /* CTImageInAppViewControllerPrivate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTImageInAppViewControllerPrivate.h; path = CleverTapSDK/InApps/CTImageInAppViewControllerPrivate.h; sourceTree = "<group>"; };
-		E605C334687A21BC2A128D763C688DE1 /* FloatingPanel-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "FloatingPanel-dummy.m"; sourceTree = "<group>"; };
-		E62B0163976140745687595BB6C9137D /* CTProfileBuilder.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTProfileBuilder.h; path = CleverTapSDK/CTProfileBuilder.h; sourceTree = "<group>"; };
-		E6459998EE334D1511F26509690E48ED /* FIRComponentContainer.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRComponentContainer.h; path = FirebaseCore/Sources/Private/FIRComponentContainer.h; sourceTree = "<group>"; };
-		E65F8BCC8F952892C5C595B8E6FB0360 /* GULNetworkURLSession.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULNetworkURLSession.m; path = GoogleUtilities/Network/GULNetworkURLSession.m; sourceTree = "<group>"; };
-		E69FED45813A1900B4D7E59A87AE735A /* CTInterstitialViewController~ipadland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTInterstitialViewController~ipadland.xib"; path = "CleverTapSDK/InApps/resources/CTInterstitialViewController~ipadland.xib"; sourceTree = "<group>"; };
-		E6B456D95207254195D61D2AD9EE88A6 /* FBLPromises.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FBLPromises.h; path = Sources/FBLPromises/include/FBLPromises.h; sourceTree = "<group>"; };
-		E6DDDCAB7A440B3BA561926EE11E5539 /* CTVideoThumbnailGenerator.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTVideoThumbnailGenerator.h; path = CleverTapSDK/Inbox/views/CTVideoThumbnailGenerator.h; sourceTree = "<group>"; };
-		E770F80DD9A0749284370ED9086E0243 /* FIRComponentContainer.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRComponentContainer.m; path = FirebaseCore/Sources/FIRComponentContainer.m; sourceTree = "<group>"; };
-		E7DEDD864858B0FC1893DAC80EF8A568 /* CTUriHelper.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTUriHelper.m; path = CleverTapSDK/CTUriHelper.m; sourceTree = "<group>"; };
-		E8037344C3336D374EB394DA46345487 /* FIRCLSMultipartMimeStreamEncoder.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSMultipartMimeStreamEncoder.h; path = Crashlytics/Shared/FIRCLSNetworking/FIRCLSMultipartMimeStreamEncoder.h; sourceTree = "<group>"; };
-		E820FA651238988AE2F089EFF6CCEFF7 /* SDWebImage-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "SDWebImage-Info.plist"; sourceTree = "<group>"; };
-		E8456D9DE3C5F9C1C412F93EEB271DFE /* FIRLogger.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRLogger.m; path = FirebaseCore/Sources/FIRLogger.m; sourceTree = "<group>"; };
-		E8863E0E4AB98E0D86A6F34C048527F4 /* FBLPromise+Race.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Race.h"; path = "Sources/FBLPromises/include/FBLPromise+Race.h"; sourceTree = "<group>"; };
-		E88C42BA505B2F223269AA445644DC30 /* youtube-ios-player-helper-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "youtube-ios-player-helper-prefix.pch"; sourceTree = "<group>"; };
-		E9746C7D95991947E02339799B2B0BAD /* MessageView.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = MessageView.xib; path = SwiftMessages/Resources/MessageView.xib; sourceTree = "<group>"; };
-		E991D622C40E76B70D2D189BCD72FC63 /* pb_common.c */ = {isa = PBXFileReference; includeInIndex = 1; path = pb_common.c; sourceTree = "<group>"; };
-		EA4701F35A783A36008100E6A5AB19D0 /* CTInAppUtils.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTInAppUtils.m; path = CleverTapSDK/CTInAppUtils.m; sourceTree = "<group>"; };
-		EA5C706367B65467F6D1BE1AE32AA2ED /* GULHeartbeatDateStorageUserDefaults.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULHeartbeatDateStorageUserDefaults.m; path = GoogleUtilities/Environment/GULHeartbeatDateStorageUserDefaults.m; sourceTree = "<group>"; };
-		EACDF119791B69E3FCE90A43206DB4EB /* SDWebImagePrefetcher.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImagePrefetcher.h; path = SDWebImage/Core/SDWebImagePrefetcher.h; sourceTree = "<group>"; };
-		EACEF3C28EC3EFDCE1FAB43430D241CE /* CTImageInAppViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTImageInAppViewController.m; path = CleverTapSDK/InApps/CTImageInAppViewController.m; sourceTree = "<group>"; };
-		EAD92B743E2D993D4E2501134ADC4EC8 /* SDGraphicsImageRenderer.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDGraphicsImageRenderer.h; path = SDWebImage/Core/SDGraphicsImageRenderer.h; sourceTree = "<group>"; };
-		EAFED567036441E98202813C3610FDA8 /* FIRMessagingAPNSInfo.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingAPNSInfo.m; path = FirebaseMessaging/Sources/Token/FIRMessagingAPNSInfo.m; sourceTree = "<group>"; };
-		EB71792A8C5CF831A1AC68D14F86071B /* SDmetamacros.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDmetamacros.h; path = SDWebImage/Private/SDmetamacros.h; sourceTree = "<group>"; };
-		EBA3F06D4F0E1F25A9F70BA2F26725D9 /* FIRAnalyticsConfiguration.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRAnalyticsConfiguration.h; path = FirebaseCore/Sources/FIRAnalyticsConfiguration.h; sourceTree = "<group>"; };
-		EC1FB0C242C138B995F03D7C032EFD3A /* OTPTextField.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = OTPTextField.swift; path = OTPFieldView/OTPTextField.swift; sourceTree = "<group>"; };
-		EC25B665DCA4BD7B33979CC3C8C09193 /* pb_decode.c */ = {isa = PBXFileReference; includeInIndex = 1; path = pb_decode.c; sourceTree = "<group>"; };
-		EC8C15AE473EBE0B7A3A112D72727815 /* PagingFiniteDataSource.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingFiniteDataSource.swift; path = Parchment/Classes/PagingFiniteDataSource.swift; sourceTree = "<group>"; };
-		ECD9875F202CA6E058B60F7858A2B20C /* CleverTapInstanceConfig.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTapInstanceConfig.m; path = CleverTapSDK/CleverTapInstanceConfig.m; sourceTree = "<group>"; };
-		ED09012BDCA76AF2BA49EBF5D2B89E30 /* Identifiable.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Identifiable.swift; path = SwiftMessages/Identifiable.swift; sourceTree = "<group>"; };
-		ED3103B3413297BCB907426276C01FEB /* CTPlistInfo.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTPlistInfo.m; path = CleverTapSDK/CTPlistInfo.m; sourceTree = "<group>"; };
-		ED39822DDB11D20FDE7BD2C5CE635B74 /* GULMutableDictionary.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULMutableDictionary.h; path = GoogleUtilities/Network/Public/GoogleUtilities/GULMutableDictionary.h; sourceTree = "<group>"; };
-		EDBB4D41B01AE6C8D3569D00C1585644 /* FIRComponent.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRComponent.h; path = FirebaseCore/Sources/Private/FIRComponent.h; sourceTree = "<group>"; };
-		EDD90D293003EF96572D854A0B7D39B2 /* successIconSubtle@2x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "successIconSubtle@2x.png"; path = "SwiftMessages/Resources/successIconSubtle@2x.png"; sourceTree = "<group>"; };
-		EE134E8AAD16F8482B70C12CCCBE88C5 /* IQUIViewController+Additions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "IQUIViewController+Additions.swift"; path = "IQKeyboardManagerSwift/Categories/IQUIViewController+Additions.swift"; sourceTree = "<group>"; };
-		EE2F0B11C7EC41AAC4154A8AA5F0BE03 /* SDWebImageDownloaderResponseModifier.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageDownloaderResponseModifier.m; path = SDWebImage/Core/SDWebImageDownloaderResponseModifier.m; sourceTree = "<group>"; };
-		EE69027FE7A0C3FF74BD20CCC28400D4 /* PagingIndicatorOptions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingIndicatorOptions.swift; path = Parchment/Enums/PagingIndicatorOptions.swift; sourceTree = "<group>"; };
-		EE8353BB4CED7EE28A6D74B1B88C3FDC /* CTCoverViewController~iphoneland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTCoverViewController~iphoneland.xib"; path = "CleverTapSDK/InApps/resources/CTCoverViewController~iphoneland.xib"; sourceTree = "<group>"; };
-		EEA27F98791E62DEC63436FFCE1D7E3B /* FIRCLSBinaryImage.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSBinaryImage.h; path = Crashlytics/Crashlytics/Components/FIRCLSBinaryImage.h; sourceTree = "<group>"; };
-		EF04EBC3BD1D5436E2C93D6B1F1EFAB2 /* FIRMessagingTopicsCommon.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingTopicsCommon.h; path = FirebaseMessaging/Sources/FIRMessagingTopicsCommon.h; sourceTree = "<group>"; };
-		EF09F0E150492AD999579D2F32372115 /* SDInternalMacros.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDInternalMacros.h; path = SDWebImage/Private/SDInternalMacros.h; sourceTree = "<group>"; };
-		EF18EB8307AB1649D16BF0F16BF2C140 /* FIRInstallationsStore.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallationsStore.m; path = FirebaseInstallations/Source/Library/InstallationsStore/FIRInstallationsStore.m; sourceTree = "<group>"; };
-		EF66925EE925F385CA967739CF613C73 /* FirebaseCoreDiagnostics-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "FirebaseCoreDiagnostics-Info.plist"; sourceTree = "<group>"; };
-		EFA666B5436B5E71B1D5A5063F8965FA /* CTHeaderViewController~iphoneland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTHeaderViewController~iphoneland.xib"; path = "CleverTapSDK/InApps/resources/CTHeaderViewController~iphoneland.xib"; sourceTree = "<group>"; };
-		EFB3F2C98B9D1A77CA1DCFF333FB533A /* CTInAppHTMLViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTInAppHTMLViewController.m; path = CleverTapSDK/InApps/CTInAppHTMLViewController.m; sourceTree = "<group>"; };
-		EFD2824386A2C366E0A2780060C4149F /* GDTCORClock.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORClock.h; path = GoogleDataTransport/GDTCORLibrary/Public/GoogleDataTransport/GDTCORClock.h; sourceTree = "<group>"; };
-		EFD95CF9BFB00C4D7022332AE8B700A8 /* warningIcon@2x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "warningIcon@2x.png"; path = "SwiftMessages/Resources/warningIcon@2x.png"; sourceTree = "<group>"; };
-		EFDBC240A0B86A8D4F6C768A433BA564 /* LayoutReferences.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = LayoutReferences.swift; path = Sources/LayoutReferences.swift; sourceTree = "<group>"; };
-		EFE4B31F03F05F2536FAB4C4817673AB /* PhysicsPanHandler.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PhysicsPanHandler.swift; path = SwiftMessages/PhysicsPanHandler.swift; sourceTree = "<group>"; };
-		EFE7D08A301F6C78F989817B6203DCB1 /* PagingMenuDataSource.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingMenuDataSource.swift; path = Parchment/Protocols/PagingMenuDataSource.swift; sourceTree = "<group>"; };
-		EFE97701B7966715E51D553F88B48C12 /* CTFooterViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTFooterViewController.h; path = CleverTapSDK/InApps/CTFooterViewController.h; sourceTree = "<group>"; };
-		F03D1D75E30F1EB86C730B3A06BF856B /* CTFooterViewController~ipadland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTFooterViewController~ipadland.xib"; path = "CleverTapSDK/InApps/resources/CTFooterViewController~ipadland.xib"; sourceTree = "<group>"; };
-		F080303CB4105F7DA5D0F255EB677AB6 /* FIRAnalyticsConfiguration.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRAnalyticsConfiguration.m; path = FirebaseCore/Sources/FIRAnalyticsConfiguration.m; sourceTree = "<group>"; };
-		F08567D0E83DC1661A873F1CB6DF7932 /* UIImage+Transform.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "UIImage+Transform.h"; path = "SDWebImage/Core/UIImage+Transform.h"; sourceTree = "<group>"; };
-		F0AAD166C6FEC321EE3897E8715C08AA /* FirebaseMessaging.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FirebaseMessaging.release.xcconfig; sourceTree = "<group>"; };
-		F10E9870F8CA27A6FF69BDC61453839A /* IndicatorInfo.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = IndicatorInfo.swift; path = Sources/IndicatorInfo.swift; sourceTree = "<group>"; };
-		F1328AD55D1F788D3885252AAEB74E2D /* FIRCLSNetworkOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSNetworkOperation.m; path = Crashlytics/Crashlytics/Settings/Operations/FIRCLSNetworkOperation.m; sourceTree = "<group>"; };
-		F14309300ECA326DB7E64023954D7586 /* CornerRoundingView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = CornerRoundingView.swift; path = SwiftMessages/CornerRoundingView.swift; sourceTree = "<group>"; };
-		F17BBBAA46C5E73B8852F599E280BC8D /* FIRStackFrame_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRStackFrame_Private.h; path = Crashlytics/Crashlytics/Private/FIRStackFrame_Private.h; sourceTree = "<group>"; };
-		F1C38274A3F6FC3983ECEFCF7ACCD355 /* CTInboxUtils.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTInboxUtils.m; path = CleverTapSDK/Inbox/models/CTInboxUtils.m; sourceTree = "<group>"; };
-		F1C3C5A299ACD1072598F8C5EAD35B4C /* CTValidator.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTValidator.h; path = CleverTapSDK/CTValidator.h; sourceTree = "<group>"; };
-		F1CA2581134930FC69356E9C3CE0AC96 /* GDTCORTransport_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORTransport_Private.h; path = GoogleDataTransport/GDTCORLibrary/Private/GDTCORTransport_Private.h; sourceTree = "<group>"; };
+		E5DC56939D6CAEEABE7A3134AFFE8B2A /* FIRCLSOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSOperation.h; path = Crashlytics/Shared/FIRCLSOperation/FIRCLSOperation.h; sourceTree = "<group>"; };
+		E60043E3743DC02B9CEA6A2BCD6783E6 /* PagingMenuItemSize.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingMenuItemSize.swift; path = Parchment/Enums/PagingMenuItemSize.swift; sourceTree = "<group>"; };
+		E6099841E9DDF359D18EFE372967468F /* CleverTap.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CleverTap.h; path = CleverTapSDK/CleverTap.h; sourceTree = "<group>"; };
+		E633ACCA005798F5A7B651288910CFB1 /* NSDictionary+FIRMessaging.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "NSDictionary+FIRMessaging.m"; path = "FirebaseMessaging/Sources/NSDictionary+FIRMessaging.m"; sourceTree = "<group>"; };
+		E63DC0AE3046405C467519A2374EDF2B /* EventMonitor.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = EventMonitor.swift; path = Source/EventMonitor.swift; sourceTree = "<group>"; };
+		E64FDADA18580BB8E3B4AE15A92D60F6 /* Alamofire-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "Alamofire-Info.plist"; sourceTree = "<group>"; };
+		E6BE83CFCE0F7A4AB35123BC2D0F813B /* FIRAnalyticsConfiguration.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRAnalyticsConfiguration.m; path = FirebaseCore/Sources/FIRAnalyticsConfiguration.m; sourceTree = "<group>"; };
+		E6CD202B2186830E9B5B88003916264D /* FIRBundleUtil.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRBundleUtil.m; path = FirebaseCore/Sources/FIRBundleUtil.m; sourceTree = "<group>"; };
+		E6E519122CDB4052CD2F3E97AE6A13CF /* FIRMessagingKeychain.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingKeychain.m; path = FirebaseMessaging/Sources/Token/FIRMessagingKeychain.m; sourceTree = "<group>"; };
+		E6F9DE15B3A3C15AF0F3610DC0009FA4 /* CTInterstitialViewController~ipad.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTInterstitialViewController~ipad.xib"; path = "CleverTapSDK/InApps/resources/CTInterstitialViewController~ipad.xib"; sourceTree = "<group>"; };
+		E77656B6F69A942FFC046BD415E2946E /* SDWebImageDownloaderConfig.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageDownloaderConfig.m; path = SDWebImage/Core/SDWebImageDownloaderConfig.m; sourceTree = "<group>"; };
+		E7B417DAB5FFFF371264E9E54941902E /* CTInterstitialImageViewController~iphoneland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTInterstitialImageViewController~iphoneland.xib"; path = "CleverTapSDK/InApps/resources/CTInterstitialImageViewController~iphoneland.xib"; sourceTree = "<group>"; };
+		E7D008D364D7488E854AB57A40C3936B /* SDImageCoder.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageCoder.m; path = SDWebImage/Core/SDImageCoder.m; sourceTree = "<group>"; };
+		E8AD5AA962083C011214D5AECB801E4F /* ic_pause@1x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "ic_pause@1x.png"; path = "CleverTapSDK/Inbox/resources/ic_pause@1x.png"; sourceTree = "<group>"; };
+		E8C40A551AFB485658AC4646F2D1B32B /* FIRInstallationsStoredAuthToken.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallationsStoredAuthToken.m; path = FirebaseInstallations/Source/Library/InstallationsStore/FIRInstallationsStoredAuthToken.m; sourceTree = "<group>"; };
+		E8DDAD2F17B7C00DF059F1921AFDE4F8 /* GDTCORAssert.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCORAssert.m; path = GoogleDataTransport/GDTCORLibrary/GDTCORAssert.m; sourceTree = "<group>"; };
+		E8E2B805A7F01EA5375A44D363B043B4 /* FIRCLSUtility.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSUtility.h; path = Crashlytics/Crashlytics/Helpers/FIRCLSUtility.h; sourceTree = "<group>"; };
+		E8E9DF5247C5BAB10D24729432CC9889 /* BarView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = BarView.swift; path = Sources/BarView.swift; sourceTree = "<group>"; };
+		E8FF85E09CB841AB5271415B84CA04E8 /* IQKeyboardManagerSwift-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "IQKeyboardManagerSwift-umbrella.h"; sourceTree = "<group>"; };
+		E935BFB241DDABBFDD14491001995F80 /* ic_pause@2x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "ic_pause@2x.png"; path = "CleverTapSDK/Inbox/resources/ic_pause@2x.png"; sourceTree = "<group>"; };
+		E9815F6AF3BDDCD1F1BD4B939A4753AC /* SDImageTransformer.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageTransformer.m; path = SDWebImage/Core/SDImageTransformer.m; sourceTree = "<group>"; };
+		E9AA3CFBBDE1AF54675E3F3A991DF582 /* IQUIView+IQKeyboardToolbar.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "IQUIView+IQKeyboardToolbar.swift"; path = "IQKeyboardManagerSwift/IQToolbar/IQUIView+IQKeyboardToolbar.swift"; sourceTree = "<group>"; };
+		E9E0CCE9590682F227B99D90F95D9C4B /* SDWebImageDownloaderDecryptor.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDWebImageDownloaderDecryptor.m; path = SDWebImage/Core/SDWebImageDownloaderDecryptor.m; sourceTree = "<group>"; };
+		EA2913C4AEAF5398E93DE7EA0F8F59AB /* FIRCLSCrashedMarkerFile.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSCrashedMarkerFile.h; path = Crashlytics/Crashlytics/Components/FIRCLSCrashedMarkerFile.h; sourceTree = "<group>"; };
+		EA3724F59CC3A9F721E4AD40D3A31EB1 /* FIRAnalyticsInteropListener.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRAnalyticsInteropListener.h; path = Interop/Analytics/Public/FIRAnalyticsInteropListener.h; sourceTree = "<group>"; };
+		EA6444E2D780213117CE1F1B67DBEB34 /* FIRCLSMetricKitManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSMetricKitManager.m; path = Crashlytics/Crashlytics/Controllers/FIRCLSMetricKitManager.m; sourceTree = "<group>"; };
+		EAA4A4EE06B754BE734FEA4BD8184B02 /* FIRMessagingPersistentSyncMessage.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingPersistentSyncMessage.m; path = FirebaseMessaging/Sources/FIRMessagingPersistentSyncMessage.m; sourceTree = "<group>"; };
+		EAA4B35385D2E6FECDE30E6B5F03CF15 /* FIRMessagingRmqManager.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingRmqManager.m; path = FirebaseMessaging/Sources/FIRMessagingRmqManager.m; sourceTree = "<group>"; };
+		EADA3E7AFA9DDB06EEB54B557F8966BD /* OTPFieldView.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = OTPFieldView.release.xcconfig; sourceTree = "<group>"; };
+		EB0B91B6D44640FF990C229622D4F7AD /* FIRMessagingRemoteNotificationsProxy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingRemoteNotificationsProxy.m; path = FirebaseMessaging/Sources/FIRMessagingRemoteNotificationsProxy.m; sourceTree = "<group>"; };
+		EB68F7D262037653E9B07007B9702F3A /* Logger.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = Logger.swift; path = Sources/Logger.swift; sourceTree = "<group>"; };
+		EC07E020F1E33BA16C3E45096712A0C0 /* FIRCoreDiagnosticsConnector.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCoreDiagnosticsConnector.h; path = FirebaseCore/Sources/Private/FIRCoreDiagnosticsConnector.h; sourceTree = "<group>"; };
+		EC1AC7799753937B966CFDD579689734 /* CTUserMO.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTUserMO.h; path = CleverTapSDK/Inbox/models/CTUserMO.h; sourceTree = "<group>"; };
+		EC244EC35F6EB66D6E545E9E83FFE436 /* FIRMessagingTokenInfo.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingTokenInfo.m; path = FirebaseMessaging/Sources/Token/FIRMessagingTokenInfo.m; sourceTree = "<group>"; };
+		EC652EBBFBA51810EE9DFD3906776D14 /* CTInterstitialImageViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTInterstitialImageViewController.h; path = CleverTapSDK/InApps/CTInterstitialImageViewController.h; sourceTree = "<group>"; };
+		EC794600E2E08595155A89148ABA7E6D /* CTInboxController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTInboxController.h; path = CleverTapSDK/Inbox/controllers/CTInboxController.h; sourceTree = "<group>"; };
+		ECA92E1742AF14B1A8AB859BE2E9BC40 /* CTFeatureFlagsController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTFeatureFlagsController.m; path = CleverTapSDK/FeatureFlags/controllers/CTFeatureFlagsController.m; sourceTree = "<group>"; };
+		ECCA8E0C743BB77CD8B16B5FC777942A /* FBLPromise+Always.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Always.h"; path = "Sources/FBLPromises/include/FBLPromise+Always.h"; sourceTree = "<group>"; };
+		ECD534B0F133A4B7A05BD37B7CE0663B /* errorIconLight@2x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "errorIconLight@2x.png"; path = "SwiftMessages/Resources/errorIconLight@2x.png"; sourceTree = "<group>"; };
+		ED03C315026FAEB9F69D6E197FCAB3AB /* FIRCLSCompoundOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSCompoundOperation.m; path = Crashlytics/Shared/FIRCLSOperation/FIRCLSCompoundOperation.m; sourceTree = "<group>"; };
+		ED70893AEE70AB0A0B5EFAA22FFCDFB5 /* CleverTapJSInterface.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CleverTapJSInterface.m; path = CleverTapSDK/CleverTapJSInterface.m; sourceTree = "<group>"; };
+		EDA17B70B2028F4949598050DE199D60 /* ScrollingFollowView.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = ScrollingFollowView.release.xcconfig; sourceTree = "<group>"; };
+		EDAEF516303EF8FE0BD1061BA065515D /* CleverTapInboxViewController.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = CleverTapInboxViewController.xib; path = CleverTapSDK/Inbox/resources/CleverTapInboxViewController.xib; sourceTree = "<group>"; };
+		EDDBBBA95E76D1D831B86321E819CD42 /* YTPlayerView.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = YTPlayerView.h; path = Classes/YTPlayerView.h; sourceTree = "<group>"; };
+		EDED5021C6D904082B244DE47F3151AF /* ct_default_portrait_image.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = ct_default_portrait_image.png; path = CleverTapSDK/Inbox/resources/ct_default_portrait_image.png; sourceTree = "<group>"; };
+		EDFCCAE7AD51409F5EFD17618414D666 /* SDImageCachesManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDImageCachesManager.h; path = SDWebImage/Core/SDImageCachesManager.h; sourceTree = "<group>"; };
+		EE180BEAD1B5D317D9FA99393658D9BE /* FIRCLSReportManager_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSReportManager_Private.h; path = Crashlytics/Crashlytics/Controllers/FIRCLSReportManager_Private.h; sourceTree = "<group>"; };
+		EE23E1BF1A02EC37581EB928741B0816 /* IQUIView+Hierarchy.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "IQUIView+Hierarchy.swift"; path = "IQKeyboardManagerSwift/Categories/IQUIView+Hierarchy.swift"; sourceTree = "<group>"; };
+		EE3FD3BAFF22CD24A13EF6FBB0E1C843 /* FIRMessagingUtilities.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingUtilities.m; path = FirebaseMessaging/Sources/FIRMessagingUtilities.m; sourceTree = "<group>"; };
+		EE5B39D2958FFED65CEC3DEA93939570 /* FIRCLSdSYM.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSdSYM.m; path = Crashlytics/Shared/FIRCLSMachO/FIRCLSdSYM.m; sourceTree = "<group>"; };
+		EE61C3B19FD0D7D91BC353A538CDBBA9 /* Parchment-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "Parchment-prefix.pch"; sourceTree = "<group>"; };
+		EEBC24ADD24050B7EE7CC4428E941A02 /* warningIconLight@3x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "warningIconLight@3x.png"; path = "SwiftMessages/Resources/warningIconLight@3x.png"; sourceTree = "<group>"; };
+		EED80F8EC9AD4C4AB102FDCC29578FB7 /* GoogleDataTransport.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = GoogleDataTransport.debug.xcconfig; sourceTree = "<group>"; };
+		EEED50A61EA1E260231F26D8190EEACB /* FIRMessagingBackupExcludedPlist.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingBackupExcludedPlist.m; path = FirebaseMessaging/Sources/Token/FIRMessagingBackupExcludedPlist.m; sourceTree = "<group>"; };
+		EF119B1111956F3D2D98A25E4661876A /* WindowScene.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = WindowScene.swift; path = SwiftMessages/WindowScene.swift; sourceTree = "<group>"; };
+		EF66DFE2368BE8344BAE8F89BA7A1DDB /* CleverTap+SSLPinning.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "CleverTap+SSLPinning.h"; path = "CleverTapSDK/CleverTap+SSLPinning.h"; sourceTree = "<group>"; };
+		EF6EC3CCC63811003787D0F48418DF44 /* OperationQueue+Alamofire.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "OperationQueue+Alamofire.swift"; path = "Source/OperationQueue+Alamofire.swift"; sourceTree = "<group>"; };
+		EFB1998FB8C249A939475E0E99BD5292 /* RequestInterceptor.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = RequestInterceptor.swift; path = Source/RequestInterceptor.swift; sourceTree = "<group>"; };
+		F0956DB013E8E51556DE7326D273F26E /* FBLPromise+Race.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Race.m"; path = "Sources/FBLPromises/FBLPromise+Race.m"; sourceTree = "<group>"; };
+		F0AFBA6E4ACD46F2CB7E103C47ACAB5D /* FIRMessagingCheckinStore.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingCheckinStore.h; path = FirebaseMessaging/Sources/Token/FIRMessagingCheckinStore.h; sourceTree = "<group>"; };
+		F0C2DDCA931302A402432E095AC88073 /* FloatingPanel.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FloatingPanel.release.xcconfig; sourceTree = "<group>"; };
+		F111837584FB1E01945CD35A38F54387 /* CTConstants.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTConstants.m; path = CleverTapSDK/CTConstants.m; sourceTree = "<group>"; };
+		F130B5FA55ABF6D4CF62A78EFC8861DE /* GULNetworkConstants.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULNetworkConstants.h; path = GoogleUtilities/Network/Public/GoogleUtilities/GULNetworkConstants.h; sourceTree = "<group>"; };
+		F157AB646D2F7289B78AAD499BB95C8C /* IQNSArray+Sort.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "IQNSArray+Sort.swift"; path = "IQKeyboardManagerSwift/Categories/IQNSArray+Sort.swift"; sourceTree = "<group>"; };
 		F1DDEA945255A18F0B9913AB1C2AB718 /* XLPagerTabStrip */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; name = XLPagerTabStrip; path = XLPagerTabStrip.framework; sourceTree = BUILT_PRODUCTS_DIR; };
-		F238856BD43D6E810319390CE31EB175 /* errorIconLight@2x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "errorIconLight@2x.png"; path = "SwiftMessages/Resources/errorIconLight@2x.png"; sourceTree = "<group>"; };
-		F2A7E303B90CBA1A05BADCF4BFF61546 /* FIRCoreDiagnosticsConnector.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCoreDiagnosticsConnector.h; path = FirebaseCore/Sources/Private/FIRCoreDiagnosticsConnector.h; sourceTree = "<group>"; };
-		F3D4027B50A0398559E370D966BAD364 /* CTInAppDisplayViewControllerPrivate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTInAppDisplayViewControllerPrivate.h; path = CleverTapSDK/CTInAppDisplayViewControllerPrivate.h; sourceTree = "<group>"; };
-		F4171CA7A6BE493316D9DDF1EE915EB7 /* CTUserMO.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTUserMO.m; path = CleverTapSDK/Inbox/models/CTUserMO.m; sourceTree = "<group>"; };
+		F1F75EA49F1474D60F49B2AF96894E84 /* CTCoverViewController.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTCoverViewController.h; path = CleverTapSDK/InApps/CTCoverViewController.h; sourceTree = "<group>"; };
+		F1FC5AE05ADC062C360E95799BDCB922 /* MultipartFormData.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = MultipartFormData.swift; path = Source/MultipartFormData.swift; sourceTree = "<group>"; };
+		F2C9F0D283A9A14D5122F145DB258D24 /* FIRMessagingTokenStore.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingTokenStore.m; path = FirebaseMessaging/Sources/Token/FIRMessagingTokenStore.m; sourceTree = "<group>"; };
+		F301034A45D7615D43DD7D1820B95F2B /* FIRMessagingConstants.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingConstants.h; path = FirebaseMessaging/Sources/FIRMessagingConstants.h; sourceTree = "<group>"; };
+		F30D79F57373DA4034C77F3EEA892011 /* FirebaseCore-Info.plist */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.plist.xml; path = "FirebaseCore-Info.plist"; sourceTree = "<group>"; };
+		F330AC164C455AB9D6EDF133C1BA346F /* SDWeakProxy.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWeakProxy.h; path = SDWebImage/Private/SDWeakProxy.h; sourceTree = "<group>"; };
+		F3448DEF6CFEB209D3D5D467A731B213 /* youtube-ios-player-helper.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = "youtube-ios-player-helper.modulemap"; sourceTree = "<group>"; };
+		F35EEB79894EDA6A75723A67A459A175 /* FIRAppInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRAppInternal.h; path = FirebaseCore/Sources/Private/FIRAppInternal.h; sourceTree = "<group>"; };
+		F3B3ECD4F063AD3F66C7D14C3D442F59 /* FIRHeartbeatInfo.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRHeartbeatInfo.h; path = FirebaseCore/Sources/Private/FIRHeartbeatInfo.h; sourceTree = "<group>"; };
+		F3DD0988E4A7913DBE5085B3FB06012C /* AccessibleMessage.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = AccessibleMessage.swift; path = SwiftMessages/AccessibleMessage.swift; sourceTree = "<group>"; };
+		F3EE747811778E93B0CF44340860AC42 /* CTInAppNotification.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTInAppNotification.m; path = CleverTapSDK/CTInAppNotification.m; sourceTree = "<group>"; };
+		F456774B3F44E37DD150156D7FB38339 /* warningIcon.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = warningIcon.png; path = SwiftMessages/Resources/warningIcon.png; sourceTree = "<group>"; };
 		F456B1C22603F72A697F88E3EB9AF8D5 /* Pods-OpenBook-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "Pods-OpenBook-umbrella.h"; sourceTree = "<group>"; };
-		F45969B8D40B039F947506B5E787C825 /* GoogleAppMeasurement-xcframeworks.sh */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.script.sh; path = "GoogleAppMeasurement-xcframeworks.sh"; sourceTree = "<group>"; };
-		F467FC7BE95BECA00A57FED5303DDFAA /* FIRCLSNotificationManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSNotificationManager.h; path = Crashlytics/Crashlytics/Controllers/FIRCLSNotificationManager.h; sourceTree = "<group>"; };
-		F4D647209369DF9A624DC0E7843DE313 /* FIRDependency.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRDependency.h; path = FirebaseCore/Sources/Private/FIRDependency.h; sourceTree = "<group>"; };
-		F56B7F94ABA008990F8315E4F1D8225A /* AlamofireNetworkActivityLogger.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = AlamofireNetworkActivityLogger.debug.xcconfig; sourceTree = "<group>"; };
-		F570B429E4C673A409F19D1C3115AD28 /* PromisesObjC-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "PromisesObjC-dummy.m"; sourceTree = "<group>"; };
-		F58535D86E5CAEF96331D9B139FB4BB6 /* UserExperior.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = UserExperior.release.xcconfig; sourceTree = "<group>"; };
-		F5A8D889728931C03B5D2E2A2B6301F1 /* CTValidationResult.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTValidationResult.h; path = CleverTapSDK/CTValidationResult.h; sourceTree = "<group>"; };
-		F5EAB929C29D1B056B6470B0DB615E96 /* SDAsyncBlockOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDAsyncBlockOperation.h; path = SDWebImage/Private/SDAsyncBlockOperation.h; sourceTree = "<group>"; };
-		F5FFB783658B3F782BDC4BFDDC435429 /* IQUIScrollView+Additions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "IQUIScrollView+Additions.swift"; path = "IQKeyboardManagerSwift/Categories/IQUIScrollView+Additions.swift"; sourceTree = "<group>"; };
-		F67248B79FA73806F40DBE106A0C1B64 /* FIRInstallationsStoredAuthToken.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRInstallationsStoredAuthToken.m; path = FirebaseInstallations/Source/Library/InstallationsStore/FIRInstallationsStoredAuthToken.m; sourceTree = "<group>"; };
-		F683079EFA9BFD4160D7FEB0C9B82862 /* GDTCORReachability_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORReachability_Private.h; path = GoogleDataTransport/GDTCORLibrary/Private/GDTCORReachability_Private.h; sourceTree = "<group>"; };
-		F6A5C785D8104E9A994DCD940D56D5B3 /* SwiftLint.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = SwiftLint.release.xcconfig; sourceTree = "<group>"; };
-		F6CC46F4158AD630047081D6F004E07F /* CTEventBuilder.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTEventBuilder.m; path = CleverTapSDK/CTEventBuilder.m; sourceTree = "<group>"; };
-		F6CCB830B848A97FC3CF7B0C805B885C /* FIRCLSFileManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSFileManager.h; path = Crashlytics/Crashlytics/Models/FIRCLSFileManager.h; sourceTree = "<group>"; };
-		F74A81D38E4501D24289C3E0359AABAD /* FIRCLSByteUtility.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSByteUtility.m; path = Crashlytics/Shared/FIRCLSByteUtility.m; sourceTree = "<group>"; };
-		F7ED4941776C5F7F841E154033F59E68 /* GULSwizzler.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULSwizzler.h; path = GoogleUtilities/MethodSwizzler/Public/GoogleUtilities/GULSwizzler.h; sourceTree = "<group>"; };
-		F7F5434EDDE96C02573821A2AA214235 /* FBLPromise+Retry.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "FBLPromise+Retry.h"; path = "Sources/FBLPromises/include/FBLPromise+Retry.h"; sourceTree = "<group>"; };
-		F8DAE6B91D6DCFA18A620DB34F747BB7 /* FBLPromise+Race.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Race.m"; path = "Sources/FBLPromises/FBLPromise+Race.m"; sourceTree = "<group>"; };
-		F90777A2B706BDF9B6AC2E27AFCE65CD /* CTInboxSimpleMessageCell.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTInboxSimpleMessageCell.m; path = CleverTapSDK/Inbox/cells/CTInboxSimpleMessageCell.m; sourceTree = "<group>"; };
-		F917DF6E30EFB5EF06DFA42641254371 /* AlamofireNetworkActivityLogger.modulemap */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.module; path = AlamofireNetworkActivityLogger.modulemap; sourceTree = "<group>"; };
-		F9642EB22F43196813478A247367864F /* ButtonCell.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = ButtonCell.xib; path = Sources/ButtonCell.xib; sourceTree = "<group>"; };
-		F9751716552BC5A0EA3F840BFD65CD11 /* UIColor+interpolation.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "UIColor+interpolation.swift"; path = "Parchment/Extensions/UIColor+interpolation.swift"; sourceTree = "<group>"; };
-		F98EA63EA8AF8F9D72EAD3FEE1EC44BC /* GDTCORDirectorySizeTracker.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCORDirectorySizeTracker.h; path = GoogleDataTransport/GDTCORLibrary/Internal/GDTCORDirectorySizeTracker.h; sourceTree = "<group>"; };
-		F9BD39614F587C132EF3E32F9DCC8782 /* FIRCLSCodeMapping.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSCodeMapping.m; path = Crashlytics/Shared/FIRCLSMachO/FIRCLSCodeMapping.m; sourceTree = "<group>"; };
-		F9C57736D06F9088DF305CDF806A810C /* GoogleUtilities.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = GoogleUtilities.release.xcconfig; sourceTree = "<group>"; };
-		F9FB0BC3721AB0B00DC540D85FADD119 /* successIconLight@2x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "successIconLight@2x.png"; path = "SwiftMessages/Resources/successIconLight@2x.png"; sourceTree = "<group>"; };
-		FA0A7317ADA57F0683612AFA5ED673CA /* FIRCLSDataCollectionArbiter.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSDataCollectionArbiter.m; path = Crashlytics/Crashlytics/DataCollection/FIRCLSDataCollectionArbiter.m; sourceTree = "<group>"; };
-		FA36AA822046462CC6744F20DE6AE9F1 /* State.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = State.swift; path = Sources/State.swift; sourceTree = "<group>"; };
-		FA3F4B853C03DE84BBCE447C0A8C9D67 /* CollectionView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = CollectionView.swift; path = Parchment/Protocols/CollectionView.swift; sourceTree = "<group>"; };
-		FAAA1B4D5726F29174B7EC02D41E663B /* SDAnimatedImageRep.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDAnimatedImageRep.m; path = SDWebImage/Core/SDAnimatedImageRep.m; sourceTree = "<group>"; };
-		FABA0656451D980CD2FC6856E1230D27 /* FIRCLSProcess.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSProcess.c; path = Crashlytics/Crashlytics/Components/FIRCLSProcess.c; sourceTree = "<group>"; };
-		FAD4030D5B013AC7C22F5B4475E69950 /* FIRCLSAllocate.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSAllocate.c; path = Crashlytics/Crashlytics/Helpers/FIRCLSAllocate.c; sourceTree = "<group>"; };
-		FAED24B23007C7D684DACD6F34A28CA4 /* FIRCLSUnwind.c */ = {isa = PBXFileReference; includeInIndex = 1; name = FIRCLSUnwind.c; path = Crashlytics/Crashlytics/Unwind/FIRCLSUnwind.c; sourceTree = "<group>"; };
-		FAEEC09AD67161899ECE61B427DD4836 /* FIRMessagingBackupExcludedPlist.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingBackupExcludedPlist.m; path = FirebaseMessaging/Sources/Token/FIRMessagingBackupExcludedPlist.m; sourceTree = "<group>"; };
-		FAF5FF32B5D142C60E3422565B03425B /* PagingMenuDelegate.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingMenuDelegate.swift; path = Parchment/Protocols/PagingMenuDelegate.swift; sourceTree = "<group>"; };
-		FB0EB330283F30A78CAC396576D91318 /* infoIcon@2x.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = "infoIcon@2x.png"; path = "SwiftMessages/Resources/infoIcon@2x.png"; sourceTree = "<group>"; };
-		FB21D5B0FB4BAC9A316B9E8F5524CD89 /* FIRMessagingPersistentSyncMessage.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingPersistentSyncMessage.h; path = FirebaseMessaging/Sources/FIRMessagingPersistentSyncMessage.h; sourceTree = "<group>"; };
-		FB2D0E09FA88BE3AB95F94333DF76A4B /* GULReachabilityMessageCode.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULReachabilityMessageCode.h; path = GoogleUtilities/Reachability/GULReachabilityMessageCode.h; sourceTree = "<group>"; };
-		FB3338DE3385FD65504593A424C2DED7 /* PagingCollectionViewLayout.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingCollectionViewLayout.swift; path = Parchment/Classes/PagingCollectionViewLayout.swift; sourceTree = "<group>"; };
-		FB70266A324C87CD78D07F8D8BFD852A /* FIRHeartbeatInfo.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRHeartbeatInfo.h; path = FirebaseCore/Sources/Private/FIRHeartbeatInfo.h; sourceTree = "<group>"; };
-		FB8620FB34C1FD3A4BEED9A8F97D2F0C /* GDTCOREvent.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCOREvent.h; path = GoogleDataTransport/GDTCORLibrary/Public/GoogleDataTransport/GDTCOREvent.h; sourceTree = "<group>"; };
-		FC083901D75AFA0C393E7146DE4C7506 /* UIColor+SDHexString.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIColor+SDHexString.m"; path = "SDWebImage/Private/UIColor+SDHexString.m"; sourceTree = "<group>"; };
-		FC8C8F7AFA1D93D01CD2EF25F870E161 /* FIRComponentType.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRComponentType.h; path = FirebaseCore/Sources/Private/FIRComponentType.h; sourceTree = "<group>"; };
-		FCAC8302F5BFFE3253D31D9CB49EE5E7 /* FirebaseCoreInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FirebaseCoreInternal.h; path = FirebaseCore/Sources/Private/FirebaseCoreInternal.h; sourceTree = "<group>"; };
-		FCE268C04133AA492262F355DE05A015 /* FIRCLSInternalLogging.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSInternalLogging.h; path = Crashlytics/Crashlytics/Helpers/FIRCLSInternalLogging.h; sourceTree = "<group>"; };
-		FD0C75B4162E7EFCF4D173ECC8852BB9 /* PagingDiff.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingDiff.swift; path = Parchment/Structs/PagingDiff.swift; sourceTree = "<group>"; };
+		F4A14662FF086D38E0A9D7D68738ECCE /* UIViewController+Extensions.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = "UIViewController+Extensions.swift"; path = "SwiftMessages/UIViewController+Extensions.swift"; sourceTree = "<group>"; };
+		F4BED2E4E7B69189095B7ACA1CC1C3E4 /* Inbox.xcdatamodel */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = wrapper.xcdatamodel; path = Inbox.xcdatamodel; sourceTree = "<group>"; };
+		F4FDDCDAA93996A471043CE4C082268F /* CTHalfInterstitialViewController.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTHalfInterstitialViewController.m; path = CleverTapSDK/InApps/CTHalfInterstitialViewController.m; sourceTree = "<group>"; };
+		F5B93F80EB0D3E7ACE657D6FCC269674 /* SDAsyncBlockOperation.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDAsyncBlockOperation.m; path = SDWebImage/Private/SDAsyncBlockOperation.m; sourceTree = "<group>"; };
+		F5D65F0003BE540987A8109BD50F9BB3 /* ButtonCell.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = ButtonCell.xib; path = Sources/ButtonCell.xib; sourceTree = "<group>"; };
+		F5F7924F65CD3C3531A1A872067A83DE /* FBLPromise+Testing.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Testing.m"; path = "Sources/FBLPromises/FBLPromise+Testing.m"; sourceTree = "<group>"; };
+		F617BA335DB637959ABC34BEE503B833 /* CTDeviceInfo.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTDeviceInfo.h; path = CleverTapSDK/CTDeviceInfo.h; sourceTree = "<group>"; };
+		F61808C23FA4500A10D6C72217DCBC94 /* FIRMessagingPubSub.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingPubSub.m; path = FirebaseMessaging/Sources/FIRMessagingPubSub.m; sourceTree = "<group>"; };
+		F6349EAD9C4533C5CE55881033DAFEFC /* CTInAppFCManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTInAppFCManager.h; path = CleverTapSDK/CTInAppFCManager.h; sourceTree = "<group>"; };
+		F638A5DDF8C847FA5A744A156E48C50D /* FIRMessagingContextManagerService.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingContextManagerService.m; path = FirebaseMessaging/Sources/FIRMessagingContextManagerService.m; sourceTree = "<group>"; };
+		F67B75C703FC4FA4EF6D45C2B0D2DDA9 /* errorIcon.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = errorIcon.png; path = SwiftMessages/Resources/errorIcon.png; sourceTree = "<group>"; };
+		F77290C81C9F0FD9C1A5DFEB3C516F50 /* FirebaseCoreInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FirebaseCoreInternal.h; path = FirebaseCore/Sources/Private/FirebaseCoreInternal.h; sourceTree = "<group>"; };
+		F84F68DCC4A2960956D200031AB77072 /* cct.nanopb.c */ = {isa = PBXFileReference; includeInIndex = 1; name = cct.nanopb.c; path = GoogleDataTransport/GDTCCTLibrary/Protogen/nanopb/cct.nanopb.c; sourceTree = "<group>"; };
+		F859CFBA02701A225A037DBBA4F80CD3 /* CTProfileBuilder.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTProfileBuilder.h; path = CleverTapSDK/CTProfileBuilder.h; sourceTree = "<group>"; };
+		F89A12F6712B7BD47B4D58A8E14A89D6 /* FIRCLSGlobals.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSGlobals.h; path = Crashlytics/Crashlytics/Components/FIRCLSGlobals.h; sourceTree = "<group>"; };
+		F8A67A6A29D9BE4A6E0FA38EE5E429F8 /* PageViewManager.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PageViewManager.swift; path = Parchment/Classes/PageViewManager.swift; sourceTree = "<group>"; };
+		F8B9927BEC8338FECDDA5F60E9E79AA6 /* GULNetworkURLSession.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULNetworkURLSession.h; path = GoogleUtilities/Network/Public/GoogleUtilities/GULNetworkURLSession.h; sourceTree = "<group>"; };
+		F8DAA6E3AFF79DAD9D39EE600A314102 /* FIRLogger.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRLogger.h; path = FirebaseCore/Sources/Private/FIRLogger.h; sourceTree = "<group>"; };
+		F8EBCCF651724976E05B1F87CD4F90A4 /* UIButton+WebCache.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIButton+WebCache.m"; path = "SDWebImage/Core/UIButton+WebCache.m"; sourceTree = "<group>"; };
+		F8ED53CF61E6914C0DF98C2E849B6745 /* PagingItems.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingItems.swift; path = Parchment/Structs/PagingItems.swift; sourceTree = "<group>"; };
+		F90A3E8E0A85D2C05FC5C668D85B9789 /* SDImageCacheDefine.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageCacheDefine.m; path = SDWebImage/Core/SDImageCacheDefine.m; sourceTree = "<group>"; };
+		F96BEAADB73AE3D5F119BFD9DC8B0DD5 /* SDAnimatedImageView.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDAnimatedImageView.m; path = SDWebImage/Core/SDAnimatedImageView.m; sourceTree = "<group>"; };
+		F96FEB77F17EA3AC27E03F2F1F84499D /* FIRCLSMachO.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSMachO.h; path = Crashlytics/Shared/FIRCLSMachO/FIRCLSMachO.h; sourceTree = "<group>"; };
+		F9CF206F7AA3AB8B90D23918980EDFFD /* SDWebImageOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = SDWebImageOperation.h; path = SDWebImage/Core/SDWebImageOperation.h; sourceTree = "<group>"; };
+		F9D76A5468A8BA6763DEC7225D47267A /* CTPinnedNSURLSessionDelegate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = CTPinnedNSURLSessionDelegate.h; path = CleverTapSDK/CTPinnedNSURLSessionDelegate.h; sourceTree = "<group>"; };
+		FA43B0DE9A6AA385858D598EB313B64E /* FBLPromise+Recover.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "FBLPromise+Recover.m"; path = "Sources/FBLPromises/FBLPromise+Recover.m"; sourceTree = "<group>"; };
+		FA8D06BBBDBD7C5E877B50F5BEF4E30D /* FIRCLSAsyncOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSAsyncOperation.h; path = Crashlytics/Crashlytics/Operations/FIRCLSAsyncOperation.h; sourceTree = "<group>"; };
+		FAA3E4A383368B6CF5E734BDD46B288F /* SDImageCoderHelper.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageCoderHelper.m; path = SDWebImage/Core/SDImageCoderHelper.m; sourceTree = "<group>"; };
+		FAA4CA171F4FB06376C131A790888FA8 /* FIRMessagingExtensionHelper.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingExtensionHelper.h; path = FirebaseMessaging/Sources/Public/FirebaseMessaging/FIRMessagingExtensionHelper.h; sourceTree = "<group>"; };
+		FAFE350031CD727CA2840569DA7046D9 /* CTEventBuilder.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTEventBuilder.m; path = CleverTapSDK/CTEventBuilder.m; sourceTree = "<group>"; };
+		FB1255225D9BC406C24F538DA8E31AA2 /* FIRCLSDwarfExpressionMachine.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSDwarfExpressionMachine.h; path = Crashlytics/Crashlytics/Unwind/Dwarf/FIRCLSDwarfExpressionMachine.h; sourceTree = "<group>"; };
+		FB31027047B5AABE0E152E0133E99820 /* SDAnimatedImageView+WebCache.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "SDAnimatedImageView+WebCache.m"; path = "SDWebImage/Core/SDAnimatedImageView+WebCache.m"; sourceTree = "<group>"; };
+		FB66BB6227D040E60504E6114B2F8ADB /* UIImage+Metadata.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "UIImage+Metadata.m"; path = "SDWebImage/Core/UIImage+Metadata.m"; sourceTree = "<group>"; };
+		FBDB061C15D8B2DFB47EC27B48C3E283 /* IQKeyboardManagerSwift-dummy.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; path = "IQKeyboardManagerSwift-dummy.m"; sourceTree = "<group>"; };
+		FBF716EAE3B2BB5EFA4C99C09E96C436 /* FirebaseMessaging.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; path = FirebaseMessaging.release.xcconfig; sourceTree = "<group>"; };
+		FC3ACB1BEB3FCFAE896E1FA692F94DA2 /* PagingViewController.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = PagingViewController.swift; path = Parchment/Classes/PagingViewController.swift; sourceTree = "<group>"; };
+		FC4A2D177C8C0015B9176FBC5DD073F7 /* FIRMessagingLogger.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingLogger.m; path = FirebaseMessaging/Sources/FIRMessagingLogger.m; sourceTree = "<group>"; };
+		FC739BB479ECE278ADF62E3AB2B172F0 /* GDTCCTUploadOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GDTCCTUploadOperation.h; path = GoogleDataTransport/GDTCCTLibrary/Private/GDTCCTUploadOperation.h; sourceTree = "<group>"; };
+		FC93A0A8DF4A56459DD6232B5715ACEB /* GDTCORFlatFileStorage.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GDTCORFlatFileStorage.m; path = GoogleDataTransport/GDTCORLibrary/GDTCORFlatFileStorage.m; sourceTree = "<group>"; };
+		FCA48A10ECA2067C0CAAC574673BDFAC /* FIRComponent.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRComponent.h; path = FirebaseCore/Sources/Private/FIRComponent.h; sourceTree = "<group>"; };
+		FCAB837CF55F31E0BB2953675374CBF0 /* CTInterstitialImageViewController~ipadland.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTInterstitialImageViewController~ipadland.xib"; path = "CleverTapSDK/InApps/resources/CTInterstitialImageViewController~ipadland.xib"; sourceTree = "<group>"; };
+		FCE7F696C0F0024888D87CD2CB6F5CDF /* CTLogger.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTLogger.m; path = CleverTapSDK/CTLogger.m; sourceTree = "<group>"; };
 		FD1309C85A2B4DD96C17CEE227B41C92 /* OTPFieldView */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; name = OTPFieldView; path = OTPFieldView.framework; sourceTree = BUILT_PRODUCTS_DIR; };
-		FD552E64F5206F360ADD25AD40A054A0 /* FIRCLSMachOSlice.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSMachOSlice.h; path = Crashlytics/Shared/FIRCLSMachO/FIRCLSMachOSlice.h; sourceTree = "<group>"; };
-		FD8AFB80EFD26F8FC736866043AF4BCE /* GULHeartbeatDateStorage.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULHeartbeatDateStorage.m; path = GoogleUtilities/Environment/GULHeartbeatDateStorage.m; sourceTree = "<group>"; };
-		FD90F1CE703A72FBE7D96157140270B3 /* ButtonBarView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ButtonBarView.swift; path = Sources/ButtonBarView.swift; sourceTree = "<group>"; };
-		FDDF3B62B9803BA1CCE292AD87E8785F /* ScrollingFollowView.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ScrollingFollowView.swift; path = ScrollingFollowView/ScrollingFollowView.swift; sourceTree = "<group>"; };
-		FE3B6310BAA07BE172FBD66C3A384198 /* CTCoverViewController~iphoneport.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTCoverViewController~iphoneport.xib"; path = "CleverTapSDK/InApps/resources/CTCoverViewController~iphoneport.xib"; sourceTree = "<group>"; };
-		FEBD8D37764E82F6AB1BE50139F0B555 /* FIRMessagingAPNSInfo.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingAPNSInfo.h; path = FirebaseMessaging/Sources/Token/FIRMessagingAPNSInfo.h; sourceTree = "<group>"; };
-		FEE2EB4FA78F37BEAA281ADBF2ED4FB1 /* FIRMessagingTokenFetchOperation.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRMessagingTokenFetchOperation.h; path = FirebaseMessaging/Sources/Token/FIRMessagingTokenFetchOperation.h; sourceTree = "<group>"; };
-		FEEFEA9EC603734A349BD48FD175E79D /* FXPageControl.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FXPageControl.h; path = Sources/FXPageControl.h; sourceTree = "<group>"; };
-		FF22E6E7AC618E82168FF69F36C101AC /* AlamofireExtended.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = AlamofireExtended.swift; path = Source/AlamofireExtended.swift; sourceTree = "<group>"; };
-		FF3A30ED734CED8336FEC73971C751D2 /* FIRCLSHandler.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSHandler.m; path = Crashlytics/Crashlytics/Handlers/FIRCLSHandler.m; sourceTree = "<group>"; };
-		FF5F99B764232941E3A548BEB0EC46A7 /* SDImageAPNGCoder.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = SDImageAPNGCoder.m; path = SDWebImage/Core/SDImageAPNGCoder.m; sourceTree = "<group>"; };
-		FFCE3B4C1AD94A4B30E060714B379D98 /* CTHalfInterstitialViewController~ipad.xib */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = file.xib; name = "CTHalfInterstitialViewController~ipad.xib"; path = "CleverTapSDK/InApps/resources/CTHalfInterstitialViewController~ipad.xib"; sourceTree = "<group>"; };
-		FFE1B6031AD5399E369E0F17C1C52361 /* FIRCLSUtility.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRCLSUtility.m; path = Crashlytics/Crashlytics/Helpers/FIRCLSUtility.m; sourceTree = "<group>"; };
-		FFE38F6FDAF8E5B94E2C0BC8313355F0 /* BackgroundViewable.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = BackgroundViewable.swift; path = SwiftMessages/BackgroundViewable.swift; sourceTree = "<group>"; };
-		FFFB16B528650897EA28176A0457BF2A /* FBLPromisePrivate.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FBLPromisePrivate.h; path = Sources/FBLPromises/include/FBLPromisePrivate.h; sourceTree = "<group>"; };
+		FD2AFFB406C273817478293CBFD60C18 /* FirebaseInstallations-umbrella.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "FirebaseInstallations-umbrella.h"; sourceTree = "<group>"; };
+		FD2FC8B7039CE304FDCB4E9CBAE4FCB1 /* CTPlistInfo.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTPlistInfo.m; path = CleverTapSDK/CTPlistInfo.m; sourceTree = "<group>"; };
+		FD4FDC395E0B9DEA8DD00B4870E94874 /* GULNetworkURLSession.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = GULNetworkURLSession.m; path = GoogleUtilities/Network/GULNetworkURLSession.m; sourceTree = "<group>"; };
+		FD6C74CF3087016A3C69D31D7AFD74CD /* successIconSubtle.png */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = image.png; name = successIconSubtle.png; path = SwiftMessages/Resources/successIconSubtle.png; sourceTree = "<group>"; };
+		FDCB12D99DD82CD647E1D6F77547ECA4 /* RedirectHandler.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = RedirectHandler.swift; path = Source/RedirectHandler.swift; sourceTree = "<group>"; };
+		FDEDE7BB9D7235BC541FF2208A155929 /* NSButton+WebCache.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = "NSButton+WebCache.h"; path = "SDWebImage/Core/NSButton+WebCache.h"; sourceTree = "<group>"; };
+		FE0647581948836CE76D00D75594E72E /* FIRMessagingConstants.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingConstants.m; path = FirebaseMessaging/Sources/FIRMessagingConstants.m; sourceTree = "<group>"; };
+		FE2DDB7261A31DB7BA340EC91336F2C4 /* FIRCLSNotificationManager.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRCLSNotificationManager.h; path = Crashlytics/Crashlytics/Controllers/FIRCLSNotificationManager.h; sourceTree = "<group>"; };
+		FE72D20B2E877A8380125AB8DB9A5E3E /* OTPFieldView-prefix.pch */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; path = "OTPFieldView-prefix.pch"; sourceTree = "<group>"; };
+		FE88BB7F42598792778C7AC682DE78B6 /* ParameterEncoder.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ParameterEncoder.swift; path = Source/ParameterEncoder.swift; sourceTree = "<group>"; };
+		FEA957E11426CB071871167383A07300 /* FIRMessagingAPNSInfo.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingAPNSInfo.m; path = FirebaseMessaging/Sources/Token/FIRMessagingAPNSInfo.m; sourceTree = "<group>"; };
+		FEC71F6A6706E56D0049698CD89DA7C1 /* FIRMessagingCheckinService.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = FIRMessagingCheckinService.m; path = FirebaseMessaging/Sources/Token/FIRMessagingCheckinService.m; sourceTree = "<group>"; };
+		FF350DB64D4EA35323BF19DD2713CD35 /* NSImage+Compatibility.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = "NSImage+Compatibility.m"; path = "SDWebImage/Core/NSImage+Compatibility.m"; sourceTree = "<group>"; };
+		FF6D29EA4D448E1430FE43BE269575BD /* GULAppDelegateSwizzler_Private.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = GULAppDelegateSwizzler_Private.h; path = GoogleUtilities/AppDelegateSwizzler/Internal/GULAppDelegateSwizzler_Private.h; sourceTree = "<group>"; };
+		FF8F380A119F483A7ED34E4FBEEA389E /* FIRAppInternal.h */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.h; name = FIRAppInternal.h; path = FirebaseCore/Sources/Private/FIRAppInternal.h; sourceTree = "<group>"; };
+		FFC22044353ED377A82035FCB3916800 /* CTDismissButton.m */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.c.objc; name = CTDismissButton.m; path = CleverTapSDK/InApps/CTDismissButton.m; sourceTree = "<group>"; };
 /* End PBXFileReference section */
 
 /* Begin PBXFrameworksBuildPhase section */
@@ -3077,29 +3102,19 @@
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		0AFE281D072D081E2DC05FE04678706A /* Frameworks */ = {
+		16528391355227D329F4120C79EB2F9E /* Frameworks */ = {
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				448F32011A59FC1956C4A34D81BAF7FA /* Foundation.framework in Frameworks */,
-				5184DB86D36580BC8D11D31E20F140F6 /* ImageIO.framework in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		187F4E2F764F23338F133E35F27C03FB /* Frameworks */ = {
-			isa = PBXFrameworksBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				5EA087A2154184CDEB17DCA216C11FAE /* Foundation.framework in Frameworks */,
-				D5B7C3A86542217354265F96B4B0C84B /* Security.framework in Frameworks */,
-				D4420B4222A67C44339A1C4B5689BDBB /* SystemConfiguration.framework in Frameworks */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		19F1E97317AE19BD36DCA2FF0D2E3FC3 /* Frameworks */ = {
+		1E5F34F325312F632646732A454D6AD6 /* Frameworks */ = {
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
+				6B60128BF181756B5A05576C6068566F /* Foundation.framework in Frameworks */,
+				760BE3F4C975ECE6B3AFDB55F66F0A78 /* UIKit.framework in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -3119,15 +3134,6 @@
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		369F22C79F468BAF7849160EB6131F98 /* Frameworks */ = {
-			isa = PBXFrameworksBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				56F39EDF8846AC681F870342D40A90BA /* Foundation.framework in Frameworks */,
-				17879D7C9794BCCB52B16559D7770B18 /* SystemConfiguration.framework in Frameworks */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
 		39D530C2A3085A1033683EC9AE0BC313 /* Frameworks */ = {
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
@@ -3137,19 +3143,21 @@
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		3DF3DC1A92D205347A2EDFEDD6C7AF76 /* Frameworks */ = {
+		406E389BD44A6C61DDB7108F5250B996 /* Frameworks */ = {
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				F404F6B647320B485496112300A4BEE9 /* Foundation.framework in Frameworks */,
+				F69342FCCB3FE50916076312A0E3796A /* Foundation.framework in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		406E389BD44A6C61DDB7108F5250B996 /* Frameworks */ = {
+		434AAFB77F0B962F9D46BBE9E31B8B13 /* Frameworks */ = {
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				F69342FCCB3FE50916076312A0E3796A /* Foundation.framework in Frameworks */,
+				8D597D683D4D11596362E69C2293AE49 /* Foundation.framework in Frameworks */,
+				49EA56186ADD4985676712F281A4B64F /* Security.framework in Frameworks */,
+				A9FE5E3892B121E99D6883A4BC6CEE21 /* SystemConfiguration.framework in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -3161,1437 +3169,1284 @@
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		604712DF6AD08481B6187DA45EA57862 /* Frameworks */ = {
+		4D22E870530D055200663288CF746BB9 /* Frameworks */ = {
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				4221AD42163A2508C2AFABD6FD6FBF41 /* Foundation.framework in Frameworks */,
+				7031BD7AEC98460DFD44A6A9D6E49465 /* Foundation.framework in Frameworks */,
+				D23B5D6B6F6E197DCF5DB669426B9800 /* Security.framework in Frameworks */,
+				E6218E3942FD620FFFAA6085185D775B /* SystemConfiguration.framework in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		6347B1AC9160E2100FA66C9A62DBB33B /* Frameworks */ = {
+		4F7EA21BC5EE10C6F35973C1D687CA0C /* Frameworks */ = {
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				BFAC17629CE2E4A37D6DB5AC3D4EE57C /* Foundation.framework in Frameworks */,
-				C3925B1C28E5D13A6F932E240107235D /* UIKit.framework in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		91EE8E996F047DF1A3B868AA79180916 /* Frameworks */ = {
+		7033511438EDD0DCE8A512D84B47F864 /* Frameworks */ = {
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				3EBFA96E13B47ECED0B9164D8FE19ABE /* Foundation.framework in Frameworks */,
-				7D6533AA7E911EC19BE804F1E35F84B8 /* UIKit.framework in Frameworks */,
+				812F84F891D5631C43317DD462F981E5 /* Foundation.framework in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		A21843CC7E3CD122264BA4FF4BCD6BF5 /* Frameworks */ = {
+		7212DD9337F5B8F02DD32D87F4AEF793 /* Frameworks */ = {
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				A60AE45490BFB435DFE76393A09D4400 /* Foundation.framework in Frameworks */,
+				87F04A3EA18F7C251F989A042052A45C /* Foundation.framework in Frameworks */,
+				BA23C4D9C3B882A359BBF8E4D44CB1DB /* ImageIO.framework in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		AB3E991E683D487BB32EFFBFC197C6EC /* Frameworks */ = {
+		78FE50335AECC72E0C5E7BA8DB9DD497 /* Frameworks */ = {
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				59A9EC97FF15B2AEAFBDA3C292DCB69B /* Foundation.framework in Frameworks */,
-				77393FBB7001EDF1D008727982FB0943 /* UIKit.framework in Frameworks */,
+				4120DD0DC646BEB7B5F38578E898FF47 /* Foundation.framework in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		ACFDAE8C906B6BA4BB34A18F351D94C5 /* Frameworks */ = {
+		91EE8E996F047DF1A3B868AA79180916 /* Frameworks */ = {
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				C20A9E4927F561CF9CB08DBA3F0C9B9F /* Foundation.framework in Frameworks */,
+				3EBFA96E13B47ECED0B9164D8FE19ABE /* Foundation.framework in Frameworks */,
+				7D6533AA7E911EC19BE804F1E35F84B8 /* UIKit.framework in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		AFF472590F7E17200944CB3BE693B9D6 /* Frameworks */ = {
+		A1D07F4050DA5BDE754D8A66952994B4 /* Frameworks */ = {
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				716F1AB371C1DBC5A91F85053DE427FD /* Foundation.framework in Frameworks */,
-				8D158FB7773B86AAE9F81A3DFF8F7275 /* UIKit.framework in Frameworks */,
+				AED0535734D95B2038E132A2F2F5EF25 /* Foundation.framework in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		B84AAE906A631EB982933B7BE4F324C4 /* Frameworks */ = {
+		A21843CC7E3CD122264BA4FF4BCD6BF5 /* Frameworks */ = {
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				F979A2BBCD82750BFA1C899D2E0A2DC4 /* Foundation.framework in Frameworks */,
+				A60AE45490BFB435DFE76393A09D4400 /* Foundation.framework in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		B9AA2C0CCF2DEFDCD76562FD2A9C7FD4 /* Frameworks */ = {
+		A3B77577C54970218F8F8340516D00F2 /* Frameworks */ = {
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
+				B1B6A2491AC437909DABE20C71BECDBC /* CoreGraphics.framework in Frameworks */,
+				60C6606FF8176EE5A38870CFD9F649C8 /* Foundation.framework in Frameworks */,
+				B6EC6D40823E66D5B389ACEAC9FD7AAE /* QuartzCore.framework in Frameworks */,
+				2E5138271A6C79BDA3C0835F2596219B /* UIKit.framework in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		C732DCC3AC33E8B41D1847BF2F25AFAB /* Frameworks */ = {
+		ACFDAE8C906B6BA4BB34A18F351D94C5 /* Frameworks */ = {
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				0EDBB945D1A2E1D64DFD6FA03EA8526B /* Foundation.framework in Frameworks */,
-				C897E1291F5DA3F982699C6A8A76EF13 /* Security.framework in Frameworks */,
-				D5E3338A46A1919A7BFAF351B4738355 /* SystemConfiguration.framework in Frameworks */,
+				C20A9E4927F561CF9CB08DBA3F0C9B9F /* Foundation.framework in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		DE7ABB82FDC8BB7C67D024466127FFF9 /* Frameworks */ = {
+		AFF472590F7E17200944CB3BE693B9D6 /* Frameworks */ = {
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				29C4B70F879FC5EAEE30CFF93B45ECC8 /* CoreTelephony.framework in Frameworks */,
-				6A4C9AAB19D8F35C3F87388B82C561BA /* Foundation.framework in Frameworks */,
-				E14EC05F250B0CD0D662E27E42620CE5 /* SystemConfiguration.framework in Frameworks */,
+				716F1AB371C1DBC5A91F85053DE427FD /* Foundation.framework in Frameworks */,
+				8D158FB7773B86AAE9F81A3DFF8F7275 /* UIKit.framework in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		E2D06F4F2F63043C7F0FD90489F3D033 /* Frameworks */ = {
+		BF96A4D6A37AD7CD7C381EACB2CECB78 /* Frameworks */ = {
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				7F355D21946C6C9048D02ADAB74915FF /* CoreGraphics.framework in Frameworks */,
-				9EECE8C38201AEA8EA757CE5C1337873 /* Foundation.framework in Frameworks */,
-				3DAB9B8ACA346601215FD9821E78A091 /* QuartzCore.framework in Frameworks */,
-				D166AD740741D652490830E4E62ED5A0 /* UIKit.framework in Frameworks */,
+				00CAC772E4D2ED1312D5C9F7A7443363 /* Foundation.framework in Frameworks */,
+				D3C30C1FF1153B90DA7BAE0F611EC1A7 /* SystemConfiguration.framework in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		F5EB01CF387C59B8FA9B4A3C5CAD38DC /* Frameworks */ = {
+		C9F140426233DD716206D855EAE5F5CA /* Frameworks */ = {
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				7D777863DCF90F0154327370EF59F04D /* Foundation.framework in Frameworks */,
-				DD87E402BAF92FB4D5B3D8EECAD2F69D /* Security.framework in Frameworks */,
+				C676ADFCEC38B1907461E4F1783B1515 /* CoreTelephony.framework in Frameworks */,
+				1BDF12B46956F9924A64162FE774C67F /* Foundation.framework in Frameworks */,
+				8C230A669695FEA245561E7F0FF81525 /* SystemConfiguration.framework in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-/* End PBXFrameworksBuildPhase section */
-
-/* Begin PBXGroup section */
-		053FA6A64FB1DEF9D8CE99B070CB8961 /* Support Files */ = {
-			isa = PBXGroup;
-			children = (
-				9892B1791D53BCF74B4C1FAA234A1B69 /* Parchment.modulemap */,
-				065614BAC4B761DECC3AE82AF30F0A1A /* Parchment-dummy.m */,
-				BE0D6D88D3B65ED7387D33ED0C3CDFD5 /* Parchment-Info.plist */,
-				99EA333F95AA40E95E397660E5E7D4E3 /* Parchment-prefix.pch */,
-				A13431C6827DEA6FAAA4666481365FAF /* Parchment-umbrella.h */,
-				CA71E94E5F96DD62381A6E47013C5391 /* Parchment.debug.xcconfig */,
-				93827B788B439C0A060A6986FC939A49 /* Parchment.release.xcconfig */,
-			);
-			name = "Support Files";
-			path = "../Target Support Files/Parchment";
-			sourceTree = "<group>";
-		};
-		0656CE04288357F0748AB498835BA03E /* Frameworks */ = {
-			isa = PBXGroup;
-			children = (
-				8568FBA53E7310551B147F6D98EA5F77 /* iOS */,
+		D5D27785B479B8B575A39458A139EE13 /* Frameworks */ = {
+			isa = PBXFrameworksBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				072BA312AB0F8899E6A064564FC3FDFF /* Foundation.framework in Frameworks */,
+				ADFE30265727B00844986609597A43B6 /* UIKit.framework in Frameworks */,
 			);
-			name = Frameworks;
-			sourceTree = "<group>";
+			runOnlyForDeploymentPostprocessing = 0;
 		};
-		0805E383FBB896A50427D67BC5967EF1 /* Environment */ = {
-			isa = PBXGroup;
-			children = (
-				D9C5928B5C09A69C4709184225A5A344 /* GULAppEnvironmentUtil.h */,
-				0E4F0E2804CD32F9F985A8131A1D882A /* GULAppEnvironmentUtil.m */,
-				3C162DB4BDA8589FDF8B8C4494B89568 /* GULHeartbeatDateStorable.h */,
-				B0A6208547611AD9A08FA6CAD905E7EB /* GULHeartbeatDateStorage.h */,
-				FD8AFB80EFD26F8FC736866043AF4BCE /* GULHeartbeatDateStorage.m */,
-				9BC02B4D8C7992AAE8721A366B872BFE /* GULHeartbeatDateStorageUserDefaults.h */,
-				EA5C706367B65467F6D1BE1AE32AA2ED /* GULHeartbeatDateStorageUserDefaults.m */,
-				CC754D32ECF02FCAAD7A7A08B578B260 /* GULKeychainStorage.h */,
-				3275CD3A583DAF97A92DE816ECE2930D /* GULKeychainStorage.m */,
-				7C3C0EBDDAF3A350054ED0598CB10786 /* GULKeychainUtils.h */,
-				077877AA70D97E19333356C8BD9C10FB /* GULKeychainUtils.m */,
-				29990F7A92DD856E5E8A125390FA6F85 /* GULSecureCoding.h */,
-				9CBAB230B52011D281364F6E40E7C97A /* GULSecureCoding.m */,
-				1642E0154D3E203C3D898AA1DA97DBF3 /* GULURLSessionDataResponse.h */,
-				62B2D24D82EC3B7249BF77C3CEE96AA1 /* GULURLSessionDataResponse.m */,
-				18451D9F8E8F33AC383644EF757B22BF /* NSURLSession+GULPromises.h */,
-				7348B9F38C5BC51DC40308F3D4DA54A2 /* NSURLSession+GULPromises.m */,
+		FF2695D9A9380654048C20F8E1A7FBE8 /* Frameworks */ = {
+			isa = PBXFrameworksBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				A31740CC096EF4100061EF74E2CC5D80 /* Foundation.framework in Frameworks */,
+				63927F226673CA5F6832F98261D18CD0 /* Security.framework in Frameworks */,
 			);
-			name = Environment;
-			sourceTree = "<group>";
+			runOnlyForDeploymentPostprocessing = 0;
 		};
-		08E8D242FE3CEDCC566E9E54D0A509A4 /* ScrollingFollowView */ = {
+/* End PBXFrameworksBuildPhase section */
+
+/* Begin PBXGroup section */
+		00D8C0B4FE9E324985B632324BABBE94 /* GoogleAppMeasurement */ = {
 			isa = PBXGroup;
 			children = (
-				FDDF3B62B9803BA1CCE292AD87E8785F /* ScrollingFollowView.swift */,
-				F64A89A940C73A43FE31CB1C5059B489 /* Support Files */,
+				600762A91B64A64851B70019ECB34CF5 /* AdIdSupport */,
+				E5C65288C13DD18ECD8CD8B0CD79AB70 /* Support Files */,
+				3BD57ED1C53D37B0F218E1820F4A603E /* WithoutAdIdSupport */,
 			);
-			name = ScrollingFollowView;
-			path = ScrollingFollowView;
+			name = GoogleAppMeasurement;
+			path = GoogleAppMeasurement;
 			sourceTree = "<group>";
 		};
-		0AC0A455D0EBAF3653309B303534F55D /* Support Files */ = {
+		03B6B8DEBD6CF8360575553E11019392 /* Support Files */ = {
 			isa = PBXGroup;
 			children = (
-				BA8F589056E7F0AE3432CC7FBCD59E9B /* OTPFieldView.modulemap */,
-				A8F4D63FEB24703BFEBD3891E82FB7C3 /* OTPFieldView-dummy.m */,
-				3ADE1801494E894A91A204F1E4C94B19 /* OTPFieldView-Info.plist */,
-				107F0C152339D63DA61B84A4432450DC /* OTPFieldView-prefix.pch */,
-				6B3774F2C85143534603407C0FF8C0A2 /* OTPFieldView-umbrella.h */,
-				5C4E358B18A952F85B92867F9EC69FFD /* OTPFieldView.debug.xcconfig */,
-				03F23B641B74D6531ED837041034856A /* OTPFieldView.release.xcconfig */,
+				9DA216EBBF572D3F3B549059A18B1742 /* IQKeyboardManagerSwift.modulemap */,
+				FBDB061C15D8B2DFB47EC27B48C3E283 /* IQKeyboardManagerSwift-dummy.m */,
+				CCB10EC396D1199C8971F2C4DECFF515 /* IQKeyboardManagerSwift-Info.plist */,
+				178A5A562C7B251C7EA4C707E63B4332 /* IQKeyboardManagerSwift-prefix.pch */,
+				E8FF85E09CB841AB5271415B84CA04E8 /* IQKeyboardManagerSwift-umbrella.h */,
+				6944FCA2E8B8ADB24900CE5439C41D1E /* IQKeyboardManagerSwift.debug.xcconfig */,
+				93A8E700678193A09067ADC31C73C35E /* IQKeyboardManagerSwift.release.xcconfig */,
 			);
 			name = "Support Files";
-			path = "../Target Support Files/OTPFieldView";
-			sourceTree = "<group>";
-		};
-		0BBA6E2F8851F9FD9E23187ED87E0E53 /* FloatingPanel */ = {
-			isa = PBXGroup;
-			children = (
-				B2FE8165EE1136F188FD65FB36D1BC7F /* BackdropView.swift */,
-				DB43C934EE9A78BA6DBD9580720F2BA1 /* Behavior.swift */,
-				CBA2F9D2D3F8169AFD2FD52EB9676ACA /* Controller.swift */,
-				57CA0E1B82972BBCB373E22278D51278 /* Core.swift */,
-				5F0DB71E436B5DF4B447A58D6AF6C1DB /* Extensions.swift */,
-				227C480E08EF2ABE8D792708EA83AD0D /* GrabberView.swift */,
-				19B5DBA196BDF68A2AFAA52BD3865A70 /* Layout.swift */,
-				0EC5BC85E79F0E2F188B00AAFF9FB3C5 /* LayoutAnchoring.swift */,
-				EFDBC240A0B86A8D4F6C768A433BA564 /* LayoutReferences.swift */,
-				D99698AE74FE7B4168A28BE6F16418F8 /* Logger.swift */,
-				531D2CCB0041E3F84983049440173FAC /* PassthroughView.swift */,
-				77A814124D5C92ED1CC98E882B5C81C5 /* Position.swift */,
-				FA36AA822046462CC6744F20DE6AE9F1 /* State.swift */,
-				738ABC6EB266AF2C57773B6CEAA731E4 /* SurfaceView.swift */,
-				C47C50BD6C1BB1F8EF0928E0F3608A71 /* Transitioning.swift */,
-				37A99A9C0CE659835CD0FD1D963F6BE5 /* Support Files */,
-			);
-			name = FloatingPanel;
-			path = FloatingPanel;
-			sourceTree = "<group>";
-		};
-		115A7B6D13EF5DF2CFCD6713AD257FD8 /* CoreOnly */ = {
-			isa = PBXGroup;
-			children = (
-				0940E77BA45CF2A0180AAD3DCFEBB620 /* Firebase.h */,
-			);
-			name = CoreOnly;
+			path = "../Target Support Files/IQKeyboardManagerSwift";
 			sourceTree = "<group>";
 		};
-		13217155A21405199F4921023EEAF27D /* Core */ = {
+		0656CE04288357F0748AB498835BA03E /* Frameworks */ = {
 			isa = PBXGroup;
 			children = (
-				E401B0712C2414DCA7CF2779BE816121 /* NSBezierPath+SDRoundedCorners.h */,
-				20249AACE2C5B66842F3999B5D8511B4 /* NSBezierPath+SDRoundedCorners.m */,
-				39BD572FF7D8F3CF319BC86AA5893D8E /* NSButton+WebCache.h */,
-				24CAA6539D0DC35004CB41DA8C53D804 /* NSButton+WebCache.m */,
-				9F59C1668C1D78A23B2369824B939414 /* NSData+ImageContentType.h */,
-				166159DA9B07652F3D5C527DEDE747B2 /* NSData+ImageContentType.m */,
-				818D9AB4C1E64600C9B3F0AF19FB3B29 /* NSImage+Compatibility.h */,
-				1DCC67CB751BEFC39AF40715A67E1833 /* NSImage+Compatibility.m */,
-				2297304CCAB522D456EB5096A1A75E53 /* SDAnimatedImage.h */,
-				9410220FC9507D1021FC3A2F0B0C3BE5 /* SDAnimatedImage.m */,
-				219A14CB235C1F34B51BDAA9B1C1F691 /* SDAnimatedImagePlayer.h */,
-				40CCF6FE6D0AEA5FA86A03AB6D017CE5 /* SDAnimatedImagePlayer.m */,
-				674A086658963014EDFED481D6C8748E /* SDAnimatedImageRep.h */,
-				FAAA1B4D5726F29174B7EC02D41E663B /* SDAnimatedImageRep.m */,
-				696063D6CB86EA8EA472E8E99C09054C /* SDAnimatedImageView.h */,
-				C01E39F6A9F1F8B96313AA88D8B66336 /* SDAnimatedImageView.m */,
-				7E9132E25E101C6406254D4819633C94 /* SDAnimatedImageView+WebCache.h */,
-				7A83EAAED9E524396B455FEFC76F052E /* SDAnimatedImageView+WebCache.m */,
-				C06F55269FE297F8B9A981B1E0A9C70D /* SDAssociatedObject.h */,
-				4FB4227D1E4FC9C8022A1CB094CC3A2B /* SDAssociatedObject.m */,
-				F5EAB929C29D1B056B6470B0DB615E96 /* SDAsyncBlockOperation.h */,
-				A0C1027DB4311ED3CFA1338F593FE7B6 /* SDAsyncBlockOperation.m */,
-				BA807E41EFBCEC6052E2AB4349831591 /* SDDeviceHelper.h */,
-				7EAABCFEE60DFBB16A63A2DA5CF86E93 /* SDDeviceHelper.m */,
-				8476EBCE8FE72232211A2048FCF39A41 /* SDDiskCache.h */,
-				A88EEAB6EE42765AC2E93BCAA8747DFA /* SDDiskCache.m */,
-				57C188D6F367FE03226FA4151A552406 /* SDDisplayLink.h */,
-				D3C482034DD24D74C353747CC2F8AD69 /* SDDisplayLink.m */,
-				DD5CA37EAB06EDEDE27718E450E4D06F /* SDFileAttributeHelper.h */,
-				1EE07A45FBA9981DE8FF504F83F738EE /* SDFileAttributeHelper.m */,
-				EAD92B743E2D993D4E2501134ADC4EC8 /* SDGraphicsImageRenderer.h */,
-				A01F586FCC9B1508602A91929FD0D9D1 /* SDGraphicsImageRenderer.m */,
-				8F8D19E7D75BCAF9C1D1E8247761E74F /* SDImageAPNGCoder.h */,
-				FF5F99B764232941E3A548BEB0EC46A7 /* SDImageAPNGCoder.m */,
-				42398AA96592A0DFD64F78346F986CD9 /* SDImageAssetManager.h */,
-				33C5EDCAF5CC935647258F1EDDCCC3F8 /* SDImageAssetManager.m */,
-				5ABA133336F73356FE4E25195FAE4CF2 /* SDImageAWebPCoder.h */,
-				0E2B1309B5D983FED7C88BECE37A1785 /* SDImageAWebPCoder.m */,
-				3E8127947BC76076CF37E6434AC125D2 /* SDImageCache.h */,
-				48DFB7445959CDCF3DE71DAE37EFC0DB /* SDImageCache.m */,
-				039634B2810524CB58834CDFDDA903FD /* SDImageCacheConfig.h */,
-				C28DCE3FE9EEDC182E6C509BFF86581B /* SDImageCacheConfig.m */,
-				573B3725941D6C19A925B318E8122F2C /* SDImageCacheDefine.h */,
-				2F04146B6EE75721E216C100A3DB8152 /* SDImageCacheDefine.m */,
-				7FDFF3BF94A1E41BB053B847BCCF5AE2 /* SDImageCachesManager.h */,
-				2372E55AF60F025664A53BB7B2FDE813 /* SDImageCachesManager.m */,
-				D51D2A4E75D1FA2630A2E5AF65218ED8 /* SDImageCachesManagerOperation.h */,
-				680527CBAA8A1A6808A96049731EAA88 /* SDImageCachesManagerOperation.m */,
-				7743516977969390EB004AEDA9585F78 /* SDImageCoder.h */,
-				3E277AAEA3BB4F135F9687F99E220EC0 /* SDImageCoder.m */,
-				AB298F77943B429A4B74693E34040AA3 /* SDImageCoderHelper.h */,
-				59EC1CA5CD6D1B4165F9F6676852A5D5 /* SDImageCoderHelper.m */,
-				9566B492619F64B3A722F10FF9EF00D1 /* SDImageCodersManager.h */,
-				B54D7C4933120FE1208FFD70EB56C3DC /* SDImageCodersManager.m */,
-				CBCB9ADBA97088291F8E154B4FE36AB2 /* SDImageFrame.h */,
-				2F90C9417332A47B81D68187F6FB910C /* SDImageFrame.m */,
-				A6AA74BF3D050FC80D88C8CE01725718 /* SDImageGIFCoder.h */,
-				16947967B3C830BE2415845243AAD805 /* SDImageGIFCoder.m */,
-				7F13B05E1343F172F13E3F5A79EBEAC3 /* SDImageGraphics.h */,
-				5F35FDD606E5DC51D20B960AF8BDA799 /* SDImageGraphics.m */,
-				BB96D8862AB6DEAC3171A9D1D9FD45D6 /* SDImageHEICCoder.h */,
-				4C883A782CA0F61C0CC8A1CC224CE189 /* SDImageHEICCoder.m */,
-				4CBFA202692750F5FA4D346F9B7ABE66 /* SDImageIOAnimatedCoder.h */,
-				B9514E98D070927B794A7DCE91BEC351 /* SDImageIOAnimatedCoder.m */,
-				29390BB463B8ACC06DDAA33F6996B286 /* SDImageIOAnimatedCoderInternal.h */,
-				6EB0D7D4A5F54018D43C41257496959A /* SDImageIOCoder.h */,
-				B5BD97286C8C7B42CBC1496E96A541CB /* SDImageIOCoder.m */,
-				315AEBBC56D8FBF6C3DB986951E65A07 /* SDImageLoader.h */,
-				8885565B95BA312BD6FBC3FB399B1541 /* SDImageLoader.m */,
-				B30623974B16AA5D2E33D834A1E5FD8E /* SDImageLoadersManager.h */,
-				D5D6A84B1602B61D0A766A26C2B864CA /* SDImageLoadersManager.m */,
-				4A72D812EE8D8A7F630FE26A9353CAE3 /* SDImageTransformer.h */,
-				6D27286DC8AA87FA975B331235150C67 /* SDImageTransformer.m */,
-				EF09F0E150492AD999579D2F32372115 /* SDInternalMacros.h */,
-				49E70E82DC9CC845BD7313D425C7BB0F /* SDInternalMacros.m */,
-				358B2E45089C6522C6B74D44DCBCDF15 /* SDMemoryCache.h */,
-				700C267616DA118338875B315AB6AF23 /* SDMemoryCache.m */,
-				EB71792A8C5CF831A1AC68D14F86071B /* SDmetamacros.h */,
-				9692C8A23221BF6AA4A81656705FA829 /* SDWeakProxy.h */,
-				579A58FA4FDD9B1D14A60A6217921F62 /* SDWeakProxy.m */,
-				387B0559982BAC72C5860C97D84F2B8C /* SDWebImage.h */,
-				335F088E79987EEA6D68186FDB791FC9 /* SDWebImageCacheKeyFilter.h */,
-				10BA31B1F174458C02637F6859D1C096 /* SDWebImageCacheKeyFilter.m */,
-				57A1418379F5A271083E84F8D8B8ED56 /* SDWebImageCacheSerializer.h */,
-				43FFBEDF61B2A8D8495ADD2DED349186 /* SDWebImageCacheSerializer.m */,
-				06E5E05321D01426F0BE747F130C6641 /* SDWebImageCompat.h */,
-				A9718BBC57F84A21F024CCCC0B431585 /* SDWebImageCompat.m */,
-				8270984355B406E62C5ADEABEF37E0EF /* SDWebImageDefine.h */,
-				AB91781765ABDC630DB42B610C4086DF /* SDWebImageDefine.m */,
-				260ED9A9A1873567E85EF22CC9760E28 /* SDWebImageDownloader.h */,
-				CA1CE06F528FAF5306DC64C769AC38DC /* SDWebImageDownloader.m */,
-				28B8CC5DE4D54A9154A622824F38D20D /* SDWebImageDownloaderConfig.h */,
-				1173A4D64AE6165ABB57B32DA5E926B3 /* SDWebImageDownloaderConfig.m */,
-				E550304C18EA374235CD6DED76E51BCD /* SDWebImageDownloaderDecryptor.h */,
-				9721B2D23EDFF5914B379E5C265D5915 /* SDWebImageDownloaderDecryptor.m */,
-				CCB741FA14DEE4C2163BA20E9690757F /* SDWebImageDownloaderOperation.h */,
-				7203B59682BADF2A519317E7A9DD9079 /* SDWebImageDownloaderOperation.m */,
-				5F518A7682685E5A6A70B34D30DAA51F /* SDWebImageDownloaderRequestModifier.h */,
-				0717FF6245B92E829137D7668EBB1246 /* SDWebImageDownloaderRequestModifier.m */,
-				0974813C72E5361CCD1D7FA32B1889C6 /* SDWebImageDownloaderResponseModifier.h */,
-				EE2F0B11C7EC41AAC4154A8AA5F0BE03 /* SDWebImageDownloaderResponseModifier.m */,
-				3465148CCD0457D5BA011AC6C67EAE05 /* SDWebImageError.h */,
-				235F36BD15EDB534D4F7316788691B27 /* SDWebImageError.m */,
-				308105C8185536584DA71C3F770D95F8 /* SDWebImageIndicator.h */,
-				B75D4CD64E3C06A1EF21009F2278C11D /* SDWebImageIndicator.m */,
-				755180C0315E923E5652A4F2576DD5A3 /* SDWebImageManager.h */,
-				AD8C5F5EEB4BF34AAA7A49BDF51F6C05 /* SDWebImageManager.m */,
-				8E03D74B551468D06B5BC2534B94B1F7 /* SDWebImageOperation.h */,
-				B2597CDB1FE651972477EDEC65B66C70 /* SDWebImageOperation.m */,
-				BB5D124F4716B0BA0EE714A1763F7E39 /* SDWebImageOptionsProcessor.h */,
-				0E36B9C8CB9E449C5A9E8E3E2206A0C9 /* SDWebImageOptionsProcessor.m */,
-				EACDF119791B69E3FCE90A43206DB4EB /* SDWebImagePrefetcher.h */,
-				C4BC67AADD9D70A9E0EEDB48EA3E8996 /* SDWebImagePrefetcher.m */,
-				74626D082CAB504E6EF569F6F8476070 /* SDWebImageTransition.h */,
-				CFD7C088C888D97ED1B2964EF6B86FBD /* SDWebImageTransition.m */,
-				7A932CF055888D58AC5364A9BB4E4126 /* SDWebImageTransitionInternal.h */,
-				15C6A36B6E99431DE86A48313DD6C352 /* UIButton+WebCache.h */,
-				A7B924FE4984B477990FD67919155416 /* UIButton+WebCache.m */,
-				57A1092BA4F39540045C4D5992ABF776 /* UIColor+SDHexString.h */,
-				FC083901D75AFA0C393E7146DE4C7506 /* UIColor+SDHexString.m */,
-				9D96A96964379EFFBFE3E75D31176CE0 /* UIImage+ExtendedCacheData.h */,
-				099CBF9249F7B307CBB1208C1153E44E /* UIImage+ExtendedCacheData.m */,
-				63F82A163425A4D34299B4F575DDB49F /* UIImage+ForceDecode.h */,
-				0BC4B91F30D54CEBD44E17A067EC4DA7 /* UIImage+ForceDecode.m */,
-				59C1E8BF6D2F7663ADB43041D6D9E523 /* UIImage+GIF.h */,
-				2F1B9AD128B55AB5039F94D6B7D2E07F /* UIImage+GIF.m */,
-				A4B3D3CA6C08BC8963F680585851E999 /* UIImage+MemoryCacheCost.h */,
-				9F02746315F1386A921B85E0DD2BE3BE /* UIImage+MemoryCacheCost.m */,
-				34B4CB1C13F7FEC8D528C0F6590BA245 /* UIImage+Metadata.h */,
-				CC26A8E447AAB7CF51FEF426E335CB3F /* UIImage+Metadata.m */,
-				0521BA931EF90FE2E0C3FF4D665E9C33 /* UIImage+MultiFormat.h */,
-				35E39208986752F47AAD93104D11BB02 /* UIImage+MultiFormat.m */,
-				F08567D0E83DC1661A873F1CB6DF7932 /* UIImage+Transform.h */,
-				B9D8307154625CB5623407784264A9F4 /* UIImage+Transform.m */,
-				0A96216375C22E0634AD2031EC6466A0 /* UIImageView+HighlightedWebCache.h */,
-				8A469C9723F7490FE5E742E00D883686 /* UIImageView+HighlightedWebCache.m */,
-				16A1EB6B7DDC93422EFB234A02E1893C /* UIImageView+WebCache.h */,
-				5DEFD9855223581B52BFA84EBA6E7A93 /* UIImageView+WebCache.m */,
-				87895F532510D188132DC92818334735 /* UIView+WebCache.h */,
-				59F0C0A013C5C87E1708530D64F047D7 /* UIView+WebCache.m */,
-				2B114CA94B5F791F4184389E70D0CC2B /* UIView+WebCacheOperation.h */,
-				987E4DDB2428B6DB57707688E66009C9 /* UIView+WebCacheOperation.m */,
+				8568FBA53E7310551B147F6D98EA5F77 /* iOS */,
 			);
-			name = Core;
+			name = Frameworks;
 			sourceTree = "<group>";
 		};
-		141845FCD020C89A49419B39C83AEAE5 /* GoogleDataTransport */ = {
+		07F08B7E526F9A79558017359CCF795F /* Environment */ = {
 			isa = PBXGroup;
 			children = (
-				7538EF8DEF0292A516861C0429EC9279 /* cct.nanopb.c */,
-				28221462FA0FCF4EEFAA22D797C0B0FA /* cct.nanopb.h */,
-				916CEAC0F3D978E9948D9E6BE151748E /* GDTCCTCompressionHelper.h */,
-				1C43354A61438F96FA62BA716DF82B72 /* GDTCCTCompressionHelper.m */,
-				C59D442781140D05BF43860E77AC02C5 /* GDTCCTNanopbHelpers.h */,
-				A21EF762C8DE622DE82BA964011ECCFA /* GDTCCTNanopbHelpers.m */,
-				3A17CB29D198B1FFCEEDCDE6EBD4FD3F /* GDTCCTUploader.h */,
-				E4EA4D4BFDA8CE66D3A4D6468A02F115 /* GDTCCTUploader.m */,
-				5C71605760E808C2DA00F475E83D6FBF /* GDTCCTUploadOperation.h */,
-				E23AFD6EB5110F52EA6774AD27972780 /* GDTCCTUploadOperation.m */,
-				73A8D8A536F91AEF8955CA6F8062B3A6 /* GDTCORAssert.h */,
-				167117637A1CEAC5956A4B4BBD1788BA /* GDTCORAssert.m */,
-				EFD2824386A2C366E0A2780060C4149F /* GDTCORClock.h */,
-				3C4990FE158BFE0C5D1EE468B9AD1CA4 /* GDTCORClock.m */,
-				BE5BEE7E7B9D95349E1C4D522BCF5EF0 /* GDTCORConsoleLogger.h */,
-				628BD629D941706AE4E2AF8BFFBF65D8 /* GDTCORConsoleLogger.m */,
-				F98EA63EA8AF8F9D72EAD3FEE1EC44BC /* GDTCORDirectorySizeTracker.h */,
-				A03E1EF67E5982B32333A70F99B101FE /* GDTCORDirectorySizeTracker.m */,
-				A055960F42A5D25BFEF6917BFF9BBFAC /* GDTCOREndpoints.h */,
-				8377150BB08B6742FD664B31A822BB61 /* GDTCOREndpoints.m */,
-				B740361408CBA391F8A2D2C219DE2438 /* GDTCOREndpoints_Private.h */,
-				FB8620FB34C1FD3A4BEED9A8F97D2F0C /* GDTCOREvent.h */,
-				CF47E5863ACCD5ADA6A6B8FD9D33A5FC /* GDTCOREvent.m */,
-				BEA5821C1BFCD6DD6B1DC05E8FFBDFA9 /* GDTCOREvent+GDTCCTSupport.h */,
-				2FBC047AA1B41786C6A7D6BA12600396 /* GDTCOREvent+GDTCCTSupport.m */,
-				C5DB1C51337BCC893796386425FE6125 /* GDTCOREvent_Private.h */,
-				5CDD428BE9E7A1E0C4C4034D60E425A3 /* GDTCOREventDataObject.h */,
-				6F25AEED8CB554235070A5204C98CFF7 /* GDTCOREventTransformer.h */,
-				50829ABB877127D26B6A8B5EE8F32C02 /* GDTCORFlatFileStorage.h */,
-				7AC50911851E67B8319C4DCE5AE00CE6 /* GDTCORFlatFileStorage.m */,
-				889E27D4D711F55471A5C798809CD161 /* GDTCORFlatFileStorage+Promises.h */,
-				3D3B31C95908D3899AD15600E12A10C8 /* GDTCORFlatFileStorage+Promises.m */,
-				59A4BF2C0A4C98FCFAED5C4F9D804E97 /* GDTCORLifecycle.h */,
-				AD6A09900EE7DB3C372F0809ED70D95D /* GDTCORLifecycle.m */,
-				BA58B6AD486F00AA91DFCF5D34F396B0 /* GDTCORPlatform.h */,
-				C4C568C303C88E83A5FD67B95A5010B7 /* GDTCORPlatform.m */,
-				7298FC012AF1742AB599688543610891 /* GDTCORReachability.h */,
-				2B4EEB08C9CD0ACC4A29026E7725F61D /* GDTCORReachability.m */,
-				F683079EFA9BFD4160D7FEB0C9B82862 /* GDTCORReachability_Private.h */,
-				DDB13D38B0CB85EA82D99898A34FCAE5 /* GDTCORRegistrar.h */,
-				B16DA940F8BB5796D640D93EA7384578 /* GDTCORRegistrar.m */,
-				99059BDE8FA7C29DA77DE9E84F727FFD /* GDTCORRegistrar_Private.h */,
-				44385940B84797CBECB92A6A82D9A818 /* GDTCORStorageEventSelector.h */,
-				D1D4B9A118D6E7132E914D8E3DD32FE1 /* GDTCORStorageEventSelector.m */,
-				0CC04C215FACFF1FE2AEB49B03FE008B /* GDTCORStorageProtocol.h */,
-				CDCA9C89AA26AE3321E6E8F22D4A12A6 /* GDTCORTargets.h */,
-				3C433B1A15759AA0F78359E6F0A25FC8 /* GDTCORTransformer.h */,
-				4E31A80B073D35AB305E882CBF919A25 /* GDTCORTransformer.m */,
-				05DFCB63F2DCC6364CE7342E8B732793 /* GDTCORTransformer_Private.h */,
-				96ED27AA89926A1702A380F0C36EA9EF /* GDTCORTransport.h */,
-				A4C44169D7B3D53241CE2982F560F1D0 /* GDTCORTransport.m */,
-				F1CA2581134930FC69356E9C3CE0AC96 /* GDTCORTransport_Private.h */,
-				624F45663805D58CBE2ED940F81CBD5F /* GDTCORUploadBatch.h */,
-				0D24D44186A115DE8AFCAE359D45EA1F /* GDTCORUploadBatch.m */,
-				6255482EC00536C98D20A09A8B6B45FD /* GDTCORUploadCoordinator.h */,
-				076CC6811E354E7440DED1DA2E473694 /* GDTCORUploadCoordinator.m */,
-				D54B59D9094AD02C3560F21B3029C07D /* GDTCORUploader.h */,
-				37AEE182DF8E5D00092DF7B3964CD8F8 /* GoogleDataTransport.h */,
-				CF51CAE0AC50E584523ABFF31A22413D /* Support Files */,
+				C0DEDE4F8A0F73EA05DB5FD3F92504D3 /* GULAppEnvironmentUtil.h */,
+				AA3D6E0F92D2A446F8F18EAE586B6CFC /* GULAppEnvironmentUtil.m */,
+				BE7D1BBB2E2E79889115EF5304C4AAAD /* GULHeartbeatDateStorable.h */,
+				0652AC1445390A74E3B7F76EF2E711DD /* GULHeartbeatDateStorage.h */,
+				48862458A4A0A4DE9AB4F870B8F2E777 /* GULHeartbeatDateStorage.m */,
+				37F9FEFCBEBE428AC5629F0271D35B25 /* GULHeartbeatDateStorageUserDefaults.h */,
+				8008DC799F95A945AAA2A9EB5D53F25A /* GULHeartbeatDateStorageUserDefaults.m */,
+				4DEC70362434095523615EFDB7189F35 /* GULKeychainStorage.h */,
+				0E1FECFE7C02ADCB3C2FD177E6AF7D3A /* GULKeychainStorage.m */,
+				C6A2961B2CC9F6787A17C0D08F45EDA3 /* GULKeychainUtils.h */,
+				8D4308628EC5B4294723917C0223D0F1 /* GULKeychainUtils.m */,
+				824F2741AEB1151D0520CD0D747056E1 /* GULSecureCoding.h */,
+				4F0A2E4017AC579885330E448BCFFAD7 /* GULSecureCoding.m */,
+				19891641EDAEEBD967909B0BBBB6E3C7 /* GULURLSessionDataResponse.h */,
+				4F9C558075BCF3BA467A34D145DED2FE /* GULURLSessionDataResponse.m */,
+				4E874F721614ECD1328D5A44D663AA19 /* NSURLSession+GULPromises.h */,
+				69AC3B8909B1E0DBE3F60C919B890B00 /* NSURLSession+GULPromises.m */,
 			);
-			name = GoogleDataTransport;
-			path = GoogleDataTransport;
+			name = Environment;
 			sourceTree = "<group>";
 		};
-		167BBBC8FB7EFE9C99311D17FE4C6C6F /* Support Files */ = {
+		13679A5C8AB43BC6D196D93F094763D4 /* Support Files */ = {
 			isa = PBXGroup;
 			children = (
-				760A8E38BFD99B8926146F8BB503CDC2 /* SwiftLint.debug.xcconfig */,
-				F6A5C785D8104E9A994DCD940D56D5B3 /* SwiftLint.release.xcconfig */,
+				777EEA6E589115848D5A1E78D7FBA756 /* Firebase.debug.xcconfig */,
+				624A921ED3D6FFBD7CE13F0F6E8B6723 /* Firebase.release.xcconfig */,
 			);
 			name = "Support Files";
-			path = "../Target Support Files/SwiftLint";
+			path = "../Target Support Files/Firebase";
 			sourceTree = "<group>";
 		};
-		16DC9CFB034CA68E1B3FB160BF8BA56D /* GoogleUtilities */ = {
+		13A4ED86717991765D03E77474F06D02 /* FirebaseCrashlytics */ = {
 			isa = PBXGroup;
 			children = (
-				2681DF662C86045E5C6F24E6BE83EDA7 /* AppDelegateSwizzler */,
-				0805E383FBB896A50427D67BC5967EF1 /* Environment */,
-				F5B89938D99B4794306957E4495B8808 /* Logger */,
-				633A18DD6BF82FF50763DE9F3C1C53A1 /* MethodSwizzler */,
-				C0CD4FBCC88601D2904CE32FC811AE74 /* Network */,
-				6FA2E24320D01272909DBB74521E381A /* NSData+zlib */,
-				D3AE754AB36C0ACAEB954BA6AA39B69B /* Reachability */,
-				DD9D3E24A0AA49C36391685E754025D7 /* Support Files */,
-				8F2C4AAF03141C8039BC10A820FCFD7E /* UserDefaults */,
+				902AE51961A56236E846455515371AEA /* crashlytics.nanopb.c */,
+				08171A34191FD1035A1D0642F3CD1D66 /* crashlytics.nanopb.h */,
+				850A1FB83379528CECFAD5F02818CB5E /* dwarf.h */,
+				65F753EAF81D72BE5B6CDA55E06CEBBD /* FIRAnalyticsInterop.h */,
+				3DBE9AD1AB2DC6FAC202274CF70E04F7 /* FIRAnalyticsInteropListener.h */,
+				FF8F380A119F483A7ED34E4FBEEA389E /* FIRAppInternal.h */,
+				43099DAF55DFB4B165A671EDEBA81648 /* FIRCLSAllocate.c */,
+				28DBA0C1B8435CD694C302E196800326 /* FIRCLSAllocate.h */,
+				651C749EAA4998CA5425D60D2712C618 /* FIRCLSAnalyticsManager.h */,
+				30EFBB8CFF983BFD0C3616D13EEA03E0 /* FIRCLSAnalyticsManager.m */,
+				6F52B54A15572161B60F4185F519BD12 /* FIRCLSApplication.h */,
+				752CE7AB184C7AE09F2AF537BB3ADC3D /* FIRCLSApplication.m */,
+				D4AB846F7A0DB298D5AFA5851CC0FE5B /* FIRCLSApplicationIdentifierModel.h */,
+				9A565055D27D9CE403117510F6A244A3 /* FIRCLSApplicationIdentifierModel.m */,
+				FA8D06BBBDBD7C5E877B50F5BEF4E30D /* FIRCLSAsyncOperation.h */,
+				5A85FAB4E757C7AB105A7CE740D1401D /* FIRCLSAsyncOperation.m */,
+				42D81562815F6BBA281AE3E5BE7BE3B0 /* FIRCLSAsyncOperation_Private.h */,
+				136309EA332758D6F80642442B5E8D0E /* FIRCLSBinaryImage.h */,
+				4D4DA4CBB9DB8DFE391FF87354EDB81B /* FIRCLSBinaryImage.m */,
+				D850A6AC3756EC6C167502B52461CF73 /* FIRCLSByteUtility.h */,
+				2074CABF0F9D6AC3E78583284410C9D1 /* FIRCLSByteUtility.m */,
+				7E2BF31DE2A8F1494A25954A8227A263 /* FIRCLSCallStackTree.h */,
+				CD1C1C23F916B41334AC9BF081872423 /* FIRCLSCallStackTree.m */,
+				C62067F0C542D3CD718E1FE3E02F5770 /* FIRCLSCodeMapping.h */,
+				077968B5BAF4DE780FC29D3FB93261CA /* FIRCLSCodeMapping.m */,
+				D36E0117FF8C4F329FF0C37299C43960 /* FIRCLSCompactUnwind.c */,
+				9B69D3F6380635FCFCD8D16A606EF8D5 /* FIRCLSCompactUnwind.h */,
+				BF779B2BD7C91D3BAF599B26EE2410CE /* FIRCLSCompactUnwind_Private.h */,
+				9CC98E99A7B3882475A89A615274189B /* FIRCLSCompoundOperation.h */,
+				ED03C315026FAEB9F69D6E197FCAB3AB /* FIRCLSCompoundOperation.m */,
+				95A11A2F98D798B4C88693ACDEC66670 /* FIRCLSConstants.h */,
+				4195F288B30EAAD2323DB8C0F3635D50 /* FIRCLSConstants.m */,
+				73431BE418F7294C6578F0ECB34A11C8 /* FIRCLSContext.h */,
+				8D2D1FAA36D637015F09312D3F89E024 /* FIRCLSContext.m */,
+				92C915F834AFDD3A55969B67D33F06C9 /* FIRCLSCrashedMarkerFile.c */,
+				EA2913C4AEAF5398E93DE7EA0F8F59AB /* FIRCLSCrashedMarkerFile.h */,
+				AF0172D538670EEB5B18C87AEE7AB54A /* FIRCLSDataCollectionArbiter.h */,
+				16E7F6FC731BC8F40A85322F0DF32BD2 /* FIRCLSDataCollectionArbiter.m */,
+				5549F3D68AF33A0A5CD45C1AA777765D /* FIRCLSDataCollectionToken.h */,
+				660CE1D13BE6A891D26775384BB8B152 /* FIRCLSDataCollectionToken.m */,
+				13973C7687555C65B070CFE8D8979222 /* FIRCLSDataParsing.c */,
+				8A4E0AE7EF470ED5C78E27AC2BD0B7FD /* FIRCLSDataParsing.h */,
+				97DF05DB4FC5D5E127E180FA85ACC4E6 /* FIRCLSDefines.h */,
+				55AD4ADCD1AA1110F584DB80C648D33A /* FIRCLSDemangleOperation.h */,
+				E17DDFFA2040EE80A995DBF526A6C13B /* FIRCLSDemangleOperation.mm */,
+				2DD906771D49AB1BEB15661309905D9A /* FIRCLSDownloadAndSaveSettingsOperation.h */,
+				8821DEA526DB43990F96020E6436059D /* FIRCLSDownloadAndSaveSettingsOperation.m */,
+				66E97302FA67DC7B7ACA4CC26C612F3B /* FIRCLSdSYM.h */,
+				EE5B39D2958FFED65CEC3DEA93939570 /* FIRCLSdSYM.m */,
+				CAD1D3AE5623D405813457B8711A88D7 /* FIRCLSDwarfExpressionMachine.c */,
+				FB1255225D9BC406C24F538DA8E31AA2 /* FIRCLSDwarfExpressionMachine.h */,
+				48EE650E18407E2AA77F9972D88C79FF /* FIRCLSDwarfUnwind.c */,
+				2814C83614480C3323780473AC1733E4 /* FIRCLSDwarfUnwind.h */,
+				9A1F2636580718538B3DB4B995B2109F /* FIRCLSDwarfUnwindRegisters.h */,
+				A2F25633C96DBF77ABC7972F54429AD1 /* FIRCLSException.h */,
+				74C338F218E0D5A07922A259EE01FD7A /* FIRCLSException.mm */,
+				96A57EE0B36CC5CE671568F51622ABFE /* FIRCLSExecutionIdentifierModel.h */,
+				3C0D24FC19C26534418054B10F3AC51F /* FIRCLSExecutionIdentifierModel.m */,
+				1B6F2061D025B719C7A44CDAC34893CE /* FIRCLSExistingReportManager.h */,
+				930EA3CC4D4A792B4D2F74D75FEC2FAE /* FIRCLSExistingReportManager.m */,
+				5B78F3209CA839471013A2D38D81E3B0 /* FIRCLSExistingReportManager_Private.h */,
+				17BD192FABF82ADEEA0C5FD796E9A785 /* FIRCLSFABAsyncOperation.h */,
+				807ABE3ED4CBDCAAF00262B5461AF595 /* FIRCLSFABAsyncOperation.m */,
+				B3D6F9C340E055D31D157832905C0EE0 /* FIRCLSFABAsyncOperation_Private.h */,
+				1F688594575CE5C6D474B5F70D71DF18 /* FIRCLSFABHost.h */,
+				3DB8FF34B98217A38B079D05F3D9C911 /* FIRCLSFABHost.m */,
+				B989619D86415C94F6FA58D5B9033008 /* FIRCLSFABNetworkClient.h */,
+				8FFD5A06BF3897955B2D589F6B8CC017 /* FIRCLSFABNetworkClient.m */,
+				0EE36995E04DC26BB8F7055BD9447034 /* FIRCLSFeatures.h */,
+				2E17639D7D0993B02F8358B47B2FEA0F /* FIRCLSFile.h */,
+				0C43C6D098D5F27300519E2ACB18CC94 /* FIRCLSFile.m */,
+				1C324AF75439C9F991BB7AB266737095 /* FIRCLSFileManager.h */,
+				8677B938A7B82A80A82B426E298CDED9 /* FIRCLSFileManager.m */,
+				F89A12F6712B7BD47B4D58A8E14A89D6 /* FIRCLSGlobals.h */,
+				2FAC58CEB535CFDC22B457618105E8E2 /* FIRCLSHandler.h */,
+				01E76AAE6418C25B817D7ACC73A39825 /* FIRCLSHandler.m */,
+				4356F45410A9D4950B7F6F726EF89881 /* FIRCLSHost.h */,
+				A0335F91A337CF3C12C7BFE700E21739 /* FIRCLSHost.m */,
+				9044B30EE88D7F37DF950735DF51E560 /* FIRCLSInstallIdentifierModel.h */,
+				73DCC30A0975CF8EC7D374DC264B75C6 /* FIRCLSInstallIdentifierModel.m */,
+				453FFEE4FA9D0E121E53C6E44FDF31F0 /* FIRCLSInternalLogging.c */,
+				DD4AAD55B3695ED410F2C7795CECC2F4 /* FIRCLSInternalLogging.h */,
+				764527D4AF483A9664434CC804DF21B2 /* FIRCLSInternalReport.h */,
+				103191D098277BDD1D12D744902DD282 /* FIRCLSInternalReport.m */,
+				155F0B63DD2275CFEBFCACEB4971D7A5 /* FIRCLSLaunchMarkerModel.h */,
+				1C5143128154E98083F9CCC38E887DD2 /* FIRCLSLaunchMarkerModel.m */,
+				4F29F996BC87B5DAF0B3C7A4FA0BD091 /* FIRCLSLogger.h */,
+				71D285A1878E9D22AD352EBC9A3EC28D /* FIRCLSLogger.m */,
+				0F2A034BF9635154F9EDADBC13582B78 /* FIRCLSMachException.c */,
+				A4D09DD7955FFF33CB085240804572C0 /* FIRCLSMachException.h */,
+				F96FEB77F17EA3AC27E03F2F1F84499D /* FIRCLSMachO.h */,
+				D270624EFF8EE2F812599F6783F70746 /* FIRCLSMachO.m */,
+				AD26AB3B6DFB83733A15190591100CBC /* FIRCLSMachOBinary.h */,
+				B39FDDDD184D41F0EB65A56CB04DCB68 /* FIRCLSMachOBinary.m */,
+				3A8AA639F8D5149D5A5F3C80C9F5AD92 /* FIRCLSMachOSlice.h */,
+				C062DAC18FA57B20568C60F79D33DBE6 /* FIRCLSMachOSlice.m */,
+				3AB0CE84191CF69A2EE36D3973B7C603 /* FIRCLSManagerData.h */,
+				BB1D70F3BB1D1BAD433DA9D3BE3E7EA8 /* FIRCLSManagerData.m */,
+				A59258BE5C497F70043B12CE440BFB95 /* FIRCLSMetricKitManager.h */,
+				EA6444E2D780213117CE1F1B67DBEB34 /* FIRCLSMetricKitManager.m */,
+				910DCC2263B4A4BC016B7E4F43C16E90 /* FIRCLSMultipartMimeStreamEncoder.h */,
+				BD9E974E79FD851E241F31C55472E31A /* FIRCLSMultipartMimeStreamEncoder.m */,
+				CFABA037DB556675C7CB42C4682E148B /* FIRCLSNetworkOperation.h */,
+				8D5297BB76E3039E0D40586E8B40C404 /* FIRCLSNetworkOperation.m */,
+				B5AE1BE59422B53142C1F2E0214CD610 /* FIRCLSNetworkResponseHandler.h */,
+				96A9BF5791F9ECDE01D0E01AC26A7C88 /* FIRCLSNetworkResponseHandler.m */,
+				FE2DDB7261A31DB7BA340EC91336F2C4 /* FIRCLSNotificationManager.h */,
+				A24DE840E4E7EFB4A724355D82884192 /* FIRCLSNotificationManager.m */,
+				E5DC56939D6CAEEABE7A3134AFFE8B2A /* FIRCLSOperation.h */,
+				59EA141399384AEAC894DAB13B0F6F55 /* FIRCLSProcess.c */,
+				2D50576FB84AF3B5FD8AE7EDBE6157E8 /* FIRCLSProcess.h */,
+				82D41435B03D4AF1236F9A7A826ABB30 /* FIRCLSProcessReportOperation.h */,
+				49A74E3908131F729AA16FE2181655D0 /* FIRCLSProcessReportOperation.m */,
+				09870467C5FE392DA2F75C51048A1D1F /* FIRCLSProfiling.c */,
+				505F626652833F2B8E2F23076B20DD18 /* FIRCLSProfiling.h */,
+				CE75A2F6F3A6B53F9FF8B5020AFCC05E /* FIRCLSRecordApplication.h */,
+				B672DD1F47ADD7BB6AAE8A75E6118078 /* FIRCLSRecordApplication.m */,
+				C89515E7E2C8B7A75DBE9B1ACA28FB56 /* FIRCLSRecordBase.h */,
+				AF62F773E2ABCA7554D0DEF7545929B4 /* FIRCLSRecordBase.m */,
+				3962EB8D20C9D9D03BD15FED8D13C0EE /* FIRCLSRecordHost.h */,
+				CDF8FE99445B840794168CC99558CA56 /* FIRCLSRecordHost.m */,
+				5AB8B31A0435C61EC96CB0879B31536C /* FIRCLSRecordIdentity.h */,
+				82335BDB9831F033D58933E5818E7CB2 /* FIRCLSRecordIdentity.m */,
+				4708D4CB01AA4225BB7F1C91A7139D71 /* FIRCLSReportAdapter.h */,
+				7C705EF5B2F8D0AB0F671FF2ACBB658D /* FIRCLSReportAdapter.m */,
+				382FF818196B494E3B5A986C69DFBFA2 /* FIRCLSReportAdapter_Private.h */,
+				5946337CB950C243ACA1FC968E968FAE /* FIRCLSReportManager.h */,
+				388E5B7BC08650529411FBBD7823F88A /* FIRCLSReportManager.m */,
+				EE180BEAD1B5D317D9FA99393658D9BE /* FIRCLSReportManager_Private.h */,
+				8BAE39769DDA52C82BE369705404E0A5 /* FIRCLSReportUploader.h */,
+				C8FE442AA7FBA8DBE2E67DE62C2A75E1 /* FIRCLSReportUploader.m */,
+				CB0EF27C8C83049EFDBA6A478040AA07 /* FIRCLSReportUploader_Private.h */,
+				4F0EBFEF8768EC58C84D9D5C252267B4 /* FIRCLSSerializeSymbolicatedFramesOperation.h */,
+				2596D0B4A54BA72440B5D8D6A45E3E24 /* FIRCLSSerializeSymbolicatedFramesOperation.m */,
+				A54AA84DD5AB6B276E0D51214B4DC9EC /* FIRCLSSettings.h */,
+				24249FCDB8E42EBC4EFD4C860E7B2AFB /* FIRCLSSettings.m */,
+				C32D4F35505CE6EB1749562DC5BBFEC3 /* FIRCLSSettingsManager.h */,
+				202490F889C3DFA222866502733A05B1 /* FIRCLSSettingsManager.m */,
+				74CD825D1618E30060A1808C80796172 /* FIRCLSSignal.c */,
+				A376990628CA5ACEB2316F138309F5E0 /* FIRCLSSignal.h */,
+				2F59B7C2727A790A171107F0A2A86D0A /* FIRCLSSymbolicationOperation.h */,
+				ABB870902EB1468066E55945DE2D9B6A /* FIRCLSSymbolicationOperation.m */,
+				7B89A1C90EA3B4A508C1263744B58035 /* FIRCLSSymbolResolver.h */,
+				8BD7F9AF9C5F163A766986934462E26F /* FIRCLSSymbolResolver.m */,
+				9E10F9480FB9A06F6745A36A4DB58380 /* FIRCLSThreadArrayOperation.h */,
+				4B97EEECB18AB4F359E111BD75F9678F /* FIRCLSThreadArrayOperation.m */,
+				655C7A7A2D77D535F64B6ED73FC1D40D /* FIRCLSThreadState.c */,
+				C61C4FB152630D54FC285D76E46C0A94 /* FIRCLSThreadState.h */,
+				E4FAFAD4CAF3236EDF706095FA0EDD06 /* FIRCLSUnwind.c */,
+				71A992955D309D9E3C02B07B74C31575 /* FIRCLSUnwind.h */,
+				3C213A746118458288D3D0F0BD08BC2F /* FIRCLSUnwind_arch.h */,
+				A6E77C1D23954B2EDD7504B81A9BF821 /* FIRCLSUnwind_arm.c */,
+				3FF4DC6E298E60173B0206188C93A48A /* FIRCLSUnwind_x86.c */,
+				DF2B1B5F4ED967D92D9B825196B9F876 /* FIRCLSUnwind_x86.h */,
+				7A0DCDF4EE5E096A2825164D0E7F8427 /* FIRCLSURLBuilder.h */,
+				56388C04D8F7A44F49F8AF8A66A58A04 /* FIRCLSURLBuilder.m */,
+				E388BEB052637D4A214069F8DFFAB1D0 /* FIRCLSUserDefaults.h */,
+				2BD03D14417E499CADE504192150F5E9 /* FIRCLSUserDefaults.m */,
+				0102F6E9A39690B86E155198543130B5 /* FIRCLSUserDefaults_private.h */,
+				050A3467B6E9069F36478579008CE452 /* FIRCLSUserLogging.h */,
+				73B7CC9C89ED5CF7E6050A1B87F1204A /* FIRCLSUserLogging.m */,
+				E8E2B805A7F01EA5375A44D363B043B4 /* FIRCLSUtility.h */,
+				296BAC8CCDF29E1F2578A076FF0F326E /* FIRCLSUtility.m */,
+				2A6A376A7509B0A6B5DC77CAA8D53E2D /* FIRCLSUUID.h */,
+				077B6BDFCC85619DC4C84482F3AB279C /* FIRCLSUUID.m */,
+				4D7403BA9BDF02D00EE41F01A2048F3A /* FIRComponent.h */,
+				D76CC009E1C55B9BE4D8B57695ACB977 /* FIRComponentContainer.h */,
+				AC6A3A1216BF0F6B7524B913900EC73F /* FIRComponentType.h */,
+				747839390FEB32C0B31CDE1F1DE7173C /* FIRCoreDiagnosticsConnector.h */,
+				8F1E468A5E80D420613B5E955B518E07 /* FIRCrashlytics.h */,
+				9EFDDA7BFF6A4FF5882F190C1DDE30E4 /* FIRCrashlytics.m */,
+				112701C44F751ABF2F9B4AF8D984BC9E /* FIRCrashlyticsReport.h */,
+				A80F15ADC0AAE008F5B3BDA48C2BC025 /* FIRCrashlyticsReport.m */,
+				B5C951E580F57F50F8E1AA4C7B8E7169 /* FIRCrashlyticsReport_Private.h */,
+				46B26F62E9AABE87BD017CD954153172 /* FIRDependency.h */,
+				9427C0C5EE54092D8C85D46DD228BB66 /* FirebaseCoreInternal.h */,
+				2406AB64850D320660C8A9D88ECFFF69 /* FirebaseCrashlytics.h */,
+				4B5F9EB6D1E633E871B811768DFA3E03 /* FirebaseInstallationsInternal.h */,
+				1F6F99B0F847574EB4517CCBA2A820E4 /* FIRExceptionModel.h */,
+				5F7A636703BA71803F18A70D1069FF09 /* FIRExceptionModel.m */,
+				3C3D834396245AAEB78273B9C3AC73B5 /* FIRExceptionModel_Private.h */,
+				8BDB8E0D141837AF7D840A1F4754C676 /* FIRHeartbeatInfo.h */,
+				3ADD2FA6B3DDDC7AF7485F2EBB4E0E82 /* FIRInteropEventNames.h */,
+				3092AB062A361EF8D432396BE2C79CD4 /* FIRInteropParameterNames.h */,
+				21586DF84D5543CE0A6453DA656AF4A7 /* FIRLibrary.h */,
+				F8DAA6E3AFF79DAD9D39EE600A314102 /* FIRLogger.h */,
+				81CC485136EE60347DB61D49F3052C7A /* FIROptionsInternal.h */,
+				C731E6387D356C31F8840C687B8BDF0E /* FIRStackFrame.h */,
+				12317699BE712AB944F1D70D70FF486B /* FIRStackFrame.m */,
+				074E167E07B11E8C6F2A9B26B1C8D1C9 /* FIRStackFrame_Private.h */,
+				1733E8A71DB6160697B065393EE9C8E9 /* Support Files */,
 			);
-			name = GoogleUtilities;
-			path = GoogleUtilities;
+			name = FirebaseCrashlytics;
+			path = FirebaseCrashlytics;
 			sourceTree = "<group>";
 		};
-		19A9E2C4E8578595E567DD00D6276E37 /* Resources */ = {
+		1733E8A71DB6160697B065393EE9C8E9 /* Support Files */ = {
 			isa = PBXGroup;
 			children = (
-				DBF5AA0BE24D16F79D770563371322A6 /* Assets.bundle */,
+				51C1B2ED5787536D09E9B9563F3FFE8A /* FirebaseCrashlytics.modulemap */,
+				0E71518EED12326C46CD9DF60C27334D /* FirebaseCrashlytics-dummy.m */,
+				C76E1F6674DCC16AB4A20B92604BCD24 /* FirebaseCrashlytics-Info.plist */,
+				581CF8EB713B8BDD38D4FBD00D06228A /* FirebaseCrashlytics-umbrella.h */,
+				7AB36873712063E242B27D55D9A9016F /* FirebaseCrashlytics.debug.xcconfig */,
+				412B404EE1B1C1E4C239846B59A2C6E2 /* FirebaseCrashlytics.release.xcconfig */,
 			);
-			name = Resources;
+			name = "Support Files";
+			path = "../Target Support Files/FirebaseCrashlytics";
 			sourceTree = "<group>";
 		};
-		1FF2F9F63F65F3102A15351A6B1FD629 /* Alamofire */ = {
+		19830FF1924597784ABD8AEDA73BEFBD /* Support Files */ = {
 			isa = PBXGroup;
 			children = (
-				919E1894635DD309D65FA8A2BD85BCFC /* AFError.swift */,
-				AB4A6D4A42E512F4B682FEA6ABD2D5FD /* Alamofire.swift */,
-				FF22E6E7AC618E82168FF69F36C101AC /* AlamofireExtended.swift */,
-				D0FB770DFE550F9815FF5F5E89D8869D /* AuthenticationInterceptor.swift */,
-				B101740E994BD1C030B5A4E9011BC7F5 /* CachedResponseHandler.swift */,
-				66049DAF9DCDDB04D15D1D80E0EF5135 /* Combine.swift */,
-				E35BD291F61F7A5B46010AFF9BC84F34 /* DispatchQueue+Alamofire.swift */,
-				0A8900AE4D2664CF72C6E0CAE143C525 /* EventMonitor.swift */,
-				B630050E88D825BE7E5E7086BBAAA640 /* HTTPHeaders.swift */,
-				99CD7F5F453DB76C5296C4CD35BB51F4 /* HTTPMethod.swift */,
-				B2946A683C74EB0AFBAD306665EDC902 /* MultipartFormData.swift */,
-				0EB6DC31A1BD9A1EFFC59F54D95BE467 /* MultipartUpload.swift */,
-				438B758075229867EDD3872863F778E8 /* NetworkReachabilityManager.swift */,
-				C946F86246FA4CD309365664A5E15AB1 /* Notifications.swift */,
-				C27C55DAC0875ADBF8746087AF0A6722 /* OperationQueue+Alamofire.swift */,
-				E31664BE47B2C3497D11F647DF59069A /* ParameterEncoder.swift */,
-				5682CBAD9E6B6533E38D36E50A44299E /* ParameterEncoding.swift */,
-				073D3BFEAD1B94A696D1FFD31588A6DB /* Protected.swift */,
-				A874F8F3DBFF978B119F3269DE3A591C /* RedirectHandler.swift */,
-				CEEB70698CC9991E398C6070FE7BB763 /* Request.swift */,
-				5340E52136B510BFC920AD2F962FB2ED /* RequestInterceptor.swift */,
-				75F5B3C66E2B3D7F850C7F7EC707E4B4 /* RequestTaskMap.swift */,
-				AB5A85BFE6E1D720BD9F6389C8357EE4 /* Response.swift */,
-				6A1EF3569B9392CB4AF990C02F433818 /* ResponseSerialization.swift */,
-				0AB7E7164EB355A5B49DD52F0AFDDEE4 /* Result+Alamofire.swift */,
-				55DA021BA2AF3FB8303DB83DCA84E493 /* RetryPolicy.swift */,
-				0CF771E147DAA3F457883DAFF60DAB84 /* ServerTrustEvaluation.swift */,
-				8E00E549BEDD54FFB6B1FC8B380D81C1 /* Session.swift */,
-				30448D9146397EF03EA616DC60F6800A /* SessionDelegate.swift */,
-				D3572CC4295BBD2187B1627C2695766F /* StringEncoding+Alamofire.swift */,
-				9676D41170DC2498D22F5CE285AB5532 /* URLConvertible+URLRequestConvertible.swift */,
-				A9CC2452F12510951789FD6D970073DF /* URLEncodedFormEncoder.swift */,
-				03096B3EFD7BC201DD12038A742AEE13 /* URLRequest+Alamofire.swift */,
-				2A79650B59C681C9D456C86F5DA5EE11 /* URLSessionConfiguration+Alamofire.swift */,
-				0521E1F7755149CAF3E4D02D8490597D /* Validation.swift */,
-				BF8C565EE124BCA2218ECFB53BE6EAD6 /* Support Files */,
+				543F53D1BC5837C1FD9E7D12B27EDE08 /* ScrollingFollowView.modulemap */,
+				6135A5B940448D22239E9E06C8CDCEDF /* ScrollingFollowView-dummy.m */,
+				B5B8DBE83A77DCFE1F9B45D813182DEA /* ScrollingFollowView-Info.plist */,
+				34C2BE64F19F4FA9DEC22160A1270859 /* ScrollingFollowView-prefix.pch */,
+				B8A7E4909001B056B4FC6ADAFEBD45F8 /* ScrollingFollowView-umbrella.h */,
+				29CD212298261E9C69DD1A7EC892F1E5 /* ScrollingFollowView.debug.xcconfig */,
+				EDA17B70B2028F4949598050DE199D60 /* ScrollingFollowView.release.xcconfig */,
 			);
-			name = Alamofire;
-			path = Alamofire;
+			name = "Support Files";
+			path = "../Target Support Files/ScrollingFollowView";
 			sourceTree = "<group>";
 		};
-		23EC40E0A58CA733147D8C797F599E74 /* Support Files */ = {
+		1F014AEDE94BFBA6CCC2C8D513B9C6B6 /* AdIdSupport */ = {
 			isa = PBXGroup;
 			children = (
-				13C9B88517CF2741270C4CDBD187660B /* FirebaseAnalytics-xcframeworks.sh */,
-				75E9623933DB8FA15D43BAE5F30743B1 /* FirebaseAnalytics.debug.xcconfig */,
-				2F9B670ADDBC00EB32AE3C255A25B0F3 /* FirebaseAnalytics.release.xcconfig */,
+				BAE4CCB452F71A2594EFC54390DA8052 /* Frameworks */,
 			);
-			name = "Support Files";
-			path = "../Target Support Files/FirebaseAnalytics";
+			name = AdIdSupport;
 			sourceTree = "<group>";
 		};
-		2681DF662C86045E5C6F24E6BE83EDA7 /* AppDelegateSwizzler */ = {
+		277C6379BD4B54901861AA8A4C3CFE68 /* CleverTap-iOS-SDK */ = {
 			isa = PBXGroup;
 			children = (
-				272BEBC2D5522FAFADEA7D24E588EE67 /* GULAppDelegateSwizzler.h */,
-				38B7AFCCEB7CDCBF940C1972B39DC59C /* GULAppDelegateSwizzler.m */,
-				9E0F9E6A74FCA87F3D48D63DE5EFA1E4 /* GULAppDelegateSwizzler_Private.h */,
-				E4C123308546C3ACE890F20B448B1C81 /* GULApplication.h */,
-				64C034536F1F42CBFA45EAF2EC02A006 /* GULLoggerCodes.h */,
-				B577364D6AFC1E66172F25CB1074410B /* GULSceneDelegateSwizzler.h */,
-				6F2F9449F6FA5359270E434C659AF1B0 /* GULSceneDelegateSwizzler.m */,
-				A5B9FD0FB9924376668723D423C2DC8D /* GULSceneDelegateSwizzler_Private.h */,
+				E6099841E9DDF359D18EFE372967468F /* CleverTap.h */,
+				C3C3EC08DF96B282D53BB925A57C0738 /* CleverTap.m */,
+				7082B4098ED08EB747058DDE40A00874 /* CleverTap+DisplayUnit.h */,
+				40DE5B55D6A830A5886E326FB31DE084 /* CleverTap+FeatureFlags.h */,
+				108E35351046A0DD394C1AD68BAA0D5F /* CleverTap+InAppNotifications.h */,
+				9FA8A04148635EF81606D98D8EF1F491 /* CleverTap+Inbox.h */,
+				832FB13474AC09FBA89ACF4DF632BB34 /* CleverTap+ProductConfig.h */,
+				EF66DFE2368BE8344BAE8F89BA7A1DDB /* CleverTap+SSLPinning.h */,
+				57B40F99176598C1C0DA5A9FBFA01FB8 /* CleverTapBuildInfo.h */,
+				5B3EC699426A74EC7891730C5BC7F61E /* CleverTapConfigValue.m */,
+				609DAA51432A0B744386D3FC98E1901C /* CleverTapDisplayUnit.m */,
+				2A2D6DF114ABB89068967721AD05EE5A /* CleverTapDisplayUnitContent.m */,
+				A4D1868AF28247465DE1AE281F1C7B06 /* CleverTapEventDetail.h */,
+				CC3315B28F61B22AB235B49DC58918D8 /* CleverTapEventDetail.m */,
+				45CF5401BC6AD0B0E50BAA2978172E2E /* CleverTapFeatureFlags.m */,
+				072184D32B7A963613213CE51B2572CD /* CleverTapFeatureFlagsPrivate.h */,
+				73F0AD6C9701EA1D57564E339C059ACB /* CleverTapInAppNotificationDelegate.h */,
+				DF13CD565132EAAD8737DFBC46F6101A /* CleverTapInboxMessage.m */,
+				B8CE77F2FECAAF1B074BFF49D897441A /* CleverTapInboxMessageContent.m */,
+				1EB1BE857FD93E9ECD857C021C28B7F0 /* CleverTapInboxStyleConfig.m */,
+				7CC354E905EBAEA58982A67562A49595 /* CleverTapInboxViewController.m */,
+				AAB430493CE26ACB75C9037AD5316891 /* CleverTapInboxViewControllerPrivate.h */,
+				94F57A8670BA6CDCD1B488C2E9D8E79B /* CleverTapInstanceConfig.h */,
+				44AFB46FDE2B799A8F3CBC4E091A23A3 /* CleverTapInstanceConfig.m */,
+				89D2ABE67FA0B9803ACCD8A4E0F015D0 /* CleverTapInstanceConfigPrivate.h */,
+				CEB8AEF6A7DD8930A3138907FB140D93 /* CleverTapJSInterface.h */,
+				ED70893AEE70AB0A0B5EFAA22FFCDFB5 /* CleverTapJSInterface.m */,
+				D6969F1699DFD7D2AE65096976CF1ED6 /* CleverTapProductConfig.m */,
+				AA441242F2FCB9A773DE3F87B5336F99 /* CleverTapProductConfigPrivate.h */,
+				DFA08B716A8E4805E05ABD578C564025 /* CleverTapPushNotificationDelegate.h */,
+				D875F9B74796AB6D4382A1EF152783D1 /* CleverTapSyncDelegate.h */,
+				7D930E572AA8419DE7E020E638D4F6DE /* CleverTapTrackedViewController.h */,
+				630C2D12DD25A08A9D84B40F1391C3DF /* CleverTapTrackedViewController.m */,
+				515F8265E37CF0EF6DFBCDD20448A4F1 /* CleverTapURLDelegate.h */,
+				5C977E8E5DEA7B63064C5E3FB1104345 /* CleverTapUTMDetail.h */,
+				7E966BAF1557E2838242B2A4667C553A /* CleverTapUTMDetail.m */,
+				261A4DE451CEF97A4BDB37DA1F89B255 /* CTAlertViewController.h */,
+				5A0604B1BE78F6A792F1DD029CBEE413 /* CTAlertViewController.m */,
+				84F190402674640F7E58B609A5BDAE56 /* CTAVPlayerViewController.h */,
+				17A5436C35B8B764D42CFEBD58A400E3 /* CTAVPlayerViewController.m */,
+				B6DA84841AE0CBE101E4CE4B1B2CF0A8 /* CTBaseHeaderFooterViewController.h */,
+				B7E7CEBCCC3961A8F387BCFB258C5C3F /* CTBaseHeaderFooterViewController.m */,
+				0C663B636A0A6DF6ECB08F8336F5F5E8 /* CTBaseHeaderFooterViewControllerPrivate.h */,
+				375D9D9FE3DD850DA84BA4C3D575E991 /* CTCarouselImageMessageCell.h */,
+				ADBA061B2123719621518556ACF6B9E9 /* CTCarouselImageMessageCell.m */,
+				B374527FA3E07E3963CA0F1D034A0117 /* CTCarouselImageView.h */,
+				87BF32056B130A2164EA410EB6CEDB89 /* CTCarouselImageView.m */,
+				63997407C61817869F00568B253D6CCB /* CTCarouselMessageCell.h */,
+				60FF54EC9247B6101870C24D91A2C543 /* CTCarouselMessageCell.m */,
+				CA572FE1B888500AAC417ADB8D939CB5 /* CTCertificatePinning.h */,
+				22E0B7C90030547311F67AB73C837797 /* CTCertificatePinning.m */,
+				522619785402161F1071952C7BAEA407 /* CTConstants.h */,
+				F111837584FB1E01945CD35A38F54387 /* CTConstants.m */,
+				BE980061605D7F51A8A4BADAA9BF17D0 /* CTCoverImageViewController.h */,
+				3CF20D4CDA4E5E07F73B942F67A7E1F8 /* CTCoverImageViewController.m */,
+				F1F75EA49F1474D60F49B2AF96894E84 /* CTCoverViewController.h */,
+				01DC13F32BE7508E54632BCD6E3AF2F6 /* CTCoverViewController.m */,
+				F617BA335DB637959ABC34BEE503B833 /* CTDeviceInfo.h */,
+				B4C37A71F8B6C5EDFE241432F8F8F00F /* CTDeviceInfo.m */,
+				05747ECF98BBC2E7F8B97536E577EB9A /* CTDismissButton.h */,
+				FFC22044353ED377A82035FCB3916800 /* CTDismissButton.m */,
+				7F8093B2B1E1DDFA8228657F4507F898 /* CTDisplayUnitController.h */,
+				77FCA99F448DEB88FB1F44D119955CEA /* CTDisplayUnitController.m */,
+				477D028BCF1A258A3AA0A7A2259A5DFA /* CTEventBuilder.h */,
+				FAFE350031CD727CA2840569DA7046D9 /* CTEventBuilder.m */,
+				097D48545465F63FE424FA9880FB74CE /* CTFeatureFlagsController.h */,
+				ECA92E1742AF14B1A8AB859BE2E9BC40 /* CTFeatureFlagsController.m */,
+				704A3BBD09FCEEBFD143CD9948C2C47A /* CTFooterViewController.h */,
+				4D460C8077A403C03767144B5DAA7688 /* CTFooterViewController.m */,
+				D02673B88302D98DB5FB394ACFB279D0 /* CTHalfInterstitialImageViewController.h */,
+				7EA8E8496DC3A9BAE0360D73E94DE12C /* CTHalfInterstitialImageViewController.m */,
+				44256A54B73F65B50E959A6F29264A60 /* CTHalfInterstitialViewController.h */,
+				F4FDDCDAA93996A471043CE4C082268F /* CTHalfInterstitialViewController.m */,
+				91824D89C03F4B8EBA57C98533427251 /* CTHeaderViewController.h */,
+				9B14ADDA449C1A0017FDD1A6F51A9ABB /* CTHeaderViewController.m */,
+				63E155F417870E25E88412060628410E /* CTImageInAppViewController.h */,
+				66A58A540C05E615DB4F42EDB0DD3D9A /* CTImageInAppViewController.m */,
+				CC604C9539C9AB820ACBE9344D1D4C59 /* CTImageInAppViewControllerPrivate.h */,
+				C53E19C6221DC7A404EF1CD08520CB65 /* CTInAppDisplayViewController.h */,
+				E2E329A2526A4B4AB0F156BD60B41FDD /* CTInAppDisplayViewController.m */,
+				1B2F239900BA149C33F8F4C8694F908F /* CTInAppDisplayViewControllerPrivate.h */,
+				F6349EAD9C4533C5CE55881033DAFEFC /* CTInAppFCManager.h */,
+				CA58B3CE3D831F501FC6C61EE42A1D37 /* CTInAppFCManager.m */,
+				A2F09130F4013AFFC7DA4D62B6262878 /* CTInAppHTMLViewController.h */,
+				6917FBBB1634CC3EB2A77177319BD91B /* CTInAppHTMLViewController.m */,
+				55254199CDD0DC8A98D31B63DE6A42CF /* CTInAppNotification.h */,
+				F3EE747811778E93B0CF44340860AC42 /* CTInAppNotification.m */,
+				4FEC174D12F1FB76901D4AC3AC2FFC01 /* CTInAppUtils.h */,
+				32C8242E07B4759FC48179209F028092 /* CTInAppUtils.m */,
+				102FEB917074560B516FCF246347CFDC /* CTInboxBaseMessageCell.h */,
+				4E0BE61455AEB434673F99B0B7D30EFF /* CTInboxBaseMessageCell.m */,
+				EC794600E2E08595155A89148ABA7E6D /* CTInboxController.h */,
+				05C4F5AD14860990D4427A47C647846A /* CTInboxController.m */,
+				3626E4BC15CF4E9A55C183D426B6F4D3 /* CTInboxIconMessageCell.h */,
+				06D7DC35ED70D4E68969A443160BBAFE /* CTInboxIconMessageCell.m */,
+				ACA65376FF075BA0B56D5D290F3F13E9 /* CTInboxMessageActionView.h */,
+				99AB2186CE97C4A6E68A30A8276A39FF /* CTInboxMessageActionView.m */,
+				A8832C447C669CD1098202D9A6BA33A3 /* CTInboxSimpleMessageCell.h */,
+				34F561CC68CBFECA3E4FE1189DB0DF62 /* CTInboxSimpleMessageCell.m */,
+				815BA03830C480C163DE3C2BB3F1E080 /* CTInboxUtils.h */,
+				9374EC2B1FC9846AC5348C44358EAD6F /* CTInboxUtils.m */,
+				EC652EBBFBA51810EE9DFD3906776D14 /* CTInterstitialImageViewController.h */,
+				AF600171DA5571A20A288CE4788087DF /* CTInterstitialImageViewController.m */,
+				BEE034AAF1B23D5E08D0338E82541CE1 /* CTInterstitialViewController.h */,
+				6F2365A0507828F4F82D50B35BE710F2 /* CTInterstitialViewController.m */,
+				37572FD8BA9D1CD9094005DCBF0CFBD9 /* CTKnownProfileFields.h */,
+				89C7672D1CFC10457CAB96C3D527FFCB /* CTKnownProfileFields.m */,
+				8666B444C8BE8A77C385E2A83A6427E0 /* CTLocalDataStore.h */,
+				37DFB75A09D5AF98A8821876B8FC67C8 /* CTLocalDataStore.m */,
+				93EFA7BB758C54E43D006C8692587986 /* CTLocationManager.h */,
+				A8AA2E4F9732DA578BD598BD91C4CA96 /* CTLocationManager.m */,
+				97A21C11C1A4FAF7251A6AA06C034AC7 /* CTLogger.h */,
+				FCE7F696C0F0024888D87CD2CB6F5CDF /* CTLogger.m */,
+				C1642A62C6B1625D142D6EA0D8FE929C /* CTMessageMO.h */,
+				C099E7F5D5840C3BDB3FA7FD602F34F9 /* CTMessageMO.m */,
+				ACF43001C088A976C6DE8B5CE34C3450 /* CTMessageMO+CoreDataProperties.h */,
+				3CC92207A688836CC8E931A67DE9E73F /* CTMessageMO+CoreDataProperties.m */,
+				133258E16B62920DD098E69077213EA9 /* CTNotificationButton.h */,
+				A7F9BC8A9E161DB95FD4668F10FEDE0B /* CTNotificationButton.m */,
+				F9D76A5468A8BA6763DEC7225D47267A /* CTPinnedNSURLSessionDelegate.h */,
+				6472E1C7B8DF7939683253FB80F9A7EF /* CTPinnedNSURLSessionDelegate.m */,
+				C3629827915D8FB9631546E8BF8B71FD /* CTPlistInfo.h */,
+				FD2FC8B7039CE304FDCB4E9CBAE4FCB1 /* CTPlistInfo.m */,
+				3DD325BEC0B36E64359F1D37FA58018A /* CTPreferences.h */,
+				7BCD620DD6A5E6B62B5DA5D1164E882B /* CTPreferences.m */,
+				A052B06F0F06C7B457CA7BD8A756E842 /* CTProductConfigController.h */,
+				DA9ACD7051A080A89BD6F2D28F6C6FC7 /* CTProductConfigController.m */,
+				F859CFBA02701A225A037DBBA4F80CD3 /* CTProfileBuilder.h */,
+				4250111C6AF98F257FA51BA7FAFEA6F1 /* CTProfileBuilder.m */,
+				DBA69AB4DC238003B15B502AEBFBD56B /* CTSwipeView.h */,
+				609D948B372B5FDD3A11A23FE893B308 /* CTSwipeView.m */,
+				A81367045340DA860EDA13FC91901944 /* CTSwizzle.h */,
+				CAF03610D17B9C263036CED3BACF3388 /* CTSwizzle.m */,
+				76645EC5F250FAA55A16C7C62D128B88 /* CTUIUtils.h */,
+				7560252785F4534B0A7DF2DE8BF88202 /* CTUIUtils.m */,
+				27DAE611403FDED1CAC48B2F760DB079 /* CTUriHelper.h */,
+				1A31901570543C709EE2DCBC5047489A /* CTUriHelper.m */,
+				EC1AC7799753937B966CFDD579689734 /* CTUserMO.h */,
+				9105F3678131BCF1B051EB0C94E21BB1 /* CTUserMO.m */,
+				09BD54587005B4CFDA4099FB660EB5A2 /* CTUserMO+CoreDataProperties.h */,
+				3F6437729D04D92E50ED8A9DFE7E19D3 /* CTUserMO+CoreDataProperties.m */,
+				7B75BF0F03E3798DBA62A4B46B2E83F9 /* CTUtils.h */,
+				DB88ED7F029481721F48DB842E7D8DC6 /* CTUtils.m */,
+				546290BA2BB9D23E3C445A4285E77C7C /* CTValidationResult.h */,
+				445645A04F832C6AFC1A7D20429B9C25 /* CTValidationResult.m */,
+				9A34E7D3AB5382BAABA61C274FA913C4 /* CTValidator.h */,
+				50EF5AA646DA5B62C399A7A6ADB78FEC /* CTValidator.m */,
+				10693E03B70C5AAB19817C2D49D4E946 /* CTVideoThumbnailGenerator.h */,
+				59752C7F2EFD0A278A396686B9E086AA /* CTVideoThumbnailGenerator.m */,
+				760C0A7EA500745AFCABBA8558A238D7 /* UIView+CTToast.h */,
+				B778F4591A7B516DBCEB1F52CE5CD418 /* UIView+CTToast.m */,
+				345C319061D2A9D276DAED5FE2D867BC /* Resources */,
+				BC5DEC1AF7E635429B4C2449D3575A16 /* Support Files */,
 			);
-			name = AppDelegateSwizzler;
+			name = "CleverTap-iOS-SDK";
+			path = "CleverTap-iOS-SDK";
 			sourceTree = "<group>";
 		};
-		26E32542C828CBC08E70172B8968EAFA /* FirebaseCore */ = {
+		29046E9DA93235548B87A3EDECFD10F2 /* Core */ = {
 			isa = PBXGroup;
 			children = (
-				EBA3F06D4F0E1F25A9F70BA2F26725D9 /* FIRAnalyticsConfiguration.h */,
-				F080303CB4105F7DA5D0F255EB677AB6 /* FIRAnalyticsConfiguration.m */,
-				E5A1F2B9875620F3348F65A855B5D063 /* FIRApp.h */,
-				9931F7F2DAA308FF821725944EB246D5 /* FIRApp.m */,
-				821D9C79E575786B0F34EAB942697691 /* FIRAppAssociationRegistration.h */,
-				47FFF9CD136BE1D0B38BFAA210F64D36 /* FIRAppAssociationRegistration.m */,
-				582B2C9E7BDF1AC55577071A28BD5F10 /* FIRAppInternal.h */,
-				0F1A0DE016A8B297595285D0F5470758 /* FIRBundleUtil.h */,
-				9D9AB9070F0810A2C6FAA6E838D11628 /* FIRBundleUtil.m */,
-				EDBB4D41B01AE6C8D3569D00C1585644 /* FIRComponent.h */,
-				4E9DF00A88421BF8DEC41AE0A790694C /* FIRComponent.m */,
-				B04BD3F902DB09F56E1391DBF4856700 /* FIRComponentContainer.h */,
-				E770F80DD9A0749284370ED9086E0243 /* FIRComponentContainer.m */,
-				3BF437B3A106575D16E74D8CE7221EBD /* FIRComponentContainerInternal.h */,
-				FC8C8F7AFA1D93D01CD2EF25F870E161 /* FIRComponentType.h */,
-				B99952FFFFCCF1339CB4381C2B2FFD5F /* FIRComponentType.m */,
-				D1CDA44F925BA90B928EED7A147D9D50 /* FIRConfiguration.h */,
-				D0A63248AF638732E927A11DD5E71DDC /* FIRConfiguration.m */,
-				64D895180BDF6A79C2AB32A704E39B9A /* FIRConfigurationInternal.h */,
-				8EC8A9A0A188CE8C4D904FEB0E19E31E /* FIRCoreDiagnosticsConnector.h */,
-				95FB18E80F52F61760B032ADE7865B35 /* FIRCoreDiagnosticsConnector.m */,
-				54A66D644E688DA077308A0C4C27E728 /* FIRCoreDiagnosticsData.h */,
-				5C7D25069F48134A38BC9FB5B0A28872 /* FIRCoreDiagnosticsInterop.h */,
-				F4D647209369DF9A624DC0E7843DE313 /* FIRDependency.h */,
-				9843A6A35C6A6B0D1BF532EE54F9B667 /* FIRDependency.m */,
-				209E8BF76BA3E338E2E16EB9A8D391B0 /* FIRDiagnosticsData.h */,
-				14A0154549BC6B9D723CF3CD21AD757E /* FIRDiagnosticsData.m */,
-				356AAFC1E3BF8181BDCF4A4A4311EBAA /* FirebaseCore.h */,
-				0AD0B1ABAC199AE18A27DA429A649668 /* FirebaseCoreInternal.h */,
-				426A868951E38A1772B1A315EA010167 /* FIRFirebaseUserAgent.h */,
-				439932D25482DF18D3CF35F7797CF29C /* FIRFirebaseUserAgent.m */,
-				FB70266A324C87CD78D07F8D8BFD852A /* FIRHeartbeatInfo.h */,
-				4BBC9A071E733C77C628A0792CB1A83E /* FIRHeartbeatInfo.m */,
-				274CE0CF16368739A7F818F99FD6C5F6 /* FIRLibrary.h */,
-				104AF08E30BB3684536703C207E56280 /* FIRLogger.h */,
-				E8456D9DE3C5F9C1C412F93EEB271DFE /* FIRLogger.m */,
-				BED335FBAE7175751880FAB9331A608C /* FIRLoggerLevel.h */,
-				1C4E0BF8C759F8D1F2B6F92B078E65D7 /* FIROptions.h */,
-				4E4D5D90E76C74F2C708058345FD047E /* FIROptions.m */,
-				C4920EAA85FB12FABB705C3D2938A565 /* FIROptionsInternal.h */,
-				6368CB0B70E79D3B060047C9BA8DC493 /* FIRVersion.h */,
-				27FC85854CA3A7752B644D5FF731E040 /* FIRVersion.m */,
-				4F31E5E88581207A44A302722F107FE6 /* Support Files */,
+				7D3F59D4E1525AAE0497DF7607D0B12A /* NSBezierPath+SDRoundedCorners.h */,
+				2C98CE1EF7635D4BC9827060C89ECF35 /* NSBezierPath+SDRoundedCorners.m */,
+				FDEDE7BB9D7235BC541FF2208A155929 /* NSButton+WebCache.h */,
+				309682E258E7F680BD207FA9C2500550 /* NSButton+WebCache.m */,
+				4C83DA1C01C00C0FB921DC109BF13DDD /* NSData+ImageContentType.h */,
+				CBA3E6FCD323CA2F046030EE273CF168 /* NSData+ImageContentType.m */,
+				350A7FFB43A7D07F8495A4C694AEB331 /* NSImage+Compatibility.h */,
+				FF350DB64D4EA35323BF19DD2713CD35 /* NSImage+Compatibility.m */,
+				37E89C1DAA5CE245080969A6AF47AD1F /* SDAnimatedImage.h */,
+				AE2FBACF611688F415582C70C8D2AEC9 /* SDAnimatedImage.m */,
+				62828417C60E69CC39611115B629A09F /* SDAnimatedImagePlayer.h */,
+				3CBEAEE7AB45CDD44E5D36753B334228 /* SDAnimatedImagePlayer.m */,
+				876D329B0601100EB3CB9508C3ACF1EB /* SDAnimatedImageRep.h */,
+				7272293863517BAB5FDB5B9C2845AB7D /* SDAnimatedImageRep.m */,
+				1E142FDBE14FA93EDCB57AC7FA5A1AFD /* SDAnimatedImageView.h */,
+				F96BEAADB73AE3D5F119BFD9DC8B0DD5 /* SDAnimatedImageView.m */,
+				282B6F78C41F31E6F829448C069F451A /* SDAnimatedImageView+WebCache.h */,
+				FB31027047B5AABE0E152E0133E99820 /* SDAnimatedImageView+WebCache.m */,
+				D2003C43102EF434911A22C498E7CFD0 /* SDAssociatedObject.h */,
+				013ED51D1FE5FC46AE9E5E43BDD25BBB /* SDAssociatedObject.m */,
+				CEE7A87436FDB285C80A56AD8AC8F023 /* SDAsyncBlockOperation.h */,
+				F5B93F80EB0D3E7ACE657D6FCC269674 /* SDAsyncBlockOperation.m */,
+				6BB8EE9920FB6D6BDA084E542D65798E /* SDDeviceHelper.h */,
+				403DDF437FF912A8E30AB2D9A0BF8FD4 /* SDDeviceHelper.m */,
+				1745F3708F561ED94635701ED78E5D97 /* SDDiskCache.h */,
+				A3718B35B506221E40756C1D5E13E8BB /* SDDiskCache.m */,
+				78213D1FD58E095F7BBB866084420727 /* SDDisplayLink.h */,
+				79794729394378A2B3C432B9F016005B /* SDDisplayLink.m */,
+				4E7BDB0266F380177C72601E23E5CE76 /* SDFileAttributeHelper.h */,
+				913C860DB6D228EB89CE6D9D9A202AFF /* SDFileAttributeHelper.m */,
+				BF9482696EBE0CFFF7D442C652781D9C /* SDGraphicsImageRenderer.h */,
+				09EAD9D867B9C50E0472128EB5F9862D /* SDGraphicsImageRenderer.m */,
+				871C9D15B4CF04F255E71D7D250BEB86 /* SDImageAPNGCoder.h */,
+				10F1CBAAD39297482929C00743C27E5E /* SDImageAPNGCoder.m */,
+				35F5D10437998536073D8F3EA95CD61E /* SDImageAssetManager.h */,
+				04C38889837F7597B903571D04E3C1F1 /* SDImageAssetManager.m */,
+				8C70B5BEC06679A03EE0B1420B43D534 /* SDImageAWebPCoder.h */,
+				987880D115593E242CD4DD4E186F4B8C /* SDImageAWebPCoder.m */,
+				D7C512953A24F96C992714A723185686 /* SDImageCache.h */,
+				842DFE1506CA6B19D1DAB42541A7BF59 /* SDImageCache.m */,
+				31B20FC9900A8F4DCE001EAE89CC83A8 /* SDImageCacheConfig.h */,
+				029BF419655EC97214F8D4653666A707 /* SDImageCacheConfig.m */,
+				365B05CFE810EA3862DF945A04040CCC /* SDImageCacheDefine.h */,
+				F90A3E8E0A85D2C05FC5C668D85B9789 /* SDImageCacheDefine.m */,
+				EDFCCAE7AD51409F5EFD17618414D666 /* SDImageCachesManager.h */,
+				5BFEEA18DEE94E0508C802D6640DCD7D /* SDImageCachesManager.m */,
+				9DBE220FF4F6A09718E89D30711663C7 /* SDImageCachesManagerOperation.h */,
+				97145410F0E6B675B42873449AE71350 /* SDImageCachesManagerOperation.m */,
+				02B097F18AB36740908A67DA3144C615 /* SDImageCoder.h */,
+				E7D008D364D7488E854AB57A40C3936B /* SDImageCoder.m */,
+				A225015DDE6D3C950FE011A063C839D3 /* SDImageCoderHelper.h */,
+				FAA3E4A383368B6CF5E734BDD46B288F /* SDImageCoderHelper.m */,
+				6910098C40B2CE9C8161B771D61F3CE7 /* SDImageCodersManager.h */,
+				921C0511E5F26C5AC0A2FE3AE08ADB84 /* SDImageCodersManager.m */,
+				906D5B9D0103EBE1A117A73B96FFA89E /* SDImageFrame.h */,
+				BDC070F9E9D17369DA255E60ADA1F57A /* SDImageFrame.m */,
+				C65A8331F06233EC900B1D8AD03DFB38 /* SDImageGIFCoder.h */,
+				1C3136CBA42B04A5564E47B14415870A /* SDImageGIFCoder.m */,
+				56BCD35B8F352A8517F060325851669D /* SDImageGraphics.h */,
+				821F94D67D5E22AF10988F62A49DCF29 /* SDImageGraphics.m */,
+				131B67144BF1759067EFC857B8D3970B /* SDImageHEICCoder.h */,
+				4F6E34F663058F62FA45A3BC489754AA /* SDImageHEICCoder.m */,
+				8AD62AA1AFA5EB5550B63F704960B934 /* SDImageIOAnimatedCoder.h */,
+				6F99F80788C2841279C7B5DC7738C28D /* SDImageIOAnimatedCoder.m */,
+				0F48EDA3114DA9925E10DE51D1FC22E1 /* SDImageIOAnimatedCoderInternal.h */,
+				B1FF5313AFD3914607BA94D9192ECDF5 /* SDImageIOCoder.h */,
+				7BE69E55CCA4C73AAD30E53F324FBFB4 /* SDImageIOCoder.m */,
+				3B47D8F756F8EE3C082C38E7541FBF1B /* SDImageLoader.h */,
+				1A1DDD2C26E8DAD47DD360ADC4AF3005 /* SDImageLoader.m */,
+				6626BAAF7D476EE2F5D7EFD6E447C27F /* SDImageLoadersManager.h */,
+				D362FE958256ACE5DF9B0E3FC038FD37 /* SDImageLoadersManager.m */,
+				BE35C6ED2D0716C6000AC37D258AE0D2 /* SDImageTransformer.h */,
+				E9815F6AF3BDDCD1F1BD4B939A4753AC /* SDImageTransformer.m */,
+				35010556B9CEC9736EEBE58037864F4B /* SDInternalMacros.h */,
+				34A99E2DFEB9919950B89A5C54265020 /* SDInternalMacros.m */,
+				7DB942B6CD3D39B695ACB5FD6E2F5B41 /* SDMemoryCache.h */,
+				90616E6C039FFEBA03FD844B0AC5C7A3 /* SDMemoryCache.m */,
+				26BA89A6DDBD3575416E2F99F1678616 /* SDmetamacros.h */,
+				F330AC164C455AB9D6EDF133C1BA346F /* SDWeakProxy.h */,
+				80A435F15E725B3B1B09DC2133C17486 /* SDWeakProxy.m */,
+				0450E338415A407E610D226965068CDB /* SDWebImage.h */,
+				CA29C6CDDEDF4EB295AA25CC25645812 /* SDWebImageCacheKeyFilter.h */,
+				7F842FD28DB8C393443BACAC674D713C /* SDWebImageCacheKeyFilter.m */,
+				DD895682159C0F1A91A098DEDCAE68C4 /* SDWebImageCacheSerializer.h */,
+				6A6BBCC3DDA24A2FBA30A7E0EA41A29C /* SDWebImageCacheSerializer.m */,
+				E1C388AFF19C24CD736891675FCED3BD /* SDWebImageCompat.h */,
+				A5E00AE665B423B73FAA5905044BBFB9 /* SDWebImageCompat.m */,
+				C55E151EDE8921A13FCBF9EEA61EA996 /* SDWebImageDefine.h */,
+				344990280ACFBDBBCF7F58D26D942E86 /* SDWebImageDefine.m */,
+				B2C5D4287559880143C3CD4104E5C2DB /* SDWebImageDownloader.h */,
+				088CF2F643EC76EA1D3936A18EB75DB6 /* SDWebImageDownloader.m */,
+				99D6D1B737590FB6E8EDF5B8C882C66A /* SDWebImageDownloaderConfig.h */,
+				E77656B6F69A942FFC046BD415E2946E /* SDWebImageDownloaderConfig.m */,
+				C9F2DC920BDD22F20D92E26E5DBACF6B /* SDWebImageDownloaderDecryptor.h */,
+				E9E0CCE9590682F227B99D90F95D9C4B /* SDWebImageDownloaderDecryptor.m */,
+				CA58C08AD34B9E83B33D4235F8CDD612 /* SDWebImageDownloaderOperation.h */,
+				E35C54EA4A62DEFD78EEC455670B06F9 /* SDWebImageDownloaderOperation.m */,
+				A4E6564E69E7A92F5272508055BDD56A /* SDWebImageDownloaderRequestModifier.h */,
+				24895867075E52825DCC77D5D6790D5E /* SDWebImageDownloaderRequestModifier.m */,
+				6FB00B23DF0B51440A195F03DEF46339 /* SDWebImageDownloaderResponseModifier.h */,
+				CA8A6578E42953ABB8D18BBCC3976634 /* SDWebImageDownloaderResponseModifier.m */,
+				07992C388B82748646D44493AC2017CF /* SDWebImageError.h */,
+				BA934F57ECA230A357ADD82CFF2B6B98 /* SDWebImageError.m */,
+				00F40D83B380FAF70C11ED007FF3EB7F /* SDWebImageIndicator.h */,
+				435E6E76DCAD9166F6D5A8C4CF5CDC62 /* SDWebImageIndicator.m */,
+				B6937A1363783BBDE2A241AD04E39E5C /* SDWebImageManager.h */,
+				7CA2C1F5242D07F703A4AFDBDC6CDB02 /* SDWebImageManager.m */,
+				F9CF206F7AA3AB8B90D23918980EDFFD /* SDWebImageOperation.h */,
+				0FD60F0891EE026947C37C7CB0D9BC38 /* SDWebImageOperation.m */,
+				2C5A07F542DD26B4E2A108A288CB8FF4 /* SDWebImageOptionsProcessor.h */,
+				E48CEB803BFDD3DE7394EA9A0774BD57 /* SDWebImageOptionsProcessor.m */,
+				33C63E3EAA4FDC03CC10B972A85C0329 /* SDWebImagePrefetcher.h */,
+				213DD13EBAC3B6790043AB1B49772555 /* SDWebImagePrefetcher.m */,
+				B4D6EE000A0751F6CD9A0759BE81E9DF /* SDWebImageTransition.h */,
+				51D36670663B6985F453150464C3A44D /* SDWebImageTransition.m */,
+				82B057D10FEECE1662DCC037ADDC71BD /* SDWebImageTransitionInternal.h */,
+				AF6224C5CE6EA91F3373AC8E64389806 /* UIButton+WebCache.h */,
+				F8EBCCF651724976E05B1F87CD4F90A4 /* UIButton+WebCache.m */,
+				0DFB0B50E9529BEB7D5493193AB46B2A /* UIColor+SDHexString.h */,
+				8A30EF3CB3C0409BCFD0618B2E2EC2B2 /* UIColor+SDHexString.m */,
+				388966DF89AFC74FA305CCB536E2F03A /* UIImage+ExtendedCacheData.h */,
+				26724495E42FA4433175CA470C34CEAF /* UIImage+ExtendedCacheData.m */,
+				6FFA542398080E443CEE883BED840042 /* UIImage+ForceDecode.h */,
+				97691BC38478749CE509F05895C24C86 /* UIImage+ForceDecode.m */,
+				9807EE4404C4749868F977A2F50ABBBC /* UIImage+GIF.h */,
+				6CF0C6ABE3E75E950F25D8B8F9CFA066 /* UIImage+GIF.m */,
+				893B156140C14072085D3FA300C2633C /* UIImage+MemoryCacheCost.h */,
+				E2101A1F0F39ADA8849223A02F98D09B /* UIImage+MemoryCacheCost.m */,
+				BBCFC2FA53F5D7599F000308309A1E7C /* UIImage+Metadata.h */,
+				FB66BB6227D040E60504E6114B2F8ADB /* UIImage+Metadata.m */,
+				BCA50FDF0477D18B39E5996C5FF1C3D2 /* UIImage+MultiFormat.h */,
+				905812BF78DA7ECAC7EE8268A8B94114 /* UIImage+MultiFormat.m */,
+				18992E27AE700F56B5DB705B655F0F52 /* UIImage+Transform.h */,
+				A1C4D4B232B6C8A3F3800687B9E94F9C /* UIImage+Transform.m */,
+				16782505DCDD1F2BA192551BE6531142 /* UIImageView+HighlightedWebCache.h */,
+				B90F08318CEA7128A5FE1FADA5514B15 /* UIImageView+HighlightedWebCache.m */,
+				30E9A588387F092BC9B48C5C495888F4 /* UIImageView+WebCache.h */,
+				C8FBE79C44CF1CAA093B8023CECE8428 /* UIImageView+WebCache.m */,
+				575DA62335E9D2A7981D3CB881F8C83F /* UIView+WebCache.h */,
+				02B752827D9E378365B62DDC2D7511F6 /* UIView+WebCache.m */,
+				645AC5BA1D0DAF3767A9A58913E80A81 /* UIView+WebCacheOperation.h */,
+				70B1A5237C3912D676A52F61570BA198 /* UIView+WebCacheOperation.m */,
 			);
-			name = FirebaseCore;
-			path = FirebaseCore;
+			name = Core;
 			sourceTree = "<group>";
 		};
-		29E55276314CDFF2D253B48EA8F76C90 /* SwiftLint */ = {
+		2A3592F98FFAAC47D892FACE4C1C22BF /* Frameworks */ = {
 			isa = PBXGroup;
 			children = (
-				167BBBC8FB7EFE9C99311D17FE4C6C6F /* Support Files */,
+				76A55EEAD99A8DC13B2CCD7E4204A129 /* GoogleAppMeasurement.xcframework */,
 			);
-			name = SwiftLint;
-			path = SwiftLint;
+			name = Frameworks;
 			sourceTree = "<group>";
 		};
-		2CE4AAC683A31EC7B2C49031FB070F82 /* Support Files */ = {
+		2B35FE58ADD971A953959361DF4B8D54 /* Support Files */ = {
 			isa = PBXGroup;
 			children = (
-				0D2BFAD0C1341DA800BEC9EAB69C6CAC /* UserExperior-xcframeworks.sh */,
-				540D2DE36893091E0A8A760A01B5AFD1 /* UserExperior.debug.xcconfig */,
-				F58535D86E5CAEF96331D9B139FB4BB6 /* UserExperior.release.xcconfig */,
+				D0A3BDD81D5C9BB148AB7EC3FC64C175 /* GoogleUtilities.modulemap */,
+				31401394C2F55C10598C2A32A89A5C0C /* GoogleUtilities-dummy.m */,
+				5675FB5F1B85DDC84BFA59B5AC142ACB /* GoogleUtilities-Info.plist */,
+				5434F64A7F1BF16550451736733F6B20 /* GoogleUtilities-umbrella.h */,
+				0B37A8970CAEA70232DD52FC9C450F23 /* GoogleUtilities.debug.xcconfig */,
+				BAD41434D5637C38E35DD97234EEF20F /* GoogleUtilities.release.xcconfig */,
 			);
 			name = "Support Files";
-			path = "../Target Support Files/UserExperior";
+			path = "../Target Support Files/GoogleUtilities";
 			sourceTree = "<group>";
 		};
-		2F284B57A2EC981837B74365511F50AD /* Support Files */ = {
+		30049AE711397D8183B49FDD6CFCA325 /* FirebaseInstallations */ = {
 			isa = PBXGroup;
 			children = (
-				AF5591EAE7469A8D5564B71615D0ED47 /* IQKeyboardManagerSwift.modulemap */,
-				E0A7808D885AF884ED5E89C421C5D062 /* IQKeyboardManagerSwift-dummy.m */,
-				15E667F7D283F5EF8572AD4163007E25 /* IQKeyboardManagerSwift-Info.plist */,
-				9A179B4D5B8104D4A797E1220C3E2EA5 /* IQKeyboardManagerSwift-prefix.pch */,
-				9D70539784EC1076DB5A5694278C3DD9 /* IQKeyboardManagerSwift-umbrella.h */,
-				18F8C2F7A766F5CE76610B0C535F7F87 /* IQKeyboardManagerSwift.debug.xcconfig */,
-				BB617648B6A168E17E0DD60699480B63 /* IQKeyboardManagerSwift.release.xcconfig */,
+				B71407694A0F8035B64808555496F341 /* FIRAppInternal.h */,
+				71233380E6A65EBF19839301CF38DE2F /* FIRComponent.h */,
+				02ADC8DFEC05062D4573522CF7C9FACD /* FIRComponentContainer.h */,
+				74C5078638ED7085EB5749A170D8B922 /* FIRComponentType.h */,
+				0F1A555B1EAA77D7ACFAEF676BE85AA6 /* FIRCoreDiagnosticsConnector.h */,
+				8D686797AD46FCA9A10A9BB0E4002893 /* FIRCurrentDateProvider.h */,
+				B34615E6A2780D3388056B237AB08A5E /* FIRCurrentDateProvider.m */,
+				E476AC1C3D8DF310FE134E01AC0B0602 /* FIRDependency.h */,
+				99083F1111E52B93CB0D75C2F36CED13 /* FirebaseCoreInternal.h */,
+				900AA697B5A35B02A8FDC9EE42406422 /* FirebaseInstallations.h */,
+				177C4F6E9757398ACB98C4840D964A48 /* FirebaseInstallationsInternal.h */,
+				265B3CAD87294958F1179293CD797A92 /* FIRHeartbeatInfo.h */,
+				5959E942BB092F1A124425A20036ABAE /* FIRInstallations.h */,
+				1CB77FD782BE533E2DA2FD90F89D54D4 /* FIRInstallations.m */,
+				95F6D6E2B8C3D9BD2F7CDE259A7EF32C /* FIRInstallationsAPIService.h */,
+				DE8DD21FAA5C67FF4EC1E7205405F33C /* FIRInstallationsAPIService.m */,
+				7CBA9F017FB12EF747D1533FF5CD3B16 /* FIRInstallationsAuthTokenResult.h */,
+				5F863D83371585D8BC18511D9B54DADC /* FIRInstallationsAuthTokenResult.m */,
+				CB8AF3A314A7DAFB3F405FE6C8B54F1D /* FIRInstallationsAuthTokenResultInternal.h */,
+				DB88A82D6F72238D7BC690332193230E /* FIRInstallationsBackoffController.h */,
+				21994099344795EFDC6618C284F4B125 /* FIRInstallationsBackoffController.m */,
+				6D24F5227F017C41F04B0B438AB421B9 /* FIRInstallationsErrors.h */,
+				B4B5B6C948CEB64F26CF9868558D1ED5 /* FIRInstallationsErrorUtil.h */,
+				05BFBE8F142E54DC1DE8D39359953379 /* FIRInstallationsErrorUtil.m */,
+				39366A8616AFAF0C5DED1ED80CC8D7F5 /* FIRInstallationsHTTPError.h */,
+				0D413554D9DE58E68E04AFCE8A6E77D4 /* FIRInstallationsHTTPError.m */,
+				78307D57ABD9E31903729F7F3326348F /* FIRInstallationsIDController.h */,
+				34A056D1B68924023B9843D66B4C8B87 /* FIRInstallationsIDController.m */,
+				3C48D4DD697A3A1A97C0F3B07B918AED /* FIRInstallationsIIDStore.h */,
+				A62F813215EE670424BAB999A770252E /* FIRInstallationsIIDStore.m */,
+				4FD367005B662FDDAD905941D9A32DF7 /* FIRInstallationsIIDTokenStore.h */,
+				A05A33EB539E0FB09313F605D32DA638 /* FIRInstallationsIIDTokenStore.m */,
+				919D4992262B4EA21193C1B1B7372411 /* FIRInstallationsItem.h */,
+				AFD7FF7AD188A2E32715996C287FB500 /* FIRInstallationsItem.m */,
+				14C7D79312B17BF119150D041531E333 /* FIRInstallationsItem+RegisterInstallationAPI.h */,
+				586FE46D13BAE29B758E52774C6C2B90 /* FIRInstallationsItem+RegisterInstallationAPI.m */,
+				3F97B2F6835BC1198D338DFEF623D71E /* FIRInstallationsLogger.h */,
+				3A27377063A864B846BCFB821EAB6C26 /* FIRInstallationsLogger.m */,
+				0A4ADA13CC4AD309592412458CC3808B /* FIRInstallationsSingleOperationPromiseCache.h */,
+				9A13B1575F6CEC6ED85D507AE89E58AD /* FIRInstallationsSingleOperationPromiseCache.m */,
+				7CA6813EE4F976B65FECCB56747E7B37 /* FIRInstallationsStatus.h */,
+				00E2DC1B325037165F2D8F2DB040AB08 /* FIRInstallationsStore.h */,
+				B130344935054793314B75BFF96748D0 /* FIRInstallationsStore.m */,
+				89B00168907F9E9A59D299AC67D71873 /* FIRInstallationsStoredAuthToken.h */,
+				E8C40A551AFB485658AC4646F2D1B32B /* FIRInstallationsStoredAuthToken.m */,
+				85100D6207E6207EC4F1082089488C94 /* FIRInstallationsStoredItem.h */,
+				752787D4D5E2ADC44F9DCB12A5AE7D4F /* FIRInstallationsStoredItem.m */,
+				5EB36D703D88F16708F2D7F83DA4858A /* FIRLibrary.h */,
+				D20286FEBC452E86DC4EAC8EF5722CB7 /* FIRLogger.h */,
+				47A9BCECE3286C6F623A834C9407CA00 /* FIROptionsInternal.h */,
+				E6DC660AFF482E0C7850C7FB0C948840 /* Support Files */,
 			);
-			name = "Support Files";
-			path = "../Target Support Files/IQKeyboardManagerSwift";
+			name = FirebaseInstallations;
+			path = FirebaseInstallations;
 			sourceTree = "<group>";
 		};
-		2F727AD0122F74A988C86FB5A848BEDE /* youtube-ios-player-helper */ = {
+		340F9F449CB128396FC5A67E7494759B /* XLPagerTabStrip */ = {
 			isa = PBXGroup;
 			children = (
-				7AE13F62F63F0793892128446B79B076 /* YTPlayerView.h */,
-				2FC58CE50509D6A39E235D15B7E419E6 /* YTPlayerView.m */,
-				19A9E2C4E8578595E567DD00D6276E37 /* Resources */,
-				80A7F32A5C97C836ABA21753083D6276 /* Support Files */,
+				6921B53F6F2D536240E3875A0F3F68BC /* BarPagerTabStripViewController.swift */,
+				E8E9DF5247C5BAB10D24729432CC9889 /* BarView.swift */,
+				E49568E0429B2A2B1F4815729744253E /* BaseButtonBarPagerTabStripViewController.swift */,
+				E26AEDFCEE10C9098FA3FBB6082711D9 /* ButtonBarPagerTabStripViewController.swift */,
+				7FEEA7A60DEF3B4DCA68E7387D457AA7 /* ButtonBarView.swift */,
+				CB6D984B7D32094D8F6EE83AB66DF472 /* ButtonBarViewCell.swift */,
+				9A26B21CFC64A56D095561C9959DC848 /* FXPageControl.h */,
+				015B439C22B52F3545D6EA7D4136D47A /* FXPageControl.m */,
+				6C0549C770D4674B5386FC6252D9F5F4 /* IndicatorInfo.swift */,
+				215A668931837EB071D66CECDE4447F1 /* PagerTabStripBehaviour.swift */,
+				203D83893E92910F68A1A048229DBF19 /* PagerTabStripError.swift */,
+				85C0362C259A9F61E4DACA0C9E18A894 /* PagerTabStripViewController.swift */,
+				0085E7089EDB0543F08D0FB90A94DC98 /* SegmentedPagerTabStripViewController.swift */,
+				81C32EB162B887200E3435F4655794E7 /* SwipeDirection.swift */,
+				2B14DD2A535B061F0CD9F1CCF0D5A23C /* TwitterPagerTabStripViewController.swift */,
+				B8EDF9C2ECBA6C8E908A5C5B320FD58A /* Resources */,
+				72899D801F3197C19F05A907F59338E8 /* Support Files */,
 			);
-			name = "youtube-ios-player-helper";
-			path = "youtube-ios-player-helper";
+			name = XLPagerTabStrip;
+			path = XLPagerTabStrip;
 			sourceTree = "<group>";
 		};
-		31C24E31B4CFF408419D2407AD81B597 /* FirebaseCrashlytics */ = {
+		345C319061D2A9D276DAED5FE2D867BC /* Resources */ = {
 			isa = PBXGroup;
 			children = (
-				AD552BC080B93D2D90744D1B98BE3472 /* crashlytics.nanopb.c */,
-				646F8905B97215EAFDA2AA731A0494E9 /* crashlytics.nanopb.h */,
-				D10E696D15691811DA86347980DFAE92 /* dwarf.h */,
-				871262A2190E9EBEEFCF00537115479A /* FIRAnalyticsInterop.h */,
-				9CC040A11E58795C21FC469190365F42 /* FIRAnalyticsInteropListener.h */,
-				4878FC12D64EF094114984D0EABAD312 /* FIRAppInternal.h */,
-				FAD4030D5B013AC7C22F5B4475E69950 /* FIRCLSAllocate.c */,
-				0A5F32C1CADCB2D8EAA234CF12B4C9EB /* FIRCLSAllocate.h */,
-				05B80D758033189483F6A7D85EE5E52D /* FIRCLSAnalyticsManager.h */,
-				4EE0F503DFEC30FB0A82D1E990D1C7D9 /* FIRCLSAnalyticsManager.m */,
-				61398311EC1CF6F442FA19F1041B26E3 /* FIRCLSApplication.h */,
-				BB96493DB80BC929B0C4953144A2EFD1 /* FIRCLSApplication.m */,
-				5CFF3E912112E9C85236791474B56485 /* FIRCLSApplicationIdentifierModel.h */,
-				0C1D660E37B3728E235EC51D0575A946 /* FIRCLSApplicationIdentifierModel.m */,
-				DBD3E68DDBD9FA3A02BB49AC76035673 /* FIRCLSAsyncOperation.h */,
-				C8ED0CA0EB9E1484BA355DC33DC9DAA1 /* FIRCLSAsyncOperation.m */,
-				5613A08634D273E5EBF3E885286C62CC /* FIRCLSAsyncOperation_Private.h */,
-				EEA27F98791E62DEC63436FFCE1D7E3B /* FIRCLSBinaryImage.h */,
-				8E4EDE4902E1AC4FBB53E56CCC3443EB /* FIRCLSBinaryImage.m */,
-				179A4216EEBFC9922ACA5D71FAA8972C /* FIRCLSByteUtility.h */,
-				F74A81D38E4501D24289C3E0359AABAD /* FIRCLSByteUtility.m */,
-				AE1BECB62A01FA0CD9249D8A33CA9D36 /* FIRCLSCodeMapping.h */,
-				F9BD39614F587C132EF3E32F9DCC8782 /* FIRCLSCodeMapping.m */,
-				A3E324633C044D4E7224E6E1F01BB0F1 /* FIRCLSCompactUnwind.c */,
-				090741E6974046F8BB1660CFC0828EAD /* FIRCLSCompactUnwind.h */,
-				9827847E378C4738FBBC77F51BA71E73 /* FIRCLSCompactUnwind_Private.h */,
-				57EE38947BE9512096C1C281147DEF84 /* FIRCLSCompoundOperation.h */,
-				1AB7829E59DB142E1CE334E8EA5FF044 /* FIRCLSCompoundOperation.m */,
-				C5029FFE97B99DDB841E6AE4B16BA8CA /* FIRCLSConstants.h */,
-				4277502B0C1F3EFB75CF8B29425E069A /* FIRCLSConstants.m */,
-				38BF5878D629FDFCB392EEC658C95763 /* FIRCLSContext.h */,
-				55DC76677AF5A69494B1C8A4FE869FEF /* FIRCLSContext.m */,
-				1F8D7ED361F5D094EEDF1CBDF09864C7 /* FIRCLSCrashedMarkerFile.c */,
-				DB2F0C61F3F586E74B89D2D35918087F /* FIRCLSCrashedMarkerFile.h */,
-				32B4CC4DB98C07DE9E71EB685F14BE9B /* FIRCLSDataCollectionArbiter.h */,
-				FA0A7317ADA57F0683612AFA5ED673CA /* FIRCLSDataCollectionArbiter.m */,
-				37395FE61CFBF0FA975183FEBE95C450 /* FIRCLSDataCollectionToken.h */,
-				AAACBC6FA666DE1B5BADFB9DA21AD2E4 /* FIRCLSDataCollectionToken.m */,
-				2F5CAA735F02B20A7AEC1728768A9C40 /* FIRCLSDataParsing.c */,
-				32345B6D3848BF6100A91865627D64B3 /* FIRCLSDataParsing.h */,
-				8F33D17A76ADEC3475B379D4FCBB4394 /* FIRCLSDefines.h */,
-				B92B8E8CCF020B4DFC0F9A5508BDD4B2 /* FIRCLSDemangleOperation.h */,
-				2C55438D2952F0DA8592598CA5CEA1CF /* FIRCLSDemangleOperation.mm */,
-				45CD24223956AC1FC43758647A1A8013 /* FIRCLSDownloadAndSaveSettingsOperation.h */,
-				656B24099E7A1FD2BC425BEB2DE9C366 /* FIRCLSDownloadAndSaveSettingsOperation.m */,
-				95D5B6E97FDE785D91A4C0339BDEC798 /* FIRCLSdSYM.h */,
-				999E0B6E41E8A7FF7633B8E2D5DE2E8F /* FIRCLSdSYM.m */,
-				17778B90B1F840392420CED28D29C0A0 /* FIRCLSDwarfExpressionMachine.c */,
-				C7FDAAD23A9F1C0007BA0B30786193CE /* FIRCLSDwarfExpressionMachine.h */,
-				9809D78B778001C807DF70A70F275DBF /* FIRCLSDwarfUnwind.c */,
-				28857D698E78757FD553C713327FF1BD /* FIRCLSDwarfUnwind.h */,
-				D5739AAB9E2EFAEE8D4D793FBF9C4A82 /* FIRCLSDwarfUnwindRegisters.h */,
-				883CF636F15D3F18676D1B08DF4DFDB5 /* FIRCLSException.h */,
-				35D645CE1DA08EA1F932FD23E85A40A4 /* FIRCLSException.mm */,
-				31785E78D23EE508F9A53BC95375A720 /* FIRCLSExecutionIdentifierModel.h */,
-				760BCD065C82519877CEEDDCF808CD52 /* FIRCLSExecutionIdentifierModel.m */,
-				34F84FD9D57F36DEE2429A34EA03F15F /* FIRCLSExistingReportManager.h */,
-				861DF4E98795EA19E36032CCF79B9294 /* FIRCLSExistingReportManager.m */,
-				1616545B6495DEED07D2AEA409A3CAD6 /* FIRCLSExistingReportManager_Private.h */,
-				6DC8B5664447D1B589456927BB92E928 /* FIRCLSFABAsyncOperation.h */,
-				D62DF06B22B5183E2998695AD67765D5 /* FIRCLSFABAsyncOperation.m */,
-				4C75AF81AC3B535E92A2A28B831E96A5 /* FIRCLSFABAsyncOperation_Private.h */,
-				A9EE62BAE006A549C377A176E008CF3D /* FIRCLSFABHost.h */,
-				7987E06267A5AC0AD78A400EC533844E /* FIRCLSFABHost.m */,
-				520277CF94E49822137700EBDE050A66 /* FIRCLSFABNetworkClient.h */,
-				BCB16C6BDF7364F9A45E87474A157C3D /* FIRCLSFABNetworkClient.m */,
-				016B516493389158C66D8E36094D25A1 /* FIRCLSFeatures.h */,
-				D722630077484106904B5D32BDD292FF /* FIRCLSFile.h */,
-				C8617530BEC7B9D9725FCA23B90C21F1 /* FIRCLSFile.m */,
-				F6CCB830B848A97FC3CF7B0C805B885C /* FIRCLSFileManager.h */,
-				252F17D436B7065B5118D36F4B02E9D7 /* FIRCLSFileManager.m */,
-				4798DD54280F349B57D7444D138CD618 /* FIRCLSGlobals.h */,
-				3497A89EC94BD4B72659A486D59C79D1 /* FIRCLSHandler.h */,
-				FF3A30ED734CED8336FEC73971C751D2 /* FIRCLSHandler.m */,
-				18BCEB56EE9600B6931EC7B7BF317682 /* FIRCLSHost.h */,
-				0AC42B646B9795BFBAC2B6CD40E516B9 /* FIRCLSHost.m */,
-				C3C8FD63AD41103CFFA2316E189A313B /* FIRCLSInstallIdentifierModel.h */,
-				23F6AB44A94D4C239126538D3A8F6006 /* FIRCLSInstallIdentifierModel.m */,
-				73C35E7DF3168EADB8911900859A9473 /* FIRCLSInternalLogging.c */,
-				FCE268C04133AA492262F355DE05A015 /* FIRCLSInternalLogging.h */,
-				AE974509C2D33D80776CF805E088CD72 /* FIRCLSInternalReport.h */,
-				6B06CD7E8CA42D15A110B5217CEE2ED7 /* FIRCLSInternalReport.m */,
-				3B76C7F4F9F4E4FA768F02CF94CCBA06 /* FIRCLSLaunchMarkerModel.h */,
-				9D00B44D3DB63F1887E7D94475D98C62 /* FIRCLSLaunchMarkerModel.m */,
-				C369CED5F620B86F92CE2A45D9387E3F /* FIRCLSLogger.h */,
-				763E6569A86EDE0CB24795D23ADEB525 /* FIRCLSLogger.m */,
-				00AC6785C55BD99E1A24DDA4CA8BFC01 /* FIRCLSMachException.c */,
-				826F55875800C8CB6DA104A12F8B67B4 /* FIRCLSMachException.h */,
-				DFDFBEBB73F8E6C5B210978F2B628217 /* FIRCLSMachO.h */,
-				C4B1F0FA204CB08919ACF3C8D211ABEE /* FIRCLSMachO.m */,
-				C0C10C1F39975002B7550267F7DAB512 /* FIRCLSMachOBinary.h */,
-				7088FC2DBC965B8F024B483857067DF8 /* FIRCLSMachOBinary.m */,
-				FD552E64F5206F360ADD25AD40A054A0 /* FIRCLSMachOSlice.h */,
-				1DC1355A4201A117D7690FEE298FDFAD /* FIRCLSMachOSlice.m */,
-				2AA1C2AD577F2E8BBD17F90B554E95C1 /* FIRCLSManagerData.h */,
-				00B03A97A8D13987C3DB33BEB8298934 /* FIRCLSManagerData.m */,
-				E8037344C3336D374EB394DA46345487 /* FIRCLSMultipartMimeStreamEncoder.h */,
-				B3EAD0E383C7B51C63828663256064DB /* FIRCLSMultipartMimeStreamEncoder.m */,
-				88C1448212EFBDAF7C588A9C5C5D41EC /* FIRCLSNetworkOperation.h */,
-				F1328AD55D1F788D3885252AAEB74E2D /* FIRCLSNetworkOperation.m */,
-				4C0F0CB3980153ED08B6349A7898AFF3 /* FIRCLSNetworkResponseHandler.h */,
-				DCD2AC3E76D2728FD6C20861C6636AD8 /* FIRCLSNetworkResponseHandler.m */,
-				F467FC7BE95BECA00A57FED5303DDFAA /* FIRCLSNotificationManager.h */,
-				14ADB4B25F4A5731F0262BD0933E1882 /* FIRCLSNotificationManager.m */,
-				5727434255A7500465236A155BE8CF9E /* FIRCLSOperation.h */,
-				FABA0656451D980CD2FC6856E1230D27 /* FIRCLSProcess.c */,
-				7568F7FE4F07602CA9A872F9363899C4 /* FIRCLSProcess.h */,
-				25977088D01041D839B293C593FABBE9 /* FIRCLSProcessReportOperation.h */,
-				2CC5217A3DA772F8A728C96FA72B1FE2 /* FIRCLSProcessReportOperation.m */,
-				84A7A81D0D4B91641DACD30B4BBEDDFE /* FIRCLSProfiling.c */,
-				E3FE1C9E86679E0513BCBEC34B287E69 /* FIRCLSProfiling.h */,
-				97684A5DE6686ACDBBE735803B590387 /* FIRCLSRecordApplication.h */,
-				18752D526BB913CAA18E687102B4EBF5 /* FIRCLSRecordApplication.m */,
-				4135E8696A2060DC92AB3109423F5C15 /* FIRCLSRecordBase.h */,
-				CA57BCE42C48DD1B5C5BC938F40144E2 /* FIRCLSRecordBase.m */,
-				5428A9561EC6D5F3CDC3FDC8AAD0609F /* FIRCLSRecordHost.h */,
-				BE927A70AEB4C69DCE02FB0522907B23 /* FIRCLSRecordHost.m */,
-				36F9C95585911FB5DA4301254ED45A34 /* FIRCLSRecordIdentity.h */,
-				35680BCB70050FE504D6900B2BE70BF6 /* FIRCLSRecordIdentity.m */,
-				5EFBDFFCEB582EFAE7688314A06B64BC /* FIRCLSReportAdapter.h */,
-				625833768D28DEC6611768458187BE9F /* FIRCLSReportAdapter.m */,
-				26B9DA3EAE82D0FD9B81064539417D6B /* FIRCLSReportAdapter_Private.h */,
-				055DE2F6BD4008DEE5953730A437A661 /* FIRCLSReportManager.h */,
-				DC01FD9FC5B2A81600B1FE53A5C0CBF0 /* FIRCLSReportManager.m */,
-				34345EF94B52EA533BD4324975B259AD /* FIRCLSReportManager_Private.h */,
-				DD4844B53EA4AF05DEB513ED7822AA36 /* FIRCLSReportUploader.h */,
-				21101B505C8C360FC7F359C9F8D38317 /* FIRCLSReportUploader.m */,
-				75908DED122FC101810EF698FF35EB23 /* FIRCLSReportUploader_Private.h */,
-				4CD535D06120A3E587B7CDEF081963C5 /* FIRCLSSerializeSymbolicatedFramesOperation.h */,
-				90BB666EC5201F2FA54312EAC22809A3 /* FIRCLSSerializeSymbolicatedFramesOperation.m */,
-				A4BD1F2825928136CE79B7D998AFABEE /* FIRCLSSettings.h */,
-				38DCBCEFF7C1410440F162AFF41819BD /* FIRCLSSettings.m */,
-				5490CA538BA9A830F1E9D856640557AA /* FIRCLSSettingsManager.h */,
-				3EEEEF56439F25153402BB64DA6C0EDB /* FIRCLSSettingsManager.m */,
-				D9C26A0E67ADE324B0DFEB9B94B907BA /* FIRCLSSignal.c */,
-				7A7F9FA718C68D82A114B0D40ACE04BF /* FIRCLSSignal.h */,
-				3B85537FA4A502EF39F21EE918290D30 /* FIRCLSSymbolicationOperation.h */,
-				9D6322F4DEFC3581BB62ED0FE5E88A3F /* FIRCLSSymbolicationOperation.m */,
-				08AA4586A0C3CBDB6BD2C55CF515B528 /* FIRCLSSymbolResolver.h */,
-				06637C0A7CB6AD502FDBFD0EC22341FD /* FIRCLSSymbolResolver.m */,
-				C21CDF5DEE8144AC10518D874970659F /* FIRCLSThreadArrayOperation.h */,
-				57D746CF359351C753F1696487C0989F /* FIRCLSThreadArrayOperation.m */,
-				3F78A0EAC2C948EDABC161D5154026B1 /* FIRCLSThreadState.c */,
-				658D3FE121AC043D8C58C811B8AFFC99 /* FIRCLSThreadState.h */,
-				FAED24B23007C7D684DACD6F34A28CA4 /* FIRCLSUnwind.c */,
-				DAF9BCA7F059DC8C95BE0B011083B183 /* FIRCLSUnwind.h */,
-				A64E248226A3C36E256AC409B50BD991 /* FIRCLSUnwind_arch.h */,
-				363C7E9A8FBF9B3D75A63FEEF1C07E08 /* FIRCLSUnwind_arm.c */,
-				CA451C5D09C7D317C3FDAAEE98A21093 /* FIRCLSUnwind_x86.c */,
-				077A3C9C67DFCCB5AE24A86E9D9FD912 /* FIRCLSUnwind_x86.h */,
-				0A6FB2B46D409A82C6DA37ED976F44B4 /* FIRCLSURLBuilder.h */,
-				159C80CACA54DFF8D6F74DEE7F831816 /* FIRCLSURLBuilder.m */,
-				88EA3748DF0ECF35456D56123BD1059B /* FIRCLSUserDefaults.h */,
-				65586851C5B163BC0B663B861D998777 /* FIRCLSUserDefaults.m */,
-				2EA948F4BA107A1BC3F641017D9063BE /* FIRCLSUserDefaults_private.h */,
-				6C715D8139473324EAF522E1DFCDD168 /* FIRCLSUserLogging.h */,
-				AB869C87291579008E99BAF00D8BEA56 /* FIRCLSUserLogging.m */,
-				20AEE4905814B8611ADF06F81DD8BD46 /* FIRCLSUtility.h */,
-				FFE1B6031AD5399E369E0F17C1C52361 /* FIRCLSUtility.m */,
-				D0B437121779F5521D8ADC71D733366D /* FIRCLSUUID.h */,
-				D2D6C123A84D5A5BFA1B8258C79689A6 /* FIRCLSUUID.m */,
-				55A0DE0A80D35402C4F28849F2E4DC92 /* FIRComponent.h */,
-				374A41205A6DE1F9FD6435C5AAEE4E5F /* FIRComponentContainer.h */,
-				C036B331555009735B7AE1B4A7BE9F9C /* FIRComponentType.h */,
-				F2A7E303B90CBA1A05BADCF4BFF61546 /* FIRCoreDiagnosticsConnector.h */,
-				5081D6438478235FFCB109B7F513F504 /* FIRCrashlytics.h */,
-				BBC2D5ADBC6C94CD93F6F0F9ADB32AAD /* FIRCrashlytics.m */,
-				906CCED1F94B2364B9573CF09FB7ECA4 /* FIRCrashlyticsReport.h */,
-				7394484066B32499D3E818FEBF2854DB /* FIRCrashlyticsReport.m */,
-				B21201B1748C7C26A24CFB9848F95A16 /* FIRCrashlyticsReport_Private.h */,
-				E5C3168052191C61CCCEC7294643C46C /* FIRDependency.h */,
-				FCAC8302F5BFFE3253D31D9CB49EE5E7 /* FirebaseCoreInternal.h */,
-				5CBBF3D4CE3AF56685D6134DCFD93BEE /* FirebaseCrashlytics.h */,
-				71623D99B096A3A471223B894F59296C /* FirebaseInstallationsInternal.h */,
-				16093C3D5DFCD00473524084A6361E0D /* FIRExceptionModel.h */,
-				6F84DF94244E383042D706ADC1D00F6E /* FIRExceptionModel.m */,
-				452897816E60A9C8FFF8BD9C9D7F97DC /* FIRExceptionModel_Private.h */,
-				5089C8E81AE751D889F4D4D67AA2DAA5 /* FIRHeartbeatInfo.h */,
-				38CA2CA645F401BAA1A1479D045338D0 /* FIRInteropEventNames.h */,
-				7083693CC7EBCD34C761ADC817B359C1 /* FIRInteropParameterNames.h */,
-				B90205993364995A78A38ACDFE449499 /* FIRLibrary.h */,
-				659DA25C01A61F2F020D52966AC8C7AE /* FIRLogger.h */,
-				6E534F29660E0E93BF230D6167398F09 /* FIROptionsInternal.h */,
-				8F576B8745941F0B9576451A8502BAD5 /* FIRStackFrame.h */,
-				3F51FC959B5A36182AABA764E79C8FF8 /* FIRStackFrame.m */,
-				F17BBBAA46C5E73B8852F599E280BC8D /* FIRStackFrame_Private.h */,
-				89BE96F83424B1936FF0FB3D90E1778E /* Support Files */,
+				EDAEF516303EF8FE0BD1061BA065515D /* CleverTapInboxViewController.xib */,
+				7454FA163F52B12515744F83B0EF8BD5 /* ct_default_audio.png */,
+				3B132563B0EDE9325C098E7EFA3977A4 /* ct_default_landscape_image.png */,
+				EDED5021C6D904082B244DE47F3151AF /* ct_default_portrait_image.png */,
+				A520A6D5E883724F3E3E76F3C2590F10 /* ct_default_video.png */,
+				AED9F50E1917C372E6C3A39E0EB70D99 /* ct_volume_off.png */,
+				543931A43AC3CD23F5522DE796869CDF /* ct_volume_on.png */,
+				3FA222F86387B18A8AB791A0E90C3868 /* CTCarouselImageMessageCell~land.xib */,
+				3D42DBB05050C87AC3399564CE109739 /* CTCarouselImageMessageCell~port.xib */,
+				A3CF6E3318AD8E81A9CDC8C7A7239EA3 /* CTCarouselImageView.xib */,
+				899A27D877296BCEAAA70B967DC15BCA /* CTCarouselMessageCell~land.xib */,
+				C8BA42ABDBDF2D4E0C039C4D2EEA7C62 /* CTCarouselMessageCell~port.xib */,
+				7190E30191BF9A241C04AD969B9C624B /* CTCoverImageViewController~ipad.xib */,
+				43C44639ED8724B8CC445A280E5512D3 /* CTCoverImageViewController~ipadland.xib */,
+				ADCCE7F86F38610580152D664B579B3D /* CTCoverImageViewController~iphoneland.xib */,
+				59F947238622E9B72A9B02BAAB53D1C9 /* CTCoverImageViewController~iphoneport.xib */,
+				3DAA1F0FF36A6B57F0299313F69014B1 /* CTCoverViewController~ipad.xib */,
+				DE6FA8F46B37ECECFE85979B3D216A24 /* CTCoverViewController~ipadland.xib */,
+				2B612428B0BB69EB3C491EC45120F215 /* CTCoverViewController~iphoneland.xib */,
+				9EEA79382B4353C77F0D7CC4FA34B544 /* CTCoverViewController~iphoneport.xib */,
+				8AF17ED36E1A3CCC7F5A67282180A96F /* CTFooterViewController~ipad.xib */,
+				A1F011913EF4A13CE973C72080D6D646 /* CTFooterViewController~ipadland.xib */,
+				8325E877A8C0F7BB10F4511725950CF1 /* CTFooterViewController~iphoneland.xib */,
+				C8B8E1808EEDD9E0DA6643BC7F437BC8 /* CTFooterViewController~iphoneport.xib */,
+				254F2748C53A27FAA6360F361F8886F1 /* CTHalfInterstitialImageViewController~ipad.xib */,
+				B3305D8FD81E0ABEB906AE18B8B397BB /* CTHalfInterstitialImageViewController~ipadland.xib */,
+				AC8BA51F09AE7B4FBAEBBD8EEF72944E /* CTHalfInterstitialImageViewController~iphoneland.xib */,
+				52565D54E73967345E1E0E95476379E6 /* CTHalfInterstitialImageViewController~iphoneport.xib */,
+				7F1A2C303BC16F887293F7802EE0734C /* CTHalfInterstitialViewController~ipad.xib */,
+				1B071E3F432B79EB83E6DB5484A1DF84 /* CTHalfInterstitialViewController~ipadland.xib */,
+				24884863C525924B538E4C5FB478FB7B /* CTHalfInterstitialViewController~iphoneland.xib */,
+				D1C31A198F845928B18A6F2C7796EBF7 /* CTHalfInterstitialViewController~iphoneport.xib */,
+				C9D81382570A20230DAAFBEEC2F367A4 /* CTHeaderViewController~ipad.xib */,
+				3397F629D1F6765424DB092C2F66CFAD /* CTHeaderViewController~ipadland.xib */,
+				ADBFDABBBA19F38EE98C769E6B7C056C /* CTHeaderViewController~iphoneland.xib */,
+				071135E06560B0B235007A7EF036CD98 /* CTHeaderViewController~iphoneport.xib */,
+				20F1DB0CE8F2D1C38FC9C5A5450638D9 /* CTInboxIconMessageCell~land.xib */,
+				593D8432FF014CFBE3C6C22EC3D7BBE2 /* CTInboxIconMessageCell~port.xib */,
+				13DA60524A8C07279D7AE42F239BAA37 /* CTInboxSimpleMessageCell~land.xib */,
+				8B4CCD3D90FCDEA5A24B2BDD41A6C939 /* CTInboxSimpleMessageCell~port.xib */,
+				63B03A6364380903FD7148111C0AE313 /* CTInterstitialImageViewController~ipad.xib */,
+				FCAB837CF55F31E0BB2953675374CBF0 /* CTInterstitialImageViewController~ipadland.xib */,
+				E7B417DAB5FFFF371264E9E54941902E /* CTInterstitialImageViewController~iphoneland.xib */,
+				40AF671E8606181D9BA6E631A23FADC5 /* CTInterstitialImageViewController~iphoneport.xib */,
+				E6F9DE15B3A3C15AF0F3610DC0009FA4 /* CTInterstitialViewController~ipad.xib */,
+				7DF4A53A8A3E75C8D42C491EC9BAF1FA /* CTInterstitialViewController~ipadland.xib */,
+				DAFA55E76FA0299E13967B8590F31F0C /* CTInterstitialViewController~iphoneland.xib */,
+				69FF19D06CCDFDFA96C07F877D8BE2F2 /* CTInterstitialViewController~iphoneport.xib */,
+				AA44E189CDA52D7B615513D6CACF1480 /* DigiCertGlobalRootCA.crt */,
+				5D5C44382B6B2C5CFEF6E835B0572600 /* DigiCertSHA2SecureServerCA.crt */,
+				E8AD5AA962083C011214D5AECB801E4F /* ic_pause@1x.png */,
+				E935BFB241DDABBFDD14491001995F80 /* ic_pause@2x.png */,
+				A074965257F6045BE96CD46CA1DF36DB /* ic_pause@3x.png */,
+				0E70959CD60D842ACA6CE2B51D91E526 /* ic_play@1x.png */,
+				961516AE4170E2690DE2EFFBDC5CF0B4 /* ic_play@2x.png */,
+				C84A8C60205DA3206920D8315CA4204D /* ic_play@3x.png */,
+				B98C6C35BA385BFE0B86644BA9D00C1C /* Inbox.xcdatamodeld */,
 			);
-			name = FirebaseCrashlytics;
-			path = FirebaseCrashlytics;
+			name = Resources;
 			sourceTree = "<group>";
 		};
-		37A99A9C0CE659835CD0FD1D963F6BE5 /* Support Files */ = {
+		36A9CFCFAAFE11031394D9366C42AF6B /* UserDefaults */ = {
 			isa = PBXGroup;
 			children = (
-				34926FDEC9705B36A52B78912AE5E883 /* FloatingPanel.modulemap */,
-				E605C334687A21BC2A128D763C688DE1 /* FloatingPanel-dummy.m */,
-				5F939EBE99F4616962CEFDE594CEFD9E /* FloatingPanel-Info.plist */,
-				BB462A701620C7D115B52335CCDABDC4 /* FloatingPanel-prefix.pch */,
-				5AE660F98874CC1C68739312DA234FB5 /* FloatingPanel-umbrella.h */,
-				1971254BE7DB209B9554AAB6A126AC21 /* FloatingPanel.debug.xcconfig */,
-				2F421BBACE649CEDC01881387FD34461 /* FloatingPanel.release.xcconfig */,
+				A4F4C099F6382321262B3DE0289FF4A9 /* GULUserDefaults.h */,
+				BA0D3FECC53BE39845E9ECD6B61E2615 /* GULUserDefaults.m */,
 			);
-			name = "Support Files";
-			path = "../Target Support Files/FloatingPanel";
+			name = UserDefaults;
 			sourceTree = "<group>";
 		};
-		3CB5E818A237A3A8EA165C48705663AD /* decode */ = {
+		37A1DC0AF6D90DF492EA06C7A98CB89D /* Reachability */ = {
 			isa = PBXGroup;
 			children = (
+				85F201C68A064F85DABD45F98D593C2D /* GULReachabilityChecker.h */,
+				6C286A086FC337834F62B88833A952E5 /* GULReachabilityChecker.m */,
+				9FD87D315E3BFE9C6F4A01F621854769 /* GULReachabilityChecker+Internal.h */,
+				AB4E39DA261FED1805CC324D526E074F /* GULReachabilityMessageCode.h */,
 			);
-			name = decode;
+			name = Reachability;
 			sourceTree = "<group>";
 		};
-		3F7857182DE64995055C8F022650AE9B /* AdIdSupport */ = {
+		39E4FBAAADB3F974654316F0F0C17C19 /* Support Files */ = {
 			isa = PBXGroup;
 			children = (
-				70F1D0AFBC697C077E0EF7FEEE958320 /* Frameworks */,
+				058DC8DE655B872C1192AFA9F7BD71BE /* UserExperior-xcframeworks.sh */,
+				2F2F5EBF9A7E4E90BAD345F8D400A104 /* UserExperior.debug.xcconfig */,
+				E52CD80572EE0DF031217943025836D2 /* UserExperior.release.xcconfig */,
 			);
-			name = AdIdSupport;
+			name = "Support Files";
+			path = "../Target Support Files/UserExperior";
 			sourceTree = "<group>";
 		};
-		424CD77D9278EEE42AD770494006BB4B /* Support Files */ = {
+		3BD57ED1C53D37B0F218E1820F4A603E /* WithoutAdIdSupport */ = {
 			isa = PBXGroup;
 			children = (
-				F917DF6E30EFB5EF06DFA42641254371 /* AlamofireNetworkActivityLogger.modulemap */,
-				79D9F07C90BE045C8C035600C20C276F /* AlamofireNetworkActivityLogger-dummy.m */,
-				9F061AFFAACF1DE908E71981725F9AA9 /* AlamofireNetworkActivityLogger-Info.plist */,
-				97643C28FC2A46888AE4AFCB827821F2 /* AlamofireNetworkActivityLogger-prefix.pch */,
-				911FAA185DBDAD474CECC6BE4D6BCAA4 /* AlamofireNetworkActivityLogger-umbrella.h */,
-				F56B7F94ABA008990F8315E4F1D8225A /* AlamofireNetworkActivityLogger.debug.xcconfig */,
-				2773E84E83287DD1BD8AEE7DB3989727 /* AlamofireNetworkActivityLogger.release.xcconfig */,
+				2A3592F98FFAAC47D892FACE4C1C22BF /* Frameworks */,
 			);
-			name = "Support Files";
-			path = "../Target Support Files/AlamofireNetworkActivityLogger";
+			name = WithoutAdIdSupport;
 			sourceTree = "<group>";
 		};
-		4F31E5E88581207A44A302722F107FE6 /* Support Files */ = {
+		3BD7C77544B4EA795565370E45F5F041 /* Support Files */ = {
 			isa = PBXGroup;
 			children = (
-				37C0339BB7344F5983141613CC10DEAD /* FirebaseCore.modulemap */,
-				AD6666FFF9FE5A56BB871926AB7F04A1 /* FirebaseCore-dummy.m */,
-				D3D8E4ACA2F8EAB0A54419681789BE7F /* FirebaseCore-Info.plist */,
-				426C7E252375112F2391A079A6F0C643 /* FirebaseCore-umbrella.h */,
-				E424A548431E747F5E002B9C1CA862D8 /* FirebaseCore.debug.xcconfig */,
-				D2EB40F6A81227EE71D82CD3A99BB555 /* FirebaseCore.release.xcconfig */,
+				B42893864AA904371053A6855998F1DE /* FirebaseMessaging.modulemap */,
+				6E1ADE1A2E9CF5807B15D238D5D4D771 /* FirebaseMessaging-dummy.m */,
+				3F83E7A273DF35FA7EA0E5F3EE8A412A /* FirebaseMessaging-Info.plist */,
+				84351528A6BDE691996F70277D6447A9 /* FirebaseMessaging-umbrella.h */,
+				8C78B4E70B98B897F48F44E87E48A999 /* FirebaseMessaging.debug.xcconfig */,
+				FBF716EAE3B2BB5EFA4C99C09E96C436 /* FirebaseMessaging.release.xcconfig */,
 			);
 			name = "Support Files";
-			path = "../Target Support Files/FirebaseCore";
+			path = "../Target Support Files/FirebaseMessaging";
 			sourceTree = "<group>";
 		};
-		4F78A6EA2D69700C3D2F2F9C0117B0E4 /* SDWebImage */ = {
+		48F5ED53B8AA4B72BB291FE9F7ED63BA /* AlamofireNetworkActivityLogger */ = {
 			isa = PBXGroup;
 			children = (
-				13217155A21405199F4921023EEAF27D /* Core */,
-				B23A2CE353E7E4618C2E10A006068CA7 /* Support Files */,
+				34A9608E4495DE8784B6B2FDA489BB98 /* NetworkActivityLogger.swift */,
+				C20D6ED1655A5154985B192BB5DFECE9 /* Support Files */,
 			);
-			name = SDWebImage;
-			path = SDWebImage;
+			name = AlamofireNetworkActivityLogger;
+			path = AlamofireNetworkActivityLogger;
 			sourceTree = "<group>";
 		};
-		5089AA72DBF99593363296A7C4A66E0C /* Support Files */ = {
+		50DD5A58D993D25478235A3B1F688A9E /* SwiftLint */ = {
 			isa = PBXGroup;
 			children = (
-				D8CB5D0BA35FEB241E6B43E87ABE3A29 /* PromisesObjC.modulemap */,
-				F570B429E4C673A409F19D1C3115AD28 /* PromisesObjC-dummy.m */,
-				281B68F551197A0233DD7B33C800E166 /* PromisesObjC-Info.plist */,
-				7F13DABDD01C960E2CD79E1ACDCBA0F7 /* PromisesObjC-umbrella.h */,
-				3FAE0BF617D5B61EB7F7D83121199A2D /* PromisesObjC.debug.xcconfig */,
-				6EAFF27C482495C4F8BBB52ED240988D /* PromisesObjC.release.xcconfig */,
+				FB0448450A23C2F951AF10E1A4B99494 /* Support Files */,
 			);
-			name = "Support Files";
-			path = "../Target Support Files/PromisesObjC";
+			name = SwiftLint;
+			path = SwiftLint;
 			sourceTree = "<group>";
 		};
-		51C421C961890ED77930218E3D2E6F22 /* Support Files */ = {
+		51CEADF83A968896A6D4CA1C669F2BFB /* encode */ = {
 			isa = PBXGroup;
 			children = (
-				D94BCB0F99B88FDBFDCD924665A10BF7 /* ResourceBundle-XLPagerTabStrip-XLPagerTabStrip-Info.plist */,
-				284503F7F940FEEB5949B526EDE1E466 /* XLPagerTabStrip.modulemap */,
-				061ADDF7160D72DBB04CE3C07A65D092 /* XLPagerTabStrip-dummy.m */,
-				68CAD1434CF737768EB5E6448FAB200D /* XLPagerTabStrip-Info.plist */,
-				05648E42BE2A0E049ADF39EC26F3B006 /* XLPagerTabStrip-prefix.pch */,
-				9983C076CB57126DAEF0E41E63D02226 /* XLPagerTabStrip-umbrella.h */,
-				00EA0BCE1DF2A5E3F3A5A2437A56E5A2 /* XLPagerTabStrip.debug.xcconfig */,
-				0CFD192918BF9A8E7F67C1E6516AB785 /* XLPagerTabStrip.release.xcconfig */,
 			);
-			name = "Support Files";
-			path = "../Target Support Files/XLPagerTabStrip";
+			name = encode;
 			sourceTree = "<group>";
 		};
-		55519F1472C3A66DEB00728FA1586953 /* Frameworks */ = {
+		5205E6FA7EEBB77871DDF716C0F055BC /* youtube-ios-player-helper */ = {
 			isa = PBXGroup;
 			children = (
-				7CDB6237D6B781C493F37FE346D34043 /* GoogleAppMeasurement.xcframework */,
+				EDDBBBA95E76D1D831B86321E819CD42 /* YTPlayerView.h */,
+				DBC94E7FE9490FAD3BA7ABEC83465D6E /* YTPlayerView.m */,
+				662EA4A461384094B8D23A47D0D6EB75 /* Resources */,
+				E3FF732F3DC9D1B6A4A4383B22CE5F16 /* Support Files */,
 			);
-			name = Frameworks;
+			name = "youtube-ios-player-helper";
+			path = "youtube-ios-player-helper";
 			sourceTree = "<group>";
 		};
-		593FE02F52CC373275F33B64D7BC8AE4 /* Support Files */ = {
+		52360A412DEA3B2E51B7063B2C008D3F /* Support Files */ = {
 			isa = PBXGroup;
 			children = (
-				C3E3761BBCB4B2BDA008444208BB9D14 /* nanopb.modulemap */,
-				5A34BFAD941D4D5592F84577482B0755 /* nanopb-dummy.m */,
-				3F8E0698B23D8330735A2E4FEC3FFA3E /* nanopb-Info.plist */,
-				96B7DF903F9482BD723BEAA657753BFA /* nanopb-prefix.pch */,
-				E30CC1203300308BF00922DDC1B1E465 /* nanopb-umbrella.h */,
-				766E09648795C48BBBE87FFB14FE65A3 /* nanopb.debug.xcconfig */,
-				DCDC21580F8C5152C22C2EBEC5320A10 /* nanopb.release.xcconfig */,
+				52115CD6B6DF37FBADFA9F4732065B10 /* Parchment.modulemap */,
+				2D910114A8C3A716DDB409D6A96AA826 /* Parchment-dummy.m */,
+				AEFD367F0AC26371885D31C3B851494B /* Parchment-Info.plist */,
+				EE61C3B19FD0D7D91BC353A538CDBBA9 /* Parchment-prefix.pch */,
+				D3972686BD95412BFCBE53DE7A6B9709 /* Parchment-umbrella.h */,
+				1C8C3A61B00AAC8E3523F894847420D3 /* Parchment.debug.xcconfig */,
+				CFC36C7F7AC1A9920BE10C459AF546F7 /* Parchment.release.xcconfig */,
 			);
 			name = "Support Files";
-			path = "../Target Support Files/nanopb";
+			path = "../Target Support Files/Parchment";
 			sourceTree = "<group>";
 		};
-		597E69B45C685EDB281BC3F12B7B5F4F /* Parchment */ = {
+		53A1698F37BB00A284065BE1EE9BF031 /* FirebaseCoreDiagnostics */ = {
 			isa = PBXGroup;
 			children = (
-				853DBA32A3BB85358E4C9C0434DF3F42 /* AnyPagingItem.swift */,
-				FA3F4B853C03DE84BBCE447C0A8C9D67 /* CollectionView.swift */,
-				34CFF3C69ADF30594FDC658A5D5C43B3 /* InvalidationState.swift */,
-				52ACB911F426C86131423C7ECE786AB4 /* PageView.swift */,
-				316E57A07D6663C9041D2E1904582C61 /* PageViewController.swift */,
-				431D54C033B99364C15DB3C385C0F9AC /* PageViewControllerDataSource.swift */,
-				69667D18EC612E71AB1F6A12C0C21778 /* PageViewControllerDelegate.swift */,
-				BA098CF4507C82BA86F6FEB4C05B0063 /* PageViewDirection.swift */,
-				779D2029CCF5E5B39853F9E65484489C /* PageViewManager.swift */,
-				145088D7EBFE0864197F5353392E8564 /* PageViewManagerDataSource.swift */,
-				B347D8DF8F8047ED97696A2C1D59DFB6 /* PageViewManagerDelegate.swift */,
-				391CB2E8462B3793643B728C42F4E23F /* PageViewState.swift */,
-				6FADB945789CC98C9EB5D7D778F67B42 /* PagingBorderLayoutAttributes.swift */,
-				9F7D1D4E6535122668AC67BAAECD0997 /* PagingBorderOptions.swift */,
-				A959623953DE35CE5E503C62F77E6C41 /* PagingBorderView.swift */,
-				58EDFFCC387A91F5AD809835986A4FBD /* PagingCell.swift */,
-				6C5413BF1DAC53D78AE91ADE7FC77EEF /* PagingCellLayoutAttributes.swift */,
-				72AE5AAF9B6C6DC2473BFC6B78A44B3F /* PagingCellViewModel.swift */,
-				FB3338DE3385FD65504593A424C2DED7 /* PagingCollectionViewLayout.swift */,
-				7FB06F5D34A53BC7BC2028D4349F5E1B /* PagingContentInteraction.swift */,
-				06D6BBFE106E7283DC112E5D72BFFAB7 /* PagingController.swift */,
-				FD0C75B4162E7EFCF4D173ECC8852BB9 /* PagingDiff.swift */,
-				3E8AB86990E2620958C65E6290910BC8 /* PagingDirection.swift */,
-				9B104B286BAE12003C7FEAF54BE34B41 /* PagingDistance.swift */,
-				EC8C15AE473EBE0B7A3A112D72727815 /* PagingFiniteDataSource.swift */,
-				21DE60D8DE9B1929CC15F3DFBCA551B1 /* PagingIndexItem.swift */,
-				D6D4544A4AF61D8A2B889910E7D62B45 /* PagingIndicatorLayoutAttributes.swift */,
-				9231E31B41DA869B29BCA0E5F3335487 /* PagingIndicatorMetric.swift */,
-				EE69027FE7A0C3FF74BD20CCC28400D4 /* PagingIndicatorOptions.swift */,
-				822C75E96351338100F6A5C5BDA46DF5 /* PagingIndicatorView.swift */,
-				A25E6CF5CC16DE6FE9763C6384D3A443 /* PagingInvalidationContext.swift */,
-				B0A35EE1E6FF5F15A43AF04760C54B9E /* PagingItem.swift */,
-				C0D1D731B883544F59CD54AE4B60EF4F /* PagingItems.swift */,
-				3B81F1DD99A4C4281B57C0B0F180BA49 /* PagingLayout.swift */,
-				EFE7D08A301F6C78F989817B6203DCB1 /* PagingMenuDataSource.swift */,
-				FAF5FF32B5D142C60E3422565B03425B /* PagingMenuDelegate.swift */,
-				468B318DD1565006201C5BFCB9CBF53A /* PagingMenuHorizontalAlignment.swift */,
-				6CB18333803888F8614C9A7C5295604F /* PagingMenuInteraction.swift */,
-				C46D837C0E9A07F1DC29CBB9A06517F3 /* PagingMenuItemSize.swift */,
-				7430F4537B2DD427CE94C8BB5016491C /* PagingMenuItemSource.swift */,
-				2E4B8BB37AFF14EA25EF75BA3575CB65 /* PagingMenuPosition.swift */,
-				D101B83461490F776773691B17685682 /* PagingMenuTransition.swift */,
-				0C8E84F5AC012914ABC92DE689919448 /* PagingMenuView.swift */,
-				E0C7B3FC77DA49983FC7FF8CABE9B2BB /* PagingNavigationOrientation.swift */,
-				8A8A168C6765675B3DA33C8F05F27563 /* PagingOptions.swift */,
-				D4E6DA8EC473E04BAB8A65C34D5E2E9C /* PagingSelectedScrollPosition.swift */,
-				B84C3E7598D801D37DE0E3C039594D52 /* PagingSizeCache.swift */,
-				482E5877A48E4162371EFDF236CDF51A /* PagingState.swift */,
-				E17237981E77E6F56A8462D0E7BD985F /* PagingStaticDataSource.swift */,
-				28DB4E634BF452B4B1347C14E0CE7992 /* PagingTitleCell.swift */,
-				06636A73A530F38765377706E8AD25D9 /* PagingTransition.swift */,
-				1872AD9A8FFD4F9E23AEBADCC9BEE45B /* PagingView.swift */,
-				C240847CF85DE0D09AD836AB7C810B89 /* PagingViewController.swift */,
-				9A4986A40B6980684145409300DE696E /* PagingViewControllerDataSource.swift */,
-				1E5A23181E0FF62A32A502807AAECEAA /* PagingViewControllerDelegate.swift */,
-				B4EA01E664CC7E8BDDC0E30A06370EA0 /* PagingViewControllerInfiniteDataSource.swift */,
-				139B8C7543692F953127F906881AE23F /* PagingViewControllerSizeDelegate.swift */,
-				96FA9E3EEA03333F3658A39E9F4BEFD7 /* Tween.swift */,
-				F9751716552BC5A0EA3F840BFD65CD11 /* UIColor+interpolation.swift */,
-				AE9829D4640DE2B8E0A8FCFBCBCF0E65 /* UIEdgeInsets.swift */,
-				88E0310A35A5001544C1B323B0CB1D9D /* UIView+constraints.swift */,
-				053FA6A64FB1DEF9D8CE99B070CB8961 /* Support Files */,
+				7FC162E2C7133D351C2899E8FD257538 /* FIRCoreDiagnostics.h */,
+				719B504E36D0A9E6BE09C8226378C90F /* FIRCoreDiagnostics.m */,
+				7225D5F08A2446219A3C5BEDD2ACE8B3 /* FIRCoreDiagnosticsData.h */,
+				9390ABEFD49352F1AC9C0DA27C28BEB0 /* FIRCoreDiagnosticsInterop.h */,
+				99570CD14755AF52CA6FB413ECD617F6 /* firebasecore.nanopb.c */,
+				C43211FC56B503EC2907E2913213B308 /* firebasecore.nanopb.h */,
+				EC24A6E089D5B076EB68FD32F24CE2A7 /* Support Files */,
 			);
-			name = Parchment;
-			path = Parchment;
+			name = FirebaseCoreDiagnostics;
+			path = FirebaseCoreDiagnostics;
 			sourceTree = "<group>";
 		};
-		633A18DD6BF82FF50763DE9F3C1C53A1 /* MethodSwizzler */ = {
+		54331EDED9EE27898EF1D382A320B302 /* Firebase */ = {
 			isa = PBXGroup;
 			children = (
-				D5AF3179F596FE686FED66656AA52E66 /* GULOriginalIMPConvenienceMacros.h */,
-				F7ED4941776C5F7F841E154033F59E68 /* GULSwizzler.h */,
-				DE8AA641F5CFFBD0067AB18650A0886A /* GULSwizzler.m */,
+				5982B1DE1395A79F4809406B364034FE /* CoreOnly */,
+				13679A5C8AB43BC6D196D93F094763D4 /* Support Files */,
 			);
-			name = MethodSwizzler;
+			name = Firebase;
+			path = Firebase;
 			sourceTree = "<group>";
 		};
-		658C499061F7B28B6F6E5C103CC8E861 /* Support Files */ = {
+		567B34B1B51C502D981443E4E3836F36 /* nanopb */ = {
 			isa = PBXGroup;
 			children = (
-				58D9CAC47DDA43E0EE9863CCF5147C07 /* FirebaseCoreDiagnostics.modulemap */,
-				33BAC1F0B6D2334464FA3E4F8262EC2C /* FirebaseCoreDiagnostics-dummy.m */,
-				EF66925EE925F385CA967739CF613C73 /* FirebaseCoreDiagnostics-Info.plist */,
-				0EBF433186796D75D3C6385287CB84ED /* FirebaseCoreDiagnostics-umbrella.h */,
-				9D7DFB458D13423895508525C657B297 /* FirebaseCoreDiagnostics.debug.xcconfig */,
-				6033D5A4056246D310B127421EBC27B5 /* FirebaseCoreDiagnostics.release.xcconfig */,
+				1A0B8567851D82A974B37215FE2CFA3D /* pb.h */,
+				D7B583AE7B8586E72216E28616C35894 /* pb_common.c */,
+				CCA07FC8BB7A48B6B63A0BF3DAFE9DFB /* pb_common.h */,
+				91F9CE9E532A10DF6F7FA69C598A0FB1 /* pb_decode.c */,
+				2C20374EBDF806478C3B593001CC6E09 /* pb_decode.h */,
+				64201A78E382EB319009B9B1E22FD48E /* pb_encode.c */,
+				A7D714E6FAE501B391F302D1940BB647 /* pb_encode.h */,
+				E3A8A4B74527CD3CD15F4248F7A389BF /* decode */,
+				51CEADF83A968896A6D4CA1C669F2BFB /* encode */,
+				A98EDE916B4FD7F4060DAA57AE556EFD /* Support Files */,
 			);
-			name = "Support Files";
-			path = "../Target Support Files/FirebaseCoreDiagnostics";
+			name = nanopb;
+			path = nanopb;
 			sourceTree = "<group>";
 		};
-		67735D9EB024ECE2E66460047FD22929 /* Resources */ = {
+		56F037294BFC71D77D5625E36385336C /* Logger */ = {
 			isa = PBXGroup;
 			children = (
-				C9BCF3C46016439498328D0C3342FDEB /* CardView.xib */,
-				80546A2524AE0F9B2829BD6CF96BDBD6 /* CenteredView.xib */,
-				6C12705F38B217C44452C374AEDC6705 /* errorIcon.png */,
-				627DC84D45B2DE549AEF37742FDD550C /* errorIcon@2x.png */,
-				C2EBFA6F43EBE088EA9BD60BDD23AA9D /* errorIcon@3x.png */,
-				9561A529D797E84B7343430455F6CC7A /* errorIconLight.png */,
-				F238856BD43D6E810319390CE31EB175 /* errorIconLight@2x.png */,
-				2A27239E794030283EFBFE048B7932F9 /* errorIconLight@3x.png */,
-				BB9F0624D8002399E818C9E453F05331 /* errorIconSubtle.png */,
-				17DD1D345C7785B33A30949E96471BC1 /* errorIconSubtle@2x.png */,
-				BB873B0C48D9DB5373539A3D30C03B2A /* errorIconSubtle@3x.png */,
-				333F24DA805EC09F1C08FFC8C038C9CE /* infoIcon.png */,
-				FB0EB330283F30A78CAC396576D91318 /* infoIcon@2x.png */,
-				2A0345924CB157E4991C609A86526CA1 /* infoIcon@3x.png */,
-				CE54166909992272EAD05AF846AF6A6E /* infoIconLight.png */,
-				2A5DEF72FA299A00A8A010DD4A04F737 /* infoIconLight@2x.png */,
-				C205FCB6C3CDFA83FAC19623D3C217B2 /* infoIconLight@3x.png */,
-				7A6520F836D83ACAB5994C3EB22EB43B /* infoIconSubtle.png */,
-				967777FD15E7C5626002F1DA3A97C42F /* infoIconSubtle@2x.png */,
-				3F6AB2D28A44600666DE5EF800F2B582 /* infoIconSubtle@3x.png */,
-				E9746C7D95991947E02339799B2B0BAD /* MessageView.xib */,
-				11728E04F5C96F8C3B9EF30BACF0E0A3 /* StatusLine.xib */,
-				9220CFF1F07FCC368C9E8AAE4623E75F /* successIcon.png */,
-				77305BBD431BE71B0CEC87444ACF6894 /* successIcon@2x.png */,
-				4D7D75DA29CA2A753272FD3AC0AC4845 /* successIcon@3x.png */,
-				6C9810BEA45EF4B270DA3A935D3EFD5E /* successIconLight.png */,
-				F9FB0BC3721AB0B00DC540D85FADD119 /* successIconLight@2x.png */,
-				9DF4657CCE1BA03932924366A4EDB8A5 /* successIconLight@3x.png */,
-				993E60C6D9CA6206CE06289C4899B641 /* successIconSubtle.png */,
-				EDD90D293003EF96572D854A0B7D39B2 /* successIconSubtle@2x.png */,
-				5A48EF2750C860328430143A27412AB9 /* successIconSubtle@3x.png */,
-				5DE1BE167CE0A04556684A2C4FB351BA /* TabView.xib */,
-				222632A66FAF0BE5AB02F1451FB6FD47 /* warningIcon.png */,
-				EFD95CF9BFB00C4D7022332AE8B700A8 /* warningIcon@2x.png */,
-				D0CDB7129E8BC265EF3C533EEB332272 /* warningIcon@3x.png */,
-				72F370F1CB968143725F10FA1B9848E1 /* warningIconLight.png */,
-				3EE37FF5AC6066546D2657F9A944D60F /* warningIconLight@2x.png */,
-				57F2269C07C2D4E6C56C6C45E7356B9D /* warningIconLight@3x.png */,
-				84029CD3312F9535FB2A92F72EC7397F /* warningIconSubtle.png */,
-				9AB99E0AA0FB268DD001E20CCCC49EB6 /* warningIconSubtle@2x.png */,
-				14299BD462CF9AE53F47C742D3CD9333 /* warningIconSubtle@3x.png */,
+				95A76B67F30BC91C646DEEA20408C4E1 /* GULLogger.h */,
+				6092BD5DFE8052E7C6139333E21FCA35 /* GULLogger.m */,
+				7694C95B8F3082D324819B612E5E9CC1 /* GULLoggerLevel.h */,
 			);
-			name = Resources;
+			name = Logger;
 			sourceTree = "<group>";
 		};
-		67FBBFC2443887619BC43B509F97B9CE /* CleverTap-iOS-SDK */ = {
+		5982B1DE1395A79F4809406B364034FE /* CoreOnly */ = {
 			isa = PBXGroup;
 			children = (
-				95DE539A37976263D044F56C7CF29714 /* CleverTap.h */,
-				8C6FFA6506E7E6DCB794D03E632F694B /* CleverTap.m */,
-				2DD539B684F42716277F02DE05B1C860 /* CleverTap+DisplayUnit.h */,
-				85D2F1ED5F32FCD0417D115214DEA5EE /* CleverTap+FeatureFlags.h */,
-				5CEED2EBE72FA169950D1B0C6EA09768 /* CleverTap+InAppNotifications.h */,
-				1819F954772AC1629099CC3D43902010 /* CleverTap+Inbox.h */,
-				877C5A5FEEFE802A183B3B7974721719 /* CleverTap+ProductConfig.h */,
-				C12C155811E12F969887E1AF566F9FA4 /* CleverTap+SSLPinning.h */,
-				DB16487F2E0A797742A0E4F2B25FB6F7 /* CleverTapBuildInfo.h */,
-				2E4D7AEFCE70AF6449B485DEC57964BC /* CleverTapConfigValue.m */,
-				297D6B1B2DD3DDE427A4CE49DBF4703D /* CleverTapDisplayUnit.m */,
-				8FE4C240C4F6FCC7608FDC4FA941F7A7 /* CleverTapDisplayUnitContent.m */,
-				C68612371C3345685BE0D3657382192C /* CleverTapEventDetail.h */,
-				84D01F252C842C7E47FA7F845BE955BE /* CleverTapEventDetail.m */,
-				47A37E3EDBEF51DE67B2CA831887612C /* CleverTapFeatureFlags.m */,
-				11F5B23C9E06F3F06BBA8A489B64F1B4 /* CleverTapFeatureFlagsPrivate.h */,
-				B61CEB697DFBF15606B424CF5C89B00F /* CleverTapInAppNotificationDelegate.h */,
-				D5F871F384BFFF387B4E26EBEB1844C9 /* CleverTapInboxMessage.m */,
-				89D1F3E559544561EE3ADD29D1AEF250 /* CleverTapInboxMessageContent.m */,
-				719CE6BEB5A7CE0F73FD19932D929736 /* CleverTapInboxStyleConfig.m */,
-				522DAB12AA163A8EEF934307D77C590C /* CleverTapInboxViewController.m */,
-				6342B3402BA98B8613171528F348901B /* CleverTapInboxViewControllerPrivate.h */,
-				0A9DDCF5C842CB7F5C486A076FA2B9EC /* CleverTapInstanceConfig.h */,
-				ECD9875F202CA6E058B60F7858A2B20C /* CleverTapInstanceConfig.m */,
-				274F9CC775AEE92A0294645384547E0C /* CleverTapInstanceConfigPrivate.h */,
-				E1C4D6A01CC0EF14CF71956CEB259DDC /* CleverTapJSInterface.h */,
-				DBC80AA06E0B87E619A46B242BF54B18 /* CleverTapJSInterface.m */,
-				A4466E4714FA30E1D83D5DEF20BF491A /* CleverTapProductConfig.m */,
-				A5C7717A34C600C73F2270977F131C77 /* CleverTapProductConfigPrivate.h */,
-				3A76A8A571811625E8C3E63958B0A218 /* CleverTapPushNotificationDelegate.h */,
-				12ABE345D2EF7E7543D622A00009715D /* CleverTapSyncDelegate.h */,
-				B14052BDCE53C4B44B778BA3499F5386 /* CleverTapTrackedViewController.h */,
-				75E7D06D46E3A476A2BD6FD433AF8BC7 /* CleverTapTrackedViewController.m */,
-				B6A263741C9017DF5BA30FEFF69F6649 /* CleverTapURLDelegate.h */,
-				B36F53CA1F8B2A0A9D5695DF7DEB9B9E /* CleverTapUTMDetail.h */,
-				B739D9595B02A6543342082ACE2A4636 /* CleverTapUTMDetail.m */,
-				59B080D266EFC817F38443E832CB86EC /* CTAlertViewController.h */,
-				D4EEC25DF2E4B22F64CAE6AC5D18F934 /* CTAlertViewController.m */,
-				2CF2EBBA0E6EF19B0ECB58A262960690 /* CTAVPlayerViewController.h */,
-				128A386E25B01E4B653CB86E3C216CF4 /* CTAVPlayerViewController.m */,
-				69F64AE6EB6B3E3EB5BD78E868EFE258 /* CTBaseHeaderFooterViewController.h */,
-				8188DDB43C025E0E3CDA638C06789DD0 /* CTBaseHeaderFooterViewController.m */,
-				66F88E5CE8D96634B0916858BD426203 /* CTBaseHeaderFooterViewControllerPrivate.h */,
-				DEBF385E3523B08F8CA8E1635BF40412 /* CTCarouselImageMessageCell.h */,
-				39038016635A847AFC0852BAD5646167 /* CTCarouselImageMessageCell.m */,
-				B0DFDB230BC07FD241DB0E6DF2137650 /* CTCarouselImageView.h */,
-				9ED58F6564654DBCFD4CB1FD7AF4B244 /* CTCarouselImageView.m */,
-				985924DD0E5E7A4597039E3D4F1767E7 /* CTCarouselMessageCell.h */,
-				70A12B186856B08B4AF700A4A7A028FE /* CTCarouselMessageCell.m */,
-				90033078E7C78E82A34D4E0788C963F5 /* CTCertificatePinning.h */,
-				BCA8A1D82F4DB1C41D38CC50053347DF /* CTCertificatePinning.m */,
-				D1B5CD2E0D9E11C4EC651FDA7013A707 /* CTConstants.h */,
-				397B705D8F2DBA5A220573DEB8808038 /* CTConstants.m */,
-				A48A1D5F3678EAF4CF0BFB2EFD185FB9 /* CTCoverImageViewController.h */,
-				2A29105CBDDC6799339760C16C17EF36 /* CTCoverImageViewController.m */,
-				A0A755A9C675F27F2936D9F7EB47644B /* CTCoverViewController.h */,
-				B599B1FE91900AA47BE4871A4EEE0155 /* CTCoverViewController.m */,
-				671EE3F9D5C02E2464E3FAF1F6D1B777 /* CTDeviceInfo.h */,
-				2AE5740A60745A3514018FCCE626AB64 /* CTDeviceInfo.m */,
-				C1637780844F15EBBB583D5A0C97F8CF /* CTDismissButton.h */,
-				8C8073138FD1BE6B579712D8DB109407 /* CTDismissButton.m */,
-				7CFFD8242DEBD1263960EC06A75789C9 /* CTDisplayUnitController.h */,
-				0DCE7A366E8ED57D99CA30FABB9C194D /* CTDisplayUnitController.m */,
-				0243E4B8C5E44A37475382041C51D033 /* CTEventBuilder.h */,
-				F6CC46F4158AD630047081D6F004E07F /* CTEventBuilder.m */,
-				8E8B054C21340B1F9894D0AC04BD9E6B /* CTFeatureFlagsController.h */,
-				B3151CD44CF2CC39C1E9BD0C8F2C6563 /* CTFeatureFlagsController.m */,
-				EFE97701B7966715E51D553F88B48C12 /* CTFooterViewController.h */,
-				BE25C259424B1D8032D0F1442C0CA5FB /* CTFooterViewController.m */,
-				786A63EB1306995666534BE6B1CFBFF0 /* CTHalfInterstitialImageViewController.h */,
-				C41BF03B42A9CED5B799F7931D49FCB3 /* CTHalfInterstitialImageViewController.m */,
-				423492BE4BA6A6EFA2A8391D58D164CE /* CTHalfInterstitialViewController.h */,
-				9C5B7AE76A11C98231AB107ABEBF3230 /* CTHalfInterstitialViewController.m */,
-				085CCB48D88E2AD0A6BADD6481DFCA8D /* CTHeaderViewController.h */,
-				4A8C462313F4E8B3759A7A6BE25EBE3E /* CTHeaderViewController.m */,
-				406EE5C1D0D45E9BF383F2FCE26E1387 /* CTImageInAppViewController.h */,
-				EACEF3C28EC3EFDCE1FAB43430D241CE /* CTImageInAppViewController.m */,
-				E5E3FE7215A80A345F9E418555DED574 /* CTImageInAppViewControllerPrivate.h */,
-				0D345B565E38FD79187C21C869FC9316 /* CTInAppDisplayViewController.h */,
-				C90EFA0F9CD3945BF7A333A61172809C /* CTInAppDisplayViewController.m */,
-				F3D4027B50A0398559E370D966BAD364 /* CTInAppDisplayViewControllerPrivate.h */,
-				370CB0E566ED22BBF5A7DEC514B14504 /* CTInAppFCManager.h */,
-				65404EB6DDE823D6EE46638E3FD11F55 /* CTInAppFCManager.m */,
-				57ABB6AF9A3DD75EDD42A880F20E8D71 /* CTInAppHTMLViewController.h */,
-				EFB3F2C98B9D1A77CA1DCFF333FB533A /* CTInAppHTMLViewController.m */,
-				E2FAB24C9EFAAE21DAB2D6F469B3B96B /* CTInAppNotification.h */,
-				2FAAE2EF854BD9F5800F3582FBFCCD85 /* CTInAppNotification.m */,
-				A17A65C2BAF429438DD737EC197F9363 /* CTInAppUtils.h */,
-				EA4701F35A783A36008100E6A5AB19D0 /* CTInAppUtils.m */,
-				321C4E2EDC0B481BC8B678BA00E666F3 /* CTInboxBaseMessageCell.h */,
-				B1A38B1A7856F52025E1915547077366 /* CTInboxBaseMessageCell.m */,
-				348C2ED69F01A72ABD8627B905B583AE /* CTInboxController.h */,
-				2FD8FC254BC2F17D163A72B4B8C38EE5 /* CTInboxController.m */,
-				89282490EB7FC0E5997226BAE0A1FB0C /* CTInboxIconMessageCell.h */,
-				764852E59DB4FABA95EA778158B97C7A /* CTInboxIconMessageCell.m */,
-				37052EF03CE624C9FC2D17CB43C2E8A7 /* CTInboxMessageActionView.h */,
-				61ED8CFA697531876B8504349AAFADC8 /* CTInboxMessageActionView.m */,
-				0902BF23B634488355BAD4C75C816E89 /* CTInboxSimpleMessageCell.h */,
-				F90777A2B706BDF9B6AC2E27AFCE65CD /* CTInboxSimpleMessageCell.m */,
-				17687AEDC465DBF47DF0A47AB1E767D7 /* CTInboxUtils.h */,
-				F1C38274A3F6FC3983ECEFCF7ACCD355 /* CTInboxUtils.m */,
-				52AEE033B337B9BB6BB02E486448FCD6 /* CTInterstitialImageViewController.h */,
-				ACB47AAD35A3872B37372819081F7DFA /* CTInterstitialImageViewController.m */,
-				3B2F662597A2EBEFAA53C7EA5E8186B9 /* CTInterstitialViewController.h */,
-				2A468032E4C58EDE9285A8280F3B2284 /* CTInterstitialViewController.m */,
-				062020530AD4DA94C922D8F49422FA31 /* CTKnownProfileFields.h */,
-				84D7B50AC994E625AD273ECC9465472D /* CTKnownProfileFields.m */,
-				D6A896B929B4E1199DDEB688197E415A /* CTLocalDataStore.h */,
-				DAC8723A5053EFF298CE08388EB1956C /* CTLocalDataStore.m */,
-				616B5C3063F1AEE193358A55CC584631 /* CTLocationManager.h */,
-				DC5E1C4D2B0D498BD74287207B6551DC /* CTLocationManager.m */,
-				D087ADFBDBC7AF01A7C020CE36EC58DF /* CTLogger.h */,
-				8B990EA3DDD0D58C9F3EB3CFD921D68B /* CTLogger.m */,
-				7CA1B945A08C1A34B3BD939029C64433 /* CTMessageMO.h */,
-				31BBF7EA1FFDA5E1717DF17E4D912E1C /* CTMessageMO.m */,
-				802B7339CC68A24D3C90DCB8D98DEDB9 /* CTMessageMO+CoreDataProperties.h */,
-				AE33F43AC9FB7D28E522A4E1558A8A05 /* CTMessageMO+CoreDataProperties.m */,
-				04A8F8FE4F2045DFC907FDDDB636CCD2 /* CTNotificationButton.h */,
-				11520B595EDE76D6F303364393B12A8F /* CTNotificationButton.m */,
-				9CBACED061EFFA1429437A81091E9A64 /* CTPinnedNSURLSessionDelegate.h */,
-				271DF1E424F8AE6C6F86FBAD3CAE31A0 /* CTPinnedNSURLSessionDelegate.m */,
-				A1970E2B78E641DF33587356A39613DE /* CTPlistInfo.h */,
-				ED3103B3413297BCB907426276C01FEB /* CTPlistInfo.m */,
-				9F902DAE4A28172F9BD7D2DA2075C437 /* CTPreferences.h */,
-				1EA5C65CD6FB5CEE7179681880E31BE9 /* CTPreferences.m */,
-				22368E06435E34AEB287F9D40FC93CA2 /* CTProductConfigController.h */,
-				9165DB006FDEABE5B7F62C3B6C24D65F /* CTProductConfigController.m */,
-				E62B0163976140745687595BB6C9137D /* CTProfileBuilder.h */,
-				AB7C02CD704274009CDC25506ABECC3E /* CTProfileBuilder.m */,
-				A36FEC3990DB96B50E820C3095A6D56C /* CTSwipeView.h */,
-				4A8BE3F03BD3A82B25491EC3FD14ABD5 /* CTSwipeView.m */,
-				B04999EBB95E9EE5B7D3D53CE98848F3 /* CTSwizzle.h */,
-				A94A253D9632B76609D7EDE2905703AB /* CTSwizzle.m */,
-				62C0A8A3EEC142D1247177B84270C84C /* CTUIUtils.h */,
-				2B8BBA2191663A387AACA56987C66200 /* CTUIUtils.m */,
-				A7485948639937EE80EC1D5A957BCDF7 /* CTUriHelper.h */,
-				E7DEDD864858B0FC1893DAC80EF8A568 /* CTUriHelper.m */,
-				57FCE11FDBBE8F95121B58B797CA2782 /* CTUserMO.h */,
-				F4171CA7A6BE493316D9DDF1EE915EB7 /* CTUserMO.m */,
-				CBCD9098276BD32832002FBA59C5ECF6 /* CTUserMO+CoreDataProperties.h */,
-				556D9DA2DF707B1553CFCD90669B248A /* CTUserMO+CoreDataProperties.m */,
-				5D7661D27B5533D9866E33519FB723E3 /* CTUtils.h */,
-				A5713F4ED93B5359C325C23CF6F7848A /* CTUtils.m */,
-				F5A8D889728931C03B5D2E2A2B6301F1 /* CTValidationResult.h */,
-				E40345CDF112B4D9E29BDE79FB3ABA45 /* CTValidationResult.m */,
-				F1C3C5A299ACD1072598F8C5EAD35B4C /* CTValidator.h */,
-				CEE5AEDADB5CB7436CDA3B05D0B24AFB /* CTValidator.m */,
-				E6DDDCAB7A440B3BA561926EE11E5539 /* CTVideoThumbnailGenerator.h */,
-				2A240A2C201EB5724A7B1079CEC978AC /* CTVideoThumbnailGenerator.m */,
-				BF53FE4ECF5BD02A6858BE57469E473C /* UIView+CTToast.h */,
-				44CC799655F7A8FF8D39E0E94FAB29E3 /* UIView+CTToast.m */,
-				CB66A891E39B2FFE5A6DA0E83E8BEBBD /* Resources */,
-				D9B97072B9A27D8A02C6F5425E9FD399 /* Support Files */,
+				86A775A7D2D5BB174236FC6CE2A71A42 /* Firebase.h */,
 			);
-			name = "CleverTap-iOS-SDK";
-			path = "CleverTap-iOS-SDK";
+			name = CoreOnly;
 			sourceTree = "<group>";
 		};
-		696363AE4A6C0ACCB9AA9BD9AF33B29B /* Firebase */ = {
+		5C9D44C63BC1B172CCD09C8E49DB6EE6 /* MethodSwizzler */ = {
 			isa = PBXGroup;
 			children = (
-				115A7B6D13EF5DF2CFCD6713AD257FD8 /* CoreOnly */,
-				77EFD80472C2C8CD52DF1A8433E8A088 /* Support Files */,
+				81C97557B8F1734FD4BCCAB7B8457A67 /* GULOriginalIMPConvenienceMacros.h */,
+				1E6594E503DD7164304F3C3BB9817FDC /* GULSwizzler.h */,
+				5F5A4694830D46808474ED142AD1753C /* GULSwizzler.m */,
 			);
-			name = Firebase;
-			path = Firebase;
+			name = MethodSwizzler;
 			sourceTree = "<group>";
 		};
-		6A7327D5A1F703B6A84E1E37F75D4104 /* FirebaseCoreDiagnostics */ = {
+		600762A91B64A64851B70019ECB34CF5 /* AdIdSupport */ = {
 			isa = PBXGroup;
 			children = (
-				9A69DF1ECA1CD488A88CD708A0B85C87 /* FIRCoreDiagnostics.h */,
-				8B9979F40822FBE74DC74DC854D21FB3 /* FIRCoreDiagnostics.m */,
-				BB7113D45B7CA4D01D52DDDE4F438EA1 /* FIRCoreDiagnosticsData.h */,
-				70B78676E486E5735745926630A81D3C /* FIRCoreDiagnosticsInterop.h */,
-				C968FF2570A9B9B1003219C89BEB7616 /* firebasecore.nanopb.c */,
-				111ECC401375153DC4099044D6545643 /* firebasecore.nanopb.h */,
-				658C499061F7B28B6F6E5C103CC8E861 /* Support Files */,
+				B5E206C1C640B24D766EC552AFEDB4A8 /* Frameworks */,
 			);
-			name = FirebaseCoreDiagnostics;
-			path = FirebaseCoreDiagnostics;
+			name = AdIdSupport;
 			sourceTree = "<group>";
 		};
-		6FA2E24320D01272909DBB74521E381A /* NSData+zlib */ = {
+		60CC7FF094BEB2BD837A87E61B5845C2 /* FirebaseAnalytics */ = {
 			isa = PBXGroup;
 			children = (
-				E0A78F2F6491748E2850BA2D0AC56B2C /* GULNSData+zlib.h */,
-				700204BEE12AEA18A72E2AFFAFC5E11D /* GULNSData+zlib.m */,
+				1F014AEDE94BFBA6CCC2C8D513B9C6B6 /* AdIdSupport */,
+				B0C023EFE0C6D7EDAE3E0BED2C637697 /* Support Files */,
 			);
-			name = "NSData+zlib";
+			name = FirebaseAnalytics;
+			path = FirebaseAnalytics;
 			sourceTree = "<group>";
 		};
-		70C9D5621F98214873BB41E061DDF0B8 /* IQKeyboardManagerSwift */ = {
+		6244BAFAE97BBB4F8D371B4CEB9A80FD /* IQKeyboardManagerSwift */ = {
 			isa = PBXGroup;
 			children = (
-				134293FFADFB86E2D4112E05383E48D5 /* IQBarButtonItem.swift */,
-				2F7B461E0B529278CBDC67EBC51E17D2 /* IQInvocation.swift */,
-				023DE0DE7FD40C34C95503DA4B1A9A78 /* IQKeyboardManager.swift */,
-				5E28F0DF903CEDEDF0FB366CACB8CADE /* IQKeyboardManagerConstants.swift */,
-				3C468F87C05F6DC77B74BC647235050B /* IQKeyboardManagerConstantsInternal.swift */,
-				7F53103EE456620E8551DE4198710519 /* IQKeyboardReturnKeyHandler.swift */,
-				0B8054FD53D362CEEE988C629D5E0FF3 /* IQNSArray+Sort.swift */,
-				A73B4EE21629A51D50E84FEB84089F02 /* IQPreviousNextView.swift */,
-				708A1D597A391F09849EA505C1B81346 /* IQTextView.swift */,
-				5C42E34C2C748B6243FDE9BEEFAA9B71 /* IQTitleBarButtonItem.swift */,
-				DDA258A4A78E22081F04351D7279D2EB /* IQToolbar.swift */,
-				F5FFB783658B3F782BDC4BFDDC435429 /* IQUIScrollView+Additions.swift */,
-				1DF7E75690C0D039194B91B8CBA8A13A /* IQUITextFieldView+Additions.swift */,
-				11FFF457A29411BE38FE4F31DB24A748 /* IQUIView+Hierarchy.swift */,
-				756F769010C936D6B55A0773AADC2E82 /* IQUIView+IQKeyboardToolbar.swift */,
-				EE134E8AAD16F8482B70C12CCCBE88C5 /* IQUIViewController+Additions.swift */,
-				2F284B57A2EC981837B74365511F50AD /* Support Files */,
+				7000F81E483D701478C188DCA5600175 /* IQBarButtonItem.swift */,
+				D8E9EDA86A46F78457366D6821012757 /* IQInvocation.swift */,
+				930CF5ECEDCB86BFF9BC29BD048F88C8 /* IQKeyboardManager.swift */,
+				D2FCF0078787A22262357EA1C300309E /* IQKeyboardManager+Debug.swift */,
+				8C7BE4FD0EFB1CAC40B559E9F55E06DC /* IQKeyboardManager+Internal.swift */,
+				7BD061EE78E4F468D393D20532287189 /* IQKeyboardManager+OrientationNotification.swift */,
+				A9C62A4A227DEF32C8E68296D59F6F54 /* IQKeyboardManager+Position.swift */,
+				AB9FDADC9CEE9F6124F18DC7FC7767D9 /* IQKeyboardManager+Toolbar.swift */,
+				C67B0B5A5050700A802602A2FAA3E4E4 /* IQKeyboardManager+UIKeyboardNotification.swift */,
+				913A839635390958E3E2D0F1FB58A314 /* IQKeyboardManager+UITextFieldViewNotification.swift */,
+				8C48377EA077671A39B5574C3FCADEEB /* IQKeyboardManagerConstants.swift */,
+				6C2BAF5AB4973BE041CBF30E746A9053 /* IQKeyboardManagerConstantsInternal.swift */,
+				3D9F1C9E31E3C2F89E18CE21D3CAE051 /* IQKeyboardReturnKeyHandler.swift */,
+				F157AB646D2F7289B78AAD499BB95C8C /* IQNSArray+Sort.swift */,
+				44C602C79A47C739FD70AE92E0BA2A81 /* IQPreviousNextView.swift */,
+				066A2C53ACCA22D21393A852578FF832 /* IQTextView.swift */,
+				25F875350EDACB672EC7B4CF866DCD9D /* IQTitleBarButtonItem.swift */,
+				D2D785FCC6C97DC6D690DB97C42DD3EA /* IQToolbar.swift */,
+				D0784CFD6BFE463DAF418E3A86DE2D6A /* IQUIScrollView+Additions.swift */,
+				66AE1CA9000E3F4B8789D0D8DEC0CD52 /* IQUITextFieldView+Additions.swift */,
+				EE23E1BF1A02EC37581EB928741B0816 /* IQUIView+Hierarchy.swift */,
+				E9AA3CFBBDE1AF54675E3F3A991DF582 /* IQUIView+IQKeyboardToolbar.swift */,
+				5BD74976777151ACE3E0D71069F50F58 /* IQUIViewController+Additions.swift */,
+				03B6B8DEBD6CF8360575553E11019392 /* Support Files */,
 			);
 			name = IQKeyboardManagerSwift;
 			path = IQKeyboardManagerSwift;
 			sourceTree = "<group>";
 		};
-		70F1D0AFBC697C077E0EF7FEEE958320 /* Frameworks */ = {
+		662EA4A461384094B8D23A47D0D6EB75 /* Resources */ = {
 			isa = PBXGroup;
 			children = (
-				B9D9671DB4D5382C5B565FC82ED10588 /* FirebaseAnalytics.xcframework */,
+				CDCB66C7CE92CAC86021C9BA6D28834D /* Assets.bundle */,
 			);
-			name = Frameworks;
+			name = Resources;
 			sourceTree = "<group>";
 		};
-		7412D31980FF04468C75A6729B6F5C2A /* App */ = {
+		6633B953F157DE6F4E3BB5E2B8C8DBDE /* Support Files */ = {
 			isa = PBXGroup;
 			children = (
-				BB15A04517F303A1D38CC4EB6BB2E6C6 /* AccessibleMessage.swift */,
-				324D942F88994301DBEFD80991F1C549 /* Animator.swift */,
-				FFE38F6FDAF8E5B94E2C0BC8313355F0 /* BackgroundViewable.swift */,
-				D3114537C7124FEFDBC41DDACCFE34CF /* BaseView.swift */,
-				65110ECEDD0D7DB2CEC87956D7EE9EFF /* CALayer+Extensions.swift */,
-				F14309300ECA326DB7E64023954D7586 /* CornerRoundingView.swift */,
-				0B3C37E9DA3DB8C9B6599D7243E5892C /* Error.swift */,
-				ED09012BDCA76AF2BA49EBF5D2B89E30 /* Identifiable.swift */,
-				7B811F777909A902B640AAB8B8E1AF20 /* KeyboardTrackingView.swift */,
-				B664672DF9AAEA47420CBE49AF2463D4 /* MarginAdjustable.swift */,
-				DD5EDAB4513FBA0EA2891E3201B6E26D /* MarginAdjustable+Extensions.swift */,
-				D5ADCCB37C00D8468B02B465C2BB7D7B /* MaskingView.swift */,
-				319BDE430CD1EE8A9E7979B28F8849FB /* MessageView.swift */,
-				1FF4630E394E64643FE68204686C542A /* NSBundle+Extensions.swift */,
-				390517621C35CCF721457EBDFCC995A0 /* NSLayoutConstraint+Extensions.swift */,
-				189F9D4EEE27F800B887EE1024AE6D14 /* PassthroughView.swift */,
-				62C58E049003EFF6B9A139522A9F70EE /* PassthroughWindow.swift */,
-				7E97897E1D3BC1E0A926C9812091ADCD /* PhysicsAnimation.swift */,
-				EFE4B31F03F05F2536FAB4C4817673AB /* PhysicsPanHandler.swift */,
-				739893C82F24CC6EE8EAF89D937A3CD9 /* Presenter.swift */,
-				C50C1EE0BC3F280DC2D77F32FDE45CA6 /* SwiftMessages.swift */,
-				0262B5E3ED1695C61FD01C64379D03A4 /* SwiftMessages.Config+Extensions.swift */,
-				21D030149566CC0E372BD730FF791FB8 /* SwiftMessagesSegue.swift */,
-				9052D0467EA3D3C93681E0B89A55D2A6 /* Theme.swift */,
-				1256ABC3DE99710E71FDF92D801E9391 /* TopBottomAnimation.swift */,
-				17B0FBFE565BF9282BC15F8E77A34CEB /* UIEdgeInsets+Extensions.swift */,
-				6FAAE740EF4591A0ABA8EBF8A2B840ED /* UIViewController+Extensions.swift */,
-				24995C34872B83155F75C160D6D8ED6C /* UIWindow+Extensions.swift */,
-				7E0C2719D067664A68653A76CF38FBB9 /* Weak.swift */,
-				2B2ED8054213F80B551DCF925324AAAB /* WindowViewController.swift */,
-				67735D9EB024ECE2E66460047FD22929 /* Resources */,
+				C915C4E4FA554409D36E673ED00843C0 /* FloatingPanel.modulemap */,
+				4BDD14D586BD0C7598E989E0A5C559D4 /* FloatingPanel-dummy.m */,
+				CE3C0CC436E446E3F2A23807F050D195 /* FloatingPanel-Info.plist */,
+				317FB977A834E31EF6A605DF5CB7B0FF /* FloatingPanel-prefix.pch */,
+				4E3B2331512ED7E802587450B12AD18F /* FloatingPanel-umbrella.h */,
+				D62497F380059B2DA3BFEB71F50873E5 /* FloatingPanel.debug.xcconfig */,
+				F0C2DDCA931302A402432E095AC88073 /* FloatingPanel.release.xcconfig */,
 			);
-			name = App;
+			name = "Support Files";
+			path = "../Target Support Files/FloatingPanel";
 			sourceTree = "<group>";
 		};
-		77EFD80472C2C8CD52DF1A8433E8A088 /* Support Files */ = {
+		66B65DC7BFE8625435890AD47702AD49 /* App */ = {
 			isa = PBXGroup;
 			children = (
-				2FB2854194335ACE93FDD9C05D33DD54 /* Firebase.debug.xcconfig */,
-				9FD5A565F680A72ECBFFAA71B7F8F643 /* Firebase.release.xcconfig */,
+				F3DD0988E4A7913DBE5085B3FB06012C /* AccessibleMessage.swift */,
+				2708A54799DBC2FC9619EF81ADA80456 /* Animator.swift */,
+				63148198B708E46DC7635789681B8376 /* BackgroundViewable.swift */,
+				A36895ABAA4DFF5D53C1AF1DBBEA2431 /* BaseView.swift */,
+				42D93170CC9F8CA655FDB1C66FDB8F1D /* CALayer+Extensions.swift */,
+				823DCBA686896433A569B3DA7DD70855 /* CornerRoundingView.swift */,
+				B79CB94D58DB7969CB483288F070EC32 /* Error.swift */,
+				77B61DDEB4547953A6B9A8A50A4A5520 /* Identifiable.swift */,
+				815BD71E117B44F96659FC0009FC0F27 /* KeyboardTrackingView.swift */,
+				31D94D4BA23E040B9D4B68FEB3BA19CF /* MarginAdjustable.swift */,
+				447066B9535D8ACD3191668F7C63BE2D /* MarginAdjustable+Extensions.swift */,
+				70F895F9280EB9DF8809A6BDEA2C7B36 /* MaskingView.swift */,
+				85BA35675CCEFDA69DECB9E7C4EF04A1 /* MessageView.swift */,
+				CE67CCCB72022EA1852C74BAC94681B6 /* NSBundle+Extensions.swift */,
+				000DEFB9C892CB1083237E37BF511B21 /* NSLayoutConstraint+Extensions.swift */,
+				5CD4E38062B2DC81954AFE1F54EA059A /* PassthroughView.swift */,
+				CF0428472B09C1CB36630E2000609937 /* PassthroughWindow.swift */,
+				05A47BA3D5E85F9B8602C307DC8B6813 /* PhysicsAnimation.swift */,
+				A052EAF5432D2DD07EB9F8B03EDFC4E1 /* PhysicsPanHandler.swift */,
+				133347D6FC613AF1EF7654DDA29A783F /* Presenter.swift */,
+				C80B424D5F76A66C0E64A0B92C0EDC08 /* SwiftMessages.swift */,
+				0B64AE9167872042E428F7D883D85F3D /* SwiftMessages.Config+Extensions.swift */,
+				2A82CE9A05B69EDF2BC415FA336EC762 /* SwiftMessagesSegue.swift */,
+				A081898EB902DE6398A74CA4FCEAAAC0 /* Theme.swift */,
+				4A288F4D11318E672F918E1C5C6FA39E /* TopBottomAnimation.swift */,
+				85AAE72414FAD59ECE4074D8D39C447A /* UIEdgeInsets+Extensions.swift */,
+				F4A14662FF086D38E0A9D7D68738ECCE /* UIViewController+Extensions.swift */,
+				9011CD99A7594C717B50614473A5BE32 /* UIWindow+Extensions.swift */,
+				4BBFC7D490C140218BC95AA8CA0E64B1 /* Weak.swift */,
+				EF119B1111956F3D2D98A25E4661876A /* WindowScene.swift */,
+				B4D06E82E649EFD16EFA1623522AAB09 /* WindowViewController.swift */,
+				E44DBAA76FE29E2FD355E1CFDAD5D981 /* Resources */,
 			);
-			name = "Support Files";
-			path = "../Target Support Files/Firebase";
+			name = App;
 			sourceTree = "<group>";
 		};
-		7C9F84F8F40EF80A3320EF9B1B8C7BB6 /* Frameworks */ = {
+		69142484895334E3154CBB98AF3AF918 /* Support Files */ = {
 			isa = PBXGroup;
 			children = (
-				C0EACE32EC497755197764D655F2B6E2 /* UserExperiorSDK.xcframework */,
+				489473065CDEEB996E0515571B0C41EF /* OTPFieldView.modulemap */,
+				89E12DD140EA7D36051822BB8AC57660 /* OTPFieldView-dummy.m */,
+				565A6C8FA38EFEE4824C1E55F307EFE5 /* OTPFieldView-Info.plist */,
+				FE72D20B2E877A8380125AB8DB9A5E3E /* OTPFieldView-prefix.pch */,
+				403FCE563BB10DA0DDA90847C606FD61 /* OTPFieldView-umbrella.h */,
+				02AF9928A561D955C65831099A50A431 /* OTPFieldView.debug.xcconfig */,
+				EADA3E7AFA9DDB06EEB54B557F8966BD /* OTPFieldView.release.xcconfig */,
 			);
-			name = Frameworks;
+			name = "Support Files";
+			path = "../Target Support Files/OTPFieldView";
 			sourceTree = "<group>";
 		};
-		7CF22D0F747D237C43EF32CCEF32F996 /* Support Files */ = {
+		71C57936F82DA580D02E63E03C7D1BD4 /* Support Files */ = {
 			isa = PBXGroup;
 			children = (
-				54CF931336B440CE2C13524EB70A9905 /* ResourceBundle-SwiftMessages-SwiftMessages-Info.plist */,
-				AFF7B711EA1D4E0D80B7C423C8AFA927 /* SwiftMessages.modulemap */,
-				23F849AB3BF9F71F30DA61731F9078E5 /* SwiftMessages-dummy.m */,
-				B4B8099B2A03D7994DA634BF9C3EC8D8 /* SwiftMessages-Info.plist */,
-				876CCC1EDBFD286B794AF73CCA3ED7DB /* SwiftMessages-prefix.pch */,
-				AFB887168D5B1E5E77CDC1D569F4BF17 /* SwiftMessages-umbrella.h */,
-				748F2B0B1D7D6F8344615257771E32B3 /* SwiftMessages.debug.xcconfig */,
-				D6C49B8E5FB77AF1451EA5F3A807BBAD /* SwiftMessages.release.xcconfig */,
+				A2BFD6BE65034BE7F3FC634A5BCA181A /* Alamofire.modulemap */,
+				36B096A6E6CD60F2D1D99666B4426B47 /* Alamofire-dummy.m */,
+				E64FDADA18580BB8E3B4AE15A92D60F6 /* Alamofire-Info.plist */,
+				4D9A93493223F8879F75B6B7E6E9E3B7 /* Alamofire-prefix.pch */,
+				AE49506FBF5EA47DD171595B89BC5921 /* Alamofire-umbrella.h */,
+				8F6C5AB32DADD269DB52620DE3C9526A /* Alamofire.debug.xcconfig */,
+				0A77A5FAFD83F97BC2889B771ED51623 /* Alamofire.release.xcconfig */,
 			);
 			name = "Support Files";
-			path = "../Target Support Files/SwiftMessages";
+			path = "../Target Support Files/Alamofire";
 			sourceTree = "<group>";
 		};
-		804514366A46D4866A335583F7D03C30 /* FirebaseAnalytics */ = {
+		72069A90C592683F59D37174E9E728B0 /* NSData+zlib */ = {
 			isa = PBXGroup;
 			children = (
-				3F7857182DE64995055C8F022650AE9B /* AdIdSupport */,
-				23EC40E0A58CA733147D8C797F599E74 /* Support Files */,
+				C12FCD8CC2CA85CB5C152778FB1EE717 /* GULNSData+zlib.h */,
+				878F0399C25A9F9322826A058A750257 /* GULNSData+zlib.m */,
 			);
-			name = FirebaseAnalytics;
-			path = FirebaseAnalytics;
+			name = "NSData+zlib";
 			sourceTree = "<group>";
 		};
-		80A7F32A5C97C836ABA21753083D6276 /* Support Files */ = {
+		72899D801F3197C19F05A907F59338E8 /* Support Files */ = {
 			isa = PBXGroup;
 			children = (
-				AFD7A6D93187CD27721315591515092D /* youtube-ios-player-helper.modulemap */,
-				5D68B788273AF6EED0567E4DE881AF34 /* youtube-ios-player-helper-dummy.m */,
-				8608679AF47AAB1CD9D266215435F82D /* youtube-ios-player-helper-Info.plist */,
-				E88C42BA505B2F223269AA445644DC30 /* youtube-ios-player-helper-prefix.pch */,
-				5DC9064FB2DDAF05EC6E92E8FD019B94 /* youtube-ios-player-helper-umbrella.h */,
-				2C075CF84C54808C87B9087B876BF78C /* youtube-ios-player-helper.debug.xcconfig */,
-				2C0522626DB9CAB3CE7F6272BB44C086 /* youtube-ios-player-helper.release.xcconfig */,
+				442FFF8C75DD7E1ED22945785EF468B1 /* ResourceBundle-XLPagerTabStrip-XLPagerTabStrip-Info.plist */,
+				64A9974ABB0109A89864671FF955A19C /* XLPagerTabStrip.modulemap */,
+				994334386DDF9F19120F7CEBDCEABA88 /* XLPagerTabStrip-dummy.m */,
+				53734179FDBA72AC8E7668723EEC52EB /* XLPagerTabStrip-Info.plist */,
+				23942019D01A72809C83B817E82CCBE7 /* XLPagerTabStrip-prefix.pch */,
+				4343D0438A075688F834C50E6B066A21 /* XLPagerTabStrip-umbrella.h */,
+				95909AB0FA2085F0C5C33BE92A491E7A /* XLPagerTabStrip.debug.xcconfig */,
+				B4E842C465B5B2FEA3F98E2A987334EB /* XLPagerTabStrip.release.xcconfig */,
 			);
 			name = "Support Files";
-			path = "../Target Support Files/youtube-ios-player-helper";
+			path = "../Target Support Files/XLPagerTabStrip";
 			sourceTree = "<group>";
 		};
-		81FFC5F25009239A2E3DEC6C7C04CB54 /* Resources */ = {
+		7DF953C73D0075F220369D090FEA5C98 /* GoogleUtilities */ = {
 			isa = PBXGroup;
 			children = (
-				F9642EB22F43196813478A247367864F /* ButtonCell.xib */,
+				85F289351FEF2874006611616C60C2EF /* AppDelegateSwizzler */,
+				07F08B7E526F9A79558017359CCF795F /* Environment */,
+				56F037294BFC71D77D5625E36385336C /* Logger */,
+				5C9D44C63BC1B172CCD09C8E49DB6EE6 /* MethodSwizzler */,
+				C28CD13556A7A0DA9EF56665136638B5 /* Network */,
+				72069A90C592683F59D37174E9E728B0 /* NSData+zlib */,
+				37A1DC0AF6D90DF492EA06C7A98CB89D /* Reachability */,
+				2B35FE58ADD971A953959361DF4B8D54 /* Support Files */,
+				36A9CFCFAAFE11031394D9366C42AF6B /* UserDefaults */,
 			);
-			name = Resources;
+			name = GoogleUtilities;
+			path = GoogleUtilities;
 			sourceTree = "<group>";
 		};
 		8568FBA53E7310551B147F6D98EA5F77 /* iOS */ = {
@@ -4627,76 +4482,110 @@
 			path = "Target Support Files/Pods-OpenBook";
 			sourceTree = "<group>";
 		};
-		89669CD6E214D6B3BAB82485BAF86030 /* Support Files */ = {
+		85F289351FEF2874006611616C60C2EF /* AppDelegateSwizzler */ = {
 			isa = PBXGroup;
 			children = (
-				F45969B8D40B039F947506B5E787C825 /* GoogleAppMeasurement-xcframeworks.sh */,
-				6DF4DFD316E8C581A47E9C6D5F28776C /* GoogleAppMeasurement.debug.xcconfig */,
-				1552C6521173FBF69073573A1151B5AB /* GoogleAppMeasurement.release.xcconfig */,
+				63338322A28B340DF3DBB9DA1E44F2AC /* GULAppDelegateSwizzler.h */,
+				0D53E675F7CB22E401B3AD432D761B79 /* GULAppDelegateSwizzler.m */,
+				FF6D29EA4D448E1430FE43BE269575BD /* GULAppDelegateSwizzler_Private.h */,
+				1CE8F8E8FB03E480E746F4D291CBFEB6 /* GULApplication.h */,
+				2BEE04978047BE2335C22AF512A995E9 /* GULLoggerCodes.h */,
+				A8325797F0FC35992CD9A1FA6D5711F2 /* GULSceneDelegateSwizzler.h */,
+				111264B8DD3ECAC5F1147910FE2C7257 /* GULSceneDelegateSwizzler.m */,
+				4D9B615C3328AA3EE6062F04D3DAB5E4 /* GULSceneDelegateSwizzler_Private.h */,
 			);
-			name = "Support Files";
-			path = "../Target Support Files/GoogleAppMeasurement";
+			name = AppDelegateSwizzler;
 			sourceTree = "<group>";
 		};
-		89BE96F83424B1936FF0FB3D90E1778E /* Support Files */ = {
+		881785582C8CC54CE242215A9B30F7E0 /* Support Files */ = {
 			isa = PBXGroup;
 			children = (
-				26F8D7A22D51BB2F7D1398E4669433B6 /* FirebaseCrashlytics.modulemap */,
-				AEE4A180E9700369FD8C9B1F2EEA519D /* FirebaseCrashlytics-dummy.m */,
-				49617C3F8B215055A6B9AE8B0BEE9635 /* FirebaseCrashlytics-Info.plist */,
-				89FA258287F0704599FF690DA1AE180C /* FirebaseCrashlytics-umbrella.h */,
-				77B583500A4AE470229923AB7EFA97E8 /* FirebaseCrashlytics.debug.xcconfig */,
-				291CBDF92E320B388A48898EED424B56 /* FirebaseCrashlytics.release.xcconfig */,
+				C736A281BCA10CA1D7F2B2CE2FB82765 /* GoogleDataTransport.modulemap */,
+				63608B743866BBC20999279228C08F4F /* GoogleDataTransport-dummy.m */,
+				0D0E401D3615FD797F240B881C59F11A /* GoogleDataTransport-Info.plist */,
+				A28AA21654E7A535B0D68055707EC5C8 /* GoogleDataTransport-umbrella.h */,
+				EED80F8EC9AD4C4AB102FDCC29578FB7 /* GoogleDataTransport.debug.xcconfig */,
+				9061DBC856B3BED71F1FF9A0A067FFD4 /* GoogleDataTransport.release.xcconfig */,
 			);
 			name = "Support Files";
-			path = "../Target Support Files/FirebaseCrashlytics";
+			path = "../Target Support Files/GoogleDataTransport";
 			sourceTree = "<group>";
 		};
-		8F2C4AAF03141C8039BC10A820FCFD7E /* UserDefaults */ = {
+		91AA2B07B334E841CED5665A38015479 /* ScrollingFollowView */ = {
 			isa = PBXGroup;
 			children = (
-				D369BA43E19F3583F4E55252030A1516 /* GULUserDefaults.h */,
-				A39B28332C0C49D5AC0AB09F3EA8F5F6 /* GULUserDefaults.m */,
+				CD2B58AC1B5C433F32A32019B7EC2689 /* ScrollingFollowView.swift */,
+				19830FF1924597784ABD8AEDA73BEFBD /* Support Files */,
 			);
-			name = UserDefaults;
+			name = ScrollingFollowView;
+			path = ScrollingFollowView;
 			sourceTree = "<group>";
 		};
-		92723FA238D0CD9EC6387779F4F86877 /* Support Files */ = {
+		9283785CFD99D25502476F9753EB20C9 /* Support Files */ = {
 			isa = PBXGroup;
 			children = (
-				E4D9BC83C600ACC06D9CB95692323A7A /* FirebaseMessaging.modulemap */,
-				398A3459F964EB3F2A862E0D4ED3C8B2 /* FirebaseMessaging-dummy.m */,
-				CE67BA38717305589B2A7D5A5EEBAD9E /* FirebaseMessaging-Info.plist */,
-				0B1DDE8FEB83CB45B8FD06ADBCF7B045 /* FirebaseMessaging-umbrella.h */,
-				7CA4E34730D1C1BC863D8D7CF2F69BF8 /* FirebaseMessaging.debug.xcconfig */,
-				F0AAD166C6FEC321EE3897E8715C08AA /* FirebaseMessaging.release.xcconfig */,
+				15CEDDFB0B74F41CD199B26D69EADB53 /* SDWebImage.modulemap */,
+				A8C010169E95F1031ACA109CA8670704 /* SDWebImage-dummy.m */,
+				DA2B60DFB6D41743B0A15ED178344712 /* SDWebImage-Info.plist */,
+				C66192C29204895D397E3E3BA91D28FE /* SDWebImage-prefix.pch */,
+				5E9533D6C692AAB573E718CB804456A0 /* SDWebImage-umbrella.h */,
+				8EFD792B63709FF0D329A1AB55BD9EE3 /* SDWebImage.debug.xcconfig */,
+				3EE7A7EB1A9E9ADBD166A08718052C24 /* SDWebImage.release.xcconfig */,
 			);
 			name = "Support Files";
-			path = "../Target Support Files/FirebaseMessaging";
+			path = "../Target Support Files/SDWebImage";
 			sourceTree = "<group>";
 		};
-		9537134D8D181BAD45F7EF5B75924C82 /* UserExperior */ = {
+		92A0E0782B1B8143031C40F216B12C83 /* SDWebImage */ = {
 			isa = PBXGroup;
 			children = (
-				7C9F84F8F40EF80A3320EF9B1B8C7BB6 /* Frameworks */,
-				2CE4AAC683A31EC7B2C49031FB070F82 /* Support Files */,
+				29046E9DA93235548B87A3EDECFD10F2 /* Core */,
+				9283785CFD99D25502476F9753EB20C9 /* Support Files */,
 			);
-			name = UserExperior;
-			path = UserExperior;
+			name = SDWebImage;
+			path = SDWebImage;
 			sourceTree = "<group>";
 		};
-		9BEF0C5C55CFA7C85AA6C8C565566C82 /* OTPFieldView */ = {
+		931761C858F12AF74F17C18F0A9046D8 /* OTPFieldView */ = {
 			isa = PBXGroup;
 			children = (
-				C249D796D2C7B67F92E96A300FBDB866 /* OTPFieldView.h */,
-				2FD20AB24F35B292F8A03FEB7D174EAC /* OTPFieldView.swift */,
-				EC1FB0C242C138B995F03D7C032EFD3A /* OTPTextField.swift */,
-				0AC0A455D0EBAF3653309B303534F55D /* Support Files */,
+				25B25D4858321861FB66920B0C80626C /* OTPFieldView.h */,
+				B248E793B2D9A8C2D1C43B2319C40FEF /* OTPFieldView.swift */,
+				1FAC360532955C22D3DCF2A47C2C2FCC /* OTPTextField.swift */,
+				69142484895334E3154CBB98AF3AF918 /* Support Files */,
 			);
 			name = OTPFieldView;
 			path = OTPFieldView;
 			sourceTree = "<group>";
 		};
+		994163E7C098C57687E44F95243A8927 /* Support Files */ = {
+			isa = PBXGroup;
+			children = (
+				B60C0AEFBDD87F60170C914C0C921532 /* PromisesObjC.modulemap */,
+				7C6DEA778DA7892977E16C88B95320C2 /* PromisesObjC-dummy.m */,
+				42A126AA811E96338CFE6E565B8EF088 /* PromisesObjC-Info.plist */,
+				B3D38EBE8AB93F9244F766EC1644C2A6 /* PromisesObjC-umbrella.h */,
+				415F521A4B7DADD0617C4D3272527C07 /* PromisesObjC.debug.xcconfig */,
+				D573AD7B4FECD8B0C11C8D78CBC5B249 /* PromisesObjC.release.xcconfig */,
+			);
+			name = "Support Files";
+			path = "../Target Support Files/PromisesObjC";
+			sourceTree = "<group>";
+		};
+		A4CC5B944658FF1CF8DBE74BE6E4EB95 /* Support Files */ = {
+			isa = PBXGroup;
+			children = (
+				DB0C2AE413FF17E1914CA5FEC5B38539 /* FirebaseCore.modulemap */,
+				459F6932A4DD3E8EE8A8659E6BE37E87 /* FirebaseCore-dummy.m */,
+				F30D79F57373DA4034C77F3EEA892011 /* FirebaseCore-Info.plist */,
+				32DF9595FC9B1042F0F2076193C692A6 /* FirebaseCore-umbrella.h */,
+				D465D7F54D40B3774407D83780D2D729 /* FirebaseCore.debug.xcconfig */,
+				9DA2DBE103108D378C37099A0B5A0F72 /* FirebaseCore.release.xcconfig */,
+			);
+			name = "Support Files";
+			path = "../Target Support Files/FirebaseCore";
+			sourceTree = "<group>";
+		};
 		A5052071FC788C08A116FE3BF339B4FE /* Targets Support Files */ = {
 			isa = PBXGroup;
 			children = (
@@ -4705,62 +4594,188 @@
 			name = "Targets Support Files";
 			sourceTree = "<group>";
 		};
-		AF3959C9A9C4350587076F23D0A95EBE /* SwiftMessages */ = {
+		A83B33A4F2F193033D6E5994CECA1393 /* Frameworks */ = {
 			isa = PBXGroup;
 			children = (
-				7412D31980FF04468C75A6729B6F5C2A /* App */,
-				7CF22D0F747D237C43EF32CCEF32F996 /* Support Files */,
+				0519E3C186D7FD7FD4B7EC0002C88061 /* UserExperiorSDK.xcframework */,
 			);
-			name = SwiftMessages;
-			path = SwiftMessages;
+			name = Frameworks;
 			sourceTree = "<group>";
 		};
-		B23A2CE353E7E4618C2E10A006068CA7 /* Support Files */ = {
+		A98EDE916B4FD7F4060DAA57AE556EFD /* Support Files */ = {
 			isa = PBXGroup;
 			children = (
-				16805A0DDEE3C5CEC6DD21E0141B53FF /* SDWebImage.modulemap */,
-				0C78FF2E2A7F1D844A45F6E84F7BDFBD /* SDWebImage-dummy.m */,
-				E820FA651238988AE2F089EFF6CCEFF7 /* SDWebImage-Info.plist */,
-				DBDB5412379B11337E94D278BE2A1D89 /* SDWebImage-prefix.pch */,
-				0897BC433DC4D731856A853AB40E6499 /* SDWebImage-umbrella.h */,
-				A8743A3F4DFAB718F7A90C4CC9558F6B /* SDWebImage.debug.xcconfig */,
-				73D9B6DAC09A7A50B4A7EEC44247E5DC /* SDWebImage.release.xcconfig */,
+				1804EA3B1F118361F3376D2D1CE1F0DE /* nanopb.modulemap */,
+				D29F93B9F07A90FA23C8B1EBB37676BC /* nanopb-dummy.m */,
+				484C7C928F7D6F2943B7C0358D0A820D /* nanopb-Info.plist */,
+				5DCB6EF2B78FE13C68BB0562F33E428A /* nanopb-prefix.pch */,
+				979FD5785D9976152F580CACD9C43802 /* nanopb-umbrella.h */,
+				AD6C4F88B3A8264787F02157EFDE180A /* nanopb.debug.xcconfig */,
+				A86AA2EB5FBAB8868EFC42CFA9B41728 /* nanopb.release.xcconfig */,
 			);
 			name = "Support Files";
-			path = "../Target Support Files/SDWebImage";
+			path = "../Target Support Files/nanopb";
 			sourceTree = "<group>";
 		};
-		B8D470E90921D53CB931BE01347A1CFB /* XLPagerTabStrip */ = {
+		AF248F66594FCFFCAF9A801E353167AC /* Alamofire */ = {
 			isa = PBXGroup;
 			children = (
-				CAE4355C71122E92E7FE27BCE22075DC /* BarPagerTabStripViewController.swift */,
-				88871A0385DA9AAD9FC3FF1AEC5A2D57 /* BarView.swift */,
-				E31865E711FDC9A3E6EC61C5CF8660CF /* BaseButtonBarPagerTabStripViewController.swift */,
-				D5CE29E0909FD3C6E2E099F75761D1F4 /* ButtonBarPagerTabStripViewController.swift */,
-				FD90F1CE703A72FBE7D96157140270B3 /* ButtonBarView.swift */,
-				98E2F8AE46DF9D2BC1E4EEF80C13B1B0 /* ButtonBarViewCell.swift */,
-				FEEFEA9EC603734A349BD48FD175E79D /* FXPageControl.h */,
-				9EFBABC49E653B4D35063042D6FBE755 /* FXPageControl.m */,
-				F10E9870F8CA27A6FF69BDC61453839A /* IndicatorInfo.swift */,
-				D415BC8949433C47B853ED0D8BC7037F /* PagerTabStripBehaviour.swift */,
-				27916AAFE54B43E36C7D40691D9DDAE7 /* PagerTabStripError.swift */,
-				7282E5A21A0C0FCC8335A4D2FB5E9761 /* PagerTabStripViewController.swift */,
-				4AF0FDB86C1AE0D5B85FEC2B4A22BCFC /* SegmentedPagerTabStripViewController.swift */,
-				8B1F42A93F025F7076545B461EB4145E /* SwipeDirection.swift */,
-				9D9CF029929AF09A237A05FB114F8E0A /* TwitterPagerTabStripViewController.swift */,
-				81FFC5F25009239A2E3DEC6C7C04CB54 /* Resources */,
-				51C421C961890ED77930218E3D2E6F22 /* Support Files */,
+				B42FA772FD30F8B5837F10995D2A171C /* AFError.swift */,
+				4B9E0A6EE29976A26DB7FAF14A2F273C /* Alamofire.swift */,
+				807E502B15A3354A8978D3F82C1E946D /* AlamofireExtended.swift */,
+				9BD8F811477FD70843AD82BBD33C4933 /* AuthenticationInterceptor.swift */,
+				BCF32232117D9DABBF7DCC3F23632E0D /* CachedResponseHandler.swift */,
+				52BA99414E0D7634F434771659661C12 /* Combine.swift */,
+				17FF3B0A4568B65A4CB6B942FFDBA4BC /* DispatchQueue+Alamofire.swift */,
+				E63DC0AE3046405C467519A2374EDF2B /* EventMonitor.swift */,
+				D16955C627887E38128334E1D824FADF /* HTTPHeaders.swift */,
+				9B22FA8A6DDFFB53375A65F9A192BC02 /* HTTPMethod.swift */,
+				F1FC5AE05ADC062C360E95799BDCB922 /* MultipartFormData.swift */,
+				C843D97D17CF8D4DBC31E4274FF6C93E /* MultipartUpload.swift */,
+				58C6DC4366CC90E41FCFEBC0C9E70F2F /* NetworkReachabilityManager.swift */,
+				294AED6B8CCC7A8D918B6B946CE3196D /* Notifications.swift */,
+				EF6EC3CCC63811003787D0F48418DF44 /* OperationQueue+Alamofire.swift */,
+				FE88BB7F42598792778C7AC682DE78B6 /* ParameterEncoder.swift */,
+				59620E32181DC5A4206291E838B08366 /* ParameterEncoding.swift */,
+				31E88731FC2C5D10F6A4D7E323517384 /* Protected.swift */,
+				FDCB12D99DD82CD647E1D6F77547ECA4 /* RedirectHandler.swift */,
+				9D10443BC8E26AEEC44B20D4915B3C8C /* Request.swift */,
+				EFB1998FB8C249A939475E0E99BD5292 /* RequestInterceptor.swift */,
+				C707200F796DC80FA2DF53E9E7D2D40A /* RequestTaskMap.swift */,
+				88444739B5FE5D321CE078925E96438E /* Response.swift */,
+				68DE76508BDA559739A3D4CF2E2696FE /* ResponseSerialization.swift */,
+				8C58EAD198CD5634640FE3FC830AD125 /* Result+Alamofire.swift */,
+				7FAF43665F9F949DCF5F45A7ED10134B /* RetryPolicy.swift */,
+				8FC981347811B8BC0F5538970C3CBF75 /* ServerTrustEvaluation.swift */,
+				0077048F741172E1CAE01CA6C6B08FE9 /* Session.swift */,
+				D04535DBF8AD873EB79E73E13E8C95CF /* SessionDelegate.swift */,
+				159E823BEE089BA2AA21B144B434CA98 /* StringEncoding+Alamofire.swift */,
+				52305295B3648E312C7426ECF8336F8E /* URLConvertible+URLRequestConvertible.swift */,
+				0D40A84964C7D330E117AB62AC1B364D /* URLEncodedFormEncoder.swift */,
+				9DC444B95245C764B86A8A1FE5825916 /* URLRequest+Alamofire.swift */,
+				E1BBF3307CC784BFA0DB78B59CA5262C /* URLSessionConfiguration+Alamofire.swift */,
+				DF6AA42E72F0867D19FA404C8FFEB603 /* Validation.swift */,
+				71C57936F82DA580D02E63E03C7D1BD4 /* Support Files */,
 			);
-			name = XLPagerTabStrip;
-			path = XLPagerTabStrip;
+			name = Alamofire;
+			path = Alamofire;
 			sourceTree = "<group>";
 		};
-		BB39A8DAC6FB0FC2B1F252B1BDC5C43C /* AdIdSupport */ = {
+		B06FD3320D1FCBE14919140A5B51CAC5 /* PromisesObjC */ = {
 			isa = PBXGroup;
 			children = (
-				55519F1472C3A66DEB00728FA1586953 /* Frameworks */,
+				B2B942EA18BC89BCAEACBF54F1A70AB2 /* FBLPromise.h */,
+				9CA69B69FEE5A8261FF7D19FA599E300 /* FBLPromise.m */,
+				43C85DC02AD81F8F1DFFB4EEE8F68DB2 /* FBLPromise+All.h */,
+				C94D200368610897A527880B0F55B295 /* FBLPromise+All.m */,
+				ECCA8E0C743BB77CD8B16B5FC777942A /* FBLPromise+Always.h */,
+				3B4E8062C0A904E711E7755801C2E9F5 /* FBLPromise+Always.m */,
+				9A5D3DBD21753C092E20EFF97F4D4554 /* FBLPromise+Any.h */,
+				D1EC204BA603EBE0F5A90BF20C88E481 /* FBLPromise+Any.m */,
+				D7E71D9CFD82F3048AF2C55DBED5E9DE /* FBLPromise+Async.h */,
+				D72A658BAF38CA19B214CD6CBBE615B3 /* FBLPromise+Async.m */,
+				29BF7DFC5BAF79E32B0A511257A50791 /* FBLPromise+Await.h */,
+				792E6BC26BD4A63ABBE9107A874D57D4 /* FBLPromise+Await.m */,
+				E0A1FF0CCA3916F8D83DCCC1EBA6F181 /* FBLPromise+Catch.h */,
+				DFFF7CAD884E0262D9B3A6C9946925C3 /* FBLPromise+Catch.m */,
+				9EA10FE8174E6D08E0E3E4E3D15092FD /* FBLPromise+Delay.h */,
+				24CCA4907A69191527964CE2FBB89303 /* FBLPromise+Delay.m */,
+				B57A24CE4FB67F9F1242DF33E05A408B /* FBLPromise+Do.h */,
+				57E64AB864A1035B3C190694A886A521 /* FBLPromise+Do.m */,
+				8A19BD3918328C434D43F37208AB6782 /* FBLPromise+Race.h */,
+				F0956DB013E8E51556DE7326D273F26E /* FBLPromise+Race.m */,
+				B5CABFCCB55360EEADD3B61E2CB7EF4B /* FBLPromise+Recover.h */,
+				FA43B0DE9A6AA385858D598EB313B64E /* FBLPromise+Recover.m */,
+				464DE511D4131515782F462353325762 /* FBLPromise+Reduce.h */,
+				340552C5B976118EB85BBD8DC208644A /* FBLPromise+Reduce.m */,
+				DEABFC3FD1607EA55F70E8840A06580C /* FBLPromise+Retry.h */,
+				365B559452D6CC8350F71F3CF5E1677A /* FBLPromise+Retry.m */,
+				27B50D8766515747D9635EB33CDB8CDF /* FBLPromise+Testing.h */,
+				F5F7924F65CD3C3531A1A872067A83DE /* FBLPromise+Testing.m */,
+				9E3B409662DD2BF2C57414A31366CB21 /* FBLPromise+Then.h */,
+				83C84F5C915CAE6DC703E963D2DECB8D /* FBLPromise+Then.m */,
+				5B4D537D0A79E63DA68FEA8E02E9DD89 /* FBLPromise+Timeout.h */,
+				937741281C8DD41A313A176A915F48AA /* FBLPromise+Timeout.m */,
+				55A8D51C3918D86A609057423BCF0597 /* FBLPromise+Validate.h */,
+				762642292C091B3CB4047404E6818F75 /* FBLPromise+Validate.m */,
+				2455EBE1355DD4E39DA6C0B3B694A25B /* FBLPromise+Wrap.h */,
+				2AACC34FF14DAE5B30CF6E4272C0267D /* FBLPromise+Wrap.m */,
+				4EF61E36C3D717165439919E9A7341DD /* FBLPromiseError.h */,
+				18C561958FDCA6637268BB7CC6067943 /* FBLPromiseError.m */,
+				AFAABCA5AD134D7B13A55DA86748F1F5 /* FBLPromisePrivate.h */,
+				1E552F6029DB590EA4CF6D58B9AEDA14 /* FBLPromises.h */,
+				994163E7C098C57687E44F95243A8927 /* Support Files */,
 			);
-			name = AdIdSupport;
+			name = PromisesObjC;
+			path = PromisesObjC;
+			sourceTree = "<group>";
+		};
+		B0C023EFE0C6D7EDAE3E0BED2C637697 /* Support Files */ = {
+			isa = PBXGroup;
+			children = (
+				79A94AE3F2421FC4C4484A739082A5E4 /* FirebaseAnalytics-xcframeworks.sh */,
+				2D96CD6E92D58351B5F3D9E65F11ECE8 /* FirebaseAnalytics.debug.xcconfig */,
+				1A57C2F130634A1883E39E6AB20FC4EC /* FirebaseAnalytics.release.xcconfig */,
+			);
+			name = "Support Files";
+			path = "../Target Support Files/FirebaseAnalytics";
+			sourceTree = "<group>";
+		};
+		B5E206C1C640B24D766EC552AFEDB4A8 /* Frameworks */ = {
+			isa = PBXGroup;
+			children = (
+				3E9D1328D6B1C453F36B1384A2410069 /* GoogleAppMeasurementIdentitySupport.xcframework */,
+			);
+			name = Frameworks;
+			sourceTree = "<group>";
+		};
+		B74AD96E6FDD3909517972E8A73FA624 /* Pods */ = {
+			isa = PBXGroup;
+			children = (
+				AF248F66594FCFFCAF9A801E353167AC /* Alamofire */,
+				48F5ED53B8AA4B72BB291FE9F7ED63BA /* AlamofireNetworkActivityLogger */,
+				277C6379BD4B54901861AA8A4C3CFE68 /* CleverTap-iOS-SDK */,
+				54331EDED9EE27898EF1D382A320B302 /* Firebase */,
+				60CC7FF094BEB2BD837A87E61B5845C2 /* FirebaseAnalytics */,
+				F8214AE3546476BC3D2ED146FD653EC8 /* FirebaseCore */,
+				53A1698F37BB00A284065BE1EE9BF031 /* FirebaseCoreDiagnostics */,
+				13A4ED86717991765D03E77474F06D02 /* FirebaseCrashlytics */,
+				30049AE711397D8183B49FDD6CFCA325 /* FirebaseInstallations */,
+				E74A9ECA497DCEB955EEAA3C93D2C080 /* FirebaseMessaging */,
+				FBF261A12DBE9FBB92E475EC1002FC43 /* FloatingPanel */,
+				00D8C0B4FE9E324985B632324BABBE94 /* GoogleAppMeasurement */,
+				E25E3C76BF34C0D0FB6011532CE5156B /* GoogleDataTransport */,
+				7DF953C73D0075F220369D090FEA5C98 /* GoogleUtilities */,
+				6244BAFAE97BBB4F8D371B4CEB9A80FD /* IQKeyboardManagerSwift */,
+				567B34B1B51C502D981443E4E3836F36 /* nanopb */,
+				931761C858F12AF74F17C18F0A9046D8 /* OTPFieldView */,
+				FC23F47EED8C587E3056A0473B682292 /* Parchment */,
+				B06FD3320D1FCBE14919140A5B51CAC5 /* PromisesObjC */,
+				91AA2B07B334E841CED5665A38015479 /* ScrollingFollowView */,
+				92A0E0782B1B8143031C40F216B12C83 /* SDWebImage */,
+				50DD5A58D993D25478235A3B1F688A9E /* SwiftLint */,
+				F5EB5E54CBA476513D9C30A0AF3FF91A /* SwiftMessages */,
+				CFF4F61E19AE69A8ED2EB73096B4295E /* UserExperior */,
+				340F9F449CB128396FC5A67E7494759B /* XLPagerTabStrip */,
+				5205E6FA7EEBB77871DDF716C0F055BC /* youtube-ios-player-helper */,
+			);
+			name = Pods;
+			sourceTree = "<group>";
+		};
+		B8EDF9C2ECBA6C8E908A5C5B320FD58A /* Resources */ = {
+			isa = PBXGroup;
+			children = (
+				F5D65F0003BE540987A8109BD50F9BB3 /* ButtonCell.xib */,
+			);
+			name = Resources;
+			sourceTree = "<group>";
+		};
+		BAE4CCB452F71A2594EFC54390DA8052 /* Frameworks */ = {
+			isa = PBXGroup;
+			children = (
+				6A91CE4EE2922EF88E5E5B591182F677 /* FirebaseAnalytics.xcframework */,
+			);
+			name = Frameworks;
 			sourceTree = "<group>";
 		};
 		BC0FF307440BCA2C5593C0A8C8DDE1D6 /* Products */ = {
@@ -4794,490 +4809,692 @@
 			name = Products;
 			sourceTree = "<group>";
 		};
-		BE6C01E9E5C4160FB11112A53AB16199 /* Pods */ = {
+		BC5DEC1AF7E635429B4C2449D3575A16 /* Support Files */ = {
 			isa = PBXGroup;
 			children = (
-				1FF2F9F63F65F3102A15351A6B1FD629 /* Alamofire */,
-				C909C885D04CA0D11427BE054FD15743 /* AlamofireNetworkActivityLogger */,
-				67FBBFC2443887619BC43B509F97B9CE /* CleverTap-iOS-SDK */,
-				696363AE4A6C0ACCB9AA9BD9AF33B29B /* Firebase */,
-				804514366A46D4866A335583F7D03C30 /* FirebaseAnalytics */,
-				26E32542C828CBC08E70172B8968EAFA /* FirebaseCore */,
-				6A7327D5A1F703B6A84E1E37F75D4104 /* FirebaseCoreDiagnostics */,
-				31C24E31B4CFF408419D2407AD81B597 /* FirebaseCrashlytics */,
-				EFF120F34679EF8E210B151A976EC486 /* FirebaseInstallations */,
-				EAAA28A22FA3B4D94DED9188B377139E /* FirebaseMessaging */,
-				0BBA6E2F8851F9FD9E23187ED87E0E53 /* FloatingPanel */,
-				CEF54D5A213294D53DF114FE68399CE7 /* GoogleAppMeasurement */,
-				141845FCD020C89A49419B39C83AEAE5 /* GoogleDataTransport */,
-				16DC9CFB034CA68E1B3FB160BF8BA56D /* GoogleUtilities */,
-				70C9D5621F98214873BB41E061DDF0B8 /* IQKeyboardManagerSwift */,
-				F0BA52E68DBD2252A88DC00DC4A183C2 /* nanopb */,
-				9BEF0C5C55CFA7C85AA6C8C565566C82 /* OTPFieldView */,
-				597E69B45C685EDB281BC3F12B7B5F4F /* Parchment */,
-				F55B1138EAF3591419C4C0685780FBEA /* PromisesObjC */,
-				08E8D242FE3CEDCC566E9E54D0A509A4 /* ScrollingFollowView */,
-				4F78A6EA2D69700C3D2F2F9C0117B0E4 /* SDWebImage */,
-				29E55276314CDFF2D253B48EA8F76C90 /* SwiftLint */,
-				AF3959C9A9C4350587076F23D0A95EBE /* SwiftMessages */,
-				9537134D8D181BAD45F7EF5B75924C82 /* UserExperior */,
-				B8D470E90921D53CB931BE01347A1CFB /* XLPagerTabStrip */,
-				2F727AD0122F74A988C86FB5A848BEDE /* youtube-ios-player-helper */,
+				948BF456D345DDC2580E15C319666FF9 /* CleverTap-iOS-SDK.modulemap */,
+				0D369D3DB2F5A175E431A6CAB140ED31 /* CleverTap-iOS-SDK-dummy.m */,
+				80738D8C03065055470B986F4C9B3D56 /* CleverTap-iOS-SDK-Info.plist */,
+				272119F08C8C8ECD80E48DBBA8CC0ECE /* CleverTap-iOS-SDK-prefix.pch */,
+				57163559F68783F9E30DD03AF90F15DF /* CleverTap-iOS-SDK-umbrella.h */,
+				D9FE2F54B4E13E71A4166999F318D7C4 /* CleverTap-iOS-SDK.debug.xcconfig */,
+				6141569F84C571ABF9B039239F6C6330 /* CleverTap-iOS-SDK.release.xcconfig */,
 			);
-			name = Pods;
+			name = "Support Files";
+			path = "../Target Support Files/CleverTap-iOS-SDK";
 			sourceTree = "<group>";
 		};
-		BF8C565EE124BCA2218ECFB53BE6EAD6 /* Support Files */ = {
+		C20D6ED1655A5154985B192BB5DFECE9 /* Support Files */ = {
 			isa = PBXGroup;
 			children = (
-				19FC8042FA6C05FAEDC773916FFACE88 /* Alamofire.modulemap */,
-				00D82DCFAB14F3C6C3A2476170FF3F90 /* Alamofire-dummy.m */,
-				C470E3018E1258C523008B60114D67FC /* Alamofire-Info.plist */,
-				B37F64F4B2E9ACC045B2584EC9AF6819 /* Alamofire-prefix.pch */,
-				7478B459679964B2060A73FD82CD553D /* Alamofire-umbrella.h */,
-				DA76B355DF5E5984BDA6B62B7946621D /* Alamofire.debug.xcconfig */,
-				2869D60F000902691556A7FB4E60F3A0 /* Alamofire.release.xcconfig */,
+				DF6A98DB51B733C6ADBE555BCD8A16F9 /* AlamofireNetworkActivityLogger.modulemap */,
+				619950B07F5483B8EA753C04FF0D08A1 /* AlamofireNetworkActivityLogger-dummy.m */,
+				35FD1E6205D678C18CC82FB4C75E02DF /* AlamofireNetworkActivityLogger-Info.plist */,
+				8E8A2CE3665E75A5871D387ECBACAA80 /* AlamofireNetworkActivityLogger-prefix.pch */,
+				8102A8D65B9F1A3A7029EF28F4200421 /* AlamofireNetworkActivityLogger-umbrella.h */,
+				AA48E61CE0A1CD2E6B046D1E92616989 /* AlamofireNetworkActivityLogger.debug.xcconfig */,
+				72F08C751A42A85DA8A21B237C8BD657 /* AlamofireNetworkActivityLogger.release.xcconfig */,
 			);
 			name = "Support Files";
-			path = "../Target Support Files/Alamofire";
+			path = "../Target Support Files/AlamofireNetworkActivityLogger";
 			sourceTree = "<group>";
 		};
-		C0CD4FBCC88601D2904CE32FC811AE74 /* Network */ = {
+		C28CD13556A7A0DA9EF56665136638B5 /* Network */ = {
 			isa = PBXGroup;
 			children = (
-				ED39822DDB11D20FDE7BD2C5CE635B74 /* GULMutableDictionary.h */,
-				DA2F9D2985A2956174705BDDCB1B872C /* GULMutableDictionary.m */,
-				3F1D6E0E65E4BCB1D7C2CE538B9A1296 /* GULNetwork.h */,
-				9F83A3363A53A1BBB42DC24B4260BD91 /* GULNetwork.m */,
-				373F306F3A6AD2011B55B4BBC9AB0177 /* GULNetworkConstants.h */,
-				0D1F0789315E513FB9DF995FBE4FFD2E /* GULNetworkConstants.m */,
-				41DD0F8FF072A5A436B61567F9493612 /* GULNetworkInternal.h */,
-				608EE03031A94391261EBE3D9545491B /* GULNetworkLoggerProtocol.h */,
-				BFEFAC856E0DF52FE88A00404E496A87 /* GULNetworkMessageCode.h */,
-				85D3CC83CA98FE162EA3DD72E4211C56 /* GULNetworkURLSession.h */,
-				E65F8BCC8F952892C5C595B8E6FB0360 /* GULNetworkURLSession.m */,
+				6504694C431494CC95B4CC310FE30CCC /* GULMutableDictionary.h */,
+				8808DA65E8A631593F1599A3A28505DF /* GULMutableDictionary.m */,
+				CD7914D44479CE4E2EDFC7E1F48DEB1A /* GULNetwork.h */,
+				7CE80FB43381B929002E704471D37209 /* GULNetwork.m */,
+				F130B5FA55ABF6D4CF62A78EFC8861DE /* GULNetworkConstants.h */,
+				DF86B36F1AC668226F3955B575CE887F /* GULNetworkConstants.m */,
+				8A41C3706BB80D823399D02A6F597B1A /* GULNetworkInternal.h */,
+				4C58FF3F13881534CA9253878358C58B /* GULNetworkLoggerProtocol.h */,
+				A26D4BCC11F327801F3D688FCB65EB65 /* GULNetworkMessageCode.h */,
+				F8B9927BEC8338FECDDA5F60E9E79AA6 /* GULNetworkURLSession.h */,
+				FD4FDC395E0B9DEA8DD00B4870E94874 /* GULNetworkURLSession.m */,
 			);
 			name = Network;
 			sourceTree = "<group>";
 		};
-		C909C885D04CA0D11427BE054FD15743 /* AlamofireNetworkActivityLogger */ = {
+		CF1408CF629C7361332E53B88F7BD30C = {
 			isa = PBXGroup;
 			children = (
-				0A25FC948B0CA0350AB1C031E15562D7 /* NetworkActivityLogger.swift */,
-				424CD77D9278EEE42AD770494006BB4B /* Support Files */,
+				9D940727FF8FB9C785EB98E56350EF41 /* Podfile */,
+				0656CE04288357F0748AB498835BA03E /* Frameworks */,
+				B74AD96E6FDD3909517972E8A73FA624 /* Pods */,
+				BC0FF307440BCA2C5593C0A8C8DDE1D6 /* Products */,
+				A5052071FC788C08A116FE3BF339B4FE /* Targets Support Files */,
 			);
-			name = AlamofireNetworkActivityLogger;
-			path = AlamofireNetworkActivityLogger;
 			sourceTree = "<group>";
 		};
-		CB66A891E39B2FFE5A6DA0E83E8BEBBD /* Resources */ = {
+		CFF4F61E19AE69A8ED2EB73096B4295E /* UserExperior */ = {
 			isa = PBXGroup;
 			children = (
-				197B7BB8FC6159F2916743A71E84FE38 /* CleverTapInboxViewController.xib */,
-				1E8F7E9683EC85A353E6A2D960C718FE /* ct_default_audio.png */,
-				A63AEC1C2E0D76A49C48A3240D09D990 /* ct_default_landscape_image.png */,
-				CEE2A726663496696FAFCE61E0F49D7C /* ct_default_portrait_image.png */,
-				B7D97B13EA1201A430CC35B10031F9E4 /* ct_default_video.png */,
-				1687117408592C51A70B7734E3083D1F /* ct_volume_off.png */,
-				200832C7B78074291D668223B58E2745 /* ct_volume_on.png */,
-				A1690915CAB67426ADBE1E58443062FA /* CTCarouselImageMessageCell~land.xib */,
-				6FF9465C0188F8F49650CC14A2326B29 /* CTCarouselImageMessageCell~port.xib */,
-				97E7A867A0C5A6EFF322E9C95D2B3E34 /* CTCarouselImageView.xib */,
-				C37742B99752EFDAFF2B53668ADEAF2F /* CTCarouselMessageCell~land.xib */,
-				1B376A169C2C9346A1F123BFA20999AF /* CTCarouselMessageCell~port.xib */,
-				C60C0C18E077BEEE2296990DFB3B1B4E /* CTCoverImageViewController~ipad.xib */,
-				A1D929390EEA9740F8803DE24F7349E6 /* CTCoverImageViewController~ipadland.xib */,
-				11822A28AB3249915A6B6BCA0F5FC6B3 /* CTCoverImageViewController~iphoneland.xib */,
-				430FA928F00CC2633F77922456A8E440 /* CTCoverImageViewController~iphoneport.xib */,
-				5118A213EEE546D5223ED8065CAEB551 /* CTCoverViewController~ipad.xib */,
-				3371FB9572DC79D6092E8EA2966E32F4 /* CTCoverViewController~ipadland.xib */,
-				EE8353BB4CED7EE28A6D74B1B88C3FDC /* CTCoverViewController~iphoneland.xib */,
-				FE3B6310BAA07BE172FBD66C3A384198 /* CTCoverViewController~iphoneport.xib */,
-				494532F32B9EAFC1A885A73004BD5824 /* CTFooterViewController~ipad.xib */,
-				F03D1D75E30F1EB86C730B3A06BF856B /* CTFooterViewController~ipadland.xib */,
-				8E3EA6A4C5E939BD5B8B625072B294BD /* CTFooterViewController~iphoneland.xib */,
-				BCB9FED070EBA3AE0A9A26634E70DF3D /* CTFooterViewController~iphoneport.xib */,
-				9F896A2A324137945198575DF2E0A9FC /* CTHalfInterstitialImageViewController~ipad.xib */,
-				C7CF2A927325D677C74A1252DDF9DBD8 /* CTHalfInterstitialImageViewController~ipadland.xib */,
-				342FF1566987BBE67A0F59D9B7AFC4EF /* CTHalfInterstitialImageViewController~iphoneland.xib */,
-				8BB27E0FAEF358C73C44E246A95F64E9 /* CTHalfInterstitialImageViewController~iphoneport.xib */,
-				FFCE3B4C1AD94A4B30E060714B379D98 /* CTHalfInterstitialViewController~ipad.xib */,
-				22123EE5D81D9E7216828BBB359EDC27 /* CTHalfInterstitialViewController~ipadland.xib */,
-				4BEF43BEE7C4737B19FAE66E56E70FB3 /* CTHalfInterstitialViewController~iphoneland.xib */,
-				DD30F537378C78C3D61A5A10F3CC7F37 /* CTHalfInterstitialViewController~iphoneport.xib */,
-				0C05F0670F7C2D8BD68C978389E33058 /* CTHeaderViewController~ipad.xib */,
-				81EA77B4B64C7968F7A0FD180FFD7D4C /* CTHeaderViewController~ipadland.xib */,
-				EFA666B5436B5E71B1D5A5063F8965FA /* CTHeaderViewController~iphoneland.xib */,
-				D03FA28EAB024423FFA09524FD4C3883 /* CTHeaderViewController~iphoneport.xib */,
-				C0CF7C5E30B8C78F191D582B90DE7343 /* CTInboxIconMessageCell~land.xib */,
-				886CF9E5C57438EB2106F241D558079D /* CTInboxIconMessageCell~port.xib */,
-				CB1A77E88850B1D902F3CDBA6571B7B3 /* CTInboxSimpleMessageCell~land.xib */,
-				72E371F001BD53415EBBBC968629B4D4 /* CTInboxSimpleMessageCell~port.xib */,
-				BAB569F16D887D6DEB7F3A98EC7BA03B /* CTInterstitialImageViewController~ipad.xib */,
-				1A90B298AF9187CAEBD82971511622CE /* CTInterstitialImageViewController~ipadland.xib */,
-				8FFA1950443624F29BFE8CE349AF2194 /* CTInterstitialImageViewController~iphoneland.xib */,
-				54589BA49F7AF676119E363B14005BCD /* CTInterstitialImageViewController~iphoneport.xib */,
-				C890FDEF500580702ADB2DB8913765BC /* CTInterstitialViewController~ipad.xib */,
-				E69FED45813A1900B4D7E59A87AE735A /* CTInterstitialViewController~ipadland.xib */,
-				600B020B6BEF83E761CD90700477B952 /* CTInterstitialViewController~iphoneland.xib */,
-				59A17B0CE021306CF92FDB0B37E41F05 /* CTInterstitialViewController~iphoneport.xib */,
-				DA358F561373EA86A3B359CEB7151769 /* DigiCertGlobalRootCA.crt */,
-				7296C85693271B7CC3B4BC37EFD1D153 /* DigiCertSHA2SecureServerCA.crt */,
-				9CE7D8469085D78E3DA0B99485AA8A92 /* ic_pause@1x.png */,
-				A9269AF6ACD3357BB517C432FC6D83FA /* ic_pause@2x.png */,
-				7DFF0FF2D841C95E0AC41E9B97CB3442 /* ic_pause@3x.png */,
-				8F816475B58D1FC1B234E73F3A8AEE18 /* ic_play@1x.png */,
-				A3BF925A217EFA01ED33C93857697B46 /* ic_play@2x.png */,
-				1770BA0138EBB11CE80BFC78F2D52859 /* ic_play@3x.png */,
-				812794DF8600DAFEC7A4F2CCBB8C8ADB /* Inbox.xcdatamodeld */,
+				A83B33A4F2F193033D6E5994CECA1393 /* Frameworks */,
+				39E4FBAAADB3F974654316F0F0C17C19 /* Support Files */,
 			);
-			name = Resources;
+			name = UserExperior;
+			path = UserExperior;
 			sourceTree = "<group>";
 		};
-		CEF54D5A213294D53DF114FE68399CE7 /* GoogleAppMeasurement */ = {
+		E25E3C76BF34C0D0FB6011532CE5156B /* GoogleDataTransport */ = {
 			isa = PBXGroup;
 			children = (
-				BB39A8DAC6FB0FC2B1F252B1BDC5C43C /* AdIdSupport */,
-				89669CD6E214D6B3BAB82485BAF86030 /* Support Files */,
+				F84F68DCC4A2960956D200031AB77072 /* cct.nanopb.c */,
+				A3F272AA1CDC6BB1DB55A0BC7BF90BED /* cct.nanopb.h */,
+				186BC538B6E17052FFAEE93AA20E3243 /* GDTCCTCompressionHelper.h */,
+				4F049D6AD2EEAF811F6FC75FB21501C0 /* GDTCCTCompressionHelper.m */,
+				32711DB6DC148C7BE5A985A1B84DBF29 /* GDTCCTNanopbHelpers.h */,
+				18C62BAC207A85F82B6941F737B372A4 /* GDTCCTNanopbHelpers.m */,
+				8812E545356454B705FC9AE2141F5087 /* GDTCCTUploader.h */,
+				20F7A70C7B17835EC9792A2A2599997C /* GDTCCTUploader.m */,
+				FC739BB479ECE278ADF62E3AB2B172F0 /* GDTCCTUploadOperation.h */,
+				2D9E463C6F51026E0E48327FF4B620C6 /* GDTCCTUploadOperation.m */,
+				91F1F6539E33D21751BDD85CA7734F83 /* GDTCORAssert.h */,
+				E8DDAD2F17B7C00DF059F1921AFDE4F8 /* GDTCORAssert.m */,
+				C0BD82E7C8294EF017901B2316BEEE88 /* GDTCORClock.h */,
+				92501A38D36200C2F9623F245A4788FC /* GDTCORClock.m */,
+				B1505782C0A2D38796E5A6A7D4D5C73F /* GDTCORConsoleLogger.h */,
+				09435066C35E748BC86C398CFD9DA55C /* GDTCORConsoleLogger.m */,
+				296BCCE94D73479E627E75B11EA8C8B5 /* GDTCORDirectorySizeTracker.h */,
+				AE458D12347582753E6CDBB2F7FF70A3 /* GDTCORDirectorySizeTracker.m */,
+				0564512CD2B0BD6F86FF104DEF8F6D1C /* GDTCOREndpoints.h */,
+				D0E54EAA84E9AF21B7CAEADA3970A99E /* GDTCOREndpoints.m */,
+				0CC4C350AA4CA1D6AE47768675A838EC /* GDTCOREndpoints_Private.h */,
+				542EC7867C0E5DE2E34AD904FB677276 /* GDTCOREvent.h */,
+				17766849ABC4CA67FEE2299ACD1F263E /* GDTCOREvent.m */,
+				8127F67ED29059568E5D4EBA4FACC4BD /* GDTCOREvent+GDTCCTSupport.h */,
+				671EA038B2ED1401F11F037F7726F0DF /* GDTCOREvent+GDTCCTSupport.m */,
+				0771BF78DC0FB1E3985133A9EFD34483 /* GDTCOREvent_Private.h */,
+				2A339A5997A36DAE10D9112B1E8F2F1B /* GDTCOREventDataObject.h */,
+				11E74AE378217B59F28F9B33D336E63E /* GDTCOREventTransformer.h */,
+				C7F444D81C9CEEE2EE13AD0066222860 /* GDTCORFlatFileStorage.h */,
+				FC93A0A8DF4A56459DD6232B5715ACEB /* GDTCORFlatFileStorage.m */,
+				239E3D57A3C472059A5752A8DB6F765A /* GDTCORFlatFileStorage+Promises.h */,
+				5F7D3570204556D6137073AEBE000B7D /* GDTCORFlatFileStorage+Promises.m */,
+				C4750A50AB35D04BA2071B618556D64D /* GDTCORLifecycle.h */,
+				60AE513218F5D3AFFCA9792B8C2E9EF0 /* GDTCORLifecycle.m */,
+				49B4D2364E14E9F24589A34EC36BD058 /* GDTCORPlatform.h */,
+				A43F9351E9C47590B5DF954F3C5E1725 /* GDTCORPlatform.m */,
+				976E2ECDF89D2C0F32FE82DF42FE4AB4 /* GDTCORReachability.h */,
+				29B195C5CC4D32A049CE478854EC49A9 /* GDTCORReachability.m */,
+				DC28A7FFF68840F0B0052ADE81499CE3 /* GDTCORReachability_Private.h */,
+				8FF77F66E3D37F506ECB88297BFA161D /* GDTCORRegistrar.h */,
+				5E6298C4E04D5D0B2217D19E4F507CE2 /* GDTCORRegistrar.m */,
+				57FFEE15C4926B4C90AA9266F3A43B63 /* GDTCORRegistrar_Private.h */,
+				8898492117477E7A71AE31CC32DE347D /* GDTCORStorageEventSelector.h */,
+				169518FA227FE4644FA62E929600D37C /* GDTCORStorageEventSelector.m */,
+				3C40F43FAB313E440EEBCD7923F50347 /* GDTCORStorageProtocol.h */,
+				BBE02FF646366491B61386699D63DF3A /* GDTCORTargets.h */,
+				AD751BE1E4CDEB38E77F14C092DD8DD3 /* GDTCORTransformer.h */,
+				D21C8CFE4842E7FB10D16A900903D0A0 /* GDTCORTransformer.m */,
+				994F5CD467B359E644267D90E1B1D5D3 /* GDTCORTransformer_Private.h */,
+				C727E9EAA23402382A843AF24F8DCF95 /* GDTCORTransport.h */,
+				44D5F7F23986E9B54D33105C833692FA /* GDTCORTransport.m */,
+				95F4F21376B82FD388597D5D7E11A69B /* GDTCORTransport_Private.h */,
+				B1E93004743319B728BB3C3E2A8B8D85 /* GDTCORUploadBatch.h */,
+				8C1250CF093D3709E588E88E530AE8F6 /* GDTCORUploadBatch.m */,
+				191046A623EC8FB55D720900BDE2B4F4 /* GDTCORUploadCoordinator.h */,
+				C1A6B0C42A8EB5133836DFA9B74A9919 /* GDTCORUploadCoordinator.m */,
+				A47CFCE9015FE2C414EF3BD4BF724756 /* GDTCORUploader.h */,
+				29F45F731D1185D4B2B51E432440D735 /* GoogleDataTransport.h */,
+				881785582C8CC54CE242215A9B30F7E0 /* Support Files */,
 			);
-			name = GoogleAppMeasurement;
-			path = GoogleAppMeasurement;
+			name = GoogleDataTransport;
+			path = GoogleDataTransport;
 			sourceTree = "<group>";
 		};
-		CF1408CF629C7361332E53B88F7BD30C = {
+		E3A8A4B74527CD3CD15F4248F7A389BF /* decode */ = {
 			isa = PBXGroup;
 			children = (
-				9D940727FF8FB9C785EB98E56350EF41 /* Podfile */,
-				0656CE04288357F0748AB498835BA03E /* Frameworks */,
-				BE6C01E9E5C4160FB11112A53AB16199 /* Pods */,
-				BC0FF307440BCA2C5593C0A8C8DDE1D6 /* Products */,
-				A5052071FC788C08A116FE3BF339B4FE /* Targets Support Files */,
 			);
+			name = decode;
 			sourceTree = "<group>";
 		};
-		CF51CAE0AC50E584523ABFF31A22413D /* Support Files */ = {
+		E3FF732F3DC9D1B6A4A4383B22CE5F16 /* Support Files */ = {
 			isa = PBXGroup;
 			children = (
-				623568BEFCE289FC6807E0458B0830DB /* GoogleDataTransport.modulemap */,
-				84ACC7C4B995CDEB3D9D4E3EEF718793 /* GoogleDataTransport-dummy.m */,
-				80AB4406E8DA952BD699B38D9C8237A1 /* GoogleDataTransport-Info.plist */,
-				2C07C49245E9E8019D4059371FE7FA9D /* GoogleDataTransport-umbrella.h */,
-				E0D1A70146C42F031269B74235A89D6C /* GoogleDataTransport.debug.xcconfig */,
-				B4E0A4E0D393D02C6B63DEF41C47BCCB /* GoogleDataTransport.release.xcconfig */,
+				F3448DEF6CFEB209D3D5D467A731B213 /* youtube-ios-player-helper.modulemap */,
+				D9C123DC209A3AA01A0AE43A9CF5A44D /* youtube-ios-player-helper-dummy.m */,
+				51490CA5355B9B219A0C923442B642EC /* youtube-ios-player-helper-Info.plist */,
+				50DC733DEE4D98F8042737E72D57C1A6 /* youtube-ios-player-helper-prefix.pch */,
+				CD124BEBF5B56CF682F73506F5A5D258 /* youtube-ios-player-helper-umbrella.h */,
+				9F8F17918E912696D4D5EB546D0C2D14 /* youtube-ios-player-helper.debug.xcconfig */,
+				3C7D6FF73609CD3D6750C37CD16EC3D5 /* youtube-ios-player-helper.release.xcconfig */,
 			);
 			name = "Support Files";
-			path = "../Target Support Files/GoogleDataTransport";
+			path = "../Target Support Files/youtube-ios-player-helper";
 			sourceTree = "<group>";
 		};
-		D3AE754AB36C0ACAEB954BA6AA39B69B /* Reachability */ = {
+		E44DBAA76FE29E2FD355E1CFDAD5D981 /* Resources */ = {
 			isa = PBXGroup;
 			children = (
-				BA0DF4012A80B1DCC3B101C6A9A0963C /* GULReachabilityChecker.h */,
-				DF0E987A139B78C7B92480381B799F31 /* GULReachabilityChecker.m */,
-				C6759E39ED9C04C430EFF0CDC2C3F35D /* GULReachabilityChecker+Internal.h */,
-				FB2D0E09FA88BE3AB95F94333DF76A4B /* GULReachabilityMessageCode.h */,
+				5A62EE8BDBCB74A29388D5E8860AAF62 /* CardView.xib */,
+				822399CFB5FC8428DC3EE2286B7DB9B0 /* CenteredView.xib */,
+				F67B75C703FC4FA4EF6D45C2B0D2DDA9 /* errorIcon.png */,
+				2FDB4306972569BE0F827037274207D7 /* errorIcon@2x.png */,
+				4A6EBB8F119B3054BE6427E05058C6A6 /* errorIcon@3x.png */,
+				78101452E375C73DC363DFB7A00D9F9E /* errorIconLight.png */,
+				ECD534B0F133A4B7A05BD37B7CE0663B /* errorIconLight@2x.png */,
+				48992D6CB52E93F6FA9C68F8766CFC81 /* errorIconLight@3x.png */,
+				B46F1CF71B02E779BE0CE538EE606D5E /* errorIconSubtle.png */,
+				B0F63AA0457B4688CB2AED57F4A199D4 /* errorIconSubtle@2x.png */,
+				CC03923835F8DBECFA9DE8B7A62ABC5C /* errorIconSubtle@3x.png */,
+				DFCC6FE0A3CF1DE8539E5EDF04AED321 /* infoIcon.png */,
+				E467DB19A774982C87B9D225D6F14A12 /* infoIcon@2x.png */,
+				02521464FADA2CBC40ADF7E9615C7444 /* infoIcon@3x.png */,
+				DFFCF93529BF6801ED96C5666EF449E6 /* infoIconLight.png */,
+				C38C87978E84A87BC1DC43B13AB2624D /* infoIconLight@2x.png */,
+				8FCF6F6EA2F77476F21C81B459D196CB /* infoIconLight@3x.png */,
+				250ED9616B8844969FB62C9CA4AFAB72 /* infoIconSubtle.png */,
+				03722917D809BDDB44DD062A7C300854 /* infoIconSubtle@2x.png */,
+				2F7ECA76DC2FE37F1233B7CFE835BD6D /* infoIconSubtle@3x.png */,
+				5998C2E65EB243AC008B30FB9E66E1D5 /* MessageView.xib */,
+				224D83CCD5194BDED744F2EEB93777D0 /* StatusLine.xib */,
+				B4E337745488943D7696563EB4F0728D /* successIcon.png */,
+				AE2AEC160DD5E5B784415F2C907626DA /* successIcon@2x.png */,
+				1FD2A88FDDD9529AE715525D297E848E /* successIcon@3x.png */,
+				B70D7C55A7F1473AFCB7F80BFE6962C1 /* successIconLight.png */,
+				29E655228567173E6CF4113FF66D3F66 /* successIconLight@2x.png */,
+				B26F7C70C74DDE71441AA961279A3DF5 /* successIconLight@3x.png */,
+				FD6C74CF3087016A3C69D31D7AFD74CD /* successIconSubtle.png */,
+				548B9AE5A9B717FC7AA8567D4F0F8B05 /* successIconSubtle@2x.png */,
+				C9F5C546497A4DC863BCC2A91FC316E2 /* successIconSubtle@3x.png */,
+				83EF2DBF3BF501A477ABF7E255C8603B /* TabView.xib */,
+				F456774B3F44E37DD150156D7FB38339 /* warningIcon.png */,
+				D8AAA026E03241ECAA98E46CAEAEB9A4 /* warningIcon@2x.png */,
+				130DE1D96761C621230D2126DE698ED2 /* warningIcon@3x.png */,
+				A01003C443CE67BA354A21DF52151C37 /* warningIconLight.png */,
+				52682AD0B63497B536C42A85B469CD47 /* warningIconLight@2x.png */,
+				EEBC24ADD24050B7EE7CC4428E941A02 /* warningIconLight@3x.png */,
+				C5FD8C023790B090F07FB6E3DE8B7339 /* warningIconSubtle.png */,
+				5DDB004CA87387B8317BFF5604824FAD /* warningIconSubtle@2x.png */,
+				C72920E33F894FB94F1FFF84A4CC61FC /* warningIconSubtle@3x.png */,
 			);
-			name = Reachability;
+			name = Resources;
 			sourceTree = "<group>";
 		};
-		D9B97072B9A27D8A02C6F5425E9FD399 /* Support Files */ = {
+		E5C65288C13DD18ECD8CD8B0CD79AB70 /* Support Files */ = {
 			isa = PBXGroup;
 			children = (
-				734412A5601575FC3BC84B4C15737BD1 /* CleverTap-iOS-SDK.modulemap */,
-				4C9CDC8AB4B8CB49529F37327E067FBB /* CleverTap-iOS-SDK-dummy.m */,
-				AA19817919F2E81C16D4B120B5D2EB8E /* CleverTap-iOS-SDK-Info.plist */,
-				58A2AB02C45888EC65FAFB7AC034CB45 /* CleverTap-iOS-SDK-prefix.pch */,
-				788BA2FFC52FB77B68DE39E6C6E19DFB /* CleverTap-iOS-SDK-umbrella.h */,
-				41C7DA87FA9C48BD5ED37C5DCD679A3B /* CleverTap-iOS-SDK.debug.xcconfig */,
-				4BFFF20F126AAB703185FAB8B2187E6E /* CleverTap-iOS-SDK.release.xcconfig */,
+				5E59B2F7A16BB657DE329E113DE876A3 /* GoogleAppMeasurement-xcframeworks.sh */,
+				70AF0E4133E987AE5B9977ECB06AE6F3 /* GoogleAppMeasurement.debug.xcconfig */,
+				599B93267E755F9D67A5E2A9BD32FF8C /* GoogleAppMeasurement.release.xcconfig */,
 			);
 			name = "Support Files";
-			path = "../Target Support Files/CleverTap-iOS-SDK";
+			path = "../Target Support Files/GoogleAppMeasurement";
 			sourceTree = "<group>";
 		};
-		DD9D3E24A0AA49C36391685E754025D7 /* Support Files */ = {
+		E6DC660AFF482E0C7850C7FB0C948840 /* Support Files */ = {
 			isa = PBXGroup;
 			children = (
-				5F28ED8B8211559E1FD9AD39565510D7 /* GoogleUtilities.modulemap */,
-				478AF7FF9C8A5D2CDA6C0BA25D966DF2 /* GoogleUtilities-dummy.m */,
-				C7ABB3B35D529DDDF5D476CBCF50A8A1 /* GoogleUtilities-Info.plist */,
-				B654495B8C321B40B2AE97E9B2504B93 /* GoogleUtilities-umbrella.h */,
-				2E6BEEE2EB5BF2E73100EF7C95C7FE73 /* GoogleUtilities.debug.xcconfig */,
-				F9C57736D06F9088DF305CDF806A810C /* GoogleUtilities.release.xcconfig */,
+				5A93F73CD114DF4B5C0556016C6AB4F2 /* FirebaseInstallations.modulemap */,
+				3BDAE877776519BED573C6A61454DBAB /* FirebaseInstallations-dummy.m */,
+				CE21A19BFABD6C4E401E715605525B6B /* FirebaseInstallations-Info.plist */,
+				FD2AFFB406C273817478293CBFD60C18 /* FirebaseInstallations-umbrella.h */,
+				D0211FE662A3AF061E9B1EBB2E5DE567 /* FirebaseInstallations.debug.xcconfig */,
+				020B5BB06D51D48F53BD44F5526AC5B0 /* FirebaseInstallations.release.xcconfig */,
 			);
 			name = "Support Files";
-			path = "../Target Support Files/GoogleUtilities";
+			path = "../Target Support Files/FirebaseInstallations";
 			sourceTree = "<group>";
 		};
-		EAAA28A22FA3B4D94DED9188B377139E /* FirebaseMessaging */ = {
+		E74A9ECA497DCEB955EEAA3C93D2C080 /* FirebaseMessaging */ = {
 			isa = PBXGroup;
 			children = (
-				6AAC36F3447A9CDE86ED9FF19479634C /* FIRAnalyticsInterop.h */,
-				ADAC7B9405416991D09BC5EF42580E9B /* FIRAnalyticsInteropListener.h */,
-				DB16176E51887E85DFDFD01A43852722 /* FIRAppInternal.h */,
-				66771A7B5101D0CE83D1385C5359480C /* FIRComponent.h */,
-				15363AA9CDA2D555A3610017BC9EB631 /* FIRComponentContainer.h */,
-				A8337D8F717E66217894DE6286F19AC3 /* FIRComponentType.h */,
-				CF9864D521D729623F0DA726CD7534C3 /* FIRCoreDiagnosticsConnector.h */,
-				8E137D34CAA621220F816A7EAC7F3BA4 /* FIRDependency.h */,
-				BD81C09B15F101B235C2A45BEE1339E7 /* FirebaseCoreInternal.h */,
-				DBB4B40B6951F0E68B1940FC566C4336 /* FirebaseInstallationsInternal.h */,
-				1E611AA309EDC5CFFCBAAD9EA043A664 /* FirebaseMessaging.h */,
-				787117CA07066D83A09EE6DE395463B4 /* FirebaseMessaging.h */,
-				C02D5C472AFAD6490490FF1B3B5284F7 /* FIRHeartbeatInfo.h */,
-				C620389BB7A48EF31C6FD9C566AA2C5B /* FIRInteropEventNames.h */,
-				1E68EAA033829DAE37615FC8B4827292 /* FIRInteropParameterNames.h */,
-				AC18EF964D0806F4B56484C581F4B44E /* FIRLibrary.h */,
-				3B71F2C80874929D7CA6017610BEB67F /* FIRLogger.h */,
-				2B245B41F35E16A534CBDCB35B0EAE13 /* FIRMessaging.h */,
-				73E1E591BBC89BEF65FF38624D19D85A /* FIRMessaging.m */,
-				8BAD1FD418AE2B2DA06B844E1B9EF9A7 /* FIRMessaging_Private.h */,
-				28B09390DE866603BDDD1128649CDA85 /* FIRMessagingAnalytics.h */,
-				4D298BB1CA2DE09E32B418233BE7937F /* FIRMessagingAnalytics.m */,
-				FEBD8D37764E82F6AB1BE50139F0B555 /* FIRMessagingAPNSInfo.h */,
-				EAFED567036441E98202813C3610FDA8 /* FIRMessagingAPNSInfo.m */,
-				DED4985C501479E8B3D2DC9E801396CD /* FIRMessagingAuthKeychain.h */,
-				63F8DEBB4968FAE12A41DCACEC1D98B6 /* FIRMessagingAuthKeychain.m */,
-				319578FC42AA3E4CC50DCD0C1E28F2B1 /* FIRMessagingAuthService.h */,
-				47650F4BCF10EBC67DD13D2DC656C74A /* FIRMessagingAuthService.m */,
-				9B30BE11411E25C5FB9070D4F7E9137D /* FIRMessagingBackupExcludedPlist.h */,
-				FAEEC09AD67161899ECE61B427DD4836 /* FIRMessagingBackupExcludedPlist.m */,
-				906EFA98705B9C2B9A78A45F348042D2 /* FIRMessagingCheckinPreferences.h */,
-				216F961413BA124B8A75C8DD36349352 /* FIRMessagingCheckinPreferences.m */,
-				5D0460FD32FF65CA5139639F0B129CE0 /* FIRMessagingCheckinService.h */,
-				A11D908D175E3FC81E1F5B7F01245C4E /* FIRMessagingCheckinService.m */,
-				E102DD3A26330F6A315AC46087129022 /* FIRMessagingCheckinStore.h */,
-				79216AD063CE4AB3746D04BD07507CEE /* FIRMessagingCheckinStore.m */,
-				D70FE2AC0A0E1663BC33C50E0B845CA7 /* FIRMessagingCode.h */,
-				96257BCB5C5DB41B65B014FE0D82A428 /* FIRMessagingConstants.h */,
-				065DA9EA9DC0F1ABC97DDEFEB638FC7C /* FIRMessagingConstants.m */,
-				2AFA75272A21F9BF924A76DEA8F4E703 /* FIRMessagingContextManagerService.h */,
-				0568F5C76BE7FEF277A5FF3FE8CCF5C9 /* FIRMessagingContextManagerService.m */,
-				D6BC3392382DB86F65077FE969D3233B /* FIRMessagingDefines.h */,
-				C3954D0B6904DE628FC5CA3EA946EDB4 /* FIRMessagingExtensionHelper.h */,
-				7F54A22CBA30E804ABDBB1B07783A24A /* FIRMessagingExtensionHelper.m */,
-				838417595BF002594868A1A0F6583C4D /* FIRMessagingInterop.h */,
-				A0805FE6455F77E9327129188255ABF4 /* FIRMessagingKeychain.h */,
-				612C46F450B1E0AE94D55C97AB701096 /* FIRMessagingKeychain.m */,
-				7D190753A1EA146A856C3ACAD5C5AB09 /* FIRMessagingLogger.h */,
-				BF56C48CA3C04A987EF9C7987B2293BF /* FIRMessagingLogger.m */,
-				6DCCDC46DEF12922D6A1A8D58F6C2AF8 /* FIRMessagingPendingTopicsList.h */,
-				3E75295555D002A00EC336DA1AEF1C8A /* FIRMessagingPendingTopicsList.m */,
-				FB21D5B0FB4BAC9A316B9E8F5524CD89 /* FIRMessagingPersistentSyncMessage.h */,
-				484B224EB43646D7F1BD4A603A864213 /* FIRMessagingPersistentSyncMessage.m */,
-				366919397B339D1A3F7F79FBDDDCC298 /* FIRMessagingPubSub.h */,
-				9485D23C14C2058CF4E4AF7EDCC063B3 /* FIRMessagingPubSub.m */,
-				107B92BA5DCEFAF2424A82E5906DDFF3 /* FIRMessagingRemoteNotificationsProxy.h */,
-				8BEFB5D072EBDBECDC26E36B44F2380C /* FIRMessagingRemoteNotificationsProxy.m */,
-				354E7C97250C40109A07600886EB506E /* FIRMessagingRmqManager.h */,
-				02C83CDF1FFE1D5CACA77878723C29E0 /* FIRMessagingRmqManager.m */,
-				D8BB2E0F0D297231C1A2BD3CA4EFA86F /* FIRMessagingSyncMessageManager.h */,
-				BD77FD8C7229889F47A4D79803F59DD7 /* FIRMessagingSyncMessageManager.m */,
-				11C58EB6A1D7F90552CDE72AE878650E /* FIRMessagingTokenDeleteOperation.h */,
-				9697FCED8695506B1265039952431D29 /* FIRMessagingTokenDeleteOperation.m */,
-				FEE2EB4FA78F37BEAA281ADBF2ED4FB1 /* FIRMessagingTokenFetchOperation.h */,
-				7C6A77E0314D89B6181E54CB5B13AB86 /* FIRMessagingTokenFetchOperation.m */,
-				CA5ED9824AB0FE290C87D118069781E3 /* FIRMessagingTokenInfo.h */,
-				37E58D7C9FE14AB3F244215D21B01804 /* FIRMessagingTokenInfo.m */,
-				AAE91F7E2427CD3DDF06C37A54FAD248 /* FIRMessagingTokenManager.h */,
-				9B6C75A8F843B49C51FCC12222980977 /* FIRMessagingTokenManager.m */,
-				0D1210CD4467F65AA89320DE34C5172D /* FIRMessagingTokenOperation.h */,
-				60BE1FD4AB219B8E426667EA69952754 /* FIRMessagingTokenOperation.m */,
-				2286CA42354B47E62C8FBE0AF967D912 /* FIRMessagingTokenStore.h */,
-				67BC23996785C855441EC0991B0E75A8 /* FIRMessagingTokenStore.m */,
-				21E37EFF498D5C1D33DE43B7504C78DE /* FIRMessagingTopicOperation.h */,
-				78F72047CE712C88DD51E6474A146423 /* FIRMessagingTopicOperation.m */,
-				EF04EBC3BD1D5436E2C93D6B1F1EFAB2 /* FIRMessagingTopicsCommon.h */,
-				5C4F756CD1EB9EB5C132FB36C1496634 /* FIRMessagingUtilities.h */,
-				5B2ADC9FFFE49A441972C3719ECC4ACC /* FIRMessagingUtilities.m */,
-				3734099B3F815C203E502344F9569CAD /* FIROptionsInternal.h */,
-				21A794A38BB85FB8DA2ABCE897C6D44C /* me.nanopb.c */,
-				3DE83F4A4E88CA8BA2E013FE016BE1CE /* me.nanopb.h */,
-				912E04A442516622BB0AE2A760CEC600 /* NSDictionary+FIRMessaging.h */,
-				A74EC733D269CAF01282AD1095F5743D /* NSDictionary+FIRMessaging.m */,
-				379891073BF4054C98867F6316762BD0 /* NSError+FIRMessaging.h */,
-				71ED1C30791BC819A46E74CADCCEA730 /* NSError+FIRMessaging.m */,
-				92723FA238D0CD9EC6387779F4F86877 /* Support Files */,
+				78BDDDD68F7B11012F2AC398E69730A0 /* FIRAnalyticsInterop.h */,
+				EA3724F59CC3A9F721E4AD40D3A31EB1 /* FIRAnalyticsInteropListener.h */,
+				904B9657904509D35CC8C93DC541F3F8 /* FIRAppInternal.h */,
+				24F31D628967F2301B998C33C6DADD56 /* FIRComponent.h */,
+				2DA4EFCC70D9C0404923E60E2CC2F2B2 /* FIRComponentContainer.h */,
+				69721EDA49271D9D092FD451A5FA13D5 /* FIRComponentType.h */,
+				0DED65E99D33AA6B3972850BE508F796 /* FIRCoreDiagnosticsConnector.h */,
+				D0F318D8AFA2870D8A87CF0BD4FB6612 /* FIRDependency.h */,
+				1A9D29D53F9B58E97CB18081989D3AF1 /* FirebaseCoreInternal.h */,
+				C6DD4783B189B50343A77AB941BB4BB6 /* FirebaseInstallationsInternal.h */,
+				5D5617CF4F2792AC7D8984514042DC6A /* FirebaseMessaging.h */,
+				1DFFA7DA4F922EA77956124FC176D320 /* FirebaseMessaging.h */,
+				F3B3ECD4F063AD3F66C7D14C3D442F59 /* FIRHeartbeatInfo.h */,
+				1697729317EED4E2BC4476F73552DE1B /* FIRInteropEventNames.h */,
+				9A7C79C9C27E5C3E4C0171376F3F20D4 /* FIRInteropParameterNames.h */,
+				BB986A7CD435F5F2CD388CADC8B6C1D3 /* FIRLibrary.h */,
+				83B46FCF91548D15150A98E66F009016 /* FIRLogger.h */,
+				2AB3B59068B5A070B1148F92011D7D88 /* FIRMessaging.h */,
+				992383111143FE844CF9DE6025C34787 /* FIRMessaging.m */,
+				24F35EB99999F6E64B350D4AD295382E /* FIRMessaging_Private.h */,
+				7450D9CE4694B6A115DBC5294D2B733B /* FIRMessagingAnalytics.h */,
+				A6E6DCF68C06096E3487C0F36AD38851 /* FIRMessagingAnalytics.m */,
+				9E7F1C2ED4DACAE60D6A0C567621179E /* FIRMessagingAPNSInfo.h */,
+				FEA957E11426CB071871167383A07300 /* FIRMessagingAPNSInfo.m */,
+				93E7AB46E2511D25D9AF79D1E812E057 /* FIRMessagingAuthKeychain.h */,
+				7AD928C62D1CCDA81DFFE70C46E4DE0E /* FIRMessagingAuthKeychain.m */,
+				7708A2B7CDA55281214684B732DDBE1E /* FIRMessagingAuthService.h */,
+				095D2CE347D3EDE7166CEDE9D4199284 /* FIRMessagingAuthService.m */,
+				7CA2DA0805D1A3856588886B5EB8BA9E /* FIRMessagingBackupExcludedPlist.h */,
+				EEED50A61EA1E260231F26D8190EEACB /* FIRMessagingBackupExcludedPlist.m */,
+				DC5EC58FD95B2EFCF832658EBD57B4D7 /* FIRMessagingCheckinPreferences.h */,
+				91289D59F183805921D7269BDA6B9D3D /* FIRMessagingCheckinPreferences.m */,
+				4DFB92EEF69CBF8BE4A85451C58E8AE5 /* FIRMessagingCheckinService.h */,
+				FEC71F6A6706E56D0049698CD89DA7C1 /* FIRMessagingCheckinService.m */,
+				F0AFBA6E4ACD46F2CB7E103C47ACAB5D /* FIRMessagingCheckinStore.h */,
+				DF78B795B57F80582BA190162C91F3F0 /* FIRMessagingCheckinStore.m */,
+				1B4B8388F81E252578BDDDBCC8DC1E3A /* FIRMessagingCode.h */,
+				F301034A45D7615D43DD7D1820B95F2B /* FIRMessagingConstants.h */,
+				FE0647581948836CE76D00D75594E72E /* FIRMessagingConstants.m */,
+				0764B9CD746C8F73AE46E691D1C2F0F8 /* FIRMessagingContextManagerService.h */,
+				F638A5DDF8C847FA5A744A156E48C50D /* FIRMessagingContextManagerService.m */,
+				75A2B92908925D9D4100AEF8A268BF5A /* FIRMessagingDefines.h */,
+				FAA4CA171F4FB06376C131A790888FA8 /* FIRMessagingExtensionHelper.h */,
+				D952E5AE5E8F99516FAF4C1095AFED9C /* FIRMessagingExtensionHelper.m */,
+				9515D774425CFBF73EBE142666EB89CD /* FIRMessagingInterop.h */,
+				1BF0227D80A76E307AA95D415FD11D8D /* FIRMessagingKeychain.h */,
+				E6E519122CDB4052CD2F3E97AE6A13CF /* FIRMessagingKeychain.m */,
+				16FD9A38AA901B7278757CA810C37BDE /* FIRMessagingLogger.h */,
+				FC4A2D177C8C0015B9176FBC5DD073F7 /* FIRMessagingLogger.m */,
+				A418BF64A237037CA82D67C7F793DC04 /* FIRMessagingPendingTopicsList.h */,
+				D991489D1C1029C5B84CC3093570F7B2 /* FIRMessagingPendingTopicsList.m */,
+				5C4C1A6EF4E83D7593576DC343AE3774 /* FIRMessagingPersistentSyncMessage.h */,
+				EAA4A4EE06B754BE734FEA4BD8184B02 /* FIRMessagingPersistentSyncMessage.m */,
+				A101FCB1021D037343DFE042B1476C9F /* FIRMessagingPubSub.h */,
+				F61808C23FA4500A10D6C72217DCBC94 /* FIRMessagingPubSub.m */,
+				8BB08E19E8D97BFFD2C53552F17F27B2 /* FIRMessagingRemoteNotificationsProxy.h */,
+				EB0B91B6D44640FF990C229622D4F7AD /* FIRMessagingRemoteNotificationsProxy.m */,
+				25144FB4C541F618E196565696C9270F /* FIRMessagingRmqManager.h */,
+				EAA4B35385D2E6FECDE30E6B5F03CF15 /* FIRMessagingRmqManager.m */,
+				01FC7833129501016A7297A22972EAB1 /* FIRMessagingSyncMessageManager.h */,
+				B11CA7D0465BA46A6855E5424B2A2554 /* FIRMessagingSyncMessageManager.m */,
+				7E66765019894D3036AE0C813011F2B4 /* FIRMessagingTokenDeleteOperation.h */,
+				88C9A3AE4CDA298CD3C52384D7F1089C /* FIRMessagingTokenDeleteOperation.m */,
+				7FAF71FBC938AF2E65DF089170227F59 /* FIRMessagingTokenFetchOperation.h */,
+				7C02DAF75A9C5E4B5ADCA840BAC111B9 /* FIRMessagingTokenFetchOperation.m */,
+				D631E522FA7225175474F78AD8CC4CB3 /* FIRMessagingTokenInfo.h */,
+				EC244EC35F6EB66D6E545E9E83FFE436 /* FIRMessagingTokenInfo.m */,
+				40A07F18A18B961EC8330AAABC21AD61 /* FIRMessagingTokenManager.h */,
+				045D7C318D3BE9148C6FA3F9BFC63D51 /* FIRMessagingTokenManager.m */,
+				309B93B54AB8C2B2A9B760EBE5689E18 /* FIRMessagingTokenOperation.h */,
+				8544617C5CAFEBA13508E25C142DFD2A /* FIRMessagingTokenOperation.m */,
+				37C4618AA2E8113FA4C024192E171623 /* FIRMessagingTokenStore.h */,
+				F2C9F0D283A9A14D5122F145DB258D24 /* FIRMessagingTokenStore.m */,
+				2B6872F6A9338C05654C2CCAD2957788 /* FIRMessagingTopicOperation.h */,
+				6759CCC1316CC381D10353BAEC910715 /* FIRMessagingTopicOperation.m */,
+				7EBD86F4B1E4291FD8DC8558F94F0BD3 /* FIRMessagingTopicsCommon.h */,
+				1FBD3B0F64B078A95D0CF4CDD5F7CE1E /* FIRMessagingUtilities.h */,
+				EE3FD3BAFF22CD24A13EF6FBB0E1C843 /* FIRMessagingUtilities.m */,
+				18D13EE67EF6BAFCB2797EA55CB33541 /* FIROptionsInternal.h */,
+				1951B2A7EDF84F198C3FE472FAA1B4EF /* me.nanopb.c */,
+				14B2E5E8C0FA89DCDBC939D7D8D0E000 /* me.nanopb.h */,
+				41616E9CCD4D12F366F56952B914D600 /* NSDictionary+FIRMessaging.h */,
+				E633ACCA005798F5A7B651288910CFB1 /* NSDictionary+FIRMessaging.m */,
+				971FF2AFFDF10D7D2D1181CA28564D27 /* NSError+FIRMessaging.h */,
+				E409B55582C666D4707D4172EDFB4BE4 /* NSError+FIRMessaging.m */,
+				3BD7C77544B4EA795565370E45F5F041 /* Support Files */,
 			);
 			name = FirebaseMessaging;
 			path = FirebaseMessaging;
 			sourceTree = "<group>";
 		};
-		EFF120F34679EF8E210B151A976EC486 /* FirebaseInstallations */ = {
+		EC24A6E089D5B076EB68FD32F24CE2A7 /* Support Files */ = {
 			isa = PBXGroup;
 			children = (
-				6039452C1B3B834A0E312B8EC9B3AFB1 /* FIRAppInternal.h */,
-				678C8641BDE5A8270185739D7B020641 /* FIRComponent.h */,
-				E6459998EE334D1511F26509690E48ED /* FIRComponentContainer.h */,
-				4E833281B3ADEB8D6E4F5111A8443E26 /* FIRComponentType.h */,
-				75FBA4C8CAFB900A6AB5946D068EFCFC /* FIRCoreDiagnosticsConnector.h */,
-				A443F4A2FB363D515A34E507BDD193C7 /* FIRCurrentDateProvider.h */,
-				DAE7EA43BBB6FF9E391083081C652762 /* FIRCurrentDateProvider.m */,
-				93C71324FE90163B975465235FE4A8F1 /* FIRDependency.h */,
-				874E2B7B95BF66268EC37F75AF3B0250 /* FirebaseCoreInternal.h */,
-				D7641BAF92288D74962C3D96BF381580 /* FirebaseInstallations.h */,
-				84905C0015E2703A1B6CA71B1434B68C /* FirebaseInstallationsInternal.h */,
-				8FCB8BC041B6196AEE39DFA0C35A0049 /* FIRHeartbeatInfo.h */,
-				C6DD7DCCAFCE1A20C07D96E91B4A4436 /* FIRInstallations.h */,
-				7F4F668C8866F21B6D1E05E2F415F32E /* FIRInstallations.m */,
-				0D783C36292BE09F38FCB5BBAA46F8F0 /* FIRInstallationsAPIService.h */,
-				7D898A05E335F5579D54DC190DE6F5F0 /* FIRInstallationsAPIService.m */,
-				6ABEF729F6524C8D5A99059A015271FB /* FIRInstallationsAuthTokenResult.h */,
-				453536A01D61AFA4A5C749192E18E71C /* FIRInstallationsAuthTokenResult.m */,
-				1AC6F18356BD79350CCC1A8CADBAF5C1 /* FIRInstallationsAuthTokenResultInternal.h */,
-				37E30B3BC5A5B7A6006AF72B82D33B83 /* FIRInstallationsBackoffController.h */,
-				ABF2E3CF2B928FAF975CE0F53D309CDD /* FIRInstallationsBackoffController.m */,
-				400B38F434CCCE0E68014B340E447A48 /* FIRInstallationsErrors.h */,
-				1633D12251D0DF55487F686928C7DC47 /* FIRInstallationsErrorUtil.h */,
-				7C9FFFAA3424193DD5CCAD72A9B377EF /* FIRInstallationsErrorUtil.m */,
-				D2C340CD09002D0A687E19E4792DB2F8 /* FIRInstallationsHTTPError.h */,
-				1656CAE4D5704E7C6025E99D33DE4027 /* FIRInstallationsHTTPError.m */,
-				0D06BA4CF26161ABF9D97B1A7F61DAEB /* FIRInstallationsIDController.h */,
-				AF1B2FA2CA5C721AF347832886C886E3 /* FIRInstallationsIDController.m */,
-				2FEB5F31BC0CC99074652C6D85FA5D01 /* FIRInstallationsIIDStore.h */,
-				DB3623DD41CE3B97ACA4B26EB8BC7767 /* FIRInstallationsIIDStore.m */,
-				53BBE600F6DD52F89A90F05AD16D93A7 /* FIRInstallationsIIDTokenStore.h */,
-				167A5846E15CE9BC9E07724B324CA449 /* FIRInstallationsIIDTokenStore.m */,
-				69C2FC1EE5D86D089AACC62662FD3683 /* FIRInstallationsItem.h */,
-				C917C8933A49E50D23B3566695681715 /* FIRInstallationsItem.m */,
-				CCD53F74A28B58B81C4D6F2B0FC96CD8 /* FIRInstallationsItem+RegisterInstallationAPI.h */,
-				D35E0AB0A9A63A7C53635D8FB47F6F90 /* FIRInstallationsItem+RegisterInstallationAPI.m */,
-				356D85B515E7B2819CD5D4AA21838F83 /* FIRInstallationsLogger.h */,
-				4FAE11DB7B7FF4F5F841088051D76E80 /* FIRInstallationsLogger.m */,
-				D51BB0685B2ABC7190E64CD9893D3BD1 /* FIRInstallationsSingleOperationPromiseCache.h */,
-				5A179F45FE5832B10D972620375BC6C0 /* FIRInstallationsSingleOperationPromiseCache.m */,
-				9825BF1B7EF6CF5A6A814B6ABE0514D3 /* FIRInstallationsStatus.h */,
-				CF01775F9C29EEBECBCBBC0CE9D44B98 /* FIRInstallationsStore.h */,
-				EF18EB8307AB1649D16BF0F16BF2C140 /* FIRInstallationsStore.m */,
-				D29FBC2C73DFA113D0DD6ECB71C54757 /* FIRInstallationsStoredAuthToken.h */,
-				F67248B79FA73806F40DBE106A0C1B64 /* FIRInstallationsStoredAuthToken.m */,
-				350FD92646F028FA2788263EE06F39BA /* FIRInstallationsStoredItem.h */,
-				9C37615ED8AAF4905DA0D0A519CD9B7B /* FIRInstallationsStoredItem.m */,
-				30DD1A51E7CAEECA13C0A834A5A85960 /* FIRLibrary.h */,
-				036F378CE7ED27A9C21B5FBC9E57B410 /* FIRLogger.h */,
-				32D08FC6F767C591D2F01CAD2B99D0CA /* FIROptionsInternal.h */,
-				F0D7F82CD271BDC2A002A983B326ECE4 /* Support Files */,
+				5E8965C34CCB928DCD4EA90569B1E504 /* FirebaseCoreDiagnostics.modulemap */,
+				4698442353C2B02DD2E2933B2C6C4075 /* FirebaseCoreDiagnostics-dummy.m */,
+				0397EE43AEB5AED71A6DD5433891D20E /* FirebaseCoreDiagnostics-Info.plist */,
+				30BD6F3B06CBF548344CF0A21618B001 /* FirebaseCoreDiagnostics-umbrella.h */,
+				4519D44022E96363988DEF72BF10FF9B /* FirebaseCoreDiagnostics.debug.xcconfig */,
+				4DB7D0044BBC6BE5C9A616774558EB43 /* FirebaseCoreDiagnostics.release.xcconfig */,
 			);
-			name = FirebaseInstallations;
-			path = FirebaseInstallations;
+			name = "Support Files";
+			path = "../Target Support Files/FirebaseCoreDiagnostics";
 			sourceTree = "<group>";
 		};
-		F0BA52E68DBD2252A88DC00DC4A183C2 /* nanopb */ = {
+		F38E7C7499ED8832A05DA7341C0F7739 /* Support Files */ = {
 			isa = PBXGroup;
 			children = (
-				5A5CBA20E5E23D5B660ED637DD960445 /* pb.h */,
-				E991D622C40E76B70D2D189BCD72FC63 /* pb_common.c */,
-				B243A501712C2C834CAB76A0A6DFAE71 /* pb_common.h */,
-				EC25B665DCA4BD7B33979CC3C8C09193 /* pb_decode.c */,
-				D2CA7E85155AA6B0A38D4083D39AE918 /* pb_decode.h */,
-				BA19AA33BA511990A545A2B0152E25E5 /* pb_encode.c */,
-				063513755606F8F2D0C4B656CA25535A /* pb_encode.h */,
-				3CB5E818A237A3A8EA165C48705663AD /* decode */,
-				F53C952FB7C1DB85903ED5388594FFAD /* encode */,
-				593FE02F52CC373275F33B64D7BC8AE4 /* Support Files */,
+				AC60683E7EE51AAE0F4499D3C08BBAA8 /* ResourceBundle-SwiftMessages-SwiftMessages-Info.plist */,
+				633E6CDEBCBDCCAAE9F68F71128FFA4A /* SwiftMessages.modulemap */,
+				B38DE103409B4D2D2B3BCA18176AFC45 /* SwiftMessages-dummy.m */,
+				7718E943FB36AC09DFA783A183BC7B92 /* SwiftMessages-Info.plist */,
+				24E995C78D55F43B7D97CD6809DBC2A8 /* SwiftMessages-prefix.pch */,
+				B92CE8AA08FDDA5D582BB8DAECE0D6C6 /* SwiftMessages-umbrella.h */,
+				7CBA4B276C1D5ECE2594DC93F243D07A /* SwiftMessages.debug.xcconfig */,
+				42EB1F8D3DD0A014BD005287605B5672 /* SwiftMessages.release.xcconfig */,
 			);
-			name = nanopb;
-			path = nanopb;
+			name = "Support Files";
+			path = "../Target Support Files/SwiftMessages";
 			sourceTree = "<group>";
 		};
-		F0D7F82CD271BDC2A002A983B326ECE4 /* Support Files */ = {
+		F5EB5E54CBA476513D9C30A0AF3FF91A /* SwiftMessages */ = {
 			isa = PBXGroup;
 			children = (
-				2AC07D97DA3199CFE5FE73C9616BFF49 /* FirebaseInstallations.modulemap */,
-				7FE9990AFCD3E31A0337B2B5F95A9537 /* FirebaseInstallations-dummy.m */,
-				A3DBA737E3FA37B8FB8E47C246199DC9 /* FirebaseInstallations-Info.plist */,
-				664817FD8F5F848F85464D9AD2E37123 /* FirebaseInstallations-umbrella.h */,
-				A4094D74BE3B723D5B480DC5F33EAF80 /* FirebaseInstallations.debug.xcconfig */,
-				D2D912AF3DC866C4340AD1442C61B39E /* FirebaseInstallations.release.xcconfig */,
+				66B65DC7BFE8625435890AD47702AD49 /* App */,
+				F38E7C7499ED8832A05DA7341C0F7739 /* Support Files */,
 			);
-			name = "Support Files";
-			path = "../Target Support Files/FirebaseInstallations";
+			name = SwiftMessages;
+			path = SwiftMessages;
 			sourceTree = "<group>";
 		};
-		F53C952FB7C1DB85903ED5388594FFAD /* encode */ = {
+		F8214AE3546476BC3D2ED146FD653EC8 /* FirebaseCore */ = {
 			isa = PBXGroup;
 			children = (
+				3FFECE58EE77086345BC12B1FC3B5BBC /* FIRAnalyticsConfiguration.h */,
+				E6BE83CFCE0F7A4AB35123BC2D0F813B /* FIRAnalyticsConfiguration.m */,
+				0611407236FC95F2BDBD807A13E14A6B /* FIRApp.h */,
+				A3F3BE757105AB7A600FE52AD68B917C /* FIRApp.m */,
+				4D27417CCD853E7F17C87C974F672805 /* FIRAppAssociationRegistration.h */,
+				B3869CF044F0EFE17B6DF9FA5CECEF4D /* FIRAppAssociationRegistration.m */,
+				F35EEB79894EDA6A75723A67A459A175 /* FIRAppInternal.h */,
+				8C2697936939C6F54F2DFD4A17C621B3 /* FIRBundleUtil.h */,
+				E6CD202B2186830E9B5B88003916264D /* FIRBundleUtil.m */,
+				FCA48A10ECA2067C0CAAC574673BDFAC /* FIRComponent.h */,
+				B6EF61D47A870DFF36A42ADFE0742403 /* FIRComponent.m */,
+				5DC2A5052482E78F537285D6B55C084B /* FIRComponentContainer.h */,
+				788FB7545C6CE038423F7C7441DAF8B1 /* FIRComponentContainer.m */,
+				35C0680FEF1E6F03D9C31B28AFBCCE84 /* FIRComponentContainerInternal.h */,
+				D9BABE432AAD6C34D64ADD6FC67E5FF9 /* FIRComponentType.h */,
+				30C387B7BBD24A8336AD43B4215BC158 /* FIRComponentType.m */,
+				9C835A170A029CF8EB7AA5F2B16BAB07 /* FIRConfiguration.h */,
+				058429B14423E80737AF114E4233FCBA /* FIRConfiguration.m */,
+				399828B9A50CDDA00D5E7888A6CC9B7E /* FIRConfigurationInternal.h */,
+				EC07E020F1E33BA16C3E45096712A0C0 /* FIRCoreDiagnosticsConnector.h */,
+				2A33C2F4F1D16EAAC3CFB650018577A8 /* FIRCoreDiagnosticsConnector.m */,
+				35F7C8F2AE1AD4DBB5FAC408343AC455 /* FIRCoreDiagnosticsData.h */,
+				3975B9FE2A799125C4900233AB3A69F3 /* FIRCoreDiagnosticsInterop.h */,
+				51D3A193B50EBB9C1F88A6DED0E97701 /* FIRDependency.h */,
+				7B247E27A8ECCBAF86D722F73C11E4EE /* FIRDependency.m */,
+				7AEAA0DB2BC4D4FD8EF27B6A56436111 /* FIRDiagnosticsData.h */,
+				D76D8AB7C6C7DD72A29FFA7E2D12F3A3 /* FIRDiagnosticsData.m */,
+				D533DBC38DC67A0E92D0DCE7180FB98E /* FirebaseCore.h */,
+				F77290C81C9F0FD9C1A5DFEB3C516F50 /* FirebaseCoreInternal.h */,
+				2DDEEF09EC88550BE515F220A39446B9 /* FIRFirebaseUserAgent.h */,
+				3990F0876DAE1A33A9ECEBAE5B467A2D /* FIRFirebaseUserAgent.m */,
+				B6C22DCEA4BD90A8D0260E41C403578B /* FIRHeartbeatInfo.h */,
+				6549897108C17BCC06880FEE925C8636 /* FIRHeartbeatInfo.m */,
+				1DBA64DCD9D41971850CB5ADAA1AC257 /* FIRLibrary.h */,
+				8058CC9855C0B30193537921040F7BB5 /* FIRLogger.h */,
+				3B2DD11DA850D245E6195111E1FAC804 /* FIRLogger.m */,
+				154F7E358BD756096D0AC996095BDFDA /* FIRLoggerLevel.h */,
+				C272FD52F06D48EE30858AFC6E94C1C1 /* FIROptions.h */,
+				13DFA9E0C535E4E85F9B007F38EB6120 /* FIROptions.m */,
+				0E0468412EF820D639BE54469632A91C /* FIROptionsInternal.h */,
+				9C092A3CE0A954009E8EC3D7D006851B /* FIRVersion.h */,
+				72EEECCB5CA8BFDBC19EFDD0600CF909 /* FIRVersion.m */,
+				A4CC5B944658FF1CF8DBE74BE6E4EB95 /* Support Files */,
 			);
-			name = encode;
+			name = FirebaseCore;
+			path = FirebaseCore;
 			sourceTree = "<group>";
 		};
-		F55B1138EAF3591419C4C0685780FBEA /* PromisesObjC */ = {
+		FB0448450A23C2F951AF10E1A4B99494 /* Support Files */ = {
 			isa = PBXGroup;
 			children = (
-				12F5F1CE30E0E423EE4E479F3EFA2ED9 /* FBLPromise.h */,
-				1C280C2C42735CFD7D96214E3C0D624F /* FBLPromise.m */,
-				2FE6EDCF3CA3D4FFB7289288A1955D9E /* FBLPromise+All.h */,
-				65AE7A120F479FFD5829B7E3D1C8AC34 /* FBLPromise+All.m */,
-				2B8502B549CC51AE1485F9530A1BD8EC /* FBLPromise+Always.h */,
-				DF832D1BC0ABF51598B6E608C3831051 /* FBLPromise+Always.m */,
-				411BE640A1619C7D17CE3DF010BBFF3A /* FBLPromise+Any.h */,
-				8D010E182533AC29F338DE7D4CF44E55 /* FBLPromise+Any.m */,
-				182F29B97C01ECA6EC115310D214D410 /* FBLPromise+Async.h */,
-				D2EB30295978AB2D2DEEA3483B393044 /* FBLPromise+Async.m */,
-				917E0E3B4EABA4BC5D66B3716EF570AF /* FBLPromise+Await.h */,
-				B2BCED4FF15422BFC7117598D6316508 /* FBLPromise+Await.m */,
-				7C13B5F523FFAA9CF31890D5AC33277A /* FBLPromise+Catch.h */,
-				DBE945BF3FCE639292A78AB27166BB34 /* FBLPromise+Catch.m */,
-				D2A20A9D355F7889A1BD68F9C61803B9 /* FBLPromise+Delay.h */,
-				B01663682A537C03A360C89C7D3F1E80 /* FBLPromise+Delay.m */,
-				39CA74686606814C6FFE6C8B6FBD986B /* FBLPromise+Do.h */,
-				DB8E86495B5AB3557AFFD516490AAA1F /* FBLPromise+Do.m */,
-				E8863E0E4AB98E0D86A6F34C048527F4 /* FBLPromise+Race.h */,
-				F8DAE6B91D6DCFA18A620DB34F747BB7 /* FBLPromise+Race.m */,
-				16BED021AF23370BFDD1A3B2918042DC /* FBLPromise+Recover.h */,
-				DF4FAB09527EA9CCC362D03DB3307695 /* FBLPromise+Recover.m */,
-				56362F034BF93311AF8B0949F38AD0B0 /* FBLPromise+Reduce.h */,
-				E584F29C8DDDEE49BD1C4C2290A1AB78 /* FBLPromise+Reduce.m */,
-				F7F5434EDDE96C02573821A2AA214235 /* FBLPromise+Retry.h */,
-				4A044776FA869FD9B80DCA52437BD0C9 /* FBLPromise+Retry.m */,
-				2517E9C791525DBAFBE60DEE82A16653 /* FBLPromise+Testing.h */,
-				99CF8268005E0BEBC4A220184DAEDF4E /* FBLPromise+Testing.m */,
-				C9D2DD8BA626C50B702D0CF3B4089851 /* FBLPromise+Then.h */,
-				D18473CE4CAA9E55A96B11609565168E /* FBLPromise+Then.m */,
-				405C56747BA8DB139278901283BAB728 /* FBLPromise+Timeout.h */,
-				C59BCC9486E886FB159887927CB7BC9E /* FBLPromise+Timeout.m */,
-				4699A6BBB86F5F56CACEB8AAB80DF09E /* FBLPromise+Validate.h */,
-				8F5544B383C38E15D962DC93F451F55D /* FBLPromise+Validate.m */,
-				4B1636178F27590E832F7380FE0820AA /* FBLPromise+Wrap.h */,
-				9D55BD06FFA3CE7F30684EE0F71841C3 /* FBLPromise+Wrap.m */,
-				56DD7FFAC0BCA8E9D06614C5CEA24354 /* FBLPromiseError.h */,
-				6D3BD5FEA5AD94E88DF03D4D71B70F75 /* FBLPromiseError.m */,
-				FFFB16B528650897EA28176A0457BF2A /* FBLPromisePrivate.h */,
-				E6B456D95207254195D61D2AD9EE88A6 /* FBLPromises.h */,
-				5089AA72DBF99593363296A7C4A66E0C /* Support Files */,
+				2D12B24048616B7759256CEF1DF1CAAA /* SwiftLint.debug.xcconfig */,
+				397B25BD42483D57228B894C203C6ABB /* SwiftLint.release.xcconfig */,
 			);
-			name = PromisesObjC;
-			path = PromisesObjC;
+			name = "Support Files";
+			path = "../Target Support Files/SwiftLint";
 			sourceTree = "<group>";
 		};
-		F5B89938D99B4794306957E4495B8808 /* Logger */ = {
+		FBF261A12DBE9FBB92E475EC1002FC43 /* FloatingPanel */ = {
 			isa = PBXGroup;
 			children = (
-				035C7ED984F57D8F7CE5C81275E8DD27 /* GULLogger.h */,
-				82A6EDCDA1893B806C9D9127580714CA /* GULLogger.m */,
-				B19FE5924A546AE7C1E1726784CE9157 /* GULLoggerLevel.h */,
+				075798806DB872AAEF434F61F187CFD7 /* BackdropView.swift */,
+				4BFC936AFB0D862856F1A8DB0B105BF2 /* Behavior.swift */,
+				4094B9E7B37298A0960ECEB0FDC57B69 /* Controller.swift */,
+				E50DCB59700054609095E5EEE4F5323C /* Core.swift */,
+				B879EC1C1AE9F5A79D7B0D2F62F5F9E7 /* Extensions.swift */,
+				CF7B693E04B12B6E9C18BE2E46562E2B /* GrabberView.swift */,
+				94A37ADF6299F8CE4EDE0672C6C6343F /* Layout.swift */,
+				070A92CB23B8D538CC393FCD99F0F12A /* LayoutAnchoring.swift */,
+				ACE21E0B86B22799E14B4AFC681E7416 /* LayoutReferences.swift */,
+				EB68F7D262037653E9B07007B9702F3A /* Logger.swift */,
+				7974271D2EFBF3AE8F80084BB87AD7AC /* PassthroughView.swift */,
+				3F89C1EE9F0B125E3A3D207B71079083 /* Position.swift */,
+				420BDE5FFE2FB1A9302AF687E5BCBC29 /* State.swift */,
+				1220F0AEBD402990A094A56E5519B252 /* SurfaceView.swift */,
+				2459F3DE93064D159BA5D1AB34EDE072 /* Transitioning.swift */,
+				6633B953F157DE6F4E3BB5E2B8C8DBDE /* Support Files */,
 			);
-			name = Logger;
+			name = FloatingPanel;
+			path = FloatingPanel;
 			sourceTree = "<group>";
 		};
-		F64A89A940C73A43FE31CB1C5059B489 /* Support Files */ = {
+		FC23F47EED8C587E3056A0473B682292 /* Parchment */ = {
 			isa = PBXGroup;
 			children = (
-				8BEC191E7B3D2C0A3148A1B7208E9ABD /* ScrollingFollowView.modulemap */,
-				BD7CC3D4767C35B2E2A928F17EF10F05 /* ScrollingFollowView-dummy.m */,
-				E50591C761DE0BCBB0DEBCA5A17E11D2 /* ScrollingFollowView-Info.plist */,
-				7515B4F331EDB0347B73596B801BCBE9 /* ScrollingFollowView-prefix.pch */,
-				B49D36688B4E2CC488F9617586137363 /* ScrollingFollowView-umbrella.h */,
-				63904F311AC7AF7CF936D5EB23ECE387 /* ScrollingFollowView.debug.xcconfig */,
-				88EF017E160D4C160DD8D9FE8D6231AB /* ScrollingFollowView.release.xcconfig */,
+				E40EEC0969E7575D0057FE0605BE50E9 /* AnyPagingItem.swift */,
+				DFE9F678DBB5B6206CC9331EF03658F7 /* CollectionView.swift */,
+				D02568CA0FC7B31B5BD91EB46A0FA223 /* InvalidationState.swift */,
+				8F5A8569D6E87FAA12F400B5AF6A9CE4 /* PageView.swift */,
+				D5DF4EAF4F357894D9BDCADE136CFB68 /* PageViewController.swift */,
+				5B03FE29D20B833C09F6F9C7CC61D478 /* PageViewControllerDataSource.swift */,
+				18D517B442F61ED4B06E857E8E93E899 /* PageViewControllerDelegate.swift */,
+				0CD5177F5E21C1A5F1898E33373CE290 /* PageViewDirection.swift */,
+				F8A67A6A29D9BE4A6E0FA38EE5E429F8 /* PageViewManager.swift */,
+				6372652B9C41599EF9FB6D1F9B6D201F /* PageViewManagerDataSource.swift */,
+				CF18F0708393816E830C8C896394312C /* PageViewManagerDelegate.swift */,
+				C2AE1EC590B88A0032AB83911B486F62 /* PageViewState.swift */,
+				45FEE7AF59E7C4AE6AD8BCA40C7B530A /* PagingBorderLayoutAttributes.swift */,
+				7282A29AF98EDCB2629552B3D9989414 /* PagingBorderOptions.swift */,
+				9AC56E16ED8B41958181D4A351C1F915 /* PagingBorderView.swift */,
+				4C3FC17B79340F3BD7BFF111DE3E957A /* PagingCell.swift */,
+				1778DDCBBD78B2323FE9A2C43E8E4C8E /* PagingCellLayoutAttributes.swift */,
+				C3C84CEFA7D0D383BC507CA9F9B61D8E /* PagingCellViewModel.swift */,
+				30AFCAFEAF0927A792D4EA02A8502130 /* PagingCollectionViewLayout.swift */,
+				9187BC036B0CC8B889EA2C64E96E88EF /* PagingContentInteraction.swift */,
+				8FBE86D2ECED64F9BC72628D808964CF /* PagingController.swift */,
+				2321C7692125F99F2B42DDE9D8D1B5CD /* PagingDiff.swift */,
+				88F132F2EFEA5887B1CD32757CF7D692 /* PagingDirection.swift */,
+				E0936059163FCD74647AC5FB690BC873 /* PagingDistance.swift */,
+				43E7F56B404E7EBB75E5235A8CD5108A /* PagingFiniteDataSource.swift */,
+				572A32411CDBD2F851D1E96F9B90DD54 /* PagingIndexItem.swift */,
+				502B01691F65390017C4AB52583CC8C6 /* PagingIndicatorLayoutAttributes.swift */,
+				D268C1181FED7843260369844E7EAFF8 /* PagingIndicatorMetric.swift */,
+				7CFE9934C6354CBC9666B1554A1555EF /* PagingIndicatorOptions.swift */,
+				CCFB8FE90C489201EF7A124A5006AD25 /* PagingIndicatorView.swift */,
+				9AF84B1D5B3B6DF4CEF58CDF184DFD60 /* PagingInvalidationContext.swift */,
+				D026C995A40EB0333C541D13D45A31A4 /* PagingItem.swift */,
+				F8ED53CF61E6914C0DF98C2E849B6745 /* PagingItems.swift */,
+				53B6B417DFD80C4FFD7FFFC67FE2BF0E /* PagingLayout.swift */,
+				8612893FD2EE151350A0A0F7B84D3029 /* PagingMenuDataSource.swift */,
+				130BCF25F8EFB0AAF794C70B9BD843A7 /* PagingMenuDelegate.swift */,
+				38067080E934240A05B4E487843C08BB /* PagingMenuHorizontalAlignment.swift */,
+				6ECC13266B461167A54724AED1D72EFD /* PagingMenuInteraction.swift */,
+				E60043E3743DC02B9CEA6A2BCD6783E6 /* PagingMenuItemSize.swift */,
+				03A0F8F9EE74AC155514C0AF423D3D7A /* PagingMenuItemSource.swift */,
+				78854ED4BAFD39A4BFB32B34CA94DD0E /* PagingMenuPosition.swift */,
+				C9EA946C13353D9489395B1946FDD738 /* PagingMenuTransition.swift */,
+				D90D1BA869EE55E72DF9AE07781DA40D /* PagingMenuView.swift */,
+				31645683F0E428258C0FF7B24761A5D2 /* PagingNavigationOrientation.swift */,
+				AC1EAA01471A7E530CD3DEC57973F9C2 /* PagingOptions.swift */,
+				50B259385978D2156E6668B273B6BC4B /* PagingSelectedScrollPosition.swift */,
+				CADC88554C9D1F5B26204930AD632DAC /* PagingSizeCache.swift */,
+				2E16D904D4180FC7EF71F35F8EB2BF48 /* PagingState.swift */,
+				C56CB6D9716847074976C6696925DD56 /* PagingStaticDataSource.swift */,
+				8A2501AF38D44C5004E8CB35E066D9AB /* PagingTitleCell.swift */,
+				B96887F917A1A6F204BA5504597642A5 /* PagingTransition.swift */,
+				9A6325839AB31B1E1E20294CBD91E4C9 /* PagingView.swift */,
+				FC3ACB1BEB3FCFAE896E1FA692F94DA2 /* PagingViewController.swift */,
+				8E63827255DEB5C62D6F7CCD45C675C8 /* PagingViewControllerDataSource.swift */,
+				4FDD8BA7D0BA6DEF23523CA56B1DF741 /* PagingViewControllerDelegate.swift */,
+				DBB32652FD77C843803D38856981FB4C /* PagingViewControllerInfiniteDataSource.swift */,
+				1231E02200F433ECD0B01C536277EA47 /* PagingViewControllerSizeDelegate.swift */,
+				162678BFCC1CB8F74EB24AF27C602B45 /* Tween.swift */,
+				148B695EA098BF5DD231693DD2946588 /* UIColor+interpolation.swift */,
+				B59AF08D6EA4DB230212564951F098FA /* UIEdgeInsets.swift */,
+				599B86EB87730F2D46AE8432C9C35FC8 /* UIView+constraints.swift */,
+				52360A412DEA3B2E51B7063B2C008D3F /* Support Files */,
 			);
-			name = "Support Files";
-			path = "../Target Support Files/ScrollingFollowView";
+			name = Parchment;
+			path = Parchment;
 			sourceTree = "<group>";
 		};
 /* End PBXGroup section */
 
 /* Begin PBXHeadersBuildPhase section */
+		0488E62B09D0DC3881CA72AC67015E99 /* Headers */ = {
+			isa = PBXHeadersBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				9E713D676A7D0C70904E5A33785B3CBB /* cct.nanopb.h in Headers */,
+				5989257BC1F369F03E83FEBFADCCDA6E /* GDTCCTCompressionHelper.h in Headers */,
+				2D0B274BE424C5C5410C9518B08638E7 /* GDTCCTNanopbHelpers.h in Headers */,
+				626C082313A6825B02D3D13FC6C16A1C /* GDTCCTUploader.h in Headers */,
+				12E705A266B839EC2370D2D02A2D9246 /* GDTCCTUploadOperation.h in Headers */,
+				9CE264448CBFE3C838AEAD72F18667BD /* GDTCORAssert.h in Headers */,
+				4227CDE7D2587A53BFF12343977BF1C9 /* GDTCORClock.h in Headers */,
+				EA44139ED4F0C48241A79B9030A7C244 /* GDTCORConsoleLogger.h in Headers */,
+				E3FBEB7A6276B487A434241D190CD1BE /* GDTCORDirectorySizeTracker.h in Headers */,
+				C7E8D8D22CBDE8B7612E3F3250AA3154 /* GDTCOREndpoints.h in Headers */,
+				4BDCF4F9E2A020D7B353D3F2FA006A5A /* GDTCOREndpoints_Private.h in Headers */,
+				6B95B24CF7205C54B35C0827B44B6830 /* GDTCOREvent.h in Headers */,
+				294CE8B2750EEF54A93501EF5268C811 /* GDTCOREvent+GDTCCTSupport.h in Headers */,
+				F7651F70F675928C86906739FA030B44 /* GDTCOREvent_Private.h in Headers */,
+				BF88D6A0A00D2D8007B7484156E8D9CF /* GDTCOREventDataObject.h in Headers */,
+				676187E9F22789C89C314A5176CA6149 /* GDTCOREventTransformer.h in Headers */,
+				C5B51EF112EB5ED32DE1EC8BC2EC5745 /* GDTCORFlatFileStorage.h in Headers */,
+				8A84899363D0A2125C4D593BB84E00AC /* GDTCORFlatFileStorage+Promises.h in Headers */,
+				F4633A4C0944A4FF4F534837E740D088 /* GDTCORLifecycle.h in Headers */,
+				B96DD97A451AD7DBC418F91ACE05C2A3 /* GDTCORPlatform.h in Headers */,
+				2D1524AB1A48390AE4D8857E73C50A25 /* GDTCORReachability.h in Headers */,
+				55D24DA36847419ABE6DCC188FFA4706 /* GDTCORReachability_Private.h in Headers */,
+				672290F38E8E46ECC281BBB3163589C8 /* GDTCORRegistrar.h in Headers */,
+				F0AA1C31D8F712571A2EB61B2F4EE422 /* GDTCORRegistrar_Private.h in Headers */,
+				DC3CC6F84341610C7D949D3FE10CFAAC /* GDTCORStorageEventSelector.h in Headers */,
+				FAB0E615E3CF79AA11132BE81832EE86 /* GDTCORStorageProtocol.h in Headers */,
+				E5EF61C333277D69E046F6D0B9736F2D /* GDTCORTargets.h in Headers */,
+				D787FFAEFD6F62230FD855682F32DEE8 /* GDTCORTransformer.h in Headers */,
+				5F7AFC8780D8D71481A1F5CACE0C3F4C /* GDTCORTransformer_Private.h in Headers */,
+				6309303466719EF3C1FD0150105DD59E /* GDTCORTransport.h in Headers */,
+				99611703D9A7F07DF7A55961967D0CCE /* GDTCORTransport_Private.h in Headers */,
+				62AC1B8F805050CD3EEB4DB2DB4DA183 /* GDTCORUploadBatch.h in Headers */,
+				0CB76160485F0E27CAC13EF8752996D8 /* GDTCORUploadCoordinator.h in Headers */,
+				A4DA826F8EF928E382EB01BB607000EA /* GDTCORUploader.h in Headers */,
+				831A1A4EB504567F4D8410A45146FAD1 /* GoogleDataTransport.h in Headers */,
+				A948801B0646E212637296756017FBB0 /* GoogleDataTransport-umbrella.h in Headers */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+		057B1301D532FC40B96DF1DE4F2893A5 /* Headers */ = {
+			isa = PBXHeadersBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				D77738EFA25CA9B7689247B2E4051FBD /* crashlytics.nanopb.h in Headers */,
+				0F7D7FFDA27D197E35DCD253C8E7563B /* dwarf.h in Headers */,
+				F65C51A9F0744F04D0614D63B2699CDE /* FIRAnalyticsInterop.h in Headers */,
+				AB0E1B65301F13FC3DB444A547269248 /* FIRAnalyticsInteropListener.h in Headers */,
+				B290699A280718742AA0E0C11AD3D935 /* FIRAppInternal.h in Headers */,
+				78008C9B9C5422F079288991BED4C417 /* FIRCLSAllocate.h in Headers */,
+				D4629D2FBF01C5221E32675DBE1EAA83 /* FIRCLSAnalyticsManager.h in Headers */,
+				87E48F37449E30E126777A000BFA7400 /* FIRCLSApplication.h in Headers */,
+				7CB02E4D89B2C677EC29D958E908CD92 /* FIRCLSApplicationIdentifierModel.h in Headers */,
+				F93E9D3E4B16D5DA0AB158D5C9542F1C /* FIRCLSAsyncOperation.h in Headers */,
+				143B3EC8A7A97DA3190EA4EE5FAE22EF /* FIRCLSAsyncOperation_Private.h in Headers */,
+				B0E4F54D26FC64D43B9DA50D30AC45A8 /* FIRCLSBinaryImage.h in Headers */,
+				4D269097B3E54FC9933B3B5802EEEABB /* FIRCLSByteUtility.h in Headers */,
+				547AEAED382892D9DD1C10FD43DE8DEB /* FIRCLSCallStackTree.h in Headers */,
+				AB5C2E8FC203145B8355D843CF16AF80 /* FIRCLSCodeMapping.h in Headers */,
+				D224A7D6ADD2D72FB00E3D9C4018AF1D /* FIRCLSCompactUnwind.h in Headers */,
+				2CE3EF19823718F2CD6766B6F3BCCDA2 /* FIRCLSCompactUnwind_Private.h in Headers */,
+				C34FAF597AB21F5189FD305F90358D3F /* FIRCLSCompoundOperation.h in Headers */,
+				7894D1BED38E54126B92AC17822C0448 /* FIRCLSConstants.h in Headers */,
+				76AC761205328FEFD3077EB6D1C7E58A /* FIRCLSContext.h in Headers */,
+				6963D611007DCCBFD41BB438C4AD23CF /* FIRCLSCrashedMarkerFile.h in Headers */,
+				63B1522168DDDD26ED7825732584071F /* FIRCLSDataCollectionArbiter.h in Headers */,
+				DFDECAD52AB72F2CF911FF22389B9EB3 /* FIRCLSDataCollectionToken.h in Headers */,
+				13D24AE968317A33DB6A4921A05C4B79 /* FIRCLSDataParsing.h in Headers */,
+				E25C8AA8B25F0A7A167560BD52231AA9 /* FIRCLSDefines.h in Headers */,
+				1BAE7545321E7B5D426BD4F3226B5AE0 /* FIRCLSDemangleOperation.h in Headers */,
+				115C35392510F61F9633F3061AFDE746 /* FIRCLSDownloadAndSaveSettingsOperation.h in Headers */,
+				D46BE3C40538B70C8D21FD0A588D25E5 /* FIRCLSdSYM.h in Headers */,
+				A9B95EA4689253A9779478804B5A3290 /* FIRCLSDwarfExpressionMachine.h in Headers */,
+				DC75D8918B89EEB6E25A4B17202B4F7B /* FIRCLSDwarfUnwind.h in Headers */,
+				D9281D4BCEA3D1157D9E6A620C1601BF /* FIRCLSDwarfUnwindRegisters.h in Headers */,
+				C409987E6FAB19D7341FD4658F9BBF74 /* FIRCLSException.h in Headers */,
+				AAD2D4577B37866AB83E578ECEA30ED9 /* FIRCLSExecutionIdentifierModel.h in Headers */,
+				6B3626EA14AF710A2C72AECD58E55B3E /* FIRCLSExistingReportManager.h in Headers */,
+				898FE9B1DB371B29D1E5487C0FBFA6AE /* FIRCLSExistingReportManager_Private.h in Headers */,
+				A2283F16C8D2E22ACE7C3C07A9875913 /* FIRCLSFABAsyncOperation.h in Headers */,
+				1B2DBED4B00A56EA04FF7FAF196BEC97 /* FIRCLSFABAsyncOperation_Private.h in Headers */,
+				492609DD1A56EB940DFC27FEBA007333 /* FIRCLSFABHost.h in Headers */,
+				0A32D81865325E772B11B5501B3C163D /* FIRCLSFABNetworkClient.h in Headers */,
+				5C1BE2FF90DC3D7AE0484AB1805805AA /* FIRCLSFeatures.h in Headers */,
+				0AA89FD73E6962630FFACFA53F856DCB /* FIRCLSFile.h in Headers */,
+				267387933278F5A432BA3C3CE30353AA /* FIRCLSFileManager.h in Headers */,
+				BA4EC3466CC464A5FA66B9B1809F6050 /* FIRCLSGlobals.h in Headers */,
+				2BAC82154B7E42172B9C562ADBFE1017 /* FIRCLSHandler.h in Headers */,
+				E857CB5B3B6E37713B69473C0999F52B /* FIRCLSHost.h in Headers */,
+				B6196C7A4256A11B4905924341D199DB /* FIRCLSInstallIdentifierModel.h in Headers */,
+				BD40479C93792902CE4D2CEA54AA5B9A /* FIRCLSInternalLogging.h in Headers */,
+				E38FF43886C47FD49A6A896E37AE0D02 /* FIRCLSInternalReport.h in Headers */,
+				4FF70E51BF45CA90F0764E888E3F3DFE /* FIRCLSLaunchMarkerModel.h in Headers */,
+				CA29F5E9379B2E2ACCF751F840B3FF98 /* FIRCLSLogger.h in Headers */,
+				6E6D857FD256BA6C9DF94AD5B2BEAC8A /* FIRCLSMachException.h in Headers */,
+				2C03CD53FFA98034479CE4D7E6C72D86 /* FIRCLSMachO.h in Headers */,
+				5FD4B4F817243403577C4EE9120F08DA /* FIRCLSMachOBinary.h in Headers */,
+				D05789A7F08E2F717A472FAB1E248788 /* FIRCLSMachOSlice.h in Headers */,
+				9D7F8AB03690A2F7ABB460BC9EF3A92D /* FIRCLSManagerData.h in Headers */,
+				333CB9B3469B72279695DDC5A7251586 /* FIRCLSMetricKitManager.h in Headers */,
+				046D7929B789545FD70FF115696F447D /* FIRCLSMultipartMimeStreamEncoder.h in Headers */,
+				273E0625AF984410DFE30D96C7FE7012 /* FIRCLSNetworkOperation.h in Headers */,
+				FF41DAB9DD3FEC46A07489CB8348E7C7 /* FIRCLSNetworkResponseHandler.h in Headers */,
+				F53138D0E264474CA3E7AE2415C3F6EF /* FIRCLSNotificationManager.h in Headers */,
+				D7973D0782A6805083DE42D13758F095 /* FIRCLSOperation.h in Headers */,
+				218A00691B290E6FFABB7644DD20193B /* FIRCLSProcess.h in Headers */,
+				5ACA5B8B04BD669CB5F84C7D715081BD /* FIRCLSProcessReportOperation.h in Headers */,
+				5CB589C7E77BD5DE4E6F48F957964FC7 /* FIRCLSProfiling.h in Headers */,
+				76DC71BB358DBE3722C24833F638BC77 /* FIRCLSRecordApplication.h in Headers */,
+				AFEF058FDCD70A0806F375DD5B88311C /* FIRCLSRecordBase.h in Headers */,
+				D4FE1EA372D6EF297DCB87D67B9E0041 /* FIRCLSRecordHost.h in Headers */,
+				048B6A5422D2BDF10695E926306FBB67 /* FIRCLSRecordIdentity.h in Headers */,
+				CB7ADAC70AA26C9B17BFBE9F4610C349 /* FIRCLSReportAdapter.h in Headers */,
+				4866FF3D66E61C995A48BAD9B8B4DCF9 /* FIRCLSReportAdapter_Private.h in Headers */,
+				5FCA064CA072375E9ACF19E16A02E707 /* FIRCLSReportManager.h in Headers */,
+				C4D7C3BBB6B4CE8E0CFFB94EF8DB76DA /* FIRCLSReportManager_Private.h in Headers */,
+				15BBB671AB5F6686F79C708CB85258FD /* FIRCLSReportUploader.h in Headers */,
+				D9AF5C282FA11156B3ECA3304144CCA2 /* FIRCLSReportUploader_Private.h in Headers */,
+				6C54556A24DD698C5561940DECF9DB80 /* FIRCLSSerializeSymbolicatedFramesOperation.h in Headers */,
+				438D6803050580432EFA30FFF98B87AC /* FIRCLSSettings.h in Headers */,
+				2E86EC8897D1B2DBC77CF4400E548ED7 /* FIRCLSSettingsManager.h in Headers */,
+				21AD3C1723AE820771AE1AD06E037ED4 /* FIRCLSSignal.h in Headers */,
+				2DDBD69F0B2C30A41C214BA39B0BE99A /* FIRCLSSymbolicationOperation.h in Headers */,
+				39E199EDD9F217683BF8534DA025C0DF /* FIRCLSSymbolResolver.h in Headers */,
+				38628DE14E1F379BB43ED610C0800965 /* FIRCLSThreadArrayOperation.h in Headers */,
+				D807446B0E38E75CC2A531715D60D036 /* FIRCLSThreadState.h in Headers */,
+				BB5527AC4721CC15D4E9748BB3D02AB5 /* FIRCLSUnwind.h in Headers */,
+				EE55C240620A0749E86CFC211909D3A5 /* FIRCLSUnwind_arch.h in Headers */,
+				D1BB570B778A284B563B1AC6C2403DBE /* FIRCLSUnwind_x86.h in Headers */,
+				8D21DDBC78FAB09F930A72F52E8EC9B7 /* FIRCLSURLBuilder.h in Headers */,
+				71567958FD6B6DCE5EFF4F3B3913C011 /* FIRCLSUserDefaults.h in Headers */,
+				6C96FD27196F22286B0AC175632DD1E2 /* FIRCLSUserDefaults_private.h in Headers */,
+				8D7777E27B9FC2FC2DF2336BADFF6C62 /* FIRCLSUserLogging.h in Headers */,
+				FB3FDC603034EC2F08DFF2E9FB8EEA12 /* FIRCLSUtility.h in Headers */,
+				F5FFC6232BE54689087DAD8017AC9995 /* FIRCLSUUID.h in Headers */,
+				1BEAEEE6C51D497AE0EBB6FD41992C32 /* FIRComponent.h in Headers */,
+				3463A7F424D5405C4FA5B2C02075AB2D /* FIRComponentContainer.h in Headers */,
+				E89BC0BC78E672F8BB6BDD6608EE47D0 /* FIRComponentType.h in Headers */,
+				08E68A0062CB205F695CFA1CBDAB5FE2 /* FIRCoreDiagnosticsConnector.h in Headers */,
+				031AEAC5A2C3D20EB805FAB27FE7DA93 /* FIRCrashlytics.h in Headers */,
+				C2E580963F3B5B2B17ED4FE5B3988A1A /* FIRCrashlyticsReport.h in Headers */,
+				5E138E279AF3A96130B6CA44D3127A2A /* FIRCrashlyticsReport_Private.h in Headers */,
+				75A9DAF75470D10278229C65F0442759 /* FIRDependency.h in Headers */,
+				829CB80EA4E8E88BF0AF6A4BABD28C0F /* FirebaseCoreInternal.h in Headers */,
+				3D111CA64D15918415A4C5FD4243130E /* FirebaseCrashlytics.h in Headers */,
+				4576F187CE8BA80C49868707B019184F /* FirebaseCrashlytics-umbrella.h in Headers */,
+				A9ED1B250B445BEAFB126C58F3BC59A2 /* FirebaseInstallationsInternal.h in Headers */,
+				6C6C8113F7476DE935954DBC03566DBA /* FIRExceptionModel.h in Headers */,
+				68AEDBD0EE9BF67DB1D6FC6541CED5F7 /* FIRExceptionModel_Private.h in Headers */,
+				F62FEE4F8BA5A5A5BAFBBBB122A3C92D /* FIRHeartbeatInfo.h in Headers */,
+				233B9C1751480C2E115798BC8B989C68 /* FIRInteropEventNames.h in Headers */,
+				62362C812A0D55006BE4607F2EC6B54C /* FIRInteropParameterNames.h in Headers */,
+				59C80E23253A09A0E6E0319348E2C3D9 /* FIRLibrary.h in Headers */,
+				083D4AF6AF699DA42D961EE1611772C2 /* FIRLogger.h in Headers */,
+				D0F35A71DE9054A64A63BC200548C2A4 /* FIROptionsInternal.h in Headers */,
+				5080262715B8B0A2EC710511A4A4CEA2 /* FIRStackFrame.h in Headers */,
+				AB99404F33D59CDBCEC627959FB0DD21 /* FIRStackFrame_Private.h in Headers */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
 		14FF1799C5ADBC71E1DB963F2AF8853D /* Headers */ = {
 			isa = PBXHeadersBuildPhase;
 			buildActionMask = 2147483647;
@@ -5374,159 +5591,57 @@
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		239ED187070B527847ACBEB4BB82B03F /* Headers */ = {
+		389AD5ACE5BDE5E8F1D8F93D37DE240A /* Headers */ = {
 			isa = PBXHeadersBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				F7BCBD4B26D1056D1BC890793BF1B149 /* FIRAppInternal.h in Headers */,
-				45AA9765A1A61F9615A543B11BE838F9 /* FIRComponent.h in Headers */,
-				54CE358C4D3451F1DB8D54FE911DEB26 /* FIRComponentContainer.h in Headers */,
-				E61B2118829E44C5EF04A53FD3CEFBD1 /* FIRComponentType.h in Headers */,
-				8A4BC69E15919505A6F89191F0945C91 /* FIRCoreDiagnosticsConnector.h in Headers */,
-				A4558AEA771AD5871F082420B91D216B /* FIRCurrentDateProvider.h in Headers */,
-				55148DBCC0111F4BBCD7A807C7092758 /* FIRDependency.h in Headers */,
-				A90C6318AC9AA7B70E02836FF195A4AE /* FirebaseCoreInternal.h in Headers */,
-				4FE0108CFAE4B77C4041D5C1A4C45B8D /* FirebaseInstallations.h in Headers */,
-				4550F29B3061E300F5614F37D1EDA89B /* FirebaseInstallations-umbrella.h in Headers */,
-				30744FF3852E702B14C90196FE753D88 /* FirebaseInstallationsInternal.h in Headers */,
-				BCC799E04E4BEC36694FF2D96C82D73F /* FIRHeartbeatInfo.h in Headers */,
-				83E0B27AC96EAA333CCC2CDC82FA0308 /* FIRInstallations.h in Headers */,
-				F7541967AA9A46FD41EA54F8054786D2 /* FIRInstallationsAPIService.h in Headers */,
-				8318B93B2AC1A4CBAD7BE9955D53CC8E /* FIRInstallationsAuthTokenResult.h in Headers */,
-				34EB0DF2DBEF0EDB954E878E0A142F8E /* FIRInstallationsAuthTokenResultInternal.h in Headers */,
-				8BEB733ABB5199365D51253F42943BE7 /* FIRInstallationsBackoffController.h in Headers */,
-				2A0C48BB78CB3F8226578A930FF54056 /* FIRInstallationsErrors.h in Headers */,
-				5CD3EDA44DF62CCA8D22B803B76D4EDC /* FIRInstallationsErrorUtil.h in Headers */,
-				2BFAAFDA773AAC30366DE80F2FA8B69F /* FIRInstallationsHTTPError.h in Headers */,
-				8E6448C2246F51E201C6389287E8C9D4 /* FIRInstallationsIDController.h in Headers */,
-				19471E7E2C7EFF1C83A8770DD5582FB2 /* FIRInstallationsIIDStore.h in Headers */,
-				695A6A2F2A97D398E74F9C7561DC1D16 /* FIRInstallationsIIDTokenStore.h in Headers */,
-				11194B5145F838D4DDE77CC0CD781D95 /* FIRInstallationsItem.h in Headers */,
-				28523A413868FFBE3740D2680EE00B84 /* FIRInstallationsItem+RegisterInstallationAPI.h in Headers */,
-				551EF3D26CCC60A0F7DC33E66CE6223B /* FIRInstallationsLogger.h in Headers */,
-				45B0EBCFF52F94FB0D9327B64F2F4D3F /* FIRInstallationsSingleOperationPromiseCache.h in Headers */,
-				2518EC531157C20043C49A1CF7120878 /* FIRInstallationsStatus.h in Headers */,
-				D3D8525F7537F05AB5453F2E6B30EEB0 /* FIRInstallationsStore.h in Headers */,
-				9102091CD8CC7935F99E2A75A212A461 /* FIRInstallationsStoredAuthToken.h in Headers */,
-				097D55FEB2153F27BF6B269C05A3B210 /* FIRInstallationsStoredItem.h in Headers */,
-				C8C60A9C2F77696952886B6846A8C5B8 /* FIRLibrary.h in Headers */,
-				500E6E644051237F5616A281B1C639E4 /* FIRLogger.h in Headers */,
-				51E42E1975662488CCBBA593142D7249 /* FIROptionsInternal.h in Headers */,
+				82CB9E4F10715547BD21B9186E0DCEFA /* FIRCoreDiagnostics.h in Headers */,
+				CEA86875A8848B057163E7E4C1447955 /* FIRCoreDiagnosticsData.h in Headers */,
+				C6918F9BF6595E5B86C77996CB87016C /* FIRCoreDiagnosticsInterop.h in Headers */,
+				F52F1554366E55BAC8341747D3804461 /* firebasecore.nanopb.h in Headers */,
+				97425E10752F617CC526C9C00E5D6842 /* FirebaseCoreDiagnostics-umbrella.h in Headers */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		26C4C5110E55B82E4C366BA4EE7AF85F /* Headers */ = {
+		3D78E6B12D0C7704AA6257B6D7CE969B /* Headers */ = {
 			isa = PBXHeadersBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				A4EDBF2A218E746D173561E0D932D4CF /* NSBezierPath+SDRoundedCorners.h in Headers */,
-				D1D9C65C8B77917F2664BBFFD89DACAD /* NSButton+WebCache.h in Headers */,
-				4583C9D7A6468C758CB500173938C00F /* NSData+ImageContentType.h in Headers */,
-				79F53EA53133D43CAE0E49B8BB12286C /* NSImage+Compatibility.h in Headers */,
-				C6C23A52B39670920955B9FE038F0968 /* SDAnimatedImage.h in Headers */,
-				CABDAF0FD46392C9397F92B31376BA8E /* SDAnimatedImagePlayer.h in Headers */,
-				90C1EA8DE26FAF49D56B98E8BC572223 /* SDAnimatedImageRep.h in Headers */,
-				6EE27B160F815258E58D818230BC6754 /* SDAnimatedImageView.h in Headers */,
-				F123BB5C5FBCAF9E06280CE3D72E4BA0 /* SDAnimatedImageView+WebCache.h in Headers */,
-				8B6BEC68223AD4BD450BE8A160AB491F /* SDAssociatedObject.h in Headers */,
-				0E7553092686A196178606F66F337DAE /* SDAsyncBlockOperation.h in Headers */,
-				2F034B0DD71A394E88E97B34920450A3 /* SDDeviceHelper.h in Headers */,
-				249B85F7F9837CC2D5ED4EA6693909C0 /* SDDiskCache.h in Headers */,
-				E91212A1254FD36FCB7027352F9852AA /* SDDisplayLink.h in Headers */,
-				E595E9B151B6AA707C80708EB4F95340 /* SDFileAttributeHelper.h in Headers */,
-				C6B0D967B490C8480F7D2A970D00976D /* SDGraphicsImageRenderer.h in Headers */,
-				C6600B18355EE8C34770E4059C2C122C /* SDImageAPNGCoder.h in Headers */,
-				DFC7A99638975216635A098E5549807B /* SDImageAssetManager.h in Headers */,
-				DF6A18EFF9E8A20A36365C814AF14774 /* SDImageAWebPCoder.h in Headers */,
-				A634015866950D94761B1A4098CACB89 /* SDImageCache.h in Headers */,
-				7A5F0F600E4D4CD0087983C45B8A27D1 /* SDImageCacheConfig.h in Headers */,
-				9A454C265CFCCEBEC7B625F3C906147E /* SDImageCacheDefine.h in Headers */,
-				3DD19434AD362B3068A93DDDA451C9B0 /* SDImageCachesManager.h in Headers */,
-				F1217B28A7A74E92A1B29B3F6EEFF120 /* SDImageCachesManagerOperation.h in Headers */,
-				8FD684EA3B49F79A5FF9BBA1B665F819 /* SDImageCoder.h in Headers */,
-				4DC120110112869C45B25CB997BC8FD0 /* SDImageCoderHelper.h in Headers */,
-				6A15696300FCF1254C1CD15CF88DA4DC /* SDImageCodersManager.h in Headers */,
-				53C4E03612B796B95E4755FF84BF670D /* SDImageFrame.h in Headers */,
-				79D94903B5B6A1C4DE3879F69C17C710 /* SDImageGIFCoder.h in Headers */,
-				085C6AF04D9ADC7AC456B666DA5B2C77 /* SDImageGraphics.h in Headers */,
-				A7C6BE0FCB633E0A3E867CB08E855A1E /* SDImageHEICCoder.h in Headers */,
-				EADDFF5A18A0AFEF5953C9AC0E1BCA7B /* SDImageIOAnimatedCoder.h in Headers */,
-				0DDF28AA89658F68C048B45B77B44295 /* SDImageIOAnimatedCoderInternal.h in Headers */,
-				50ED594713EEF28983AB210E60D4F31F /* SDImageIOCoder.h in Headers */,
-				66E28546EE9173427AE3655323AA9AF0 /* SDImageLoader.h in Headers */,
-				CC68CBB0E90F5275DD3E29B2000AFF4D /* SDImageLoadersManager.h in Headers */,
-				FB29B592DD7D52476A1E0558382D7317 /* SDImageTransformer.h in Headers */,
-				4C99231B90F4045C1AEF3EF5779B7787 /* SDInternalMacros.h in Headers */,
-				8FC09D3EE441FA247CA07D88DF5D8B49 /* SDMemoryCache.h in Headers */,
-				E4556AC023DCF622A358B02CB4CC9994 /* SDmetamacros.h in Headers */,
-				36A3D1824555484715A06000C01491B1 /* SDWeakProxy.h in Headers */,
-				484B1A0130DBC69FF158F9F80CEE202F /* SDWebImage.h in Headers */,
-				4FCA14D0DEE6E0946CD2725206C2C79C /* SDWebImage-umbrella.h in Headers */,
-				4E11E85EC872BE67C2AC0D4534789B42 /* SDWebImageCacheKeyFilter.h in Headers */,
-				66A178D8239147EBB95C410E3CDA5292 /* SDWebImageCacheSerializer.h in Headers */,
-				A33225872D73D921680B7493BD86B33B /* SDWebImageCompat.h in Headers */,
-				174616595037B5DF5773EC35D7050F41 /* SDWebImageDefine.h in Headers */,
-				930697468DE92743249DA71268154857 /* SDWebImageDownloader.h in Headers */,
-				F803685507789F6484A9710B9742BA3E /* SDWebImageDownloaderConfig.h in Headers */,
-				E041530326B7D9C14D2CA5284E4E3D90 /* SDWebImageDownloaderDecryptor.h in Headers */,
-				24DBB9779EF8DC7F6E5894382F83D6E5 /* SDWebImageDownloaderOperation.h in Headers */,
-				4741E06C24F806063F34B94C4FA650FC /* SDWebImageDownloaderRequestModifier.h in Headers */,
-				C43B5D650158E328B6433996C101174E /* SDWebImageDownloaderResponseModifier.h in Headers */,
-				EDB1267E5611BFBF06D0441EE0FF6913 /* SDWebImageError.h in Headers */,
-				C640BF05776E6C910E62A5E1DCACE870 /* SDWebImageIndicator.h in Headers */,
-				43EFFD6DFFE27FB7A6B267713286B39A /* SDWebImageManager.h in Headers */,
-				983D58C554FB5709EE4B3DDF4373EFCA /* SDWebImageOperation.h in Headers */,
-				F8FEB60172EB9E00A51A05C14FCCD4FA /* SDWebImageOptionsProcessor.h in Headers */,
-				BD0B0E35C9F60903A656B5D2FD068E80 /* SDWebImagePrefetcher.h in Headers */,
-				298512D9E325D9DB962DA75D392C514E /* SDWebImageTransition.h in Headers */,
-				C4AA336DB387CE6FEFB36F5580B6B0B5 /* SDWebImageTransitionInternal.h in Headers */,
-				8DDD88BF51F82A2B8C60B4FB41E2933B /* UIButton+WebCache.h in Headers */,
-				995647663CA44842946B4A8908E1038F /* UIColor+SDHexString.h in Headers */,
-				04053EB30E68FF17359B98C21257B929 /* UIImage+ExtendedCacheData.h in Headers */,
-				CB2122DEF1F586E4638CF7B72777BF7C /* UIImage+ForceDecode.h in Headers */,
-				7BE2833986613379EB0637E639F0F2D4 /* UIImage+GIF.h in Headers */,
-				55AC6FAB1877C1DC6664B281976C5196 /* UIImage+MemoryCacheCost.h in Headers */,
-				D7D14E97E37A65A7233F20EF442E8B06 /* UIImage+Metadata.h in Headers */,
-				A24475730DF5525845B98C4F8F2D291F /* UIImage+MultiFormat.h in Headers */,
-				403A6B5EBD57A157D5869A90AE2BC76B /* UIImage+Transform.h in Headers */,
-				436AFD2CBA4582805A4CF00EFCAA7B4D /* UIImageView+HighlightedWebCache.h in Headers */,
-				8DB236E7BCE38E7D23669853E1D5326C /* UIImageView+WebCache.h in Headers */,
-				E8E0820BD79845C662B0D76CDDB735B5 /* UIView+WebCache.h in Headers */,
-				4762D0A3217D60D92719701EC1C7FD0D /* UIView+WebCacheOperation.h in Headers */,
+				E290630326514476CA3D4651D3FB2C12 /* SwiftMessages-umbrella.h in Headers */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		4891E5734362BBB864F6CEF0DB97E526 /* Headers */ = {
+		44F04822051718C4A016DC17ACA06C47 /* Headers */ = {
 			isa = PBXHeadersBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				E5CCD4605B615AEADB69103A490F67F5 /* FIRAnalyticsConfiguration.h in Headers */,
-				BC3E41A600DF8C62DFA807CEA94949BD /* FIRApp.h in Headers */,
-				F83B33FB87324F0DE7EF7A7BE8C8A5A5 /* FIRAppAssociationRegistration.h in Headers */,
-				A227B3B2D6FC9C7FD6EC6D2DC372D150 /* FIRAppInternal.h in Headers */,
-				45EEA0A9FEB680603C90A97A7815B285 /* FIRBundleUtil.h in Headers */,
-				E7AEDFA34BCFFA2AC47B819C431C874E /* FIRComponent.h in Headers */,
-				238E90901A7C00AE436DBD4527285A6F /* FIRComponentContainer.h in Headers */,
-				8ED24F369A278CB054814C9C27648C6D /* FIRComponentContainerInternal.h in Headers */,
-				15F45E4B4F7BD007B0C637B4A910B66C /* FIRComponentType.h in Headers */,
-				3B66D545ADAB80AD16FE297E71585050 /* FIRConfiguration.h in Headers */,
-				2E162C349BFFC75BEBDD90C6B3D68EE2 /* FIRConfigurationInternal.h in Headers */,
-				B8EF1C87AA1893419E428AE16D33A192 /* FIRCoreDiagnosticsConnector.h in Headers */,
-				D857BBB7C94269DA6060D224B8A8F550 /* FIRCoreDiagnosticsData.h in Headers */,
-				A431E90380BDE47DC267669B58DC2806 /* FIRCoreDiagnosticsInterop.h in Headers */,
-				06BCE7D868AAA927C2A986874D381C84 /* FIRDependency.h in Headers */,
-				31A158836CBFACDBBF32558A88449D28 /* FIRDiagnosticsData.h in Headers */,
-				ADE6342B3812B2D6F306B75B0B8E079F /* FirebaseCore.h in Headers */,
-				881167702D8D75997D27CDBFDDD2DAB4 /* FirebaseCore-umbrella.h in Headers */,
-				FFF79C59323698C1431EA0AB3729EA90 /* FirebaseCoreInternal.h in Headers */,
-				07B39A8CA154D6313AB1BFE6D1CB37B1 /* FIRFirebaseUserAgent.h in Headers */,
-				14349838E95C276D5651D82ACDBD5D83 /* FIRHeartbeatInfo.h in Headers */,
-				83B015502666C971E22A5485F7E4E976 /* FIRLibrary.h in Headers */,
-				F5AE68300414EE987129D0A68AD88274 /* FIRLogger.h in Headers */,
-				32B6508B0B32A71A9CBFBBE98F85D8D5 /* FIRLoggerLevel.h in Headers */,
-				081DE5F9A30CC163C0DC5A4817420DCF /* FIROptions.h in Headers */,
-				F07082CF15E0B52471FDA2680E64E451 /* FIROptionsInternal.h in Headers */,
-				755FBE2832D2B4740DD7C75E4B252262 /* FIRVersion.h in Headers */,
+				028F3243F31F4BF617E448CB992DD5C4 /* FIRAnalyticsConfiguration.h in Headers */,
+				AB50D785BCEA5913D21BD4CFE7A0A175 /* FIRApp.h in Headers */,
+				AF9583D2580693E7601A9060FDE765DA /* FIRAppAssociationRegistration.h in Headers */,
+				843666F349D56CFCAA9094F318BE540A /* FIRAppInternal.h in Headers */,
+				B9548EBF10A86F7C04212D1C025D1486 /* FIRBundleUtil.h in Headers */,
+				730B27A4F901DC8834B1AC0721A65153 /* FIRComponent.h in Headers */,
+				0BEC11846600E698ED0044C94E71BB2F /* FIRComponentContainer.h in Headers */,
+				8D6B813903B4EEB00D7FF1464F1BBE16 /* FIRComponentContainerInternal.h in Headers */,
+				20473D1B54B44C0E2A91114EBDDB3D97 /* FIRComponentType.h in Headers */,
+				91DD9EDE8281B1E2A3B50316A26B2FF5 /* FIRConfiguration.h in Headers */,
+				DA26B8218DE9A7CE58E58E269B1F5D05 /* FIRConfigurationInternal.h in Headers */,
+				487BADF0C907F08C69F3CCA9702A4F47 /* FIRCoreDiagnosticsConnector.h in Headers */,
+				674D051040C14BF613BA207697542966 /* FIRCoreDiagnosticsData.h in Headers */,
+				995A6F68C06D0CBD793F5323982DC021 /* FIRCoreDiagnosticsInterop.h in Headers */,
+				F6D7ECBB300D42565D0694EF4BF31612 /* FIRDependency.h in Headers */,
+				17AA1AC36F8BD089023D28807026B3BF /* FIRDiagnosticsData.h in Headers */,
+				CF62129300C2A4F0683385B8C6C49291 /* FirebaseCore.h in Headers */,
+				2A9872CEABAC1045112AA8627EE598B8 /* FirebaseCore-umbrella.h in Headers */,
+				2626D9A7FAB2D319F560316B6AA90D54 /* FirebaseCoreInternal.h in Headers */,
+				51B3E831E9B07D3669C41932C7BB82D2 /* FIRFirebaseUserAgent.h in Headers */,
+				EA57D4FACE2152626DB5FC3D782B0E02 /* FIRHeartbeatInfo.h in Headers */,
+				BEDDC075247FCFB81924768E7976AC1C /* FIRLibrary.h in Headers */,
+				FE15EACE9FF300871A5358AB91DCBFAE /* FIRLogger.h in Headers */,
+				D0F02D0ED0B1D57B5F5D4933A5601ECE /* FIRLoggerLevel.h in Headers */,
+				5E4F0DB4903BDC9253C0E2C40FE04686 /* FIROptions.h in Headers */,
+				84669F8865BB677B0D8BB05EECCD2187 /* FIROptionsInternal.h in Headers */,
+				E78DC05A487A7832BB754A3D9A55A8C0 /* FIRVersion.h in Headers */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -5547,350 +5662,291 @@
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		5DBB6EBD584296B55568FACFAB9809A9 /* Headers */ = {
-			isa = PBXHeadersBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				20D543DF73D5F832C509C48D92F6E138 /* FIRCoreDiagnostics.h in Headers */,
-				246B5305B91DA36E82E5D439B78A3354 /* FIRCoreDiagnosticsData.h in Headers */,
-				C4E45C439BA99C833D00F3AE563548E9 /* FIRCoreDiagnosticsInterop.h in Headers */,
-				A3F77FEFF580A33233F480B86CEC96C8 /* firebasecore.nanopb.h in Headers */,
-				AC39C98710259E1350AB2D5AB94F0449 /* FirebaseCoreDiagnostics-umbrella.h in Headers */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		776836266B31FE619C3AAF31F70DF5A2 /* Headers */ = {
-			isa = PBXHeadersBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				F5CE84D724103BAB24D2C2F846A5AC44 /* nanopb-umbrella.h in Headers */,
-				DA1DE7699100D286A15E72CEE05CBB23 /* pb.h in Headers */,
-				BD8B24E8B977B44323E84C8B7D7E2EC1 /* pb_common.h in Headers */,
-				6B7806F42C7F74405024FAB14A283759 /* pb_decode.h in Headers */,
-				E782FF8B4B47A5D6C92CBF317E4239FC /* pb_encode.h in Headers */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		7FFD306ADC33A391FB72B0176F26A5DA /* Headers */ = {
+		5B484802D29A80670B17F2BDC7AA56F6 /* Headers */ = {
 			isa = PBXHeadersBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				9CAC70966D8F0B617246FFD585F29A1D /* SwiftMessages-umbrella.h in Headers */,
+				2F39188025B6431F82AEFF74CEAD9E4C /* FBLPromise.h in Headers */,
+				2BF2572DAB153D76E5CDF25B94111787 /* FBLPromise+All.h in Headers */,
+				9F7F738FCDD36EED241DE93CC2424AFB /* FBLPromise+Always.h in Headers */,
+				7A5CFE9F3A3302AF0638F62F8CC2747B /* FBLPromise+Any.h in Headers */,
+				E9F6411EBC7C3767516EE20633A03C7E /* FBLPromise+Async.h in Headers */,
+				08ADC699CA7BD63468744E25832498E9 /* FBLPromise+Await.h in Headers */,
+				F22AD1F418E6E11BBAA9BA4527E837CD /* FBLPromise+Catch.h in Headers */,
+				D364FC5314D60C89763C775DA70AC9B5 /* FBLPromise+Delay.h in Headers */,
+				950B57DAE8E0BB34C37FBB1CBBE31215 /* FBLPromise+Do.h in Headers */,
+				9AF0D8418E91FC0E799BB6247974E7B7 /* FBLPromise+Race.h in Headers */,
+				7D401C0F14C650A4EBE9EDDC05C17FFA /* FBLPromise+Recover.h in Headers */,
+				61EE88764F632A61E99C6073060B50C1 /* FBLPromise+Reduce.h in Headers */,
+				054D7C2EABEFB9101031D56167680F11 /* FBLPromise+Retry.h in Headers */,
+				C18D4023FD9EABC584F36F22C4143B99 /* FBLPromise+Testing.h in Headers */,
+				802A2BC11D010ED5E4DE922296F94819 /* FBLPromise+Then.h in Headers */,
+				9B84FC704A9111568E8F6B1E412C0165 /* FBLPromise+Timeout.h in Headers */,
+				2437A2EDCA106850F69BDDB2EF449E33 /* FBLPromise+Validate.h in Headers */,
+				E9C2D2A1A26FD1396EFF14FE417E179C /* FBLPromise+Wrap.h in Headers */,
+				9196ABC52C1B0885EB15BC1564D74DAA /* FBLPromiseError.h in Headers */,
+				27024204303EEB7BDCFB73495FD2A495 /* FBLPromisePrivate.h in Headers */,
+				3053A5E14B7703F4EA48903170FECCB1 /* FBLPromises.h in Headers */,
+				8C1EE33948C6992C7FB59CA0DB8CFD56 /* PromisesObjC-umbrella.h in Headers */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		840A69FC16AA93214053C5370D384486 /* Headers */ = {
+		697A4BCC6FB9E9C5AE5C675E24A72D1E /* Headers */ = {
 			isa = PBXHeadersBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				19DF6A30FC3FD0E23E7B81972036F4DE /* IQKeyboardManagerSwift-umbrella.h in Headers */,
+				B5D2DEEB70819873E1CC24DB623586A0 /* GoogleUtilities-umbrella.h in Headers */,
+				B0F60847F38CC318B18532C10B7E827F /* GULAppDelegateSwizzler.h in Headers */,
+				4F3DF97DE1F4444DD36D0C2A313E246D /* GULAppDelegateSwizzler_Private.h in Headers */,
+				D12091A3726B42043B0060EF7FC4EBF1 /* GULAppEnvironmentUtil.h in Headers */,
+				603E0C553DA1201E396629A03140CBE2 /* GULApplication.h in Headers */,
+				F03B208645DEEE46D09C9A8AC03F1D90 /* GULHeartbeatDateStorable.h in Headers */,
+				3DBF5BFC16AA60D5A4917C3FC367A467 /* GULHeartbeatDateStorage.h in Headers */,
+				5DB6A3C7604D800AF0A3C29ECE6938C9 /* GULHeartbeatDateStorageUserDefaults.h in Headers */,
+				F37374A95021D188C04B9485ED8CA4BD /* GULKeychainStorage.h in Headers */,
+				01755A9B34CCE659DFFC19F21B4B62D6 /* GULKeychainUtils.h in Headers */,
+				E9772E4397A53825AA76AAAFFFE45523 /* GULLogger.h in Headers */,
+				3FB5466B477EF5D0757899F9477BF984 /* GULLoggerCodes.h in Headers */,
+				FAA6B878B4A53B31274958A36CCFD059 /* GULLoggerLevel.h in Headers */,
+				B7DC6553CE508715C6C304D020C78C53 /* GULMutableDictionary.h in Headers */,
+				92C805AF2437F3E81EBD6C749DA22EC5 /* GULNetwork.h in Headers */,
+				80E0986CDA0DFE08B078FE0581B0A6F5 /* GULNetworkConstants.h in Headers */,
+				7FDFB25E51BE52A48A49D3C661B0223E /* GULNetworkInternal.h in Headers */,
+				0CE08F42404524E6648D6B945CD8F13C /* GULNetworkLoggerProtocol.h in Headers */,
+				8C2A2ABAA196AD49D78F684700502EAF /* GULNetworkMessageCode.h in Headers */,
+				5039AA2899CEC521300BCA6543BE8BC9 /* GULNetworkURLSession.h in Headers */,
+				8DFA00019358DD2ECD70B279E5CB0149 /* GULNSData+zlib.h in Headers */,
+				62CD7DA597976D4395750C0379B0DC09 /* GULOriginalIMPConvenienceMacros.h in Headers */,
+				FAE93C419CCC266CE8200AF16417101F /* GULReachabilityChecker.h in Headers */,
+				AF419544222E918C8BE00A97B6CCE7B3 /* GULReachabilityChecker+Internal.h in Headers */,
+				072E4CD941B44109FDA696C352FE20AD /* GULReachabilityMessageCode.h in Headers */,
+				F9D1423757DB6EF350AB9F555FA091D1 /* GULSceneDelegateSwizzler.h in Headers */,
+				33767CB4C895DA734F8D9E3AEC14579F /* GULSceneDelegateSwizzler_Private.h in Headers */,
+				A2E84AC2685FFA416CE27526E7034B7E /* GULSecureCoding.h in Headers */,
+				C020A8BFDD96A6EC2DA196FA3BBF3E7B /* GULSwizzler.h in Headers */,
+				DEDAD74D55FBB81EEA59F44D79BA1E5F /* GULURLSessionDataResponse.h in Headers */,
+				7731185DDAF42D278EA3153DBF37C011 /* GULUserDefaults.h in Headers */,
+				58685DC6460E898205F8BAA48DB225CE /* NSURLSession+GULPromises.h in Headers */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		8CCFFEBBB9CA4C2F311EABF6BF13A9DE /* Headers */ = {
+		712A54EB9966446126F40CE5FD08767E /* Headers */ = {
 			isa = PBXHeadersBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				E1A386463DBD9A234499200838126EB8 /* crashlytics.nanopb.h in Headers */,
-				7CAA0F4C8A1F7B4B6ED2D6DD48B051E9 /* dwarf.h in Headers */,
-				E143720C71F82EAC933BE77A5B235178 /* FIRAnalyticsInterop.h in Headers */,
-				F9553EB968D31908D5759AB70BB6DC07 /* FIRAnalyticsInteropListener.h in Headers */,
-				298E7599A2C95BD723FCBBCC989F9C6D /* FIRAppInternal.h in Headers */,
-				A8CD652A0A0DC22FC602BA494FE6AC3B /* FIRCLSAllocate.h in Headers */,
-				95C25495AD5DF7A2C17F8DFCD68B7EF2 /* FIRCLSAnalyticsManager.h in Headers */,
-				248ADB533B8493A45AD527D0A0DBD40C /* FIRCLSApplication.h in Headers */,
-				1877B2DE65849857B58E76C062E21D60 /* FIRCLSApplicationIdentifierModel.h in Headers */,
-				D76B077F2F2040CA121219614C905CAF /* FIRCLSAsyncOperation.h in Headers */,
-				F44C4D989C3CEB267C8378B3AE1F3C8B /* FIRCLSAsyncOperation_Private.h in Headers */,
-				6195A638DC0FE8005F99B71FB735B251 /* FIRCLSBinaryImage.h in Headers */,
-				FF40BE4635D258069BBA82B0659C82D5 /* FIRCLSByteUtility.h in Headers */,
-				CABAE7CDE97E569064B6FF8FAEA0C87B /* FIRCLSCodeMapping.h in Headers */,
-				9797C2E8AE2E6AE1D6AFDB95B8BA40A8 /* FIRCLSCompactUnwind.h in Headers */,
-				6DF94A8D0CE257DAB9113CB3B83EA6F9 /* FIRCLSCompactUnwind_Private.h in Headers */,
-				2BC844598E19107A0F0CA0E4330E4743 /* FIRCLSCompoundOperation.h in Headers */,
-				FDFB25B6CA1DCB7364E7D761A8115758 /* FIRCLSConstants.h in Headers */,
-				BFDCC81C7EC038AF625D43CB76D78880 /* FIRCLSContext.h in Headers */,
-				6AE7FCC676E85D3B7C2EB585C2CE40A2 /* FIRCLSCrashedMarkerFile.h in Headers */,
-				B49A3BE51C5503193A4C1B7C998122B5 /* FIRCLSDataCollectionArbiter.h in Headers */,
-				38BF33103E487F8F978B2AB96C5F7BE9 /* FIRCLSDataCollectionToken.h in Headers */,
-				D1A658A4D0AAA916F850DDAA02777583 /* FIRCLSDataParsing.h in Headers */,
-				EF9B136CE545127A8F353C66E2C9CAC9 /* FIRCLSDefines.h in Headers */,
-				26173F3A69B8FB630AAC9049E1355AC6 /* FIRCLSDemangleOperation.h in Headers */,
-				EC31E9F5738A979B392A8822496663CF /* FIRCLSDownloadAndSaveSettingsOperation.h in Headers */,
-				D4EF3F205F6BDFA70345DB099492C622 /* FIRCLSdSYM.h in Headers */,
-				CB5AEC7AEA1000D38AD03392DE9FF714 /* FIRCLSDwarfExpressionMachine.h in Headers */,
-				3F4329E53B9D1852BD7C9438A13DA65F /* FIRCLSDwarfUnwind.h in Headers */,
-				5DE0656DBBFCA007CA2E877CACAE4DDF /* FIRCLSDwarfUnwindRegisters.h in Headers */,
-				FFCFB10DCB5300D16F653BE776CC3759 /* FIRCLSException.h in Headers */,
-				828210A978AF1F92B65D5566716E29CC /* FIRCLSExecutionIdentifierModel.h in Headers */,
-				ACDC393529D7E3A2E71E9A28A45FA72C /* FIRCLSExistingReportManager.h in Headers */,
-				D2D3CA06466831985B08759960CCBAD2 /* FIRCLSExistingReportManager_Private.h in Headers */,
-				DB6A1F67992C9642432645AA52372634 /* FIRCLSFABAsyncOperation.h in Headers */,
-				0F26FE9DA54D77F560868DF84BA8736C /* FIRCLSFABAsyncOperation_Private.h in Headers */,
-				E7607F7C6E346C91E0FC5D139BE1AB14 /* FIRCLSFABHost.h in Headers */,
-				E7235FAC1F18B008D75B4CAB0260E14D /* FIRCLSFABNetworkClient.h in Headers */,
-				3BAD465093BAD15FB70B74EA86388B3E /* FIRCLSFeatures.h in Headers */,
-				50DDC2A2E6D0D587819126BB18F25488 /* FIRCLSFile.h in Headers */,
-				4758FB97CB203A67AC9E03ACB13DF7E9 /* FIRCLSFileManager.h in Headers */,
-				94152C7851DAEFA6BCB14A2EC2D1FFCD /* FIRCLSGlobals.h in Headers */,
-				485DED0B0AD49B8218A57C803D850D14 /* FIRCLSHandler.h in Headers */,
-				2367A542AE72D37097FA7B5DD1CA74D0 /* FIRCLSHost.h in Headers */,
-				B6DC9DB440ECB79C25656B26DA6437F3 /* FIRCLSInstallIdentifierModel.h in Headers */,
-				1143767A94273B73BDCB734974C5C67F /* FIRCLSInternalLogging.h in Headers */,
-				4F708FB40B1432842B08EC68A1E8351A /* FIRCLSInternalReport.h in Headers */,
-				11B271FCE5FFFFAD2CC348205DB7EAFA /* FIRCLSLaunchMarkerModel.h in Headers */,
-				B3BE34028107C59BB3745CDF300EA292 /* FIRCLSLogger.h in Headers */,
-				104051285654F1D5206DF77009518828 /* FIRCLSMachException.h in Headers */,
-				B50FA66F80907DA944C0487FDAEF2C0E /* FIRCLSMachO.h in Headers */,
-				2FBC023BA2571767F91CA68EEC44E087 /* FIRCLSMachOBinary.h in Headers */,
-				FED3ECDD574EF3067204CF0197028FD4 /* FIRCLSMachOSlice.h in Headers */,
-				46867832FC086B70B8EE19D8DBD42721 /* FIRCLSManagerData.h in Headers */,
-				0DF71F59F634309DCCAA196992FF2ECA /* FIRCLSMultipartMimeStreamEncoder.h in Headers */,
-				98B5D71C7BD6F124F91415D6A5B8F45C /* FIRCLSNetworkOperation.h in Headers */,
-				14A9E0CA4DCE9BBA5730C58C44617605 /* FIRCLSNetworkResponseHandler.h in Headers */,
-				4A550082F80F70049D1C86432E795025 /* FIRCLSNotificationManager.h in Headers */,
-				3DB91C587EAA9EBBA80732CC0A8A7554 /* FIRCLSOperation.h in Headers */,
-				3FAFF09EBE53F88BE2ADBEF321E11239 /* FIRCLSProcess.h in Headers */,
-				C46F9A3F22390CC1ACF9CEA083C816B0 /* FIRCLSProcessReportOperation.h in Headers */,
-				71F3C6CEBAA38F885422B341506238BE /* FIRCLSProfiling.h in Headers */,
-				94AB0DCE02D9BCC7D731D5EE243F741B /* FIRCLSRecordApplication.h in Headers */,
-				A7EC6D0C66518A1E9CFD694F97461F34 /* FIRCLSRecordBase.h in Headers */,
-				FF1234637A3EE65F45A5FDEB20451825 /* FIRCLSRecordHost.h in Headers */,
-				F3DC40871483270B08C42DAC468F9BBC /* FIRCLSRecordIdentity.h in Headers */,
-				7CF0403B68E6B870A6DB2B9D45AFA6EA /* FIRCLSReportAdapter.h in Headers */,
-				06FE30E043EC211209A590E9AFD1DBEE /* FIRCLSReportAdapter_Private.h in Headers */,
-				1EE3DFD4FE83B37C0CB5E084AF209C59 /* FIRCLSReportManager.h in Headers */,
-				568175B7C5A110601E394381CF908AF9 /* FIRCLSReportManager_Private.h in Headers */,
-				E7240E612B6D630001E8E7FF551C0429 /* FIRCLSReportUploader.h in Headers */,
-				EF62CB17DC2C79693EBACA565EDC637D /* FIRCLSReportUploader_Private.h in Headers */,
-				26DE93272A673BBA465FEB3B6D80707E /* FIRCLSSerializeSymbolicatedFramesOperation.h in Headers */,
-				F5F0F1B217DE3668A387FFF27C87DBE7 /* FIRCLSSettings.h in Headers */,
-				8FA44AB5DC9F9C4D8B63032C6D89033E /* FIRCLSSettingsManager.h in Headers */,
-				5D60D68830ADE8D6879C631403B966E2 /* FIRCLSSignal.h in Headers */,
-				E1D745315FD6F1F0AD715538FBD635B5 /* FIRCLSSymbolicationOperation.h in Headers */,
-				19A3BB9C753EE1FA32A05953FA9F4019 /* FIRCLSSymbolResolver.h in Headers */,
-				87E563A41F923F9C9F3DB8BB1746D4B5 /* FIRCLSThreadArrayOperation.h in Headers */,
-				0D08898C48D3764F8A74A89384539045 /* FIRCLSThreadState.h in Headers */,
-				E41160A36F21D0F897E99CA4F734B937 /* FIRCLSUnwind.h in Headers */,
-				E601A2D431A573B045EFA02A6E9613D1 /* FIRCLSUnwind_arch.h in Headers */,
-				DF43F4F186C610F06C28FB359305FD65 /* FIRCLSUnwind_x86.h in Headers */,
-				3E77D113CEB479C910AA66A8E79B69BA /* FIRCLSURLBuilder.h in Headers */,
-				47D0D99F5EFD8FCA9BD8CC84DCA46ADD /* FIRCLSUserDefaults.h in Headers */,
-				A6A72367E61539061009724FFFF1F242 /* FIRCLSUserDefaults_private.h in Headers */,
-				376803E5C1039566154740932DDE7E6F /* FIRCLSUserLogging.h in Headers */,
-				FB6EF0176698756E5F4D046316D258A2 /* FIRCLSUtility.h in Headers */,
-				A200B5251D9A1C77573E33175836D227 /* FIRCLSUUID.h in Headers */,
-				44E3703CD58106D1091140294186CB63 /* FIRComponent.h in Headers */,
-				03A7A98F82D065A57EFC4CD7AB45EBA7 /* FIRComponentContainer.h in Headers */,
-				2D6B5D270C6AD21B1328126C2F30E3BE /* FIRComponentType.h in Headers */,
-				8F97352B2E3B42951F6F153099E9EE31 /* FIRCoreDiagnosticsConnector.h in Headers */,
-				98636CBA005410E53A332D12B06A4181 /* FIRCrashlytics.h in Headers */,
-				905D8D61B9B6205C02268DE1185AB949 /* FIRCrashlyticsReport.h in Headers */,
-				97F8E0145A9B876B2CE4427B63190875 /* FIRCrashlyticsReport_Private.h in Headers */,
-				9ECFC5122FF6DCAF1EAA969514B802D7 /* FIRDependency.h in Headers */,
-				FD1104B7CCAD85AA4331560F5E7608E5 /* FirebaseCoreInternal.h in Headers */,
-				8C2C4CB578E2405EA4424CC45145AB0B /* FirebaseCrashlytics.h in Headers */,
-				485128B6E3BA6F3AB82ECEEFC53470B3 /* FirebaseCrashlytics-umbrella.h in Headers */,
-				107DF30920400D95CF4238F0A8EAEF8B /* FirebaseInstallationsInternal.h in Headers */,
-				070865E896C9068E98202F77DE6ADE1B /* FIRExceptionModel.h in Headers */,
-				89B8C4249EFBB031E7401EDD7ED0D48B /* FIRExceptionModel_Private.h in Headers */,
-				4ED5358875030C4DC39865E4AB0796C8 /* FIRHeartbeatInfo.h in Headers */,
-				904A1363A87F9CE0D626854FB7E4E4A6 /* FIRInteropEventNames.h in Headers */,
-				50A052DB21DC36BE3EFB65CCE74F21B3 /* FIRInteropParameterNames.h in Headers */,
-				DE47D564B4B03E73E4F5000EE464A774 /* FIRLibrary.h in Headers */,
-				EC25CEAC8D4B808055900A339249451F /* FIRLogger.h in Headers */,
-				CC6B702C0F479A32ADD01095E936576D /* FIROptionsInternal.h in Headers */,
-				779EF0D5E46FC57F6F1D0A6E22D58156 /* FIRStackFrame.h in Headers */,
-				352CFC99C52639425DDC19CF4756F5AE /* FIRStackFrame_Private.h in Headers */,
+				1B4999E14D2C030324B1AF6F9600A707 /* FIRAnalyticsInterop.h in Headers */,
+				C593E0900E7BC3658972B9BE0A779559 /* FIRAnalyticsInteropListener.h in Headers */,
+				72E9F025260883608C63360DF8D3A4A8 /* FIRAppInternal.h in Headers */,
+				CFFBFF9D2663E95F0696097B728BF3B7 /* FIRComponent.h in Headers */,
+				ADC62543BABAD66F8BC0232EC4288D08 /* FIRComponentContainer.h in Headers */,
+				A53C0C446470FA87FD787E4E439BC841 /* FIRComponentType.h in Headers */,
+				EBC233FC318B7BDECF90125C0D317479 /* FIRCoreDiagnosticsConnector.h in Headers */,
+				8CB225B687648069D61F6097FEA7EE0D /* FIRDependency.h in Headers */,
+				40233613DD959C689C6C97293D1636D6 /* FirebaseCoreInternal.h in Headers */,
+				FF2DD66337B097AEF20115FED7B3139B /* FirebaseInstallationsInternal.h in Headers */,
+				DF051DBBF710C7933556FFB9C127EC36 /* FirebaseMessaging.h in Headers */,
+				72377F374F0474DCC4749277DEB1148B /* FirebaseMessaging.h in Headers */,
+				BB4DA9117792BA0745CABE24EBC4E159 /* FirebaseMessaging-umbrella.h in Headers */,
+				EB1FAFE23567985155A983147DE20E3C /* FIRHeartbeatInfo.h in Headers */,
+				D0FF3D8FA3A5580870BC7192D45F4381 /* FIRInteropEventNames.h in Headers */,
+				560843488F16807AC3FB72EDEEC3D063 /* FIRInteropParameterNames.h in Headers */,
+				151C9075B23C4C58CFA9929663F17C99 /* FIRLibrary.h in Headers */,
+				1F9C96FFDE2087CA00194A93F474641F /* FIRLogger.h in Headers */,
+				6A7DB13545ED0AC10769282078BD0192 /* FIRMessaging.h in Headers */,
+				EBD43A7A57B04E62FC63BFB83F04A4CC /* FIRMessaging_Private.h in Headers */,
+				8E9FBCF847419B887F834635A2B7A432 /* FIRMessagingAnalytics.h in Headers */,
+				3A8E633D3C88509F6FF40FDB6BE1B609 /* FIRMessagingAPNSInfo.h in Headers */,
+				15BD4FC4280BFFE4F62120DF324C1566 /* FIRMessagingAuthKeychain.h in Headers */,
+				89462FBE70EF4D60D6B81989D00E4211 /* FIRMessagingAuthService.h in Headers */,
+				192F4E36BBCCD0725301478107C44D21 /* FIRMessagingBackupExcludedPlist.h in Headers */,
+				2C8DEBB5FA19D21BC06C3340DBF4DA3A /* FIRMessagingCheckinPreferences.h in Headers */,
+				CAB404EFD3A1CFABA06E44773C06BC13 /* FIRMessagingCheckinService.h in Headers */,
+				631785B92A65C4D0F3E7FAE72F5AB25A /* FIRMessagingCheckinStore.h in Headers */,
+				CD618584478F31BFFBFA24C031101BF0 /* FIRMessagingCode.h in Headers */,
+				B0B0A67A8CC868EF4D145A3AA598FC85 /* FIRMessagingConstants.h in Headers */,
+				24140584691B21E82A807B9EB3084F39 /* FIRMessagingContextManagerService.h in Headers */,
+				B1A4269AD7E7FE019019112F3C094385 /* FIRMessagingDefines.h in Headers */,
+				599485E0DB6372C909CBBE0480628C22 /* FIRMessagingExtensionHelper.h in Headers */,
+				3B18739ECA6F3986AC2A2BD0DC54DF6E /* FIRMessagingInterop.h in Headers */,
+				4890E5EB90D733296F8D30E4C20AA386 /* FIRMessagingKeychain.h in Headers */,
+				7CA1B6FBF36476C11F7103DC01011F27 /* FIRMessagingLogger.h in Headers */,
+				B4550342070C5D4FD21B9B3BC396044C /* FIRMessagingPendingTopicsList.h in Headers */,
+				95D83FADB4E81B51BBB2AA478BBB6872 /* FIRMessagingPersistentSyncMessage.h in Headers */,
+				BF658BB721432B9758B164828EA7A8E2 /* FIRMessagingPubSub.h in Headers */,
+				BEA1CC263AA78F45A05F996530F88087 /* FIRMessagingRemoteNotificationsProxy.h in Headers */,
+				5C42E94EB92662A1EE5B7C84D961276D /* FIRMessagingRmqManager.h in Headers */,
+				B197B0C5FB2916FDE4B18C374A4A7E19 /* FIRMessagingSyncMessageManager.h in Headers */,
+				A1D3F0B48F45057C5A3BD8083299E45E /* FIRMessagingTokenDeleteOperation.h in Headers */,
+				1FB15906A44CCD7C1D8FCF8C91A89A9A /* FIRMessagingTokenFetchOperation.h in Headers */,
+				37AA59E29AF46485B01995BFC6B23C20 /* FIRMessagingTokenInfo.h in Headers */,
+				9FD59361E123CD945A146C1167062D35 /* FIRMessagingTokenManager.h in Headers */,
+				2F8D1F743F470A7B3F4DBE22363B3DFE /* FIRMessagingTokenOperation.h in Headers */,
+				5A7C98167A083049181DD326280F2B5E /* FIRMessagingTokenStore.h in Headers */,
+				8B890EA37AB43BEC8B85DFEBFCE45D56 /* FIRMessagingTopicOperation.h in Headers */,
+				506FF7751ED4FEE7BD0F11D08A050280 /* FIRMessagingTopicsCommon.h in Headers */,
+				C2B4FA45B0E173739E83960253C76214 /* FIRMessagingUtilities.h in Headers */,
+				3D9CB98EAB964DBA9D7099F4919A1C95 /* FIROptionsInternal.h in Headers */,
+				2DE15B96D1E4A8D316017483FCCF6C89 /* me.nanopb.h in Headers */,
+				8BCBC20BDAFCE06A3785FFC4DB8AA26C /* NSDictionary+FIRMessaging.h in Headers */,
+				E6FFFDC806852AD866C51DA13C75D46C /* NSError+FIRMessaging.h in Headers */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		941A40B4F36ED3D714C7A2F5DD285662 /* Headers */ = {
+		9FD0288C82E9744AE225E2E5734C8257 /* Headers */ = {
 			isa = PBXHeadersBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				8DDCEFDEA90164023A97179B5761D1C0 /* cct.nanopb.h in Headers */,
-				AC5617588C3FC95AA516C6D5565B946D /* GDTCCTCompressionHelper.h in Headers */,
-				AEC220577DB6BC4C6BEC7774ADF64D1A /* GDTCCTNanopbHelpers.h in Headers */,
-				61DC44A14AD8485CC724D217A0E589B6 /* GDTCCTUploader.h in Headers */,
-				6D96A9F6F0596134AEA33B14E20BCA60 /* GDTCCTUploadOperation.h in Headers */,
-				2E6B37C9DE8369E4822E8B3B861F5BD4 /* GDTCORAssert.h in Headers */,
-				9ACADAC0AA9BE2E13353D7AC901945B6 /* GDTCORClock.h in Headers */,
-				DABA324C345166B3A1E4E34CD608ACFB /* GDTCORConsoleLogger.h in Headers */,
-				55248F7D773DEF7A5CBA8880B53471EE /* GDTCORDirectorySizeTracker.h in Headers */,
-				7DAE3600C5AAF89B0F7026593C0C061C /* GDTCOREndpoints.h in Headers */,
-				E5CCA548395481210DC831F7DB0A5A2E /* GDTCOREndpoints_Private.h in Headers */,
-				8E113DD76344E4773338DA354ADD8CDD /* GDTCOREvent.h in Headers */,
-				9A2E63E8AFB6C98512F97B74A4629F80 /* GDTCOREvent+GDTCCTSupport.h in Headers */,
-				3F229C534E86BFDABC301745F76781EC /* GDTCOREvent_Private.h in Headers */,
-				2AB9ADF6DBD24A979CAFB0ACD550B667 /* GDTCOREventDataObject.h in Headers */,
-				04C4C819922CF56742DB1CAB43449F2E /* GDTCOREventTransformer.h in Headers */,
-				2D794EF777B71E577F53B51958EBB688 /* GDTCORFlatFileStorage.h in Headers */,
-				46EA2E491D462CA917EAFC183B3EF2B7 /* GDTCORFlatFileStorage+Promises.h in Headers */,
-				5A0AC22DA0D8334EFC6D1EA273053F4E /* GDTCORLifecycle.h in Headers */,
-				BC3C24BFAB297964BFDBE9D19DB3F8A3 /* GDTCORPlatform.h in Headers */,
-				EBD05DDA9CFADCB510013543F5DCA49C /* GDTCORReachability.h in Headers */,
-				92880D301E51E4BD597FD0FC7414B969 /* GDTCORReachability_Private.h in Headers */,
-				E7A793CD530E9280914BB97F88850D57 /* GDTCORRegistrar.h in Headers */,
-				2F5B978438E8D8B0188EC4932B2CFDB9 /* GDTCORRegistrar_Private.h in Headers */,
-				359BAA441CD6114ED2853E0701A314A3 /* GDTCORStorageEventSelector.h in Headers */,
-				CB9939C03E9F8A494D414B74A1A7D93A /* GDTCORStorageProtocol.h in Headers */,
-				F885FE0D582B20BD3803F4559BFC34F4 /* GDTCORTargets.h in Headers */,
-				DD73EA9B96BE6754F8C0A110E2B95D06 /* GDTCORTransformer.h in Headers */,
-				17C6A7F17D3A04B100F7957C31AC8950 /* GDTCORTransformer_Private.h in Headers */,
-				C73C864AEF083B4DF91C4D4CFAA9EA0A /* GDTCORTransport.h in Headers */,
-				27F4AA5BF5F0A3047BF2D574B83A5A40 /* GDTCORTransport_Private.h in Headers */,
-				03C223DAD8D1234BF47BECA39DE26209 /* GDTCORUploadBatch.h in Headers */,
-				4C97A5482C42336B848F01BEA30EDBFD /* GDTCORUploadCoordinator.h in Headers */,
-				B38F8DF579C760E7EB4E2FB6C2089A9D /* GDTCORUploader.h in Headers */,
-				ED96C149A7240309B5FC982B1DD5FA4B /* GoogleDataTransport.h in Headers */,
-				F4FCF040B54D10E3637FF748BECB63F0 /* GoogleDataTransport-umbrella.h in Headers */,
+				646CE1480E1227BBD8868F9DB1C0E782 /* ScrollingFollowView-umbrella.h in Headers */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		9FD0288C82E9744AE225E2E5734C8257 /* Headers */ = {
+		B41730ACBF79B091D2C218D92D422C47 /* Headers */ = {
 			isa = PBXHeadersBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				646CE1480E1227BBD8868F9DB1C0E782 /* ScrollingFollowView-umbrella.h in Headers */,
+				D07857528879354ECC2301AE69EBC9B6 /* AlamofireNetworkActivityLogger-umbrella.h in Headers */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		B41730ACBF79B091D2C218D92D422C47 /* Headers */ = {
+		B587F044E469BB9E990B9E4F8EA7E01B /* Headers */ = {
 			isa = PBXHeadersBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				D07857528879354ECC2301AE69EBC9B6 /* AlamofireNetworkActivityLogger-umbrella.h in Headers */,
+				DF6A442EC4860502E3ECA2D4B23A1E0B /* FIRAppInternal.h in Headers */,
+				CF783C8FAA55A1BEF79D5CEBAAAD38DB /* FIRComponent.h in Headers */,
+				49BE486508B18069466304564A2A905C /* FIRComponentContainer.h in Headers */,
+				BE6E5F94359D324CB02ED2B4863C0627 /* FIRComponentType.h in Headers */,
+				2378B0171409F8603209AECF15D1ED40 /* FIRCoreDiagnosticsConnector.h in Headers */,
+				D36DB362A1734884668576425329D4D9 /* FIRCurrentDateProvider.h in Headers */,
+				81B30AB6EE771D5C3BB92F8E063935EE /* FIRDependency.h in Headers */,
+				28AB03F5DD84411D737A717E7F6112C6 /* FirebaseCoreInternal.h in Headers */,
+				17BE40A57EC267DDDA575FF34619E73C /* FirebaseInstallations.h in Headers */,
+				A6DA15B20EE6DD86F39BE449F9FEE08C /* FirebaseInstallations-umbrella.h in Headers */,
+				7C653612684DCF640A36D497B96E18D9 /* FirebaseInstallationsInternal.h in Headers */,
+				DD2FF3D14E07D0833208D45941BFA292 /* FIRHeartbeatInfo.h in Headers */,
+				665FE1FFFCB8A73D1815298AC5EF1343 /* FIRInstallations.h in Headers */,
+				BE0EF03B19343C8662224300449B2616 /* FIRInstallationsAPIService.h in Headers */,
+				1C0AFF132E7BFF1B8DA0596658868063 /* FIRInstallationsAuthTokenResult.h in Headers */,
+				F65A2AB959BE6A72ADB4D1C34AC72D8F /* FIRInstallationsAuthTokenResultInternal.h in Headers */,
+				ECA84609A18E3D3FE0E7930CB86811E8 /* FIRInstallationsBackoffController.h in Headers */,
+				6114A6E52B8C02CE46CED665D12CBC0F /* FIRInstallationsErrors.h in Headers */,
+				F1695FE6FEB6DF1AC56C415D4DDAE035 /* FIRInstallationsErrorUtil.h in Headers */,
+				2AA74CEA4ADC363991DA784735C1C306 /* FIRInstallationsHTTPError.h in Headers */,
+				8767D9BD222FC9FF9947529A98A23006 /* FIRInstallationsIDController.h in Headers */,
+				2676E3D558912EB6790E0886AAAC1E4C /* FIRInstallationsIIDStore.h in Headers */,
+				81C0BCDC6CC17D4F0517646F1920E146 /* FIRInstallationsIIDTokenStore.h in Headers */,
+				7392A26A5B39E5AC678625829ED4C24A /* FIRInstallationsItem.h in Headers */,
+				360FFA72A8AA557EC4C5BD2952497FCF /* FIRInstallationsItem+RegisterInstallationAPI.h in Headers */,
+				1A4ECFEEF88F8B3732753841CC659BAB /* FIRInstallationsLogger.h in Headers */,
+				C2479621328096685EB2AB403F8AE512 /* FIRInstallationsSingleOperationPromiseCache.h in Headers */,
+				2432701A7C4A79619FDE97FBC5CAB768 /* FIRInstallationsStatus.h in Headers */,
+				DCE760ABB0C4ACBBDE5EE69F4F7F2C39 /* FIRInstallationsStore.h in Headers */,
+				3222691873473961980209ADE35B1C15 /* FIRInstallationsStoredAuthToken.h in Headers */,
+				F663AB24F8E2E36192A3AAF687F4F902 /* FIRInstallationsStoredItem.h in Headers */,
+				202532FACCA9DBD55FB360DAE26E9F1C /* FIRLibrary.h in Headers */,
+				2812375D2FC92418241E38E7687FAA8E /* FIRLogger.h in Headers */,
+				427D20811BF4DF851FC6F356C732E02B /* FIROptionsInternal.h in Headers */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		B6F3FEC39D1F9113FC667F5AF74E0771 /* Headers */ = {
+		C9848E438FEA0B5668A402A790773CEF /* Headers */ = {
 			isa = PBXHeadersBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				B7CDC47285999D264ECDA21789B92F64 /* GoogleUtilities-umbrella.h in Headers */,
-				5485DDFC8DE7ADEE96DA54D395C391E0 /* GULAppDelegateSwizzler.h in Headers */,
-				00E22288D6B56A8C3148C841B5B94A55 /* GULAppDelegateSwizzler_Private.h in Headers */,
-				FE87692F538E1E14ED317F866EDF5DED /* GULAppEnvironmentUtil.h in Headers */,
-				4E0096C060DDB1026C7C404D172FD5B8 /* GULApplication.h in Headers */,
-				273943CADFF3EE7B0FA8D29BD9F78350 /* GULHeartbeatDateStorable.h in Headers */,
-				184046AB127852236E00F7F2CD32701D /* GULHeartbeatDateStorage.h in Headers */,
-				A715F340C637000E99B3825255212964 /* GULHeartbeatDateStorageUserDefaults.h in Headers */,
-				A7699F2A833376609BA8F1F3F3959FF0 /* GULKeychainStorage.h in Headers */,
-				21CC0FA67FEA20F5201FF5191B6B585C /* GULKeychainUtils.h in Headers */,
-				ED6F0D4F285DA26EBCA781683D38B0F0 /* GULLogger.h in Headers */,
-				C3ED4B7EE0299D837205B9FE7F7571D1 /* GULLoggerCodes.h in Headers */,
-				C32123E6F6E465F808A839B3E18AE845 /* GULLoggerLevel.h in Headers */,
-				7CE208463E083936EB475F708FFF392B /* GULMutableDictionary.h in Headers */,
-				0C6BC3DA614AE33686EA6C98FC89FC30 /* GULNetwork.h in Headers */,
-				1818026599F3663E41C7A31177EAD99D /* GULNetworkConstants.h in Headers */,
-				3C09E2DADAAAE3AE9A238D20DEBAF52A /* GULNetworkInternal.h in Headers */,
-				75140A5D77D00CA80647300A1FB990AC /* GULNetworkLoggerProtocol.h in Headers */,
-				C0E51934DA16A78AAB917F7C15F59694 /* GULNetworkMessageCode.h in Headers */,
-				0386CA79F2FA9666B4B607013C6F9565 /* GULNetworkURLSession.h in Headers */,
-				2BBAF6E3C8F29AC5B4F8B65AC0F4ED65 /* GULNSData+zlib.h in Headers */,
-				59D0EDCB70ED0127A3FF39ACF43182F6 /* GULOriginalIMPConvenienceMacros.h in Headers */,
-				3748C8AFCE3AEE0E942333FEDFAAAC9E /* GULReachabilityChecker.h in Headers */,
-				D37E4F8D997EDE364B02CF041CF49E19 /* GULReachabilityChecker+Internal.h in Headers */,
-				850B95CAFCA7B038234CEDA38FEB81BB /* GULReachabilityMessageCode.h in Headers */,
-				F5442B4BE27D74157CC756F03CD62679 /* GULSceneDelegateSwizzler.h in Headers */,
-				D1DE7FFB012581509CABE82E66E3AAA1 /* GULSceneDelegateSwizzler_Private.h in Headers */,
-				5CBA7663F32F5A5E2D1E55868C293BBD /* GULSecureCoding.h in Headers */,
-				784D91CAFCE068799FFF7FB29210E783 /* GULSwizzler.h in Headers */,
-				2CFC88831CD6DCB091A09E4886085FEE /* GULURLSessionDataResponse.h in Headers */,
-				8D38B201BAC6C3502BF22ADCCEF57C67 /* GULUserDefaults.h in Headers */,
-				42A8FBF0E5BD42CF05154B08B4EB01B2 /* NSURLSession+GULPromises.h in Headers */,
+				A243029B1CB0F5A2C9F0673348DD941C /* nanopb-umbrella.h in Headers */,
+				2B2EB50B394770F867DF870BB0BF438B /* pb.h in Headers */,
+				BCFD448336AA00E00A7DF42709E5F07B /* pb_common.h in Headers */,
+				70CB35CAB5D19EFB12771F192302B15F /* pb_decode.h in Headers */,
+				EB96C308FDBB23BAF8D0D007CA270672 /* pb_encode.h in Headers */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		D1B5538C8B02B9D146C3E9FC84900C10 /* Headers */ = {
+		CCEEFAA8C63580C9CB8978EDA9312BDF /* Headers */ = {
 			isa = PBXHeadersBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				89F607685125373F4C657794D1A8D0CA /* FBLPromise.h in Headers */,
-				008C03111E9679C424CD05DE7E6B400B /* FBLPromise+All.h in Headers */,
-				A26539CED4A0ABF80D597F2ECE22FF9B /* FBLPromise+Always.h in Headers */,
-				F2AB76BFA6242F90C3EF1CCF11247547 /* FBLPromise+Any.h in Headers */,
-				91627E18E88F3E6A82294AA5A1709BA5 /* FBLPromise+Async.h in Headers */,
-				3D20E883E18C3BA81F88F7BB04D25B3D /* FBLPromise+Await.h in Headers */,
-				458CEFB863D105C46592E18A636CB099 /* FBLPromise+Catch.h in Headers */,
-				FE7C28FEB6C2E7ECF1159C799B2A476A /* FBLPromise+Delay.h in Headers */,
-				CC0F2022157F4517024E02F421EC11C8 /* FBLPromise+Do.h in Headers */,
-				7F112B73EED48FC4BD77250AB05EA188 /* FBLPromise+Race.h in Headers */,
-				1AB0BA6000FB838A861EF5DE06CE2781 /* FBLPromise+Recover.h in Headers */,
-				F5D9B7E3491755D13EAF9719AD9F0AA6 /* FBLPromise+Reduce.h in Headers */,
-				2BA3F2B24DA08B1920ED31D43BA64D5E /* FBLPromise+Retry.h in Headers */,
-				A6DD4B59B69B1330C32FB68BDF229337 /* FBLPromise+Testing.h in Headers */,
-				817371E07E965B2D7EF2808E9111E3E1 /* FBLPromise+Then.h in Headers */,
-				254F71DD59C1492D58EFEBAC76C54A41 /* FBLPromise+Timeout.h in Headers */,
-				3CD03E13DFBBAE610011275C4FD759C0 /* FBLPromise+Validate.h in Headers */,
-				AF8A43327E0A10844CA21B76F0FE35A4 /* FBLPromise+Wrap.h in Headers */,
-				B58B3650D73996D9158F5E4B94C996D7 /* FBLPromiseError.h in Headers */,
-				97D0DDE0C4300CC08CB99635343EBE52 /* FBLPromisePrivate.h in Headers */,
-				2490D4D490046FE8592DE44745962170 /* FBLPromises.h in Headers */,
-				83A820E232690B67321884F590B27B44 /* PromisesObjC-umbrella.h in Headers */,
+				B6B43B1B78EC0E52CC08F82841A22A31 /* IQKeyboardManagerSwift-umbrella.h in Headers */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		DAE1AACD224CFFDD88A7AD3A59D9F75A /* Headers */ = {
+		D4F40E76C1E44B775D2B2C1537CB5510 /* Headers */ = {
 			isa = PBXHeadersBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				D55C47AD1ACDAEB509C77FE830CD50C6 /* FIRAnalyticsInterop.h in Headers */,
-				C82B4F556805411E6C326C5E436B4028 /* FIRAnalyticsInteropListener.h in Headers */,
-				FDA2F8008024EC6AA9670C6F67A887D2 /* FIRAppInternal.h in Headers */,
-				78641E302EBA8FEEC279014988B97087 /* FIRComponent.h in Headers */,
-				3A544D7B6551FB6C3A40E26B12785B95 /* FIRComponentContainer.h in Headers */,
-				77C44B7462CC9F53B22514DA252FD2D4 /* FIRComponentType.h in Headers */,
-				C811FB1C9E1FD295AA9CD600A08E5D19 /* FIRCoreDiagnosticsConnector.h in Headers */,
-				E7E527396DAA30D727B51E764C28EC78 /* FIRDependency.h in Headers */,
-				81973EC37E3F93D769AC67B4E6DB7AB7 /* FirebaseCoreInternal.h in Headers */,
-				546FA85F6DAE6B4CB2FE8124555867A0 /* FirebaseInstallationsInternal.h in Headers */,
-				9693CA731896DB8D7BD4033BFCFD8C32 /* FirebaseMessaging.h in Headers */,
-				1A04ECB3C04F737EDE00385D642732B3 /* FirebaseMessaging.h in Headers */,
-				189E875F565BE6A9A42E8A83E80D7130 /* FirebaseMessaging-umbrella.h in Headers */,
-				597BD072F72CCED54D8296DCD06A476E /* FIRHeartbeatInfo.h in Headers */,
-				17355B43FF8C7626D8ACE84E4D708512 /* FIRInteropEventNames.h in Headers */,
-				042A8238F5A1DDB329C14ADF6D143E5B /* FIRInteropParameterNames.h in Headers */,
-				C8D2F50D969AF65DACC73ABF6A6DCE99 /* FIRLibrary.h in Headers */,
-				1D958AAB4D74AFDE5BCECFE09F6E24F3 /* FIRLogger.h in Headers */,
-				61834E6BB964F824592C84E2F56DC9A1 /* FIRMessaging.h in Headers */,
-				13D93E03DF62C13D0FE837A82F72E817 /* FIRMessaging_Private.h in Headers */,
-				50180D61836726F0A20219BFCE184776 /* FIRMessagingAnalytics.h in Headers */,
-				B9F6F1942C28B67E60E571DAD43F0318 /* FIRMessagingAPNSInfo.h in Headers */,
-				9786A091B5B9A5274C90C93C434E379C /* FIRMessagingAuthKeychain.h in Headers */,
-				C936A3C40673FCC5FF14B2839A672E64 /* FIRMessagingAuthService.h in Headers */,
-				9F1C6E635976F9ABB7DF64F63E9F1B12 /* FIRMessagingBackupExcludedPlist.h in Headers */,
-				991CD99E93550748D515CEF78B3BEFD8 /* FIRMessagingCheckinPreferences.h in Headers */,
-				5DECCBD688F0EE490468C2BC56471947 /* FIRMessagingCheckinService.h in Headers */,
-				580B98B740FA2766D2513F3FDE9A1FBF /* FIRMessagingCheckinStore.h in Headers */,
-				AA33FB441176816F6A01E186AD612810 /* FIRMessagingCode.h in Headers */,
-				B05F58CD801ADC6CB086ADA6F1BBBC9C /* FIRMessagingConstants.h in Headers */,
-				9456D22BBCF0BFD209D8279451BE5F05 /* FIRMessagingContextManagerService.h in Headers */,
-				E8CC98504FE704E64413330F220FD51A /* FIRMessagingDefines.h in Headers */,
-				43959C0F59671CF3650E26FE44E86A26 /* FIRMessagingExtensionHelper.h in Headers */,
-				F9FA834F51420BC2CBE8A6BFAF204BAD /* FIRMessagingInterop.h in Headers */,
-				E664EDB2F09CEB4A1A50853A6A811CDF /* FIRMessagingKeychain.h in Headers */,
-				111CEFD08D2720E2B92B663FA39720D3 /* FIRMessagingLogger.h in Headers */,
-				E1811A8E51DA8567814276704CF471F6 /* FIRMessagingPendingTopicsList.h in Headers */,
-				3353C5602EBA345674CC98AEECB08EE9 /* FIRMessagingPersistentSyncMessage.h in Headers */,
-				BEEA96C1AE3727F785CD4E9DCEF0450C /* FIRMessagingPubSub.h in Headers */,
-				30FA32EA4D25087121320547820F6D12 /* FIRMessagingRemoteNotificationsProxy.h in Headers */,
-				64ED52180CCDC29EF766F18AF2512ACF /* FIRMessagingRmqManager.h in Headers */,
-				A001150A130B5719FF2802CE0D70CC08 /* FIRMessagingSyncMessageManager.h in Headers */,
-				08B0BFA194875A0F7E632899B46CDC88 /* FIRMessagingTokenDeleteOperation.h in Headers */,
-				8122195B09E3EE709B12C9540EECF8F3 /* FIRMessagingTokenFetchOperation.h in Headers */,
-				71B3387BB6DBFFFC20F39745F2C2CBF0 /* FIRMessagingTokenInfo.h in Headers */,
-				1A9E40DAB3F41633C6732F1A2211A26C /* FIRMessagingTokenManager.h in Headers */,
-				2BB4EB6CE6888D8AF022C2A186723553 /* FIRMessagingTokenOperation.h in Headers */,
-				CE7EED0908200D292FED2F4DD2207805 /* FIRMessagingTokenStore.h in Headers */,
-				23ACAC0C48D2929D4732AB75C5D268AD /* FIRMessagingTopicOperation.h in Headers */,
-				EA1711C4FC573E1242956A0E86080244 /* FIRMessagingTopicsCommon.h in Headers */,
-				79C32B64C95E829252FDEB8FB506ACC6 /* FIRMessagingUtilities.h in Headers */,
-				6AC411A15B3BE25E51B0864367D07FD3 /* FIROptionsInternal.h in Headers */,
-				D59598BD74142D59C79D295AA55CC754 /* me.nanopb.h in Headers */,
-				71442E3F000895B059B2F223ECE54817 /* NSDictionary+FIRMessaging.h in Headers */,
-				67AFB0CDF18A44E9DE3900C2A857BF27 /* NSError+FIRMessaging.h in Headers */,
+				A1AE3463161D11943FE25BEE068360F4 /* NSBezierPath+SDRoundedCorners.h in Headers */,
+				8E2E45C23703FFECDF0EDF9FA1672A8C /* NSButton+WebCache.h in Headers */,
+				478D16767AA403D5EA718F86E8E9FBC9 /* NSData+ImageContentType.h in Headers */,
+				8973C7EC9AFBFD8F4BE56CD6FFFBAB59 /* NSImage+Compatibility.h in Headers */,
+				2DE1640DD2DD9CF57077CF161D850A99 /* SDAnimatedImage.h in Headers */,
+				A5FED523E804DBAEF958B6AFB4F0BB8E /* SDAnimatedImagePlayer.h in Headers */,
+				F3AF329BF6C5438FFC560B2D1C5632A0 /* SDAnimatedImageRep.h in Headers */,
+				EF7C41AFA99E6710F370845DED1337FC /* SDAnimatedImageView.h in Headers */,
+				B2D9C561BDC12C08B243352712DDFFCD /* SDAnimatedImageView+WebCache.h in Headers */,
+				9783BA30E04B35533AB616E9F6DD2319 /* SDAssociatedObject.h in Headers */,
+				4E7B96686D6C8EA40084FB0C771B9D95 /* SDAsyncBlockOperation.h in Headers */,
+				0027C510E1AF7A9E6729C944B5250869 /* SDDeviceHelper.h in Headers */,
+				1C00640917904CC482412A574FC8589A /* SDDiskCache.h in Headers */,
+				E58D27538533769E58A9A60DFF892BE2 /* SDDisplayLink.h in Headers */,
+				0DB248513C548DE54D286199D092AFC5 /* SDFileAttributeHelper.h in Headers */,
+				82618045E4AB4C7BEACCD177557E0325 /* SDGraphicsImageRenderer.h in Headers */,
+				7D31CBEF9A879F8AD7806EEF2E7B78D2 /* SDImageAPNGCoder.h in Headers */,
+				DD93C3698D3C518BF8B9AF3F521DD2CA /* SDImageAssetManager.h in Headers */,
+				5A03B6030F1B755AE7BD8CCE19B18A0D /* SDImageAWebPCoder.h in Headers */,
+				8D2346AF2F3D1FC67706AED5DF99EE04 /* SDImageCache.h in Headers */,
+				5C88B796CCD495CF951D4852A17D810C /* SDImageCacheConfig.h in Headers */,
+				A0B6E0AA693A16E1441046E2BD075B77 /* SDImageCacheDefine.h in Headers */,
+				6319E7EBA2D2DCF5F0EBE23387F99793 /* SDImageCachesManager.h in Headers */,
+				67C20763A23305D9605D5C0712DF55CE /* SDImageCachesManagerOperation.h in Headers */,
+				C0BB8CFC7C7B96CED0706AD17808EE83 /* SDImageCoder.h in Headers */,
+				1642DF0271994EF5CD8458E048439D60 /* SDImageCoderHelper.h in Headers */,
+				2F35E46EF8916C9FC7227F3F472E9799 /* SDImageCodersManager.h in Headers */,
+				2BD4F3884FA9882DD1BED337F7891850 /* SDImageFrame.h in Headers */,
+				D3E08E7EE675C4ABB82267D44A95E65B /* SDImageGIFCoder.h in Headers */,
+				772028C48F9B457848C7A1FE67EE3F93 /* SDImageGraphics.h in Headers */,
+				0C80A0FE8729010EE69379C89C1FB7B1 /* SDImageHEICCoder.h in Headers */,
+				1607B2039FE01325054E180CC5E8B2E3 /* SDImageIOAnimatedCoder.h in Headers */,
+				7A512EFFFAD2ADA8CEF55F373E7DDE17 /* SDImageIOAnimatedCoderInternal.h in Headers */,
+				4860D5077260FBDDBD55A5A200D512CC /* SDImageIOCoder.h in Headers */,
+				E88793D1BD838F34872D24ED4F33AC0D /* SDImageLoader.h in Headers */,
+				E1C6E0F708C8EBEC563C47B3CED47A69 /* SDImageLoadersManager.h in Headers */,
+				9425F4A168B0B63B3E663A46C8FC8A23 /* SDImageTransformer.h in Headers */,
+				BD9A0DC76B995920A5AD5CF7F0364269 /* SDInternalMacros.h in Headers */,
+				5281EF8573D0E735A3E1DBE9CD71EAA2 /* SDMemoryCache.h in Headers */,
+				C4048B97AD9DA9BAE1784DD4909E9503 /* SDmetamacros.h in Headers */,
+				2CB6DEE77D00D0AFD1B2C725C1CD6E76 /* SDWeakProxy.h in Headers */,
+				13E816E07822D191361BA7B9652A0447 /* SDWebImage.h in Headers */,
+				B99D45A242DB7545E797633B3E72F453 /* SDWebImage-umbrella.h in Headers */,
+				9AAE373657DC5ADA5E572FC389F05A0B /* SDWebImageCacheKeyFilter.h in Headers */,
+				EEE29EEF16FF6A59F3498B1C935800B9 /* SDWebImageCacheSerializer.h in Headers */,
+				0EC57E963C6219B6E6BB68BEB589EDA3 /* SDWebImageCompat.h in Headers */,
+				E08D7ACD725838397983034B90025D62 /* SDWebImageDefine.h in Headers */,
+				5F10A08A161FCD044693D0E793103505 /* SDWebImageDownloader.h in Headers */,
+				750873761D4C696850E2B96D03D06CE8 /* SDWebImageDownloaderConfig.h in Headers */,
+				543963F02DBDC29E98B09D5954237F37 /* SDWebImageDownloaderDecryptor.h in Headers */,
+				35F1AA8A6453C1654382D05A356FA1A4 /* SDWebImageDownloaderOperation.h in Headers */,
+				9A16AFBAFC0A71C6693F90CE67D50591 /* SDWebImageDownloaderRequestModifier.h in Headers */,
+				19C0A8185AEFCC0F8EBC433387E1B676 /* SDWebImageDownloaderResponseModifier.h in Headers */,
+				D81AB097F5869F251CAB1BCF20CF6CD4 /* SDWebImageError.h in Headers */,
+				BABBB5E83EAF9D7EF90502F4373D4E98 /* SDWebImageIndicator.h in Headers */,
+				0FAA2EFB68C3A639CE409802A18B4CDD /* SDWebImageManager.h in Headers */,
+				64A897370773FCD48DE3C3960D61C23A /* SDWebImageOperation.h in Headers */,
+				EA550ADF27ED6AF47DBEDB69882A399A /* SDWebImageOptionsProcessor.h in Headers */,
+				8FC4DF504776F41D6BCDC4A543E17A02 /* SDWebImagePrefetcher.h in Headers */,
+				BBFD0866D130815C7F92FE6536F345C0 /* SDWebImageTransition.h in Headers */,
+				A59AF55EA65D3A0A170ABAAF0BF14D59 /* SDWebImageTransitionInternal.h in Headers */,
+				8E73FEBE00118102ACEA89EE68624A37 /* UIButton+WebCache.h in Headers */,
+				A855637432CAA565B54718FD3EC3DC5F /* UIColor+SDHexString.h in Headers */,
+				9C960807EC038766C1D9CD825FA9454C /* UIImage+ExtendedCacheData.h in Headers */,
+				1DA883EEA7879FCAF60BA02114973206 /* UIImage+ForceDecode.h in Headers */,
+				D1C6613C26F8A345D523F64ED057A882 /* UIImage+GIF.h in Headers */,
+				B1E71FDEB6B4DFAC4CAA93F0731BA431 /* UIImage+MemoryCacheCost.h in Headers */,
+				3999CE951D693C5C8617205992158B1E /* UIImage+Metadata.h in Headers */,
+				0F3F292BF29C383B3915EB35E2AA535C /* UIImage+MultiFormat.h in Headers */,
+				7BF48F0CDC03C76944609D5F67459062 /* UIImage+Transform.h in Headers */,
+				9B8AD56A0E358856E5199AB4678FE0CC /* UIImageView+HighlightedWebCache.h in Headers */,
+				A8D4D70781FBCA077BCED789F302133D /* UIImageView+WebCache.h in Headers */,
+				A5C7A88127504770CCB1E7BCC1F17134 /* UIView+WebCache.h in Headers */,
+				51E7B704838308C0951A94A4FE5B00F7 /* UIView+WebCacheOperation.h in Headers */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -5969,15 +6025,15 @@
 		};
 		2BBF7206D7FAC92C82A042A99C4A98F8 /* PromisesObjC */ = {
 			isa = PBXNativeTarget;
-			buildConfigurationList = 807C9571C43FB25812F895D66DB114ED /* Build configuration list for PBXNativeTarget "PromisesObjC" */;
+			buildConfigurationList = BCD47FDFBBEE12467EB650980BDD46CF /* Build configuration list for PBXNativeTarget "PromisesObjC" */;
 			buildPhases = (
-				D1B5538C8B02B9D146C3E9FC84900C10 /* Headers */,
-				4F585D830A36B5BD85305C21CFFA653C /* Copy . Private Headers */,
-				21CC00ADE2C186F92E231345B795C3C2 /* Copy . Public Headers */,
-				7E9EB3D6049C5D254B2290DC55C42C43 /* Sources */,
-				604712DF6AD08481B6187DA45EA57862 /* Frameworks */,
-				299FFC92CCDA0CCA8EF660736756C410 /* Resources */,
-				D2A87F30ACFE83662667513F69B0B0B2 /* Create Symlinks to Header Folders */,
+				5B484802D29A80670B17F2BDC7AA56F6 /* Headers */,
+				BA4F9833A341A567F71733318036A940 /* Copy . Private Headers */,
+				9A58C4B4F3B9EBAA53B4030D7C44986F /* Copy . Public Headers */,
+				3585A7C4C4FE2421513986A1CCEB6977 /* Sources */,
+				A1D07F4050DA5BDE754D8A66952994B4 /* Frameworks */,
+				F0EA4EC24210E4BDAA708602A16DAFE6 /* Resources */,
+				5CF0A80AF3D9AA31AD8EBA518EBEAFB9 /* Create Symlinks to Header Folders */,
 			);
 			buildRules = (
 			);
@@ -5990,12 +6046,12 @@
 		};
 		3847153A6E5EEFB86565BA840768F429 /* SDWebImage */ = {
 			isa = PBXNativeTarget;
-			buildConfigurationList = 5A8234532590346C1680E28DE822B529 /* Build configuration list for PBXNativeTarget "SDWebImage" */;
+			buildConfigurationList = 8DE4D26FC5C62567FBB0ECE5811467AD /* Build configuration list for PBXNativeTarget "SDWebImage" */;
 			buildPhases = (
-				26C4C5110E55B82E4C366BA4EE7AF85F /* Headers */,
-				987EB940643EC4AE2709E5A0533439A8 /* Sources */,
-				0AFE281D072D081E2DC05FE04678706A /* Frameworks */,
-				CDEBBC61610204E8D5DB915FE00E6267 /* Resources */,
+				D4F40E76C1E44B775D2B2C1537CB5510 /* Headers */,
+				62BA0BC0FC2955E786428A8AD03CC009 /* Sources */,
+				7212DD9337F5B8F02DD32D87F4AEF793 /* Frameworks */,
+				888FC050794F51DE0764C0BAF49688AB /* Resources */,
 			);
 			buildRules = (
 			);
@@ -6026,18 +6082,18 @@
 		};
 		4402AFF83DBDC4DD07E198685FDC2DF2 /* FirebaseCore */ = {
 			isa = PBXNativeTarget;
-			buildConfigurationList = 8A21EAB02EDD537C47B0CD57E75B6E0B /* Build configuration list for PBXNativeTarget "FirebaseCore" */;
+			buildConfigurationList = 80CDE8E095A930280C33652E20656D97 /* Build configuration list for PBXNativeTarget "FirebaseCore" */;
 			buildPhases = (
-				4891E5734362BBB864F6CEF0DB97E526 /* Headers */,
-				EBE67D107D08A751A4615DC8FCDAF7A0 /* Sources */,
-				AB3E991E683D487BB32EFFBFC197C6EC /* Frameworks */,
-				FC04977817BCA49BA3B4CE5096945F1D /* Resources */,
+				44F04822051718C4A016DC17ACA06C47 /* Headers */,
+				863ABA5071FAC3B5F33A38B2A56F80F2 /* Sources */,
+				D5D27785B479B8B575A39458A139EE13 /* Frameworks */,
+				9E6E868F9626F1DCCC4D5826A1CF81E9 /* Resources */,
 			);
 			buildRules = (
 			);
 			dependencies = (
-				BF77F49F7521D25CCE1B6EB687C1F932 /* PBXTargetDependency */,
-				FAA814408B832969ECF4DAF998E54D01 /* PBXTargetDependency */,
+				E95A31D6FF05782B4D118C2F9488D7B3 /* PBXTargetDependency */,
+				D4081E3996584F5300C54E91E9686F9C /* PBXTargetDependency */,
 			);
 			name = FirebaseCore;
 			productName = FirebaseCore;
@@ -6064,22 +6120,22 @@
 		};
 		526C4398D095B3704EB933DADBC30093 /* FirebaseCrashlytics */ = {
 			isa = PBXNativeTarget;
-			buildConfigurationList = B2A5377FFD50C8B9D96B8E048D6702FF /* Build configuration list for PBXNativeTarget "FirebaseCrashlytics" */;
+			buildConfigurationList = 8DA97FB479F28D9C34523DC47E402BC8 /* Build configuration list for PBXNativeTarget "FirebaseCrashlytics" */;
 			buildPhases = (
-				8CCFFEBBB9CA4C2F311EABF6BF13A9DE /* Headers */,
-				DCE64753C970DAC314B9DDDA70AA218A /* Sources */,
-				C732DCC3AC33E8B41D1847BF2F25AFAB /* Frameworks */,
-				DF4B9AFC68AC8683E9D52583E5213380 /* Resources */,
+				057B1301D532FC40B96DF1DE4F2893A5 /* Headers */,
+				9B44097F8018A42FDD168B8EA5DDEE43 /* Sources */,
+				434AAFB77F0B962F9D46BBE9E31B8B13 /* Frameworks */,
+				54CEAF3BDEC1F71202FB0559E35E59DB /* Resources */,
 			);
 			buildRules = (
 			);
 			dependencies = (
-				503AE9195FD38A490F82089009DA1A0A /* PBXTargetDependency */,
-				7CDC24658A30B473FC28A88B280D48FC /* PBXTargetDependency */,
-				2E6C01855093A31CF1FEE02BC81CE1AD /* PBXTargetDependency */,
-				5F28E78201CEE7CAAFF74FC5527F61F6 /* PBXTargetDependency */,
-				DD2FA83124BF4A8475B8DF83C830BF20 /* PBXTargetDependency */,
-				7E9B9EFB01155304AABD7B7A6C161FE7 /* PBXTargetDependency */,
+				E401ADBBFDF80FD6D9FFB13151695AF7 /* PBXTargetDependency */,
+				0600BA22DF722EC24750A88AEEA384E8 /* PBXTargetDependency */,
+				2A44ED53D60A8E0F3952803FF287BD57 /* PBXTargetDependency */,
+				D546DA73C473BAC53327E4DE45470D79 /* PBXTargetDependency */,
+				D822FE77CD906E43A675A0A054EE2F86 /* PBXTargetDependency */,
+				3581F7D3D6547C535EE147994DF3E82F /* PBXTargetDependency */,
 			);
 			name = FirebaseCrashlytics;
 			productName = FirebaseCrashlytics;
@@ -6088,21 +6144,21 @@
 		};
 		5895B432FE4D2F6826C8FF25A09DB6D2 /* FirebaseMessaging */ = {
 			isa = PBXNativeTarget;
-			buildConfigurationList = 478764A588CF8418B639EB08218B5910 /* Build configuration list for PBXNativeTarget "FirebaseMessaging" */;
+			buildConfigurationList = 3A1BA5817C38E3ABCC3E77960AA43391 /* Build configuration list for PBXNativeTarget "FirebaseMessaging" */;
 			buildPhases = (
-				DAE1AACD224CFFDD88A7AD3A59D9F75A /* Headers */,
-				CC8F7404301FCC6C1DF0B60A7710DE7D /* Sources */,
-				369F22C79F468BAF7849160EB6131F98 /* Frameworks */,
-				3AF6DA2BBF9316D375D24DA366DFCC2F /* Resources */,
+				712A54EB9966446126F40CE5FD08767E /* Headers */,
+				4BA70CD4B89E66C9A858FE431EC58F47 /* Sources */,
+				BF96A4D6A37AD7CD7C381EACB2CECB78 /* Frameworks */,
+				A09FBCBE479C18D54ACCDE26D4B952FA /* Resources */,
 			);
 			buildRules = (
 			);
 			dependencies = (
-				B7AAE1793F0368A660AFF1AEEAA0C874 /* PBXTargetDependency */,
-				A96002B7F5D0DEAB4A405B25286BBA76 /* PBXTargetDependency */,
-				2E35C47DA6E8128853D9BFF9012D0027 /* PBXTargetDependency */,
-				040C3FE466D0C2D2BD11CCCA68F3AEE9 /* PBXTargetDependency */,
-				2342472CA593519328CD9927132EA0DD /* PBXTargetDependency */,
+				F08AF24ED8D614AA9DDCA85E0BB6A927 /* PBXTargetDependency */,
+				C1CB6EB42BA302311745366B8893D23C /* PBXTargetDependency */,
+				852C2BDD3ADC0D8B9ECCBAFD072975D7 /* PBXTargetDependency */,
+				02063FA69D3737718A7FEABA78AA88D9 /* PBXTargetDependency */,
+				887847E7AD48B696847C8436C5BBF70A /* PBXTargetDependency */,
 			);
 			name = FirebaseMessaging;
 			productName = FirebaseMessaging;
@@ -6111,19 +6167,19 @@
 		};
 		5C0371EE948D0357B8EE0E34ABB44BF0 /* GoogleDataTransport */ = {
 			isa = PBXNativeTarget;
-			buildConfigurationList = FB10E9CFD2BA65041D74BF9459EEC895 /* Build configuration list for PBXNativeTarget "GoogleDataTransport" */;
+			buildConfigurationList = 0578F25DFF9912B9360F23AB3D809EB1 /* Build configuration list for PBXNativeTarget "GoogleDataTransport" */;
 			buildPhases = (
-				941A40B4F36ED3D714C7A2F5DD285662 /* Headers */,
-				220C5AC643E37E7B7BC8FF48EDB0D744 /* Sources */,
-				DE7ABB82FDC8BB7C67D024466127FFF9 /* Frameworks */,
-				5E41A8A12CF58AC9A7DB4D7888D99ADF /* Resources */,
+				0488E62B09D0DC3881CA72AC67015E99 /* Headers */,
+				D94DC6AC079C45800B12E459D2302D44 /* Sources */,
+				C9F140426233DD716206D855EAE5F5CA /* Frameworks */,
+				53DDECEC794B44E234367C99F0F3FF7C /* Resources */,
 			);
 			buildRules = (
 			);
 			dependencies = (
-				068A4CD6290DB2808F80F9D23A641CEA /* PBXTargetDependency */,
-				BE573FEF0B7C382A1686F9F9FC47F4C1 /* PBXTargetDependency */,
-				8F09DB9B1771850D7D7B6E1022C38D6A /* PBXTargetDependency */,
+				FECE47CB524550AD90CB82E841520ABC /* PBXTargetDependency */,
+				FBBC8AC5237316B7BFAADE1304FB23AD /* PBXTargetDependency */,
+				C06FD7B2F7A333E97DD7630EF52224D5 /* PBXTargetDependency */,
 			);
 			name = GoogleDataTransport;
 			productName = GoogleDataTransport;
@@ -6142,32 +6198,32 @@
 			buildRules = (
 			);
 			dependencies = (
-				EB4E72C2B2FA6E71E2735D7A37CBA5A8 /* PBXTargetDependency */,
-				C4DE571E7AEB5386EABF4082A2D8D8B1 /* PBXTargetDependency */,
-				D0B2761733C3494815275FF3CEBB3D4B /* PBXTargetDependency */,
-				797C4E71774B1EF270766FCB8228D0C7 /* PBXTargetDependency */,
-				8AB5E28C5E87623D580CCBB59A99A4F6 /* PBXTargetDependency */,
-				4FA88AD50EE2271E2C644A9E9C42AFFD /* PBXTargetDependency */,
-				C91A86A463AF274E02E3AC2CB663B35F /* PBXTargetDependency */,
-				69E94480D0FC072A644C257C60BF4322 /* PBXTargetDependency */,
-				14EEC2818621DE565FAD834AAA708A74 /* PBXTargetDependency */,
-				A61EA89287357936D5700CCB49CEB3FB /* PBXTargetDependency */,
-				05688A3A26B0ABD98C6FE4A33D5DDB20 /* PBXTargetDependency */,
-				99C6983A6B6832A41DB92AC507C6BC0F /* PBXTargetDependency */,
-				9586E53844952532E139BD2D370DCD57 /* PBXTargetDependency */,
-				DF4509A85C2FD39B2844C3B41DFBFB1F /* PBXTargetDependency */,
-				883ED06EC538768BFADFA2CC144DE53A /* PBXTargetDependency */,
-				73CD352B6ED338F19969AF84384CC5EF /* PBXTargetDependency */,
-				9492BFD758332A61D06EA0AC6C0099A2 /* PBXTargetDependency */,
-				F79AEC417C09A4EC9B0D5896E3B01CF8 /* PBXTargetDependency */,
-				6089DECA7AFC8FAE7F12D2C5F7825132 /* PBXTargetDependency */,
-				1471D5A3E948E4FD64813A831494625C /* PBXTargetDependency */,
-				74F6655A78D27E31BD56ABB84473D4B4 /* PBXTargetDependency */,
-				E33790A90250E5D4B40A76615FFC31AC /* PBXTargetDependency */,
-				706B6F32B06CC1906FAB223FF68F46EF /* PBXTargetDependency */,
-				4CB2B5ECA7720A3CFBAE501E89A5BED6 /* PBXTargetDependency */,
-				59AFEDF7C5EFB0B028EB5DE7F6482209 /* PBXTargetDependency */,
-				3126B23AF66BFA6DA5C0C619580108FE /* PBXTargetDependency */,
+				3621059FC1C585ED1E73C691C40BB4E6 /* PBXTargetDependency */,
+				FE87C589B4F1E7980DF35588ECE01896 /* PBXTargetDependency */,
+				C02D27992C64FC441C61C2470BEC6D4E /* PBXTargetDependency */,
+				65668F20C122D0593F3BF3F791318228 /* PBXTargetDependency */,
+				9D3D0E81860F006146E03A65F6069161 /* PBXTargetDependency */,
+				29B4E84B88936A679200E298265E257C /* PBXTargetDependency */,
+				7661C239309A927557782EAFAE3136FD /* PBXTargetDependency */,
+				B6BF2A3AF7A36329E6B07A9CE00DDBDB /* PBXTargetDependency */,
+				8398C1A89855281560D2C5978D1898FD /* PBXTargetDependency */,
+				52824C025D321BE2715D70BE7E464FC2 /* PBXTargetDependency */,
+				A2954C45A280B54FCD847DA6093F7727 /* PBXTargetDependency */,
+				072A6CBA0FBF55401BCD5B7518C5DD7C /* PBXTargetDependency */,
+				C41676018C87C781BD7244DCBE525BF8 /* PBXTargetDependency */,
+				446F3FAE0BA17D66E3D0D76723143087 /* PBXTargetDependency */,
+				79456234969D6D63793945105AEFA4E6 /* PBXTargetDependency */,
+				A19EEC48BED63BA0DD3588520D88F0EF /* PBXTargetDependency */,
+				AEEA7119E92DE1B4209141B41FB6BBE7 /* PBXTargetDependency */,
+				BC3A73CB18BF2F2205B970A621BBFDA6 /* PBXTargetDependency */,
+				2D3981568C77A692581733F084EA6030 /* PBXTargetDependency */,
+				C98645BB93B2B6059845F5832CD43DD4 /* PBXTargetDependency */,
+				D641B846FAF94F0B4BB1A7DE990918A0 /* PBXTargetDependency */,
+				35C1C0C813775B9A061CFF965B26E156 /* PBXTargetDependency */,
+				7A54AE66DF177AB4B319803A07867E13 /* PBXTargetDependency */,
+				8047364D5FD584476322D2B048E5D422 /* PBXTargetDependency */,
+				E31274D2FEEEB4292F0EA1A900936DD8 /* PBXTargetDependency */,
+				4106057EC99427E8E2F8B893C038BCAD /* PBXTargetDependency */,
 			);
 			name = "Pods-OpenBook";
 			productName = Pods_OpenBook;
@@ -6176,19 +6232,19 @@
 		};
 		620E05868772C10B4920DC7E324F2C87 /* FirebaseCoreDiagnostics */ = {
 			isa = PBXNativeTarget;
-			buildConfigurationList = 94789D4BD5FF5F5EB7D7AE8E3B1C51D6 /* Build configuration list for PBXNativeTarget "FirebaseCoreDiagnostics" */;
+			buildConfigurationList = C4F423AA13738F926F638534D1387E55 /* Build configuration list for PBXNativeTarget "FirebaseCoreDiagnostics" */;
 			buildPhases = (
-				5DBB6EBD584296B55568FACFAB9809A9 /* Headers */,
-				33A4A3BB7C40EE492E9012CB81F9F4C7 /* Sources */,
-				B84AAE906A631EB982933B7BE4F324C4 /* Frameworks */,
-				709675A3A74E4DB286C084FCBCEDE4B7 /* Resources */,
+				389AD5ACE5BDE5E8F1D8F93D37DE240A /* Headers */,
+				EE9D18DB4BA792D93EC829FA1E3FD7B3 /* Sources */,
+				78FE50335AECC72E0C5E7BA8DB9DD497 /* Frameworks */,
+				9BB15A38CB8D0DD388E84D75A7C6076A /* Resources */,
 			);
 			buildRules = (
 			);
 			dependencies = (
-				FA30547C79FAC5C8A48899185884A36C /* PBXTargetDependency */,
-				5895FFBF60403473AE883537A5BC80D0 /* PBXTargetDependency */,
-				9DE2351FBBC8D2CCFDC89B4DA570EC6E /* PBXTargetDependency */,
+				A61DE61D780D6D0B449FB06AD477A7B6 /* PBXTargetDependency */,
+				3FCAB61047D6CF316E06DE6203435D03 /* PBXTargetDependency */,
+				3921C25B20504C2D913023C97F0FC972 /* PBXTargetDependency */,
 			);
 			name = FirebaseCoreDiagnostics;
 			productName = FirebaseCoreDiagnostics;
@@ -6197,19 +6253,19 @@
 		};
 		87803597EB3F20FC46472B85392EC4FD /* FirebaseInstallations */ = {
 			isa = PBXNativeTarget;
-			buildConfigurationList = 5312D706E52BF2085E7DDDD89CE63020 /* Build configuration list for PBXNativeTarget "FirebaseInstallations" */;
+			buildConfigurationList = FD7BFD8A3BE49AAE3F64FC129502D47B /* Build configuration list for PBXNativeTarget "FirebaseInstallations" */;
 			buildPhases = (
-				239ED187070B527847ACBEB4BB82B03F /* Headers */,
-				745E77444D5306B504FA9B81EA7C500B /* Sources */,
-				F5EB01CF387C59B8FA9B4A3C5CAD38DC /* Frameworks */,
-				5F4EB83C8997E45EC412C19CF97C8363 /* Resources */,
+				B587F044E469BB9E990B9E4F8EA7E01B /* Headers */,
+				65198690789E478A01F7E1A313836D3F /* Sources */,
+				FF2695D9A9380654048C20F8E1A7FBE8 /* Frameworks */,
+				29E056FBA491EE9C5E8BB75A052C70A1 /* Resources */,
 			);
 			buildRules = (
 			);
 			dependencies = (
-				4C16041270C073321251333CBE12420B /* PBXTargetDependency */,
-				01B3EA00AAC64CC4796051520F589CF4 /* PBXTargetDependency */,
-				0FE99C0CA2D679ED2059A384D85B82D4 /* PBXTargetDependency */,
+				7938C8E29288F9894236CE77719CDF82 /* PBXTargetDependency */,
+				47E285DB7BBCCD0252D61967F35646EE /* PBXTargetDependency */,
+				1D904FA728B63A02AD446F9A76A31130 /* PBXTargetDependency */,
 			);
 			name = FirebaseInstallations;
 			productName = FirebaseInstallations;
@@ -6228,7 +6284,7 @@
 			buildRules = (
 			);
 			dependencies = (
-				FAF5E51FE645828B42DF8F4BDAB641C3 /* PBXTargetDependency */,
+				A8C689CCA1709109B2718B0425D6201B /* PBXTargetDependency */,
 			);
 			name = AlamofireNetworkActivityLogger;
 			productName = AlamofireNetworkActivityLogger;
@@ -6237,17 +6293,17 @@
 		};
 		8D7F5D5DD528D21A72DC87ADA5B12E2D /* GoogleUtilities */ = {
 			isa = PBXNativeTarget;
-			buildConfigurationList = A4F5033C1CF6FAFC07FD65FE92BB63F8 /* Build configuration list for PBXNativeTarget "GoogleUtilities" */;
+			buildConfigurationList = 1EA271B298F51DB09C156706510CE49D /* Build configuration list for PBXNativeTarget "GoogleUtilities" */;
 			buildPhases = (
-				B6F3FEC39D1F9113FC667F5AF74E0771 /* Headers */,
-				0B48696EC609F77A38E257C0642DC1B9 /* Sources */,
-				187F4E2F764F23338F133E35F27C03FB /* Frameworks */,
-				F6E9F4D819345BC207288A7485467616 /* Resources */,
+				697A4BCC6FB9E9C5AE5C675E24A72D1E /* Headers */,
+				E4EDEC9DFA7D5D072756EEEFE480188A /* Sources */,
+				4D22E870530D055200663288CF746BB9 /* Frameworks */,
+				D2D0C8438D7F4D038DC3D8847E611751 /* Resources */,
 			);
 			buildRules = (
 			);
 			dependencies = (
-				71FF989BE369A4336D9D68511A9E77C2 /* PBXTargetDependency */,
+				3C4BFCCBE376D74CC9FE51C6AC6D10E2 /* PBXTargetDependency */,
 			);
 			name = GoogleUtilities;
 			productName = GoogleUtilities;
@@ -6256,11 +6312,11 @@
 		};
 		93789445511E3FEAB3D09A6F552EEE2D /* SwiftMessages-SwiftMessages */ = {
 			isa = PBXNativeTarget;
-			buildConfigurationList = 4AB2E21B13871C9F751FC31E33D583B3 /* Build configuration list for PBXNativeTarget "SwiftMessages-SwiftMessages" */;
+			buildConfigurationList = 58BA9B10AE2667F16380B2D7C3789EC0 /* Build configuration list for PBXNativeTarget "SwiftMessages-SwiftMessages" */;
 			buildPhases = (
-				E3B377631F0F1918692B32E2D0B3B080 /* Sources */,
-				19F1E97317AE19BD36DCA2FF0D2E3FC3 /* Frameworks */,
-				060E3CF452DED4CAC7D7E4DB019A743A /* Resources */,
+				866B8F2F954089CD1DF65336F197EEA0 /* Sources */,
+				16528391355227D329F4120C79EB2F9E /* Frameworks */,
+				6AF7E881A300600B2869FBB3F40A3430 /* Resources */,
 			);
 			buildRules = (
 			);
@@ -6273,12 +6329,12 @@
 		};
 		B490E7485944099E16C9CBD79119D1D4 /* IQKeyboardManagerSwift */ = {
 			isa = PBXNativeTarget;
-			buildConfigurationList = B457B34920679DC500CD041991F040B2 /* Build configuration list for PBXNativeTarget "IQKeyboardManagerSwift" */;
+			buildConfigurationList = 42F76AA8E84D32E2DED70BBA35321CB1 /* Build configuration list for PBXNativeTarget "IQKeyboardManagerSwift" */;
 			buildPhases = (
-				840A69FC16AA93214053C5370D384486 /* Headers */,
-				B58C8977AC61F5150CF3B38403C7CDEC /* Sources */,
-				E2D06F4F2F63043C7F0FD90489F3D033 /* Frameworks */,
-				24936075776705F52CC3C03E449F2987 /* Resources */,
+				CCEEFAA8C63580C9CB8978EDA9312BDF /* Headers */,
+				AC7850B8AD058752CD0E80D5A5B07A42 /* Sources */,
+				A3B77577C54970218F8F8340516D00F2 /* Frameworks */,
+				DAEA1F953296419744C852BAA2739BA1 /* Resources */,
 			);
 			buildRules = (
 			);
@@ -6309,12 +6365,12 @@
 		};
 		D2B5E7DCCBBFB32341D857D01211A1A3 /* nanopb */ = {
 			isa = PBXNativeTarget;
-			buildConfigurationList = 04AF3ED1C020B1DB3415793750C07633 /* Build configuration list for PBXNativeTarget "nanopb" */;
+			buildConfigurationList = 77526BB9475F5AE356FF2603D375F898 /* Build configuration list for PBXNativeTarget "nanopb" */;
 			buildPhases = (
-				776836266B31FE619C3AAF31F70DF5A2 /* Headers */,
-				F90A6041482CA8451F3EB07ABCDDD7A4 /* Sources */,
-				3DF3DC1A92D205347A2EDFEDD6C7AF76 /* Frameworks */,
-				D5F997F88BD768957DDED1B36D7E965E /* Resources */,
+				C9848E438FEA0B5668A402A790773CEF /* Headers */,
+				85690AE6DFE67C5130D53E83F42F121C /* Sources */,
+				7033511438EDD0DCE8A512D84B47F864 /* Frameworks */,
+				CCE5BF46432494A4DAB327307789B042 /* Resources */,
 			);
 			buildRules = (
 			);
@@ -6327,17 +6383,17 @@
 		};
 		DAB613A18652334F6BFC5F27BADF515D /* SwiftMessages */ = {
 			isa = PBXNativeTarget;
-			buildConfigurationList = 7892336E6D5F90E0F6F47A86363AD745 /* Build configuration list for PBXNativeTarget "SwiftMessages" */;
+			buildConfigurationList = 4FD7C2B04E1FC5365718930ADC799D5C /* Build configuration list for PBXNativeTarget "SwiftMessages" */;
 			buildPhases = (
-				7FFD306ADC33A391FB72B0176F26A5DA /* Headers */,
-				1826F67CB0AAC9C8DFC88549766C8BD6 /* Sources */,
-				6347B1AC9160E2100FA66C9A62DBB33B /* Frameworks */,
-				F902D6B118CA4E807F59379CD776F866 /* Resources */,
+				3D78E6B12D0C7704AA6257B6D7CE969B /* Headers */,
+				A65DC52B960385FEF4808166660E82D7 /* Sources */,
+				1E5F34F325312F632646732A454D6AD6 /* Frameworks */,
+				2748DBA8705A702EA4150DD61A19FD69 /* Resources */,
 			);
 			buildRules = (
 			);
 			dependencies = (
-				08C80E13F8743A2363B2A6AA14FC3773 /* PBXTargetDependency */,
+				DA4397EB62149D2EA3FF9D2DC5ECEAE9 /* PBXTargetDependency */,
 			);
 			name = SwiftMessages;
 			productName = SwiftMessages;
@@ -6356,7 +6412,7 @@
 			buildRules = (
 			);
 			dependencies = (
-				EEA3C2449C4B81C61E9A61F8078C8F17 /* PBXTargetDependency */,
+				7FF2EABA736956E7FFDA8BC283D85E96 /* PBXTargetDependency */,
 			);
 			name = XLPagerTabStrip;
 			productName = XLPagerTabStrip;
@@ -6375,7 +6431,7 @@
 			buildRules = (
 			);
 			dependencies = (
-				7352BE51837299F9E5346E283009FB37 /* PBXTargetDependency */,
+				5BCBAAFF1BC107CB82852A9B6DA9A29B /* PBXTargetDependency */,
 			);
 			name = "CleverTap-iOS-SDK";
 			productName = CleverTapSDK;
@@ -6402,11 +6458,11 @@
 		};
 		EBF90A3A56D4C5830C212D000AB67BC1 /* XLPagerTabStrip-XLPagerTabStrip */ = {
 			isa = PBXNativeTarget;
-			buildConfigurationList = 1C5695BDFC8C02A75AC50BD82584C097 /* Build configuration list for PBXNativeTarget "XLPagerTabStrip-XLPagerTabStrip" */;
+			buildConfigurationList = 7E4D442225187899A4C2AEB00E4C83B2 /* Build configuration list for PBXNativeTarget "XLPagerTabStrip-XLPagerTabStrip" */;
 			buildPhases = (
-				EB3BFF92BC994C7E056A11B01A10E0B2 /* Sources */,
-				B9AA2C0CCF2DEFDCD76562FD2A9C7FD4 /* Frameworks */,
-				D5C01171623BE5B23776A99F09766C45 /* Resources */,
+				36F358705C59FA4EFBF6F28A92DCB476 /* Sources */,
+				4F7EA21BC5EE10C6F35973C1D687CA0C /* Frameworks */,
+				795AD46223D8CC5E9CCC7C8D4310D858 /* Resources */,
 			);
 			buildRules = (
 			);
@@ -6473,84 +6529,44 @@
 /* End PBXProject section */
 
 /* Begin PBXResourcesBuildPhase section */
-		060E3CF452DED4CAC7D7E4DB019A743A /* Resources */ = {
+		0B6237BBE97DD6B6E4D1F36BD7D8F60C /* Resources */ = {
 			isa = PBXResourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				839109801AA96E1C8CE6AE1D95681312 /* CardView.xib in Resources */,
-				DD992DD113E6A50799E966DEC37AF61D /* CenteredView.xib in Resources */,
-				0F233FF5EBB7A90E0DD533C38B8AB5AC /* errorIcon.png in Resources */,
-				C3D4AF52D985BC04ADE2102999F0029B /* errorIcon@2x.png in Resources */,
-				D5C1B0EEDF183B0081D3C36954E2EB81 /* errorIcon@3x.png in Resources */,
-				6FCD225AAA86E1EE00D641197A3842F8 /* errorIconLight.png in Resources */,
-				D67F01EC198DC5DABDEC0E4B2D3490D5 /* errorIconLight@2x.png in Resources */,
-				DA5CD82CA60619D539E1CBCE28F91451 /* errorIconLight@3x.png in Resources */,
-				1DDAD8A0BF606A43FE8F6831F171188B /* errorIconSubtle.png in Resources */,
-				D5F02C0B3FC0C1E1EDBC2F8A0DC4F50C /* errorIconSubtle@2x.png in Resources */,
-				1ED5610EC8AD2A34323121CF54C98BC2 /* errorIconSubtle@3x.png in Resources */,
-				C27E687266519DC29814537886428901 /* infoIcon.png in Resources */,
-				F762062BC2B7077846EB57331FA07163 /* infoIcon@2x.png in Resources */,
-				DC0D703E7322E390AF589230B7E66DCB /* infoIcon@3x.png in Resources */,
-				00713D7E680049E7A2570C0240CD7E6C /* infoIconLight.png in Resources */,
-				4505B14B0F83672851D6DAC0A1756A1A /* infoIconLight@2x.png in Resources */,
-				468BF083377C383C8EB2B2363795D941 /* infoIconLight@3x.png in Resources */,
-				25EAA1DE137EADB4C7A64F8086E82F2B /* infoIconSubtle.png in Resources */,
-				E8CE1111213B3A0CA1DF1E2302AD0907 /* infoIconSubtle@2x.png in Resources */,
-				9C74AFDFB52D8A8DD6A522672D75E5F9 /* infoIconSubtle@3x.png in Resources */,
-				879420CFFFB1F94660D2F5516D7A3AE4 /* MessageView.xib in Resources */,
-				14AEBAD16F17C11C21429C57F4AEFC9A /* StatusLine.xib in Resources */,
-				AA42B57C3614359399BA706B15E702FA /* successIcon.png in Resources */,
-				08913F7605F4F3A090E38C671CFAEAD2 /* successIcon@2x.png in Resources */,
-				D054279DE679BCBFD690B0AD2898C81F /* successIcon@3x.png in Resources */,
-				3765CB20A1673F50A9DA45FDE0D1D5A9 /* successIconLight.png in Resources */,
-				3A456B91C5A9ADA481FAC5A59B9E8F6D /* successIconLight@2x.png in Resources */,
-				0CB3EA72A87FFAC3525DE12B29A3C883 /* successIconLight@3x.png in Resources */,
-				48F83B970249BC1A5DD83C70C9C04AFF /* successIconSubtle.png in Resources */,
-				E6FA70EC66FE43A4AA6D686EA95C1762 /* successIconSubtle@2x.png in Resources */,
-				8FEE9EFFCD4D176E132AC69156FCE810 /* successIconSubtle@3x.png in Resources */,
-				1355053D5E4C257AB780DF4638A4B5E6 /* TabView.xib in Resources */,
-				751640AF34BC2687F3C03DF96395FD3E /* warningIcon.png in Resources */,
-				7F41F8C8AEEFE29BB34105154215119C /* warningIcon@2x.png in Resources */,
-				858136FE628C604AD8D4BAAC20AA8A43 /* warningIcon@3x.png in Resources */,
-				8D5AEFDE581B4F14A9F27EFB3ECC025A /* warningIconLight.png in Resources */,
-				B7EA0C30460EFFFC7989537EFE7CA333 /* warningIconLight@2x.png in Resources */,
-				3728C8335C98498C670174ECEEA344B1 /* warningIconLight@3x.png in Resources */,
-				C0944421478108A14ED28D4D0F088003 /* warningIconSubtle.png in Resources */,
-				859ECF984801B1938E5780504A0B624B /* warningIconSubtle@2x.png in Resources */,
-				37A9CDD19B545D3308AEFC1316ABB61F /* warningIconSubtle@3x.png in Resources */,
+				9B06F1AB828E639BDEE2022CB881734A /* XLPagerTabStrip-XLPagerTabStrip in Resources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		0B6237BBE97DD6B6E4D1F36BD7D8F60C /* Resources */ = {
+		2748DBA8705A702EA4150DD61A19FD69 /* Resources */ = {
 			isa = PBXResourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				9B06F1AB828E639BDEE2022CB881734A /* XLPagerTabStrip-XLPagerTabStrip in Resources */,
+				6E5BC0F0DF1D4D4C3A81A3B1ABEB2E52 /* SwiftMessages-SwiftMessages in Resources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		24936075776705F52CC3C03E449F2987 /* Resources */ = {
+		29E056FBA491EE9C5E8BB75A052C70A1 /* Resources */ = {
 			isa = PBXResourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		299FFC92CCDA0CCA8EF660736756C410 /* Resources */ = {
+		33FF99E591E614D84A734143B410B304 /* Resources */ = {
 			isa = PBXResourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		33FF99E591E614D84A734143B410B304 /* Resources */ = {
+		53DDECEC794B44E234367C99F0F3FF7C /* Resources */ = {
 			isa = PBXResourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		3AF6DA2BBF9316D375D24DA366DFCC2F /* Resources */ = {
+		54CEAF3BDEC1F71202FB0559E35E59DB /* Resources */ = {
 			isa = PBXResourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
@@ -6572,28 +6588,70 @@
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		5E41A8A12CF58AC9A7DB4D7888D99ADF /* Resources */ = {
+		6AF7E881A300600B2869FBB3F40A3430 /* Resources */ = {
 			isa = PBXResourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
+				536AA8F9B32ABFFCD06E6AFFFE4B6611 /* CardView.xib in Resources */,
+				9ACFDFE69C26E9B2EBBD699FC3095150 /* CenteredView.xib in Resources */,
+				7C0E885F2B33980C0BB35CAFD9DB3F10 /* errorIcon.png in Resources */,
+				9A05CD0DC4869706C20FFAFD8B76BD42 /* errorIcon@2x.png in Resources */,
+				4B2C9929C6B63F596072DCD704B1E62B /* errorIcon@3x.png in Resources */,
+				3395804472846F05943B8D3576AB24B4 /* errorIconLight.png in Resources */,
+				CDA5C57B522A5F33B8662A2A6A4952F3 /* errorIconLight@2x.png in Resources */,
+				6FACB52E576829DEB0328F491D1B42A8 /* errorIconLight@3x.png in Resources */,
+				093252001D6333D034EF1C4095F58A7C /* errorIconSubtle.png in Resources */,
+				6AD6D0F694C709B79B5CD602C238DFA3 /* errorIconSubtle@2x.png in Resources */,
+				9CE86FD885ACE9C8166FF04326481E68 /* errorIconSubtle@3x.png in Resources */,
+				2CA772C9B374697B0B5622FA71741362 /* infoIcon.png in Resources */,
+				CEEE3BE9688879BDE64E9DA3A725F7B4 /* infoIcon@2x.png in Resources */,
+				C816C26C9BFD44F686A7F0A23CB0D933 /* infoIcon@3x.png in Resources */,
+				AEA2E10B85B82C6E24AA3697459C3B94 /* infoIconLight.png in Resources */,
+				56654EDA6C3B71DF80989C2907383975 /* infoIconLight@2x.png in Resources */,
+				210F8AF656043B3D9DB8B27ECCC6E5E6 /* infoIconLight@3x.png in Resources */,
+				60BFD086FD3A0C2E6DA2DEDF3C80C6D2 /* infoIconSubtle.png in Resources */,
+				A06EB13DACEE78CB29284D1B5867BE80 /* infoIconSubtle@2x.png in Resources */,
+				B050F72F7AC492A3CF1A45A231A52D18 /* infoIconSubtle@3x.png in Resources */,
+				3D9380D9ADB719A0E8F7A68021172C51 /* MessageView.xib in Resources */,
+				C1215BEB144E755AC1C773587D6CBDA2 /* StatusLine.xib in Resources */,
+				C4937D3DE58B508EAB535DA0ED4CD781 /* successIcon.png in Resources */,
+				97E3078D16A891C1D8426227C6A34A2A /* successIcon@2x.png in Resources */,
+				309A26627A236C4BA4F692F05DFD7278 /* successIcon@3x.png in Resources */,
+				F8C7591ABBA310BE65615D4A15CF8CBE /* successIconLight.png in Resources */,
+				B3FDC8410F0FD6B0C57CB83AB7973584 /* successIconLight@2x.png in Resources */,
+				0D6BD4294C67F503A9E12D3E63A3A9EE /* successIconLight@3x.png in Resources */,
+				2C517811512ECD93BA245023A85D695B /* successIconSubtle.png in Resources */,
+				4024C6641C64FDAB434C158CEBB2C066 /* successIconSubtle@2x.png in Resources */,
+				9EDDB3644A92A8565E01AA615C869377 /* successIconSubtle@3x.png in Resources */,
+				05A821DC5313689691EDAB91A79CC9CD /* TabView.xib in Resources */,
+				FE5D600B182DC4D6AAA64F52664DAD38 /* warningIcon.png in Resources */,
+				112161C0422D2740B8D31663A7BB67E6 /* warningIcon@2x.png in Resources */,
+				AD5FB6CD2B646D3D3987576B8424AB29 /* warningIcon@3x.png in Resources */,
+				F068EC06908B489F2B3DD4861BA93EE8 /* warningIconLight.png in Resources */,
+				9CE83AE15DFCD8EC33FFDE1287FFFC01 /* warningIconLight@2x.png in Resources */,
+				694A075D64AB6271E66EF9E62D71E7D0 /* warningIconLight@3x.png in Resources */,
+				DF8AD073422B198888BCC5C732DE65C8 /* warningIconSubtle.png in Resources */,
+				50350C2F41891079B99E766AB5DA18E6 /* warningIconSubtle@2x.png in Resources */,
+				B7810FB82B202E3C37BF3E16BF082C9D /* warningIconSubtle@3x.png in Resources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		5F4EB83C8997E45EC412C19CF97C8363 /* Resources */ = {
+		6B1709DCDD61B255A2B2EF302AA6C832 /* Resources */ = {
 			isa = PBXResourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		6B1709DCDD61B255A2B2EF302AA6C832 /* Resources */ = {
+		795AD46223D8CC5E9CCC7C8D4310D858 /* Resources */ = {
 			isa = PBXResourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
+				2C88DC1158AB89AF00632DBD8ED2B28B /* ButtonCell.xib in Resources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		709675A3A74E4DB286C084FCBCEDE4B7 /* Resources */ = {
+		888FC050794F51DE0764C0BAF49688AB /* Resources */ = {
 			isa = PBXResourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
@@ -6677,65 +6735,63 @@
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		A3ED746FF7CBDAB854F6A693F882649B /* Resources */ = {
+		9BB15A38CB8D0DD388E84D75A7C6076A /* Resources */ = {
 			isa = PBXResourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		CDEBBC61610204E8D5DB915FE00E6267 /* Resources */ = {
+		9E6E868F9626F1DCCC4D5826A1CF81E9 /* Resources */ = {
 			isa = PBXResourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		D5C01171623BE5B23776A99F09766C45 /* Resources */ = {
+		A09FBCBE479C18D54ACCDE26D4B952FA /* Resources */ = {
 			isa = PBXResourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				302788B32A2590C63B431692574340A2 /* ButtonCell.xib in Resources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		D5F997F88BD768957DDED1B36D7E965E /* Resources */ = {
+		A3ED746FF7CBDAB854F6A693F882649B /* Resources */ = {
 			isa = PBXResourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		DF4B9AFC68AC8683E9D52583E5213380 /* Resources */ = {
+		CCE5BF46432494A4DAB327307789B042 /* Resources */ = {
 			isa = PBXResourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		E706B989DA57CD914065107BB07C49E5 /* Resources */ = {
+		D2D0C8438D7F4D038DC3D8847E611751 /* Resources */ = {
 			isa = PBXResourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		F6E9F4D819345BC207288A7485467616 /* Resources */ = {
+		DAEA1F953296419744C852BAA2739BA1 /* Resources */ = {
 			isa = PBXResourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		F902D6B118CA4E807F59379CD776F866 /* Resources */ = {
+		E706B989DA57CD914065107BB07C49E5 /* Resources */ = {
 			isa = PBXResourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				24C2CCB9063376EB8D968C081BB1165B /* SwiftMessages-SwiftMessages in Resources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		FC04977817BCA49BA3B4CE5096945F1D /* Resources */ = {
+		F0EA4EC24210E4BDAA708602A16DAFE6 /* Resources */ = {
 			isa = PBXResourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
@@ -6745,39 +6801,40 @@
 /* End PBXResourcesBuildPhase section */
 
 /* Begin PBXShellScriptBuildPhase section */
-		53BAFEE0D19FA248ABA0C27E9E1FDCDD /* [CP] Copy XCFrameworks */ = {
+		4F89989CFE93248D1CF9D2386AD90C81 /* [CP] Copy XCFrameworks */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
 			inputFileListPaths = (
-				"${PODS_ROOT}/Target Support Files/GoogleAppMeasurement/GoogleAppMeasurement-xcframeworks-input-files.xcfilelist",
+				"${PODS_ROOT}/Target Support Files/FirebaseAnalytics/FirebaseAnalytics-xcframeworks-input-files.xcfilelist",
 			);
 			name = "[CP] Copy XCFrameworks";
 			outputFileListPaths = (
-				"${PODS_ROOT}/Target Support Files/GoogleAppMeasurement/GoogleAppMeasurement-xcframeworks-output-files.xcfilelist",
+				"${PODS_ROOT}/Target Support Files/FirebaseAnalytics/FirebaseAnalytics-xcframeworks-output-files.xcfilelist",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
-			shellScript = "\"${PODS_ROOT}/Target Support Files/GoogleAppMeasurement/GoogleAppMeasurement-xcframeworks.sh\"\n";
+			shellScript = "\"${PODS_ROOT}/Target Support Files/FirebaseAnalytics/FirebaseAnalytics-xcframeworks.sh\"\n";
 			showEnvVarsInLog = 0;
 		};
-		9A4223F5A7539D6BF42BB8E3BBD4E6FF /* [CP] Copy XCFrameworks */ = {
+		5CF0A80AF3D9AA31AD8EBA518EBEAFB9 /* Create Symlinks to Header Folders */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
 			inputFileListPaths = (
-				"${PODS_ROOT}/Target Support Files/FirebaseAnalytics/FirebaseAnalytics-xcframeworks-input-files.xcfilelist",
 			);
-			name = "[CP] Copy XCFrameworks";
+			inputPaths = (
+			);
+			name = "Create Symlinks to Header Folders";
 			outputFileListPaths = (
-				"${PODS_ROOT}/Target Support Files/FirebaseAnalytics/FirebaseAnalytics-xcframeworks-output-files.xcfilelist",
+			);
+			outputPaths = (
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
-			shellScript = "\"${PODS_ROOT}/Target Support Files/FirebaseAnalytics/FirebaseAnalytics-xcframeworks.sh\"\n";
-			showEnvVarsInLog = 0;
+			shellScript = "cd \"$CONFIGURATION_BUILD_DIR/$WRAPPER_NAME\" || exit 1\nif [ ! -d Versions ]; then\n  # Not a versioned framework, so no need to do anything\n  exit 0\nfi\n\npublic_path=\"${PUBLIC_HEADERS_FOLDER_PATH#$CONTENTS_FOLDER_PATH/}\"\nif [ ! -f \"$public_path\" ]; then\n  ln -fs \"${PUBLIC_HEADERS_FOLDER_PATH#$WRAPPER_NAME/}\" \"$public_path\"\nfi\n\nprivate_path=\"${PRIVATE_HEADERS_FOLDER_PATH#$CONTENTS_FOLDER_PATH/}\"\nif [ ! -f \"$private_path\" ]; then\n  ln -fs \"${PRIVATE_HEADERS_FOLDER_PATH#$WRAPPER_NAME/}\" \"$private_path\"\nfi\n";
 		};
 		A156DBE2C61C4A7AF7667CCC0AE27CEB /* [CP] Copy XCFrameworks */ = {
 			isa = PBXShellScriptBuildPhase;
@@ -6796,123 +6853,26 @@
 			shellScript = "\"${PODS_ROOT}/Target Support Files/UserExperior/UserExperior-xcframeworks.sh\"\n";
 			showEnvVarsInLog = 0;
 		};
-		D2A87F30ACFE83662667513F69B0B0B2 /* Create Symlinks to Header Folders */ = {
+		D472146EB52FE5D475BE207C974FEFEF /* [CP] Copy XCFrameworks */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
 			inputFileListPaths = (
+				"${PODS_ROOT}/Target Support Files/GoogleAppMeasurement/GoogleAppMeasurement-xcframeworks-input-files.xcfilelist",
 			);
-			inputPaths = (
-			);
-			name = "Create Symlinks to Header Folders";
+			name = "[CP] Copy XCFrameworks";
 			outputFileListPaths = (
-			);
-			outputPaths = (
+				"${PODS_ROOT}/Target Support Files/GoogleAppMeasurement/GoogleAppMeasurement-xcframeworks-output-files.xcfilelist",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
-			shellScript = "cd \"$CONFIGURATION_BUILD_DIR/$WRAPPER_NAME\" || exit 1\nif [ ! -d Versions ]; then\n  # Not a versioned framework, so no need to do anything\n  exit 0\nfi\n\npublic_path=\"${PUBLIC_HEADERS_FOLDER_PATH#$CONTENTS_FOLDER_PATH/}\"\nif [ ! -f \"$public_path\" ]; then\n  ln -fs \"${PUBLIC_HEADERS_FOLDER_PATH#$WRAPPER_NAME/}\" \"$public_path\"\nfi\n\nprivate_path=\"${PRIVATE_HEADERS_FOLDER_PATH#$CONTENTS_FOLDER_PATH/}\"\nif [ ! -f \"$private_path\" ]; then\n  ln -fs \"${PRIVATE_HEADERS_FOLDER_PATH#$WRAPPER_NAME/}\" \"$private_path\"\nfi\n";
+			shellScript = "\"${PODS_ROOT}/Target Support Files/GoogleAppMeasurement/GoogleAppMeasurement-xcframeworks.sh\"\n";
+			showEnvVarsInLog = 0;
 		};
 /* End PBXShellScriptBuildPhase section */
 
 /* Begin PBXSourcesBuildPhase section */
-		0B48696EC609F77A38E257C0642DC1B9 /* Sources */ = {
-			isa = PBXSourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				6D7931185F6EF8FC953CD4FE081905A3 /* GoogleUtilities-dummy.m in Sources */,
-				FF0EE6BD319218FD65EC881C28AAF601 /* GULAppDelegateSwizzler.m in Sources */,
-				84E24C8868A892A187981196FA436770 /* GULAppEnvironmentUtil.m in Sources */,
-				754EF60588A54DD769DBC667B31F21A7 /* GULHeartbeatDateStorage.m in Sources */,
-				4C35CDA9DCBD1B0335C34661C939C45A /* GULHeartbeatDateStorageUserDefaults.m in Sources */,
-				ACC98A5F1689D471875DE9C9B2C1B6CA /* GULKeychainStorage.m in Sources */,
-				78A65D6FFCA986A049CD2DD537B6FE57 /* GULKeychainUtils.m in Sources */,
-				B4DA51DFD2480E81A24756FC16074119 /* GULLogger.m in Sources */,
-				428C37F95279CE3815B1D57E7BBB1C27 /* GULMutableDictionary.m in Sources */,
-				59C9953D769791B69DFE3B3DF2370C37 /* GULNetwork.m in Sources */,
-				EF2BD60F43CBA08C87ABEE2CFC84B358 /* GULNetworkConstants.m in Sources */,
-				BC3676F1D25A6B60263981B350EEF393 /* GULNetworkURLSession.m in Sources */,
-				C9D3ED9D08F59A852FB2A80E1D840CA7 /* GULNSData+zlib.m in Sources */,
-				33FD42900DFFDF929E11FB24135F7D31 /* GULReachabilityChecker.m in Sources */,
-				111049762212946763C03128C074F33E /* GULSceneDelegateSwizzler.m in Sources */,
-				B30B043D40B3D11D1C9797E8094159D4 /* GULSecureCoding.m in Sources */,
-				B7CEB37C97CEC389801DCE0BC5A680F3 /* GULSwizzler.m in Sources */,
-				8FCB91EC633FB70A0075982DB24D1AD0 /* GULURLSessionDataResponse.m in Sources */,
-				5BB6C998883944658EC371AA095F917F /* GULUserDefaults.m in Sources */,
-				9452EBC28AB57E02CC3C7D3441E30D40 /* NSURLSession+GULPromises.m in Sources */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		1826F67CB0AAC9C8DFC88549766C8BD6 /* Sources */ = {
-			isa = PBXSourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				E83E02B39DAA43C6F18F3E6C6CC42BE6 /* AccessibleMessage.swift in Sources */,
-				3BD1B57A5E811AC65941EAAF908C89D5 /* Animator.swift in Sources */,
-				2A59F3F50BA073B3A93F66354A40E14F /* BackgroundViewable.swift in Sources */,
-				21EF26EC58D710C6D39081FC957290ED /* BaseView.swift in Sources */,
-				906E8DDA5D806EEBC9C1CE3DBB3C9AFF /* CALayer+Extensions.swift in Sources */,
-				40FDCFE88F4BAAEE59F1606CE66F373E /* CornerRoundingView.swift in Sources */,
-				DEBF6A2D9D45D204C1288042F46C678F /* Error.swift in Sources */,
-				3B4E8B854038111049965A0BB303DC19 /* Identifiable.swift in Sources */,
-				8785CCFBAB3778DD3636FE0FD26D46F0 /* KeyboardTrackingView.swift in Sources */,
-				3B255CCDA9EC357B45A7FE0BDAC67BD3 /* MarginAdjustable.swift in Sources */,
-				3AA0FDC8575CEF669DDD9BA4AC903201 /* MarginAdjustable+Extensions.swift in Sources */,
-				D7273717721683389A11932C21632822 /* MaskingView.swift in Sources */,
-				F2A375811C382C03F1AE562EC29ED9EF /* MessageView.swift in Sources */,
-				C959414907B35B8CF3B8729143088A9F /* NSBundle+Extensions.swift in Sources */,
-				E6BC20071F443AAFC6466B3F23A8493C /* NSLayoutConstraint+Extensions.swift in Sources */,
-				02BFA5B05630A5C0A505F6ECB5E0FBB5 /* PassthroughView.swift in Sources */,
-				628E3E9D808C4E27783CADFD321CDFCC /* PassthroughWindow.swift in Sources */,
-				A5CF736493015F2B1A5EFB3183DC54DE /* PhysicsAnimation.swift in Sources */,
-				1322BA7B18AE9DC62AC8F67F1426776F /* PhysicsPanHandler.swift in Sources */,
-				B55E0D3872AFEE9B2422979B4E465972 /* Presenter.swift in Sources */,
-				DE52035C9A2EA9D9C18A785729C11226 /* SwiftMessages.swift in Sources */,
-				AE4368402A3467C2E4A1BE39C3938D05 /* SwiftMessages-dummy.m in Sources */,
-				57720307C8B872E76240EC1285DB212C /* SwiftMessages.Config+Extensions.swift in Sources */,
-				9339CC59CDAB3A1602198382D560D3BF /* SwiftMessagesSegue.swift in Sources */,
-				52C248BA2E633DB09C731AD17C4AAF5F /* Theme.swift in Sources */,
-				38F61A96B7DAB7ED440D377B646220E5 /* TopBottomAnimation.swift in Sources */,
-				42015AFB5EBD72021DB58887C4ACE1AA /* UIEdgeInsets+Extensions.swift in Sources */,
-				E2010B8711E6B170C2D378814FDBB26D /* UIViewController+Extensions.swift in Sources */,
-				C20FD862C0D669F130DBFE94EC0F51A4 /* UIWindow+Extensions.swift in Sources */,
-				0D70A40E2363D52D87B3AF12C0D8205B /* Weak.swift in Sources */,
-				708D5896D75D20FAB5BFD704CF28D03B /* WindowViewController.swift in Sources */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		220C5AC643E37E7B7BC8FF48EDB0D744 /* Sources */ = {
-			isa = PBXSourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				86A55DF9896BE6EF9166E0529F6797F7 /* cct.nanopb.c in Sources */,
-				71BA20D34B18193C961CFA98DCEB5A54 /* GDTCCTCompressionHelper.m in Sources */,
-				BA348AE92686FB590BA3C4A9AFEF8A39 /* GDTCCTNanopbHelpers.m in Sources */,
-				AA3C7451040018F11204343C648D4BFC /* GDTCCTUploader.m in Sources */,
-				93D2354D4524FD634610850598D605F2 /* GDTCCTUploadOperation.m in Sources */,
-				F6D715335E17DCD4BB501D610B6F0285 /* GDTCORAssert.m in Sources */,
-				B7C4999FEF50758AB4F179C9EC3B4D3D /* GDTCORClock.m in Sources */,
-				7AB0A64516EFED90875F1F2E67DA8A73 /* GDTCORConsoleLogger.m in Sources */,
-				BBBFA144D0FD84500281B518106B07A3 /* GDTCORDirectorySizeTracker.m in Sources */,
-				A18C8D196AD77930DEAC1D1E4058D99F /* GDTCOREndpoints.m in Sources */,
-				91053ABDE90E3E78651A12B877C8E89B /* GDTCOREvent.m in Sources */,
-				DB49C8534EF34C7BB56588EDFFC3BA2C /* GDTCOREvent+GDTCCTSupport.m in Sources */,
-				EA161BA27CA14AB49C87ABC2F8198820 /* GDTCORFlatFileStorage.m in Sources */,
-				113159383CF52057E0C9886051018F29 /* GDTCORFlatFileStorage+Promises.m in Sources */,
-				53B1BE023F32ACF91958E821F558BECD /* GDTCORLifecycle.m in Sources */,
-				EEFBD0E8A3B7112A0FA702BADD55BA36 /* GDTCORPlatform.m in Sources */,
-				63C1466D4080D48764D338ED04E52C0B /* GDTCORReachability.m in Sources */,
-				E62A8B9D050E23E7A212A9AE0D64EAA3 /* GDTCORRegistrar.m in Sources */,
-				78CAEECE6C8ECBA595CD945579900A20 /* GDTCORStorageEventSelector.m in Sources */,
-				88BC5775E47FB65A52B65E83C76E1957 /* GDTCORTransformer.m in Sources */,
-				5111F5249BD094399F7428388618081C /* GDTCORTransport.m in Sources */,
-				ABD6BC9D5633068D1F9A1021BF83F2E1 /* GDTCORUploadBatch.m in Sources */,
-				128BE8062760481941722A2B41DC3825 /* GDTCORUploadCoordinator.m in Sources */,
-				92B78D5E218668C31EAE99EB494E4BB1 /* GoogleDataTransport-dummy.m in Sources */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
 		32261FF210F3371E0B4B04148F4A5EFE /* Sources */ = {
 			isa = PBXSourcesBuildPhase;
 			buildActionMask = 2147483647;
@@ -6993,13 +6953,76 @@
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		33A4A3BB7C40EE492E9012CB81F9F4C7 /* Sources */ = {
+		3585A7C4C4FE2421513986A1CCEB6977 /* Sources */ = {
+			isa = PBXSourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				F6007B9763349D9DC3B5EE8B0E525CCF /* FBLPromise.m in Sources */,
+				6D4780BFBE31FC07F0FA6197A78ED1E6 /* FBLPromise+All.m in Sources */,
+				942AE552381B434ED6501C86D339C145 /* FBLPromise+Always.m in Sources */,
+				A490A38D937FE32A302D04B4B6A0CC70 /* FBLPromise+Any.m in Sources */,
+				CE8828A75BDCE3EF8C4F93D7AF81D442 /* FBLPromise+Async.m in Sources */,
+				8826B02725FE95E5655E4020A86921A4 /* FBLPromise+Await.m in Sources */,
+				9CAEC876C0401FD68769781148DFEFFC /* FBLPromise+Catch.m in Sources */,
+				DA327BF14267A0106C4806B2DF482DDF /* FBLPromise+Delay.m in Sources */,
+				BE763922627F21B9C88022898AD30181 /* FBLPromise+Do.m in Sources */,
+				AE52682256BA12B4799A20205483C5DC /* FBLPromise+Race.m in Sources */,
+				D97AA0ED7E3CAC69626609ACBB7278A9 /* FBLPromise+Recover.m in Sources */,
+				5C8D11BB639AEBBEBA3008427F1A8C83 /* FBLPromise+Reduce.m in Sources */,
+				DEEF19F321E3D3C744F94ED911B02C6D /* FBLPromise+Retry.m in Sources */,
+				581168F91CD3B5EFCB6AB3B8E0DFC069 /* FBLPromise+Testing.m in Sources */,
+				FCE9F2AF87CA4E500ED009C0A2235D06 /* FBLPromise+Then.m in Sources */,
+				698A4C417928CEBB43942C1F75E559EA /* FBLPromise+Timeout.m in Sources */,
+				0752FEE29003A147448D3AFAF223855B /* FBLPromise+Validate.m in Sources */,
+				664A9C0F034A3FD20F0D0358E0BB1A33 /* FBLPromise+Wrap.m in Sources */,
+				097419C1E189EE880DF3195DCCA06E4D /* FBLPromiseError.m in Sources */,
+				51BF130C8273622920FA2AAD38218CFB /* PromisesObjC-dummy.m in Sources */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+		36F358705C59FA4EFBF6F28A92DCB476 /* Sources */ = {
+			isa = PBXSourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+		4BA70CD4B89E66C9A858FE431EC58F47 /* Sources */ = {
 			isa = PBXSourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				02D91E5792ACC199BE698B0DA7B87BDC /* FIRCoreDiagnostics.m in Sources */,
-				43C2CA6E171B897785FE86268FE3F94D /* firebasecore.nanopb.c in Sources */,
-				EFE08033FB8BC4F7614A56FFB6AC0F53 /* FirebaseCoreDiagnostics-dummy.m in Sources */,
+				ABF250D40B627B00CB167D20AFEFCCD7 /* FirebaseMessaging-dummy.m in Sources */,
+				85CC33FEEF24F9B55BDA71F686144752 /* FIRMessaging.m in Sources */,
+				EE41E85DE1E7DD01011EB0154E073311 /* FIRMessagingAnalytics.m in Sources */,
+				11C3DD5E67381BB452140288938B46B3 /* FIRMessagingAPNSInfo.m in Sources */,
+				CB08C1A85B9BEE85B695786AB85ACB74 /* FIRMessagingAuthKeychain.m in Sources */,
+				923E272471BFC25CCFC5687258BE0862 /* FIRMessagingAuthService.m in Sources */,
+				F988237850739066DDAE16D9FCA32CCF /* FIRMessagingBackupExcludedPlist.m in Sources */,
+				B78BE50F75F62DD65A599AFEF23E1494 /* FIRMessagingCheckinPreferences.m in Sources */,
+				D239255E948851E7F86A63E74AE45D54 /* FIRMessagingCheckinService.m in Sources */,
+				90DCB4CDAA261F44EE4400B874A60FD4 /* FIRMessagingCheckinStore.m in Sources */,
+				2F3F0EEFAA3F2C8CF27F97052BBF5651 /* FIRMessagingConstants.m in Sources */,
+				7F05F15FDF81403B56A7CF0890F69169 /* FIRMessagingContextManagerService.m in Sources */,
+				17CB8F8C857AC674120EF0CD86AB0ED2 /* FIRMessagingExtensionHelper.m in Sources */,
+				99E9829745AEAC42DE774741CE56F1A9 /* FIRMessagingKeychain.m in Sources */,
+				C69EA7A8B6D57A59DF03EBDD12DE9D92 /* FIRMessagingLogger.m in Sources */,
+				0A36557C514A629195286BB636A7399F /* FIRMessagingPendingTopicsList.m in Sources */,
+				BCF40817EA75D4FE49E51DABAA5FE77C /* FIRMessagingPersistentSyncMessage.m in Sources */,
+				22B2B145664C2C9BF42079863125D707 /* FIRMessagingPubSub.m in Sources */,
+				5DB13832F7B416F8CC7C7939EE904F25 /* FIRMessagingRemoteNotificationsProxy.m in Sources */,
+				670DABF58D869BDB3498FB82C868992C /* FIRMessagingRmqManager.m in Sources */,
+				A119091FC1621E40EE0E3742A5FF10AE /* FIRMessagingSyncMessageManager.m in Sources */,
+				E1BB94CC1AFB7241DED412D82DB270C5 /* FIRMessagingTokenDeleteOperation.m in Sources */,
+				9C6078083DC66F843363A1B0D191DFD1 /* FIRMessagingTokenFetchOperation.m in Sources */,
+				260B1D2CBE38791EA260B7957DE4822A /* FIRMessagingTokenInfo.m in Sources */,
+				7F8921F44408464EC830415C1612025C /* FIRMessagingTokenManager.m in Sources */,
+				C92903F3ED87ED78EADD6C745D557046 /* FIRMessagingTokenOperation.m in Sources */,
+				007A5EB77CEE0F841CB56798BEDDF989 /* FIRMessagingTokenStore.m in Sources */,
+				A4639B12749060AFD5402EE6BF9C5346 /* FIRMessagingTopicOperation.m in Sources */,
+				C3870F06CE218438A8AFDD86668B6F6A /* FIRMessagingUtilities.m in Sources */,
+				C16146E3B4D52FAFF66F7B89E57E0AAB /* me.nanopb.c in Sources */,
+				747DF9F905C7D905B4103505BAD2C91F /* NSDictionary+FIRMessaging.m in Sources */,
+				80F81710BF822F1A62F835208FA219CC /* NSError+FIRMessaging.m in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -7046,38 +7069,115 @@
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		7169D6FD44672A7DD71CF81A51DCA21C /* Sources */ = {
+		62BA0BC0FC2955E786428A8AD03CC009 /* Sources */ = {
 			isa = PBXSourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				BF5C187D8C85AB3548B6EA7CE4B3B032 /* OTPFieldView.swift in Sources */,
-				AE3A3FF9A48A17875E549C5C3DC3FC1B /* OTPFieldView-dummy.m in Sources */,
-				9DB4CBDFE92F4E8ED8DEF17B0D55548B /* OTPTextField.swift in Sources */,
+				25CF3A1F09666920B730748941FB785B /* NSBezierPath+SDRoundedCorners.m in Sources */,
+				B2E8CAF4CD92BB6A859900159EE677E2 /* NSButton+WebCache.m in Sources */,
+				6162747A865B8EA7F8461AE841C3A4E2 /* NSData+ImageContentType.m in Sources */,
+				106F31A5D2E0E5BA8808175438A9AF86 /* NSImage+Compatibility.m in Sources */,
+				CC5075184395289AF0BD82AD96205371 /* SDAnimatedImage.m in Sources */,
+				C92A0D8832F72AACDF39560FCC71D6F7 /* SDAnimatedImagePlayer.m in Sources */,
+				F49D615F346C666AA9AD80656363B6A6 /* SDAnimatedImageRep.m in Sources */,
+				DF4099B680CBB960D2E7A81DBC6E7E5E /* SDAnimatedImageView.m in Sources */,
+				E36A7862DE77FAB98FC121D52A8A243E /* SDAnimatedImageView+WebCache.m in Sources */,
+				04D997749ACFF17DD18119CC0C1353F3 /* SDAssociatedObject.m in Sources */,
+				118C4F889469F704406C293445B30949 /* SDAsyncBlockOperation.m in Sources */,
+				C030F5025DCB39DE3DE60D8941A398D6 /* SDDeviceHelper.m in Sources */,
+				EE1DDD9E8B64F0B57FDFC4BA656E20CB /* SDDiskCache.m in Sources */,
+				AB003A39D0BEBEABE23BD42E764A70B0 /* SDDisplayLink.m in Sources */,
+				78A7F2A26C4DFEEDB528E665DE6FC605 /* SDFileAttributeHelper.m in Sources */,
+				A32F3AC37DFEC1D3967858ED216B56B2 /* SDGraphicsImageRenderer.m in Sources */,
+				5607426FAEA79922FECD484BE3B7EDE3 /* SDImageAPNGCoder.m in Sources */,
+				F4B5E238407D1F65730E67A8864B29E4 /* SDImageAssetManager.m in Sources */,
+				D7A2A03FC153ED6B11DF2A8C33A1781D /* SDImageAWebPCoder.m in Sources */,
+				0D2A933878BC4222B6E3AD8648FBBF4E /* SDImageCache.m in Sources */,
+				BD53016D8B1FDF3AEDA321E783D0B3BC /* SDImageCacheConfig.m in Sources */,
+				73CC700D977B966F06DE5697973959BC /* SDImageCacheDefine.m in Sources */,
+				939471720004ACFFA7A7F7E3B1DFA35C /* SDImageCachesManager.m in Sources */,
+				7904DCE8B30745AA050B56A92334AA96 /* SDImageCachesManagerOperation.m in Sources */,
+				9F679D8ECCAE56283A7A73811D8E88DC /* SDImageCoder.m in Sources */,
+				8A7DD42DE2D9F28ADFE90D47B5F75545 /* SDImageCoderHelper.m in Sources */,
+				1D6268519EDE2BDB6EF179B6A98B7B9F /* SDImageCodersManager.m in Sources */,
+				4499DCF0EF5C8057E7FA32E02142CD4D /* SDImageFrame.m in Sources */,
+				9FA9394164BD37F7D79AEC899995AE52 /* SDImageGIFCoder.m in Sources */,
+				4D8AF7B93F36764229DE31E07240BF2F /* SDImageGraphics.m in Sources */,
+				DEEA6E136E797AA37D5433767B0ADD71 /* SDImageHEICCoder.m in Sources */,
+				C066C772F568F5E925022DC41BE0C882 /* SDImageIOAnimatedCoder.m in Sources */,
+				008AC1F6A2330165EEE36FF54AFBE4EA /* SDImageIOCoder.m in Sources */,
+				FF8FE62BEC8D94965CABA612808C7B2F /* SDImageLoader.m in Sources */,
+				54031B8BA424F5744F43AB4F486C3941 /* SDImageLoadersManager.m in Sources */,
+				D16E3160929DCE2ECBD3365B84864A9A /* SDImageTransformer.m in Sources */,
+				AC3996B78F08AAB70362341F85CEBF22 /* SDInternalMacros.m in Sources */,
+				F71A1522C2ACDFE83543A9CAB87E662C /* SDMemoryCache.m in Sources */,
+				6DA28EC96C35A26E54C48645B228EF29 /* SDWeakProxy.m in Sources */,
+				FE907B92552B0A8B637D613C15C29936 /* SDWebImage-dummy.m in Sources */,
+				8A55F620072EC751FE9F4D65766FB1B8 /* SDWebImageCacheKeyFilter.m in Sources */,
+				4E1EC5D85866DBA8CBE74C46AA6CB1BC /* SDWebImageCacheSerializer.m in Sources */,
+				F725CDB504BE6DF9C874B525C9C05CE7 /* SDWebImageCompat.m in Sources */,
+				9CE2B10EC544EB6A2B75CD99EDD30824 /* SDWebImageDefine.m in Sources */,
+				511A23BAE9F9002F887D5509438EBD38 /* SDWebImageDownloader.m in Sources */,
+				B4FB65E572191C88B6723B19452C7F2C /* SDWebImageDownloaderConfig.m in Sources */,
+				D5645D135FE148DDF50CEDF246616E28 /* SDWebImageDownloaderDecryptor.m in Sources */,
+				E6BF1DABA55AE4CAB5085235B1DE90D7 /* SDWebImageDownloaderOperation.m in Sources */,
+				AE5A550DAA2BF1C4DD760746BBE8A1B9 /* SDWebImageDownloaderRequestModifier.m in Sources */,
+				2633EC20941DD80E4C398C5C3F8C8B09 /* SDWebImageDownloaderResponseModifier.m in Sources */,
+				B8B5663D8E6C3AE95BC3A651C4E73EF7 /* SDWebImageError.m in Sources */,
+				9C5A32F1A2135F9EE4F58AF762CD4AEC /* SDWebImageIndicator.m in Sources */,
+				A3A03C3F888B2AD1135866963637F368 /* SDWebImageManager.m in Sources */,
+				A1B661D8B0AE5C6B6BCDD0370E34F4A8 /* SDWebImageOperation.m in Sources */,
+				563752E0CE58CF5537F3159C9F921762 /* SDWebImageOptionsProcessor.m in Sources */,
+				D365FC2207D5EB9117AC8C6659ECF4E7 /* SDWebImagePrefetcher.m in Sources */,
+				DD9B58069951E11545143DC8F5623810 /* SDWebImageTransition.m in Sources */,
+				37ADD068D935DE0B5D7F763A45B02485 /* UIButton+WebCache.m in Sources */,
+				B80847B9BC4125013366ADAE169C98D8 /* UIColor+SDHexString.m in Sources */,
+				B44A9FAEAE86499B44D346F3EE7C1BB0 /* UIImage+ExtendedCacheData.m in Sources */,
+				CDD526FFBF1BA7840B262D69EC25ECF5 /* UIImage+ForceDecode.m in Sources */,
+				DFA73CE1CEA28C4662C283BA65A2A3B1 /* UIImage+GIF.m in Sources */,
+				F11F1C9DEE11A51D6324FFBAA8DE4B12 /* UIImage+MemoryCacheCost.m in Sources */,
+				89CFF1424E05E99923C24C9EB400C8CE /* UIImage+Metadata.m in Sources */,
+				064FE1EC4C1A8893AB93423320D68E24 /* UIImage+MultiFormat.m in Sources */,
+				50EAFA66E0CD2F3B596797CFBA47152E /* UIImage+Transform.m in Sources */,
+				EBC9786496E03F20BA01B68C1F9F69D9 /* UIImageView+HighlightedWebCache.m in Sources */,
+				57FDE1E0364144D2A6B1336F92D1BB41 /* UIImageView+WebCache.m in Sources */,
+				1F1B795E2B4C7CC74CD30675F05A2ECE /* UIView+WebCache.m in Sources */,
+				3B35A6B1899C93E9D68AD8D50868BC8C /* UIView+WebCacheOperation.m in Sources */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+		65198690789E478A01F7E1A313836D3F /* Sources */ = {
+			isa = PBXSourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				001204C61231E131065CD6FD7355507B /* FIRCurrentDateProvider.m in Sources */,
+				9B3BE396EC4DFB45D9EB27EF140E5110 /* FirebaseInstallations-dummy.m in Sources */,
+				596372F51661D51195C13AB79452ED77 /* FIRInstallations.m in Sources */,
+				4B877E0FD18EAB2E6B85D21411236B42 /* FIRInstallationsAPIService.m in Sources */,
+				EE3F1165DAFE92EEE5399A7D110C18E4 /* FIRInstallationsAuthTokenResult.m in Sources */,
+				B9F7E2CEA4228C777500423AB874DB00 /* FIRInstallationsBackoffController.m in Sources */,
+				C325A4AECCB99EF5CD2B2EAC2E44F80E /* FIRInstallationsErrorUtil.m in Sources */,
+				2778955A0BD1BACE976E96CAE422E32A /* FIRInstallationsHTTPError.m in Sources */,
+				AE86568EB897D23F2B75E2B4442C4339 /* FIRInstallationsIDController.m in Sources */,
+				3F5C548D717C3676A9FE69F4A7788C36 /* FIRInstallationsIIDStore.m in Sources */,
+				194C90CA54E2F0CB414B70C1D3DE9E7E /* FIRInstallationsIIDTokenStore.m in Sources */,
+				823535C7BF9A319C83F8D6C2332CDA96 /* FIRInstallationsItem.m in Sources */,
+				B7111D533E543653DB2B283411A66527 /* FIRInstallationsItem+RegisterInstallationAPI.m in Sources */,
+				19154D167A21D9D08F12A3DB75DE8383 /* FIRInstallationsLogger.m in Sources */,
+				5CDCD7C23FF4B539E00B0A036188B2D3 /* FIRInstallationsSingleOperationPromiseCache.m in Sources */,
+				E8A8175C514C62CD8655245B87869DA2 /* FIRInstallationsStore.m in Sources */,
+				31D4E3FA4C9125DD525CF85BA2DB2CBD /* FIRInstallationsStoredAuthToken.m in Sources */,
+				6B181AB39618C59813E550B158B37DBE /* FIRInstallationsStoredItem.m in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		745E77444D5306B504FA9B81EA7C500B /* Sources */ = {
+		7169D6FD44672A7DD71CF81A51DCA21C /* Sources */ = {
 			isa = PBXSourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				E5AF98F3B7F431BDE9F0CAE3BD73E6D6 /* FIRCurrentDateProvider.m in Sources */,
-				ABA8FDA9C89CDF263DD28B9EFEA7DF7F /* FirebaseInstallations-dummy.m in Sources */,
-				74A31D9F1FD5F17C2112F303099B6B98 /* FIRInstallations.m in Sources */,
-				15335EDB116EA914722947E244C7B6D8 /* FIRInstallationsAPIService.m in Sources */,
-				CD574B099311DE799AE3FB74F653A3C3 /* FIRInstallationsAuthTokenResult.m in Sources */,
-				6998505ED04E8353D27CDE658FE451E1 /* FIRInstallationsBackoffController.m in Sources */,
-				D4CE586B158BF1C3AA9B002736A8ECBD /* FIRInstallationsErrorUtil.m in Sources */,
-				19A806F8DB8431E1B9C47FD2E23B99C4 /* FIRInstallationsHTTPError.m in Sources */,
-				9398F7F88D1306301C9729DC80439FDD /* FIRInstallationsIDController.m in Sources */,
-				0899313B3658312C6A9BDCEE8ED7EB8A /* FIRInstallationsIIDStore.m in Sources */,
-				2432C2F360A688C94ADE00703E5F931A /* FIRInstallationsIIDTokenStore.m in Sources */,
-				9760F80B509F0257569A92F34F892598 /* FIRInstallationsItem.m in Sources */,
-				53A97759B4B454D68029D45DCEDF21AA /* FIRInstallationsItem+RegisterInstallationAPI.m in Sources */,
-				45F18822DBEA6AA64873AFF67D091A4D /* FIRInstallationsLogger.m in Sources */,
-				F555180A885E83A1CC1BB58CBFB5924E /* FIRInstallationsSingleOperationPromiseCache.m in Sources */,
-				31F890B8574318662EBEBD183C964F15 /* FIRInstallationsStore.m in Sources */,
-				BF20057B2D3DB06474CF766832909B95 /* FIRInstallationsStoredAuthToken.m in Sources */,
-				AA9B51F48BCB36FC9EF4839DA15DA358 /* FIRInstallationsStoredItem.m in Sources */,
+				BF5C187D8C85AB3548B6EA7CE4B3B032 /* OTPFieldView.swift in Sources */,
+				AE3A3FF9A48A17875E549C5C3DC3FC1B /* OTPFieldView-dummy.m in Sources */,
+				9DB4CBDFE92F4E8ED8DEF17B0D55548B /* OTPTextField.swift in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -7150,170 +7250,201 @@
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		7E9EB3D6049C5D254B2290DC55C42C43 /* Sources */ = {
+		85690AE6DFE67C5130D53E83F42F121C /* Sources */ = {
+			isa = PBXSourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				64B16076E98993DA0909149D9DD0DC22 /* nanopb-dummy.m in Sources */,
+				B0EE31A92412C63BEBC35CA2B23C8786 /* pb_common.c in Sources */,
+				5A60BD227B42B07DF672D88A6EB8DC29 /* pb_decode.c in Sources */,
+				A5179E982C88EEF6E556A4ECE21BDEE6 /* pb_encode.c in Sources */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+		863ABA5071FAC3B5F33A38B2A56F80F2 /* Sources */ = {
+			isa = PBXSourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				373147F46CDC3E372A06B590DCED9FBC /* FIRAnalyticsConfiguration.m in Sources */,
+				004FAFCECEDF2BE37FDC44388CFFCF91 /* FIRApp.m in Sources */,
+				EC172B12D7F1820C6AFEF01AD7D7A882 /* FIRAppAssociationRegistration.m in Sources */,
+				7E91073609F81D6E7E8DFD8CA25B6828 /* FIRBundleUtil.m in Sources */,
+				F0240BD1F39F8C7041CEB4C47550FEE9 /* FIRComponent.m in Sources */,
+				906119A09CB5A4635767E44FC4E41E08 /* FIRComponentContainer.m in Sources */,
+				AE3AD64BFFE96B4BDD1EAF62A76CC467 /* FIRComponentType.m in Sources */,
+				FAEF7F87BC0E970D7353E0B10DD51491 /* FIRConfiguration.m in Sources */,
+				A77F6D2F1C2469AE87C52737CDE261B8 /* FIRCoreDiagnosticsConnector.m in Sources */,
+				2B5BB4CA939177104797DB06E9EEFFCE /* FIRDependency.m in Sources */,
+				0A463A1A375119AD242B723F9179B72C /* FIRDiagnosticsData.m in Sources */,
+				E4408E1A5E9573BFBA52A2FBF1585246 /* FirebaseCore-dummy.m in Sources */,
+				C177DC269B844330C3D1C886DC5F6CFE /* FIRFirebaseUserAgent.m in Sources */,
+				79B1709CE0971F06C276E859204F25BA /* FIRHeartbeatInfo.m in Sources */,
+				5B01A85165F883B820D0C5959C88F7CE /* FIRLogger.m in Sources */,
+				6951FE0CC94812DEC9F84D61C9FCD52A /* FIROptions.m in Sources */,
+				507212665F9FB9D5122B3E57395560A8 /* FIRVersion.m in Sources */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+		866B8F2F954089CD1DF65336F197EEA0 /* Sources */ = {
 			isa = PBXSourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				28F373C00C4737D7C93BF2DCD0FF33B7 /* FBLPromise.m in Sources */,
-				728A2CC5C9029DCDF47F6008013F92E2 /* FBLPromise+All.m in Sources */,
-				654D7DACFEA378DCEB1E2C8CB7A4B3C3 /* FBLPromise+Always.m in Sources */,
-				A332523339A9E3C840C48AC5E9D1EDCA /* FBLPromise+Any.m in Sources */,
-				77CC43A35EA202D060F930D9EE457AA2 /* FBLPromise+Async.m in Sources */,
-				F60C93A387FD72F9D71D9BA44DE02901 /* FBLPromise+Await.m in Sources */,
-				0C321E6D825B3332392B12A0525C4A91 /* FBLPromise+Catch.m in Sources */,
-				F2A93944620A2A2AEFD369F77D71F2F0 /* FBLPromise+Delay.m in Sources */,
-				5982210772F5EFB5E1D62BD30FC4A3D9 /* FBLPromise+Do.m in Sources */,
-				33642971C3E756DDAA4F5C8B84DFA4DB /* FBLPromise+Race.m in Sources */,
-				A66132FB0E2038BFD7E6E3739A6A2D98 /* FBLPromise+Recover.m in Sources */,
-				C34954C7B098A995A8693B67974D578D /* FBLPromise+Reduce.m in Sources */,
-				8B01661451E4939639ABD26C7C817485 /* FBLPromise+Retry.m in Sources */,
-				09DFC02E8946CAD93A509E1A5C0B3F61 /* FBLPromise+Testing.m in Sources */,
-				E137A4FA7B5401F07D9C5BF7806C69A2 /* FBLPromise+Then.m in Sources */,
-				B2F3EE0E4F4D0AF6E05427E3854040B3 /* FBLPromise+Timeout.m in Sources */,
-				D690086D27A2E19B5CBBC3D50F4E5594 /* FBLPromise+Validate.m in Sources */,
-				A5B7B330B47FB127A89552E67A78ADEA /* FBLPromise+Wrap.m in Sources */,
-				863497031D18FB0DA22323D66EDC9DF1 /* FBLPromiseError.m in Sources */,
-				85C6B7315BC7A3905CA03C41FAD7A985 /* PromisesObjC-dummy.m in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		987EB940643EC4AE2709E5A0533439A8 /* Sources */ = {
+		9B44097F8018A42FDD168B8EA5DDEE43 /* Sources */ = {
 			isa = PBXSourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				2621DE78000CBF1D9E451D115AEAD251 /* NSBezierPath+SDRoundedCorners.m in Sources */,
-				2A1AB10E48B76CB06AFB7F5A22954B0D /* NSButton+WebCache.m in Sources */,
-				27720220C8BC48C0865BE1B2ADD6CF79 /* NSData+ImageContentType.m in Sources */,
-				B575B0BA05EB4A4180840D2F16500508 /* NSImage+Compatibility.m in Sources */,
-				C19793CF9431581F27C584902CB53AB6 /* SDAnimatedImage.m in Sources */,
-				769C1B3C55B9A53858B75AB1A4D1C0E5 /* SDAnimatedImagePlayer.m in Sources */,
-				6CA64AEBE91787E0DD41B572C614764C /* SDAnimatedImageRep.m in Sources */,
-				4EA4C9BF1B527E4C4E68435805B2B30C /* SDAnimatedImageView.m in Sources */,
-				808A353132FD99B4E1942C9A9C8D4ED2 /* SDAnimatedImageView+WebCache.m in Sources */,
-				F3F4CCD85ABB2FC0C2D2F43E99002C40 /* SDAssociatedObject.m in Sources */,
-				F4CF9B4CF9BCEF74E225D49E0A058FE2 /* SDAsyncBlockOperation.m in Sources */,
-				175963558F81939854AF336DE341F48A /* SDDeviceHelper.m in Sources */,
-				F4071C9520BD964129C6E239BB27F770 /* SDDiskCache.m in Sources */,
-				A727031086E40DC612D61B47147431ED /* SDDisplayLink.m in Sources */,
-				ED5AA3BCD346B3BF41F28A3B7ED3FAF8 /* SDFileAttributeHelper.m in Sources */,
-				1A5F7ADE4670FB811E37DB93F3F973BF /* SDGraphicsImageRenderer.m in Sources */,
-				515F9802DD9593AB3D4B4CCF770B48E1 /* SDImageAPNGCoder.m in Sources */,
-				B7FB522F684ADED04510FBEC1F272FC7 /* SDImageAssetManager.m in Sources */,
-				6E4C16F6A55EEE40AA7B0DBF1BD8C0CA /* SDImageAWebPCoder.m in Sources */,
-				E8D375BA8A067AFBD556855C4BC4EBEC /* SDImageCache.m in Sources */,
-				FD99CB08A9E0BF46AFCB925578D5F212 /* SDImageCacheConfig.m in Sources */,
-				DD0B8302D5B5C792CE3DA7D8CF8911F2 /* SDImageCacheDefine.m in Sources */,
-				D8A75406263347B7639FDAD7D9545C47 /* SDImageCachesManager.m in Sources */,
-				A813CEAD68FEA5BF153D459C9E44A01F /* SDImageCachesManagerOperation.m in Sources */,
-				E5BA96F7B4E0E61C882CC06F58E0BFC5 /* SDImageCoder.m in Sources */,
-				5DB1F608CD3B2668CBD7FAF61DC91C0A /* SDImageCoderHelper.m in Sources */,
-				83D39FD24123D044E0BB6B1131044B41 /* SDImageCodersManager.m in Sources */,
-				624D9DE318DA02BADB3CEF0FADCA7995 /* SDImageFrame.m in Sources */,
-				81ADFCFB860FA37B8CD72466083736F1 /* SDImageGIFCoder.m in Sources */,
-				C887086D4EDFD9517A50404A99B8CFEA /* SDImageGraphics.m in Sources */,
-				0FDD56DE4F06385068A9AC9ADA9750F2 /* SDImageHEICCoder.m in Sources */,
-				EC3A424B99F3AF72F2F105B8E40A262C /* SDImageIOAnimatedCoder.m in Sources */,
-				9E647FDA64D5A78DBE1A66B16D8C2125 /* SDImageIOCoder.m in Sources */,
-				5560B890471678D43C65BBC8BCD20893 /* SDImageLoader.m in Sources */,
-				B90AD1E4C75BE4C9F4B1C82EFCB46FB2 /* SDImageLoadersManager.m in Sources */,
-				DD46609E44FD1377423E83AEAAE3A71D /* SDImageTransformer.m in Sources */,
-				A6E0E315E75FBBE0574467E3029A18C3 /* SDInternalMacros.m in Sources */,
-				82E2C64BB279525291C61E48E3CD2303 /* SDMemoryCache.m in Sources */,
-				6123CC535FC863F5C098B6B5D13BBB06 /* SDWeakProxy.m in Sources */,
-				8E4DF1246722F4F7FF3D91E2BA556361 /* SDWebImage-dummy.m in Sources */,
-				FE591EFA832A3357DCCEB7F98773947C /* SDWebImageCacheKeyFilter.m in Sources */,
-				027EEAED2B05E69AB75DA0EB6E84CD05 /* SDWebImageCacheSerializer.m in Sources */,
-				2EBD13505B3D9F7895649EF1CA931B39 /* SDWebImageCompat.m in Sources */,
-				CD28C555408F77F7823F634410DC0B6E /* SDWebImageDefine.m in Sources */,
-				4B4FB7F91DD4BCC5810E858A55FA3EC9 /* SDWebImageDownloader.m in Sources */,
-				E7158C463FA2F90C4CD368AA0D4AE681 /* SDWebImageDownloaderConfig.m in Sources */,
-				B70578AD4C042E61309CD0D9DCD436DA /* SDWebImageDownloaderDecryptor.m in Sources */,
-				A224F339E3B3C3DF53E45B21C506D934 /* SDWebImageDownloaderOperation.m in Sources */,
-				18416FA0760939371D866DC221EB35D8 /* SDWebImageDownloaderRequestModifier.m in Sources */,
-				A5212BC9F219FEF1239E8C5EFEE0390A /* SDWebImageDownloaderResponseModifier.m in Sources */,
-				7DED5937D10DEEA844B3238B5B36338A /* SDWebImageError.m in Sources */,
-				B77EB21581793C290059B4FC854421A7 /* SDWebImageIndicator.m in Sources */,
-				9FBF57080B669A216AC777B726EE75EC /* SDWebImageManager.m in Sources */,
-				8E630F479B165EE06F0353D4B27D7D81 /* SDWebImageOperation.m in Sources */,
-				644A1788B6CAA8BEE9FCD4809009B8AE /* SDWebImageOptionsProcessor.m in Sources */,
-				EF26192298B726958166236EF8B6289E /* SDWebImagePrefetcher.m in Sources */,
-				07F5124F2201E074D07AA86FCE537570 /* SDWebImageTransition.m in Sources */,
-				6E808734C1AD97611C3A6D0080C9018C /* UIButton+WebCache.m in Sources */,
-				AA7A2332AE218D7CA57373B673D0BE88 /* UIColor+SDHexString.m in Sources */,
-				CF32EED8E8F5B35D90F4D61759596223 /* UIImage+ExtendedCacheData.m in Sources */,
-				AE824AAE7BA0D34C13B61F500BBBA5C0 /* UIImage+ForceDecode.m in Sources */,
-				A9E24CD3877339F1F9C7C44FDAF308E7 /* UIImage+GIF.m in Sources */,
-				3DACAEBF059FD9C83D065510502F73D2 /* UIImage+MemoryCacheCost.m in Sources */,
-				407030D422D0877349252753D2AA0AF7 /* UIImage+Metadata.m in Sources */,
-				A31C1323B4F0B1C3CAF82B01086BD790 /* UIImage+MultiFormat.m in Sources */,
-				F3A29DAD2BDB31C95CA084F8884FD587 /* UIImage+Transform.m in Sources */,
-				3AAC8217EF49195232361BBA77441ADE /* UIImageView+HighlightedWebCache.m in Sources */,
-				EBEF061EA22A311FDB00EAB9481B016D /* UIImageView+WebCache.m in Sources */,
-				1BED289ADE32EDF39F9E609C3BF8CDFB /* UIView+WebCache.m in Sources */,
-				99ECDB76B594E712B4AE48267ADDB808 /* UIView+WebCacheOperation.m in Sources */,
+				BEF86AC78261B5A91876C9F722EA3D20 /* crashlytics.nanopb.c in Sources */,
+				6F9DBD2AFC1C68C92006286A67D927D2 /* FIRCLSAllocate.c in Sources */,
+				CB91D13FB1332C4A09A24C8B90D45841 /* FIRCLSAnalyticsManager.m in Sources */,
+				A81A9EABB3429A809CDF254770B7AE02 /* FIRCLSApplication.m in Sources */,
+				3F2A05263D1FD93945D8518145AAD014 /* FIRCLSApplicationIdentifierModel.m in Sources */,
+				19C18D0ED5447926576DFF3ABB327B22 /* FIRCLSAsyncOperation.m in Sources */,
+				140616ECABDC5C13178449C7C9433F08 /* FIRCLSBinaryImage.m in Sources */,
+				DA7A4888F16604625D75598E061C2ABB /* FIRCLSByteUtility.m in Sources */,
+				4FFD6170D28A40D65035E072111AA914 /* FIRCLSCallStackTree.m in Sources */,
+				9C864E73D4F77D723186D86864051221 /* FIRCLSCodeMapping.m in Sources */,
+				E2B31EDB22CCFA772AA617922A5FB237 /* FIRCLSCompactUnwind.c in Sources */,
+				D0ED0F505E6DF160A5297F5C7275CE92 /* FIRCLSCompoundOperation.m in Sources */,
+				AF7509A5EE7FA14F12BE59B4E89CE75E /* FIRCLSConstants.m in Sources */,
+				5F7029C78CBBC0D26A818E0AF744446E /* FIRCLSContext.m in Sources */,
+				D8B961697A8415A876D43E325A6A9500 /* FIRCLSCrashedMarkerFile.c in Sources */,
+				A434BB96A88FA1DCF4CF2FC4001A3851 /* FIRCLSDataCollectionArbiter.m in Sources */,
+				72D5AFD3BB8D91302C6D47CDCBDE79CC /* FIRCLSDataCollectionToken.m in Sources */,
+				A47A4F8C516A4ED3C6DE8B9154E8D138 /* FIRCLSDataParsing.c in Sources */,
+				85C702AF38BF752887DAB839FF0541D3 /* FIRCLSDemangleOperation.mm in Sources */,
+				01A8099851771A0B6C454808EC500127 /* FIRCLSDownloadAndSaveSettingsOperation.m in Sources */,
+				E9D0D1F6F44A9C4EFB2EDB9EF0A50F5F /* FIRCLSdSYM.m in Sources */,
+				037854C7CDCA2B87DF5745938C4BF530 /* FIRCLSDwarfExpressionMachine.c in Sources */,
+				D1A8E5A14823F14EB261B6DE19EAD123 /* FIRCLSDwarfUnwind.c in Sources */,
+				C0E5432810487B04BF55B08272EED811 /* FIRCLSException.mm in Sources */,
+				CFE2AB450D32A4DB3237322AF58439CD /* FIRCLSExecutionIdentifierModel.m in Sources */,
+				6310A0D6A7259EC2F6E85326A0955BD9 /* FIRCLSExistingReportManager.m in Sources */,
+				59DF4543076F4817DE6428ED50CD9461 /* FIRCLSFABAsyncOperation.m in Sources */,
+				8AA303821890FC122C667B14CC70E8BD /* FIRCLSFABHost.m in Sources */,
+				66C73435A25432365B0C273CD10EFE46 /* FIRCLSFABNetworkClient.m in Sources */,
+				9E477C3FB90022F4816F0DDFFCEA8FCF /* FIRCLSFile.m in Sources */,
+				7F21315404037A67C803D2D0DDF065F2 /* FIRCLSFileManager.m in Sources */,
+				03E2437A15980B4D610D505B6AF3BD7A /* FIRCLSHandler.m in Sources */,
+				F97A24030B5E505B4FE57C2AE516BAF6 /* FIRCLSHost.m in Sources */,
+				859C963484876683987910FD42EECB4C /* FIRCLSInstallIdentifierModel.m in Sources */,
+				B1E582EBE72FBD9C4930E36FE4B7FA19 /* FIRCLSInternalLogging.c in Sources */,
+				CEBBD84818697CFD1B919C872C185E3A /* FIRCLSInternalReport.m in Sources */,
+				60CD96144F2366049A8E1B81A36A4365 /* FIRCLSLaunchMarkerModel.m in Sources */,
+				A266A08D5863FFA98A6DC02A6E7080B9 /* FIRCLSLogger.m in Sources */,
+				B9C9B40707E0446A5B51A07FBF1CC247 /* FIRCLSMachException.c in Sources */,
+				ED4C5EBCC7CEA4ECB25A51F1E2FD9008 /* FIRCLSMachO.m in Sources */,
+				E2BFA8C40A69A922A1517B2CDAA293A1 /* FIRCLSMachOBinary.m in Sources */,
+				960D6BA650F7B55920205C92E5E9E53C /* FIRCLSMachOSlice.m in Sources */,
+				06702607519AA9E4BD376D8B359BD14A /* FIRCLSManagerData.m in Sources */,
+				7A21456A072E91C06DC1E92F4ECE2BB8 /* FIRCLSMetricKitManager.m in Sources */,
+				02AAE5E850E36E4A7275A5E3E27CE27D /* FIRCLSMultipartMimeStreamEncoder.m in Sources */,
+				B5BCDA974CCF9D7F9ACEB9D643D83A5D /* FIRCLSNetworkOperation.m in Sources */,
+				D46F3423FAC5D032A7A11EDEDCC5424B /* FIRCLSNetworkResponseHandler.m in Sources */,
+				FA6980DC3506147F14529FEB3C050024 /* FIRCLSNotificationManager.m in Sources */,
+				3C8AB6C0E8D260F04DA1DC6BD30B8AEE /* FIRCLSProcess.c in Sources */,
+				07CC3EC87D5B98D88D05B1A0DAEAB647 /* FIRCLSProcessReportOperation.m in Sources */,
+				5C482FE34F36D00B9286BE6473B64CB8 /* FIRCLSProfiling.c in Sources */,
+				8A8CF4AF6A9E839F8D6AC8E8A7B7C63A /* FIRCLSRecordApplication.m in Sources */,
+				3682ECEC7FE4D45C51F1A43417B47CBC /* FIRCLSRecordBase.m in Sources */,
+				A0A1521261FD37471891FFDB89DBD66A /* FIRCLSRecordHost.m in Sources */,
+				D0E0E58E20C1D15605F5CB5708C3E28D /* FIRCLSRecordIdentity.m in Sources */,
+				C48502FA4432DC29881CCE73D30AD505 /* FIRCLSReportAdapter.m in Sources */,
+				90D87659FB85A1393C5963EAD9BB7F2B /* FIRCLSReportManager.m in Sources */,
+				584740ADCD624A6DF63A6B7A5772903D /* FIRCLSReportUploader.m in Sources */,
+				82636249DC8B2150E918444CD6553428 /* FIRCLSSerializeSymbolicatedFramesOperation.m in Sources */,
+				E67C3DD638B4949FFEBDDF4B4D2EEEBE /* FIRCLSSettings.m in Sources */,
+				C8B9A45A14393AA6FD51973CD5F76583 /* FIRCLSSettingsManager.m in Sources */,
+				FB982706407B9C8A43FF4777F292993C /* FIRCLSSignal.c in Sources */,
+				A50AD0C82722454B77305A509C503B13 /* FIRCLSSymbolicationOperation.m in Sources */,
+				587AEE35A8FA2B681BD1FB13B18CDCC5 /* FIRCLSSymbolResolver.m in Sources */,
+				4923120D0F6F1384D1307D8D07E2C672 /* FIRCLSThreadArrayOperation.m in Sources */,
+				09FCC5919D5B167B4AF7EC1C1D7FCEC7 /* FIRCLSThreadState.c in Sources */,
+				D491104C6D96FA8E9FA978890A4364F9 /* FIRCLSUnwind.c in Sources */,
+				317E58983C8117F4E2605A942A08CBEE /* FIRCLSUnwind_arm.c in Sources */,
+				9D3497DFB21C5BF88C060A7D22811BA0 /* FIRCLSUnwind_x86.c in Sources */,
+				A268883EFB226FE6AF50D56FC7D5D679 /* FIRCLSURLBuilder.m in Sources */,
+				AA94D6803D1EBFE05832F41A702AB6B7 /* FIRCLSUserDefaults.m in Sources */,
+				0B5BA4AD39B8FEDEC559878B722B7EA1 /* FIRCLSUserLogging.m in Sources */,
+				401EB237F9FCB1313BEF0B225FC15645 /* FIRCLSUtility.m in Sources */,
+				FDDAF918B0EF306F7C1316928A0E68CE /* FIRCLSUUID.m in Sources */,
+				3F4166AAD474112D257614AD729D5B8C /* FIRCrashlytics.m in Sources */,
+				D8C82CA319C577D6B5A67B2996B175B5 /* FIRCrashlyticsReport.m in Sources */,
+				B01BA8400D4E33E44848C84FF47B077A /* FirebaseCrashlytics-dummy.m in Sources */,
+				7291498C578A06BAE482934CBED2E34E /* FIRExceptionModel.m in Sources */,
+				5ED20B68F171B30791CFB12A80789514 /* FIRStackFrame.m in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		B58C8977AC61F5150CF3B38403C7CDEC /* Sources */ = {
+		A65DC52B960385FEF4808166660E82D7 /* Sources */ = {
 			isa = PBXSourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				ED03118270100A394C16A8AA563053EC /* IQBarButtonItem.swift in Sources */,
-				0EDB6F2AFCFE8CFAE35446A388476550 /* IQInvocation.swift in Sources */,
-				E1BF3DCACD071E78D4F711B364DDD768 /* IQKeyboardManager.swift in Sources */,
-				9FC66F7AC1FC0A6434FCCEB2A8EF6AD2 /* IQKeyboardManagerConstants.swift in Sources */,
-				044E4EAF3671A3ADE80BAF4B67A94100 /* IQKeyboardManagerConstantsInternal.swift in Sources */,
-				D8943F07141730EA0C094F40C108B660 /* IQKeyboardManagerSwift-dummy.m in Sources */,
-				802859A858E7FD17EF7FA3546E7B4792 /* IQKeyboardReturnKeyHandler.swift in Sources */,
-				3C730938D46EFDD5000EC8D9632CE44C /* IQNSArray+Sort.swift in Sources */,
-				6732C6F2ECEDB38E727EB1FD50B84184 /* IQPreviousNextView.swift in Sources */,
-				17F11791E50F22F1D757EE64E71A38E0 /* IQTextView.swift in Sources */,
-				22DE2EE5C678595CE3559EC9DD4514E9 /* IQTitleBarButtonItem.swift in Sources */,
-				E8705ED6BB312ECD08FDD2BC6812695F /* IQToolbar.swift in Sources */,
-				931182EE544BE21CDA68DCAFF537045B /* IQUIScrollView+Additions.swift in Sources */,
-				8BB57FC2CDE9C6DFA0CEF1280BC4415E /* IQUITextFieldView+Additions.swift in Sources */,
-				62D6540648BB5B2733C840BA8CCB65B9 /* IQUIView+Hierarchy.swift in Sources */,
-				4D5C42CA295C8D267E66102ACBC81E55 /* IQUIView+IQKeyboardToolbar.swift in Sources */,
-				C108352E7A38E9FB99907F75743114B6 /* IQUIViewController+Additions.swift in Sources */,
+				DD87BCC0696946A029E25B638BFB1971 /* AccessibleMessage.swift in Sources */,
+				7947B831C0A0B1D6E01E862603BB6369 /* Animator.swift in Sources */,
+				26A9A1D5029BDEB2C0AF0ECFE65ECBB6 /* BackgroundViewable.swift in Sources */,
+				ABAD2E2E0682AB7FF1C6213388E4EBA2 /* BaseView.swift in Sources */,
+				A55902F47A9DACFEAC7D0833A569911E /* CALayer+Extensions.swift in Sources */,
+				AFCAEA6F64C31BBCA51EDE0A22C971FF /* CornerRoundingView.swift in Sources */,
+				8AF999CCB198F34068E9AC558864262D /* Error.swift in Sources */,
+				6C4C53377507F9D77E67A19F3B0DAE69 /* Identifiable.swift in Sources */,
+				69A39E2DCEE7140DF3654C581C401637 /* KeyboardTrackingView.swift in Sources */,
+				2CDD1385DB4E94B72AA923A2DB34D030 /* MarginAdjustable.swift in Sources */,
+				EE2007369A32179A1540374E29C343AE /* MarginAdjustable+Extensions.swift in Sources */,
+				2A44FC42DA4E309A6CD0C23845E62FDD /* MaskingView.swift in Sources */,
+				AEB007C7128575842880AD5559D2D5AC /* MessageView.swift in Sources */,
+				BFAB4C4DAEFAAE316F3F7006D0E7F45B /* NSBundle+Extensions.swift in Sources */,
+				A9CCA2DCDE1D1EA45BAD74C5CB3E9253 /* NSLayoutConstraint+Extensions.swift in Sources */,
+				EF73165F049DB4864538A394FFCBE874 /* PassthroughView.swift in Sources */,
+				93427084C7854C572B84FF0C78CAD7C5 /* PassthroughWindow.swift in Sources */,
+				AD707CFC669380B926AFB1FE7AE9B867 /* PhysicsAnimation.swift in Sources */,
+				FA006B42B99DAF8263341881FD510FF9 /* PhysicsPanHandler.swift in Sources */,
+				33634B64A37F709874AB14578331B98D /* Presenter.swift in Sources */,
+				AC348A3AA450BFA43A0B4869FB82772A /* SwiftMessages.swift in Sources */,
+				08107140946FA9287B2C63728BFABB2E /* SwiftMessages-dummy.m in Sources */,
+				7A5320B15F6789F272E61C44F9F4DBB0 /* SwiftMessages.Config+Extensions.swift in Sources */,
+				137EF15CD62928D2E8C32B18E35CDA84 /* SwiftMessagesSegue.swift in Sources */,
+				645463E624115A42FE45DD945C41DB40 /* Theme.swift in Sources */,
+				7E08A94F10299EADB052CAE34F2BFA00 /* TopBottomAnimation.swift in Sources */,
+				7E98E18B747F60326E4BA87E15839F29 /* UIEdgeInsets+Extensions.swift in Sources */,
+				1F727CB62A71B2ABE2CA4FBDC563A4A1 /* UIViewController+Extensions.swift in Sources */,
+				75240B35A5337C0362A81BA4E19C50A8 /* UIWindow+Extensions.swift in Sources */,
+				1EEBEB3E8E43888EFF440D810F4FE61F /* Weak.swift in Sources */,
+				BB2B1C8268535C8BB056EB34B907FE16 /* WindowScene.swift in Sources */,
+				A122D2A3C925C48C11A200271047323E /* WindowViewController.swift in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		CC8F7404301FCC6C1DF0B60A7710DE7D /* Sources */ = {
+		AC7850B8AD058752CD0E80D5A5B07A42 /* Sources */ = {
 			isa = PBXSourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				3440C72F4A9193E764BF994E669A39DB /* FirebaseMessaging-dummy.m in Sources */,
-				A6ECCDE6114FF6566713DAC82E2E2B62 /* FIRMessaging.m in Sources */,
-				8214777A74D6B9F54CE785B468327C24 /* FIRMessagingAnalytics.m in Sources */,
-				065C3F90BB81FCC012328BCD5CFDC75D /* FIRMessagingAPNSInfo.m in Sources */,
-				CAFB3A0073C4E42BB7E8A860546C70AE /* FIRMessagingAuthKeychain.m in Sources */,
-				F0EBDA0636539352C0D2E4B4F6037BA4 /* FIRMessagingAuthService.m in Sources */,
-				8DAABF2486A345CE74E7F94672ECAA3E /* FIRMessagingBackupExcludedPlist.m in Sources */,
-				458AAE7F3E8C4CE55EA11C4E110D98DB /* FIRMessagingCheckinPreferences.m in Sources */,
-				3F626CD1CDCD9FA1580CFCDFEB8C1F39 /* FIRMessagingCheckinService.m in Sources */,
-				DEC706A3C57BE0D9519DCD0C9E5BD899 /* FIRMessagingCheckinStore.m in Sources */,
-				C22AC83580D5F42B151EA47BF9D2DDA3 /* FIRMessagingConstants.m in Sources */,
-				AC79C085B7862395829E826DB3F04DF1 /* FIRMessagingContextManagerService.m in Sources */,
-				41A105A1FE54CDBF8A0D219D7FAAABCC /* FIRMessagingExtensionHelper.m in Sources */,
-				FECB6A39FF61BB2D62AF4FD0D46DB81E /* FIRMessagingKeychain.m in Sources */,
-				607E7279D581DDEC585508BA1816788A /* FIRMessagingLogger.m in Sources */,
-				5AB385D67DB51931D5CDD5A9DED10635 /* FIRMessagingPendingTopicsList.m in Sources */,
-				60D4450C2D8B9379A97B6A8814B22B23 /* FIRMessagingPersistentSyncMessage.m in Sources */,
-				23338BF94881DA1EAA1DB753539F6E87 /* FIRMessagingPubSub.m in Sources */,
-				6C78ACF536F9202C376F44A67B60AAAA /* FIRMessagingRemoteNotificationsProxy.m in Sources */,
-				4045C06BB1657EBCC71D8E34991A3152 /* FIRMessagingRmqManager.m in Sources */,
-				E44BD3F89814D6A139E9AA91EB5EBB81 /* FIRMessagingSyncMessageManager.m in Sources */,
-				6DA5FEEA8F43D1AA16219FAF59A944E2 /* FIRMessagingTokenDeleteOperation.m in Sources */,
-				F7EF67CF2CBAB3FECF6162008D290F50 /* FIRMessagingTokenFetchOperation.m in Sources */,
-				0A37E8DF2AB17CF6F8F2B55639963DD0 /* FIRMessagingTokenInfo.m in Sources */,
-				F19D8DAFE92170C109D14140A81F7468 /* FIRMessagingTokenManager.m in Sources */,
-				D435B9C3678D6FCD502059B47681351C /* FIRMessagingTokenOperation.m in Sources */,
-				20DD27BAADBA68AD78ECCA842840FECB /* FIRMessagingTokenStore.m in Sources */,
-				E45F43B92F31D8A3B560ADF82C3F2408 /* FIRMessagingTopicOperation.m in Sources */,
-				9326B0039E2776133189FC4A3A7B8357 /* FIRMessagingUtilities.m in Sources */,
-				A6C56B86306DA7E5CA4D6C2BE9F03BFC /* me.nanopb.c in Sources */,
-				D127FDDEB78E4BBAABDDC2F05D9C0C6D /* NSDictionary+FIRMessaging.m in Sources */,
-				B2265938E2C157E9CA499BBEC0992AD8 /* NSError+FIRMessaging.m in Sources */,
+				41CD40F5713CD71AD5AB1471E81C97E1 /* IQBarButtonItem.swift in Sources */,
+				041B655D7F5932F03A65C154BC02BDAA /* IQInvocation.swift in Sources */,
+				86A03DE9366D1BE94EB99AA387EACD1F /* IQKeyboardManager.swift in Sources */,
+				2EC96162DD6740ECE67FF38B8400A7C5 /* IQKeyboardManager+Debug.swift in Sources */,
+				2CA0B3B43A972DF3AD79F58092E3403E /* IQKeyboardManager+Internal.swift in Sources */,
+				08B185E08278AE7EC55F8BBB19693AC5 /* IQKeyboardManager+OrientationNotification.swift in Sources */,
+				F2B1C1D70C629AE19C0D5121B1BBA891 /* IQKeyboardManager+Position.swift in Sources */,
+				1D8031C86A94D32E00ED55B80428A0F3 /* IQKeyboardManager+Toolbar.swift in Sources */,
+				A4BAEE317BFF650DCC888FC67BFBF7EF /* IQKeyboardManager+UIKeyboardNotification.swift in Sources */,
+				D6516B5451008BF1ABA150E6482F6325 /* IQKeyboardManager+UITextFieldViewNotification.swift in Sources */,
+				85F13B069B06ADF2B6DCA622E4645110 /* IQKeyboardManagerConstants.swift in Sources */,
+				0F94B2449CA1ADA76AE79C0BF6A08549 /* IQKeyboardManagerConstantsInternal.swift in Sources */,
+				1A9B9579E46EFBA63C5F57A6B17B5ECA /* IQKeyboardManagerSwift-dummy.m in Sources */,
+				C81CB3B5D25BDBCB6D3A3632BE408229 /* IQKeyboardReturnKeyHandler.swift in Sources */,
+				7AC995F567A776FC1A80A9FA0733F3D1 /* IQNSArray+Sort.swift in Sources */,
+				24EC44FF102C2635A476CEF7567F89DA /* IQPreviousNextView.swift in Sources */,
+				E72E1BDDFF31003BD089544FC112FAAC /* IQTextView.swift in Sources */,
+				20616A47873318F80BFFEABAC9730122 /* IQTitleBarButtonItem.swift in Sources */,
+				1740CBB33D469AEDD5D7291A9268FA97 /* IQToolbar.swift in Sources */,
+				DF33C3DE068D6116B3F551B0453ACD23 /* IQUIScrollView+Additions.swift in Sources */,
+				3F01EED6380B596E1D0C1497CBCF9B95 /* IQUITextFieldView+Additions.swift in Sources */,
+				04B0884964D9592302CA654E0B67E80E /* IQUIView+Hierarchy.swift in Sources */,
+				34C39BDBFE7A2CC585787F5AFCA39FDE /* IQUIView+IQKeyboardToolbar.swift in Sources */,
+				D31356D54A39420DB91C892502CFFD57 /* IQUIViewController+Additions.swift in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -7357,94 +7488,61 @@
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		DCE64753C970DAC314B9DDDA70AA218A /* Sources */ = {
+		D94DC6AC079C45800B12E459D2302D44 /* Sources */ = {
 			isa = PBXSourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				75113A3A540D04FBD9F9AB37505675B4 /* crashlytics.nanopb.c in Sources */,
-				B5B03E6A5A8E89C7BE3B4C7AFFED2C40 /* FIRCLSAllocate.c in Sources */,
-				415FFB2282D4B1569F4C2B545D02A266 /* FIRCLSAnalyticsManager.m in Sources */,
-				890C0C3E5AFCBC176143ED22F26589F2 /* FIRCLSApplication.m in Sources */,
-				B82513AEC6F5D81072CEE0A76E2C1826 /* FIRCLSApplicationIdentifierModel.m in Sources */,
-				BCFA3EDB8D7E2B1A390D78125284F415 /* FIRCLSAsyncOperation.m in Sources */,
-				A7644A439622E572135EC42CE5AB73B1 /* FIRCLSBinaryImage.m in Sources */,
-				BB3F9929AB4ACC12A4E9826A87AA32F3 /* FIRCLSByteUtility.m in Sources */,
-				C362805BEDAAA3B3DD9DA0F6A528CB6F /* FIRCLSCodeMapping.m in Sources */,
-				0E31683A3EDAA8245DC410A06595D17E /* FIRCLSCompactUnwind.c in Sources */,
-				6DC596FC143D3F0C4D654E1B3F67CFAB /* FIRCLSCompoundOperation.m in Sources */,
-				043F74FDD5986EED97091F215635954C /* FIRCLSConstants.m in Sources */,
-				76C90129AD7B5ADB9B586A37FEC7D5A7 /* FIRCLSContext.m in Sources */,
-				567F403B1E11C0F5E34DF63104E19337 /* FIRCLSCrashedMarkerFile.c in Sources */,
-				6EBFBC6B423C97088816DF8C02E8FEAD /* FIRCLSDataCollectionArbiter.m in Sources */,
-				0D9C75EAE46145500C9284F1745CF5C7 /* FIRCLSDataCollectionToken.m in Sources */,
-				2BB88E2E34F12D7C4887802B903F276E /* FIRCLSDataParsing.c in Sources */,
-				03B875F6DAA5D38BDFD44627372699A6 /* FIRCLSDemangleOperation.mm in Sources */,
-				70CAFA52468150C51652B95253CE20F8 /* FIRCLSDownloadAndSaveSettingsOperation.m in Sources */,
-				FDA0C97CE84C04701282F508DF687491 /* FIRCLSdSYM.m in Sources */,
-				0E7E5734F9F20D25EA183EAE91E00CD9 /* FIRCLSDwarfExpressionMachine.c in Sources */,
-				2B01479F8AC9AF3A1849275F77D0FC89 /* FIRCLSDwarfUnwind.c in Sources */,
-				ACEA8F5D0A48CBA5DCF40FEF99CE5049 /* FIRCLSException.mm in Sources */,
-				31F26594E5A77599E13609714C46D4C0 /* FIRCLSExecutionIdentifierModel.m in Sources */,
-				A9BE6A15651AED2C53F2911D52BF5054 /* FIRCLSExistingReportManager.m in Sources */,
-				965050D141F84C97DF9FB046727B7C7C /* FIRCLSFABAsyncOperation.m in Sources */,
-				A95731D40A6941CB6340ECD587B50FE4 /* FIRCLSFABHost.m in Sources */,
-				2C0097255B6B1B392980140EA5C86DD9 /* FIRCLSFABNetworkClient.m in Sources */,
-				5242FB2C69E6F60A1DCA8CE721189421 /* FIRCLSFile.m in Sources */,
-				DE4C526EFDF05E4F36A75B423E394A2C /* FIRCLSFileManager.m in Sources */,
-				987B5529E2D4B366AB923F8DAAE6E1D2 /* FIRCLSHandler.m in Sources */,
-				A8428B45EE99CFFE31D97A7751B43675 /* FIRCLSHost.m in Sources */,
-				3B5737DF55C9C56772AA907D1F74C8E0 /* FIRCLSInstallIdentifierModel.m in Sources */,
-				F43DF6C0CAB954B961FB9E618F85594A /* FIRCLSInternalLogging.c in Sources */,
-				6CA8999C4C4D1CBB25231B3E0271A10E /* FIRCLSInternalReport.m in Sources */,
-				D62DBDE5AE32722F1F5829DB153BC03C /* FIRCLSLaunchMarkerModel.m in Sources */,
-				FF3025834F9C68E0C2C6C01BD0D9156F /* FIRCLSLogger.m in Sources */,
-				D9F7ACD4483192643AAB51A04C8E675A /* FIRCLSMachException.c in Sources */,
-				7B6D61D3AB077E8F14416EBFFC7EA679 /* FIRCLSMachO.m in Sources */,
-				8E7265CB1829E7341A48771CF135B795 /* FIRCLSMachOBinary.m in Sources */,
-				736F4B96B9B9FB5628D6F51D393CD99C /* FIRCLSMachOSlice.m in Sources */,
-				60D5F4FBBBE1FA04D372CCEA67331D39 /* FIRCLSManagerData.m in Sources */,
-				55A0FCE8E8C1DA257554615F2D22F04F /* FIRCLSMultipartMimeStreamEncoder.m in Sources */,
-				FFC7AB997C236462FBE7BC10B9177BDB /* FIRCLSNetworkOperation.m in Sources */,
-				F91E126C361FBCA230E40930B4F5BA5A /* FIRCLSNetworkResponseHandler.m in Sources */,
-				FAC2C4C009BA99FBAD129DC24B4CDC4C /* FIRCLSNotificationManager.m in Sources */,
-				052D957211763B63F281A16D437CDAC4 /* FIRCLSProcess.c in Sources */,
-				897F7228B2F44EF00268D583F9963D81 /* FIRCLSProcessReportOperation.m in Sources */,
-				20627C70D28E80BFDA1441871E9AA579 /* FIRCLSProfiling.c in Sources */,
-				BE962B78DF41BD482F238DA43CD3833C /* FIRCLSRecordApplication.m in Sources */,
-				97BF06E9279EE2B532008D0E5E08545C /* FIRCLSRecordBase.m in Sources */,
-				7421A17768FA6915B7DD5F310601124E /* FIRCLSRecordHost.m in Sources */,
-				6D196F802C7581B1C3A3A8A3B0EB2B6B /* FIRCLSRecordIdentity.m in Sources */,
-				BF062D12A6D9566394D2D47761CA67DC /* FIRCLSReportAdapter.m in Sources */,
-				5320E8269BDC4C097BE8EEE326AF2E33 /* FIRCLSReportManager.m in Sources */,
-				94FCFA53258A257D8B71066C76035492 /* FIRCLSReportUploader.m in Sources */,
-				7913EFBF1B434706B13644BFAFCB3226 /* FIRCLSSerializeSymbolicatedFramesOperation.m in Sources */,
-				E17A2606E3EE0B3EF4E5136C4F602D66 /* FIRCLSSettings.m in Sources */,
-				7734F26FA6B1EC53A666F8502713D06A /* FIRCLSSettingsManager.m in Sources */,
-				6A380D2ADF5580E9EA48282738BB0394 /* FIRCLSSignal.c in Sources */,
-				B1B51F29F9442B6689828625BA57BA69 /* FIRCLSSymbolicationOperation.m in Sources */,
-				B0E8BD291EC8CE6A2C195DFAA18FD2B3 /* FIRCLSSymbolResolver.m in Sources */,
-				CBB532BF622AA5CA5C3BF56B75E87DB3 /* FIRCLSThreadArrayOperation.m in Sources */,
-				2BD4E886E69EB70AC214FE7BFC9B66B7 /* FIRCLSThreadState.c in Sources */,
-				F56E5736799A7AA0113EB5117B712266 /* FIRCLSUnwind.c in Sources */,
-				79EBFFCA0F1A148D6B9ED3F68A76BB9B /* FIRCLSUnwind_arm.c in Sources */,
-				878A5D9F442754295D2D883ADC2DFDD5 /* FIRCLSUnwind_x86.c in Sources */,
-				0E0BF638A379C7F928701AC7A02178C9 /* FIRCLSURLBuilder.m in Sources */,
-				71974B759CB428F649CF9D1EC40BE65B /* FIRCLSUserDefaults.m in Sources */,
-				357067F1B68FD3AE446F7FD07DBFABDB /* FIRCLSUserLogging.m in Sources */,
-				682945790CB2B1285AEEF763ED3E53DA /* FIRCLSUtility.m in Sources */,
-				BF2392A01F26DA5B351EFC1DA8D35E97 /* FIRCLSUUID.m in Sources */,
-				0098BF963EBE4769F401357C3348C96C /* FIRCrashlytics.m in Sources */,
-				8BFA45ACC5AE73A4CF753AD239DDEE7D /* FIRCrashlyticsReport.m in Sources */,
-				67443F2F20380C3105001E90F048D0AC /* FirebaseCrashlytics-dummy.m in Sources */,
-				193901ADE45DEF76C5EA9619A9D6ECC5 /* FIRExceptionModel.m in Sources */,
-				FD0ED1B048738D0B3A69C1EB011A3122 /* FIRStackFrame.m in Sources */,
+				2281E8A1845B703E2F41FF733F939F03 /* cct.nanopb.c in Sources */,
+				71CA7A38E4F468E6C0D9419EA1E5CF79 /* GDTCCTCompressionHelper.m in Sources */,
+				359AD31A646C35DF6B9CCA1ECAAC6A95 /* GDTCCTNanopbHelpers.m in Sources */,
+				3A8F213D5315D582C054E3B9C6950D21 /* GDTCCTUploader.m in Sources */,
+				2ACA0812BF2AD50E81459A43EA4BF222 /* GDTCCTUploadOperation.m in Sources */,
+				E382689D363A0BCBD6EAEF123DCD0C2B /* GDTCORAssert.m in Sources */,
+				3FB71051A2F6BF51A9361EE6D446972B /* GDTCORClock.m in Sources */,
+				0CD035B49B256D8BF6133A97F1C97E58 /* GDTCORConsoleLogger.m in Sources */,
+				1E1EF607BAB1DC33D37D24AD9E3FCDA7 /* GDTCORDirectorySizeTracker.m in Sources */,
+				E4901FCFF58068A81AEF70C04F62D46C /* GDTCOREndpoints.m in Sources */,
+				D986D6BC99C9CF552D6FE5420BA0ED76 /* GDTCOREvent.m in Sources */,
+				12A760CBBB37D966C29531BF63D7141F /* GDTCOREvent+GDTCCTSupport.m in Sources */,
+				7E3EB531C9943E7CB3E16B5FB75D107B /* GDTCORFlatFileStorage.m in Sources */,
+				0CDC5C3218CBDCD0C9C2AF0731135A89 /* GDTCORFlatFileStorage+Promises.m in Sources */,
+				B7A4A86298E46046DA10034FFB65E9A3 /* GDTCORLifecycle.m in Sources */,
+				3712DD614FE2E64260709204D2BC77D4 /* GDTCORPlatform.m in Sources */,
+				373791498F928FEAA36D115B3099DA3D /* GDTCORReachability.m in Sources */,
+				A8AFAC54D341471577FB14AB7E4FF428 /* GDTCORRegistrar.m in Sources */,
+				80C07E14D26CD0AB31A816F786B2EE10 /* GDTCORStorageEventSelector.m in Sources */,
+				5A401262D27638EB922D7C83D9BBE51C /* GDTCORTransformer.m in Sources */,
+				B12A21DC0777982AE1D2D06B038E01B2 /* GDTCORTransport.m in Sources */,
+				900CDD0F9B9706260E5EED636F81BA66 /* GDTCORUploadBatch.m in Sources */,
+				F3EBB9F036AF5CC4DCC1649D124CC17D /* GDTCORUploadCoordinator.m in Sources */,
+				3A7B58A017C892073AF1B0104A85B199 /* GoogleDataTransport-dummy.m in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		E3B377631F0F1918692B32E2D0B3B080 /* Sources */ = {
+		E4EDEC9DFA7D5D072756EEEFE480188A /* Sources */ = {
 			isa = PBXSourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
+				D336D6272F073898FF71D86ED2402F21 /* GoogleUtilities-dummy.m in Sources */,
+				505C3F3059E007E6FB88D786D5D29FB3 /* GULAppDelegateSwizzler.m in Sources */,
+				565589D00D3D6FF522CB4F52CF312B48 /* GULAppEnvironmentUtil.m in Sources */,
+				20894B13256D96007A5F77CF67A80D3E /* GULHeartbeatDateStorage.m in Sources */,
+				79DAF6ABF9F6F0189BBD7B86EBB1C2E7 /* GULHeartbeatDateStorageUserDefaults.m in Sources */,
+				FA95BE1E3ED701F7C6152BBD7837D137 /* GULKeychainStorage.m in Sources */,
+				468FE02B98781F157C8EE78593237B1C /* GULKeychainUtils.m in Sources */,
+				D88E742F985747055B0F4FB458338646 /* GULLogger.m in Sources */,
+				E96676C644B8DE5F2BE3E4FD01F1ED92 /* GULMutableDictionary.m in Sources */,
+				403A6754ABF90008A14E4C0E46EBC7CB /* GULNetwork.m in Sources */,
+				26244B56C38F8968B93223C7B5337EDF /* GULNetworkConstants.m in Sources */,
+				E41FB97ECDDA30AA4A4858C44BFFE9E3 /* GULNetworkURLSession.m in Sources */,
+				AA958C387640A3DBC7FC632C0626C80A /* GULNSData+zlib.m in Sources */,
+				C64974646432E2A61EB2C2B2A52FE875 /* GULReachabilityChecker.m in Sources */,
+				4E0C3A0F08235A896FDDA190841714F3 /* GULSceneDelegateSwizzler.m in Sources */,
+				ECF62852C4373C7C1C195B5A57CDB84E /* GULSecureCoding.m in Sources */,
+				A7184FCC8F057631A4DA3E2CB270CF93 /* GULSwizzler.m in Sources */,
+				583FA4F590546C81F838E4AC7EED0BDB /* GULURLSessionDataResponse.m in Sources */,
+				04A03DC2B4D4914E3B11B06D04B6FF4E /* GULUserDefaults.m in Sources */,
+				E22B94C438C43EB135021F119B4AF567 /* NSURLSession+GULPromises.m in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -7488,438 +7586,440 @@
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		EB3BFF92BC994C7E056A11B01A10E0B2 /* Sources */ = {
-			isa = PBXSourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		EBE67D107D08A751A4615DC8FCDAF7A0 /* Sources */ = {
-			isa = PBXSourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				EF88E16E624811AE720471E772C33ACC /* FIRAnalyticsConfiguration.m in Sources */,
-				086FE122ECD7F5EA3F570013FB5A9CE7 /* FIRApp.m in Sources */,
-				DE596638323EF7522AECC4D3ED982AD1 /* FIRAppAssociationRegistration.m in Sources */,
-				64D35B389DDF91FF2CABF7E71EFC7784 /* FIRBundleUtil.m in Sources */,
-				26F7C4BA207805D3CAAE6874EBE1E486 /* FIRComponent.m in Sources */,
-				B6A4CDA4CCF5BBBA6E581D1351FFC9F3 /* FIRComponentContainer.m in Sources */,
-				2C5F44B978FF1E6CA7E725FF219B37B1 /* FIRComponentType.m in Sources */,
-				F678F5D104DC9671C708EAC6816ED029 /* FIRConfiguration.m in Sources */,
-				A1AA227D38F8E2CF2E58470E25294DB8 /* FIRCoreDiagnosticsConnector.m in Sources */,
-				EEA650638604A576349445AA00B7C57C /* FIRDependency.m in Sources */,
-				367230AA9069FDDD910A939AA9E4E351 /* FIRDiagnosticsData.m in Sources */,
-				06CE4092EF2D7AA472E781D6DDD476FF /* FirebaseCore-dummy.m in Sources */,
-				E904D16500A821DFEBDA6D7DC0D4EF3E /* FIRFirebaseUserAgent.m in Sources */,
-				62577D3A00EB8A281B81C11F15771137 /* FIRHeartbeatInfo.m in Sources */,
-				C18ECB3DD14A06DB2A9E4B5CB6E180B5 /* FIRLogger.m in Sources */,
-				3A9A8E8326A3CB79E263C26692FB145D /* FIROptions.m in Sources */,
-				A4A8DCCC78FC48FBF1D967E28C0DEBF3 /* FIRVersion.m in Sources */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-		F90A6041482CA8451F3EB07ABCDDD7A4 /* Sources */ = {
+		EE9D18DB4BA792D93EC829FA1E3FD7B3 /* Sources */ = {
 			isa = PBXSourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				E2ED41B71AC50A49D65C155B2E404A85 /* nanopb-dummy.m in Sources */,
-				7E4A4D0EB163243ECE3AFABE1195BD0C /* pb_common.c in Sources */,
-				6FD9CB26001FEF43EDA12C8345DF7C18 /* pb_decode.c in Sources */,
-				A2B33F7BDDF0289CD15F6EA8816CB072 /* pb_encode.c in Sources */,
+				6473A02B7A00F2A395F7CBD9C6DAA5C0 /* FIRCoreDiagnostics.m in Sources */,
+				E37C298E1D867A7FC5BD0F3FE323EFF7 /* firebasecore.nanopb.c in Sources */,
+				4A6F0B00E7D1C5264A12AF864291BE75 /* FirebaseCoreDiagnostics-dummy.m in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
 /* End PBXSourcesBuildPhase section */
 
 /* Begin PBXTargetDependency section */
-		01B3EA00AAC64CC4796051520F589CF4 /* PBXTargetDependency */ = {
+		02063FA69D3737718A7FEABA78AA88D9 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
 			name = GoogleUtilities;
 			target = 8D7F5D5DD528D21A72DC87ADA5B12E2D /* GoogleUtilities */;
-			targetProxy = D3BE2475155AB9D56D8C52D11285BD06 /* PBXContainerItemProxy */;
+			targetProxy = 4794A06DA68A8779256B9D42CC267B64 /* PBXContainerItemProxy */;
 		};
-		040C3FE466D0C2D2BD11CCCA68F3AEE9 /* PBXTargetDependency */ = {
+		049A8EA4C222D3E92EF8BD7B141D42F6 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = GoogleUtilities;
-			target = 8D7F5D5DD528D21A72DC87ADA5B12E2D /* GoogleUtilities */;
-			targetProxy = 92C433FF9EE4E2EACDE941204372CD9B /* PBXContainerItemProxy */;
+			name = GoogleAppMeasurement;
+			target = B53D977A951AFC38B21751B706C1DF83 /* GoogleAppMeasurement */;
+			targetProxy = 6C9BC1141BBD16D8DF452A702D6F5AC4 /* PBXContainerItemProxy */;
 		};
-		05688A3A26B0ABD98C6FE4A33D5DDB20 /* PBXTargetDependency */ = {
+		0600BA22DF722EC24750A88AEEA384E8 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = FloatingPanel;
-			target = 4874E7E655CEB4C01E4572AD903AEA21 /* FloatingPanel */;
-			targetProxy = 24DCDAE70FDD9548089FC2C025E47791 /* PBXContainerItemProxy */;
+			name = FirebaseInstallations;
+			target = 87803597EB3F20FC46472B85392EC4FD /* FirebaseInstallations */;
+			targetProxy = A3D55FAE03B2B0C55AD2FEFE37FB5862 /* PBXContainerItemProxy */;
 		};
-		068A4CD6290DB2808F80F9D23A641CEA /* PBXTargetDependency */ = {
+		072A6CBA0FBF55401BCD5B7518C5DD7C /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = GoogleUtilities;
-			target = 8D7F5D5DD528D21A72DC87ADA5B12E2D /* GoogleUtilities */;
-			targetProxy = 289F348D5B1C78F40C9B8492B1B0C863 /* PBXContainerItemProxy */;
+			name = GoogleAppMeasurement;
+			target = B53D977A951AFC38B21751B706C1DF83 /* GoogleAppMeasurement */;
+			targetProxy = 977D7EF1EDEC156F44D132A4DB0C978F /* PBXContainerItemProxy */;
 		};
-		08C80E13F8743A2363B2A6AA14FC3773 /* PBXTargetDependency */ = {
+		0968F8641902A01278698925255FCDFF /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = "SwiftMessages-SwiftMessages";
-			target = 93789445511E3FEAB3D09A6F552EEE2D /* SwiftMessages-SwiftMessages */;
-			targetProxy = 8610ED18FCFDABD93E9D074926A1EA60 /* PBXContainerItemProxy */;
+			name = FirebaseCrashlytics;
+			target = 526C4398D095B3704EB933DADBC30093 /* FirebaseCrashlytics */;
+			targetProxy = 64E616077108848B9F6FA778801E93DE /* PBXContainerItemProxy */;
 		};
-		0FE99C0CA2D679ED2059A384D85B82D4 /* PBXTargetDependency */ = {
+		1D904FA728B63A02AD446F9A76A31130 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
 			name = PromisesObjC;
 			target = 2BBF7206D7FAC92C82A042A99C4A98F8 /* PromisesObjC */;
-			targetProxy = 827DE9A390A2F7555F7A5953B09A64FD /* PBXContainerItemProxy */;
-		};
-		1471D5A3E948E4FD64813A831494625C /* PBXTargetDependency */ = {
-			isa = PBXTargetDependency;
-			name = ScrollingFollowView;
-			target = 0EFD825E08D2029FAA330EBD40974B79 /* ScrollingFollowView */;
-			targetProxy = 5CB26AA742C09130D61A363A4CAEE5B4 /* PBXContainerItemProxy */;
+			targetProxy = 2E7C065F63D379A78A6B5D81D4F07368 /* PBXContainerItemProxy */;
 		};
-		14EEC2818621DE565FAD834AAA708A74 /* PBXTargetDependency */ = {
+		23523552EA94776A0C69E74497AF7A6E /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = FirebaseInstallations;
-			target = 87803597EB3F20FC46472B85392EC4FD /* FirebaseInstallations */;
-			targetProxy = 3D3DB4BD6AFFC147B1A8A9DB1071898F /* PBXContainerItemProxy */;
+			name = FirebaseAnalytics;
+			target = C49E7A4D59E5C8BE8DE9FB1EFB150185 /* FirebaseAnalytics */;
+			targetProxy = FEC5D9664CF4B00501E3D202347F08C4 /* PBXContainerItemProxy */;
 		};
-		2342472CA593519328CD9927132EA0DD /* PBXTargetDependency */ = {
+		29B4E84B88936A679200E298265E257C /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = nanopb;
-			target = D2B5E7DCCBBFB32341D857D01211A1A3 /* nanopb */;
-			targetProxy = BBE0F5EB3DE06B070B0AAE98251622D2 /* PBXContainerItemProxy */;
+			name = FirebaseCore;
+			target = 4402AFF83DBDC4DD07E198685FDC2DF2 /* FirebaseCore */;
+			targetProxy = 9E2FCAA85117BB5CE12A81DF0DFC3954 /* PBXContainerItemProxy */;
 		};
-		2E35C47DA6E8128853D9BFF9012D0027 /* PBXTargetDependency */ = {
+		2A44ED53D60A8E0F3952803FF287BD57 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
 			name = GoogleDataTransport;
 			target = 5C0371EE948D0357B8EE0E34ABB44BF0 /* GoogleDataTransport */;
-			targetProxy = 09FB5E9CDDBD97EA51CAFED2B530C9D4 /* PBXContainerItemProxy */;
+			targetProxy = 25305A17796AE795CDB08B2EDBE0A0C0 /* PBXContainerItemProxy */;
 		};
-		2E6C01855093A31CF1FEE02BC81CE1AD /* PBXTargetDependency */ = {
+		2D3981568C77A692581733F084EA6030 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = GoogleDataTransport;
-			target = 5C0371EE948D0357B8EE0E34ABB44BF0 /* GoogleDataTransport */;
-			targetProxy = BD219F34F21322F2596EB1CC88E599AC /* PBXContainerItemProxy */;
+			name = SDWebImage;
+			target = 3847153A6E5EEFB86565BA840768F429 /* SDWebImage */;
+			targetProxy = E81618C12CC21382A9E49FE448DDE5C2 /* PBXContainerItemProxy */;
 		};
-		3126B23AF66BFA6DA5C0C619580108FE /* PBXTargetDependency */ = {
+		3581F7D3D6547C535EE147994DF3E82F /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = "youtube-ios-player-helper";
-			target = D1A7AF186BE136DE56FD5699070589B8 /* youtube-ios-player-helper */;
-			targetProxy = 520C487CFDFE7F5913FDC44327E1D29D /* PBXContainerItemProxy */;
+			name = nanopb;
+			target = D2B5E7DCCBBFB32341D857D01211A1A3 /* nanopb */;
+			targetProxy = 413AD3894A29DA3F04E910D388668761 /* PBXContainerItemProxy */;
 		};
-		4C16041270C073321251333CBE12420B /* PBXTargetDependency */ = {
+		35C1C0C813775B9A061CFF965B26E156 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = FirebaseCore;
-			target = 4402AFF83DBDC4DD07E198685FDC2DF2 /* FirebaseCore */;
-			targetProxy = 8048DCA04E614AA076AF9FAE64522770 /* PBXContainerItemProxy */;
+			name = SwiftMessages;
+			target = DAB613A18652334F6BFC5F27BADF515D /* SwiftMessages */;
+			targetProxy = 2DE0C1E80C1CD70B7F60933840D677DC /* PBXContainerItemProxy */;
 		};
-		4CB2B5ECA7720A3CFBAE501E89A5BED6 /* PBXTargetDependency */ = {
+		3621059FC1C585ED1E73C691C40BB4E6 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = XLPagerTabStrip;
-			target = DC5C3A7662FFA04D04D29F4657D032CE /* XLPagerTabStrip */;
-			targetProxy = FCF36E33C17A5275AE0F6527DC9D18FA /* PBXContainerItemProxy */;
+			name = Alamofire;
+			target = EAAA1AD3A8A1B59AB91319EE40752C6D /* Alamofire */;
+			targetProxy = 6D84F159CBDE5924F87DEBCEA5671D6A /* PBXContainerItemProxy */;
 		};
-		4FA88AD50EE2271E2C644A9E9C42AFFD /* PBXTargetDependency */ = {
+		36586AF73423C569D8BF682C3FF75308 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = FirebaseCore;
-			target = 4402AFF83DBDC4DD07E198685FDC2DF2 /* FirebaseCore */;
-			targetProxy = 9C8B959CAAC7BB303ABF4D651BF07A64 /* PBXContainerItemProxy */;
+			name = GoogleUtilities;
+			target = 8D7F5D5DD528D21A72DC87ADA5B12E2D /* GoogleUtilities */;
+			targetProxy = 9B94A5FA7F98C2CF67AFB7EE577E9877 /* PBXContainerItemProxy */;
 		};
-		503AE9195FD38A490F82089009DA1A0A /* PBXTargetDependency */ = {
+		3921C25B20504C2D913023C97F0FC972 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = FirebaseCore;
-			target = 4402AFF83DBDC4DD07E198685FDC2DF2 /* FirebaseCore */;
-			targetProxy = E1EAEF2572FF5B765157B2E58B007FC1 /* PBXContainerItemProxy */;
+			name = nanopb;
+			target = D2B5E7DCCBBFB32341D857D01211A1A3 /* nanopb */;
+			targetProxy = D8822B7778B716D8134A24E59A915A09 /* PBXContainerItemProxy */;
 		};
-		5895FFBF60403473AE883537A5BC80D0 /* PBXTargetDependency */ = {
+		3C4BFCCBE376D74CC9FE51C6AC6D10E2 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = GoogleUtilities;
-			target = 8D7F5D5DD528D21A72DC87ADA5B12E2D /* GoogleUtilities */;
-			targetProxy = 038CB66351D2934412055C1F6ED279CC /* PBXContainerItemProxy */;
+			name = PromisesObjC;
+			target = 2BBF7206D7FAC92C82A042A99C4A98F8 /* PromisesObjC */;
+			targetProxy = 42E302AD5CB5C2386629C0D6BDE3089B /* PBXContainerItemProxy */;
 		};
-		59AFEDF7C5EFB0B028EB5DE7F6482209 /* PBXTargetDependency */ = {
+		3F9ED6455F8C28CD4B76B9F0234E590B /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
 			name = nanopb;
 			target = D2B5E7DCCBBFB32341D857D01211A1A3 /* nanopb */;
-			targetProxy = 822EA6D5D4C942615163CF2917872D54 /* PBXContainerItemProxy */;
+			targetProxy = 0C0AC5084675314F8E3324AC3E435659 /* PBXContainerItemProxy */;
 		};
-		5DB005326AEDFB61612C41A125E2B7FF /* PBXTargetDependency */ = {
+		3FCAB61047D6CF316E06DE6203435D03 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
 			name = GoogleUtilities;
 			target = 8D7F5D5DD528D21A72DC87ADA5B12E2D /* GoogleUtilities */;
-			targetProxy = 38CBBDC6CD272A9B1DD4A66DF3A9BABC /* PBXContainerItemProxy */;
+			targetProxy = 10A8DB5FF897D32999DE49DD15C9B3CA /* PBXContainerItemProxy */;
+		};
+		4106057EC99427E8E2F8B893C038BCAD /* PBXTargetDependency */ = {
+			isa = PBXTargetDependency;
+			name = "youtube-ios-player-helper";
+			target = D1A7AF186BE136DE56FD5699070589B8 /* youtube-ios-player-helper */;
+			targetProxy = 36B29FD5376065789023141A83AB1A1E /* PBXContainerItemProxy */;
 		};
-		5F28E78201CEE7CAAFF74FC5527F61F6 /* PBXTargetDependency */ = {
+		446F3FAE0BA17D66E3D0D76723143087 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
 			name = GoogleUtilities;
 			target = 8D7F5D5DD528D21A72DC87ADA5B12E2D /* GoogleUtilities */;
-			targetProxy = 63AEDC7599A89DD28744374F7DA764DF /* PBXContainerItemProxy */;
+			targetProxy = DBB0AA0C1CC13164D1FAE8597E32F284 /* PBXContainerItemProxy */;
 		};
-		6089DECA7AFC8FAE7F12D2C5F7825132 /* PBXTargetDependency */ = {
+		47E285DB7BBCCD0252D61967F35646EE /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = SDWebImage;
-			target = 3847153A6E5EEFB86565BA840768F429 /* SDWebImage */;
-			targetProxy = 7A559DE6D3EA7356FC20E26256DC1FB2 /* PBXContainerItemProxy */;
+			name = GoogleUtilities;
+			target = 8D7F5D5DD528D21A72DC87ADA5B12E2D /* GoogleUtilities */;
+			targetProxy = 13C8E8533FCE3221277F46CD5A28BEEC /* PBXContainerItemProxy */;
 		};
-		64E00FE107C29DF6DC7C6D3B1E3B3695 /* PBXTargetDependency */ = {
+		52824C025D321BE2715D70BE7E464FC2 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = FirebaseAnalytics;
-			target = C49E7A4D59E5C8BE8DE9FB1EFB150185 /* FirebaseAnalytics */;
-			targetProxy = 8DD37469C0DD560E5C3052298EF31F67 /* PBXContainerItemProxy */;
+			name = FirebaseMessaging;
+			target = 5895B432FE4D2F6826C8FF25A09DB6D2 /* FirebaseMessaging */;
+			targetProxy = B1159A6FE4C0B4DCFB3900C99A6EC644 /* PBXContainerItemProxy */;
 		};
-		66CED50D9D38B339F81FDC38D9BC4BA4 /* PBXTargetDependency */ = {
+		5BCBAAFF1BC107CB82852A9B6DA9A29B /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = FirebaseCrashlytics;
-			target = 526C4398D095B3704EB933DADBC30093 /* FirebaseCrashlytics */;
-			targetProxy = BD42131C0F686B68CEA55C4725FA6F0B /* PBXContainerItemProxy */;
+			name = SDWebImage;
+			target = 3847153A6E5EEFB86565BA840768F429 /* SDWebImage */;
+			targetProxy = 1EB1C3378C1760FBD5FB5FAF2CA31AB1 /* PBXContainerItemProxy */;
 		};
-		69E94480D0FC072A644C257C60BF4322 /* PBXTargetDependency */ = {
+		65668F20C122D0593F3BF3F791318228 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = FirebaseCrashlytics;
-			target = 526C4398D095B3704EB933DADBC30093 /* FirebaseCrashlytics */;
-			targetProxy = 3E5D912686A249B56F81ADEC8C6B71D3 /* PBXContainerItemProxy */;
+			name = Firebase;
+			target = 072CEA044D2EF26F03496D5996BBF59F /* Firebase */;
+			targetProxy = 980ECABA7CD56CB1117C908C2E7AB7D6 /* PBXContainerItemProxy */;
 		};
-		6B522D8634E144B3FACF9E463DB7F229 /* PBXTargetDependency */ = {
+		7661C239309A927557782EAFAE3136FD /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = GoogleUtilities;
-			target = 8D7F5D5DD528D21A72DC87ADA5B12E2D /* GoogleUtilities */;
-			targetProxy = C2E1FC95BDD81E2E2217860A1066339E /* PBXContainerItemProxy */;
+			name = FirebaseCoreDiagnostics;
+			target = 620E05868772C10B4920DC7E324F2C87 /* FirebaseCoreDiagnostics */;
+			targetProxy = 354CD7D5FA819F306E0E07D767F92D5C /* PBXContainerItemProxy */;
 		};
-		6C21DA131B23F210375892E24E43DADE /* PBXTargetDependency */ = {
+		7938C8E29288F9894236CE77719CDF82 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
 			name = FirebaseCore;
 			target = 4402AFF83DBDC4DD07E198685FDC2DF2 /* FirebaseCore */;
-			targetProxy = 5B622632DC01864E1FD58F6125138190 /* PBXContainerItemProxy */;
+			targetProxy = F0CDB2ECA1027795C40F3CD671CBC939 /* PBXContainerItemProxy */;
 		};
-		6D9E8B0663F3409283ECFB70748647EA /* PBXTargetDependency */ = {
+		79456234969D6D63793945105AEFA4E6 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = FirebaseCore;
-			target = 4402AFF83DBDC4DD07E198685FDC2DF2 /* FirebaseCore */;
-			targetProxy = 949B56A47C4BDB759BB3BA9765230B24 /* PBXContainerItemProxy */;
+			name = IQKeyboardManagerSwift;
+			target = B490E7485944099E16C9CBD79119D1D4 /* IQKeyboardManagerSwift */;
+			targetProxy = 90119BAF48BE8E427A7D7CB2FAA3AF6C /* PBXContainerItemProxy */;
 		};
-		706B6F32B06CC1906FAB223FF68F46EF /* PBXTargetDependency */ = {
+		7A54AE66DF177AB4B319803A07867E13 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
 			name = UserExperior;
 			target = 877ECF9B28CA7B7BAA3F23ED12C0E1AB /* UserExperior */;
-			targetProxy = 6D08FC6BDD28443282CAC682C12E5BD4 /* PBXContainerItemProxy */;
+			targetProxy = A76F428DEB1ABC3F161E9618C1A0982E /* PBXContainerItemProxy */;
 		};
-		71FF989BE369A4336D9D68511A9E77C2 /* PBXTargetDependency */ = {
+		7B96554AE8CA19C8CA454612418D4C32 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = PromisesObjC;
-			target = 2BBF7206D7FAC92C82A042A99C4A98F8 /* PromisesObjC */;
-			targetProxy = C979014523FDFF3F37E5E13C86138ED1 /* PBXContainerItemProxy */;
-		};
-		7352BE51837299F9E5346E283009FB37 /* PBXTargetDependency */ = {
-			isa = PBXTargetDependency;
-			name = SDWebImage;
-			target = 3847153A6E5EEFB86565BA840768F429 /* SDWebImage */;
-			targetProxy = 739ACC3182BAF7B907F2CB2B8836F25C /* PBXContainerItemProxy */;
-		};
-		73CD352B6ED338F19969AF84384CC5EF /* PBXTargetDependency */ = {
-			isa = PBXTargetDependency;
-			name = OTPFieldView;
-			target = 3BFA50DA07196AD4DB6512C559850F45 /* OTPFieldView */;
-			targetProxy = C6D0B145CED7D57133C09E58B769D704 /* PBXContainerItemProxy */;
-		};
-		74F6655A78D27E31BD56ABB84473D4B4 /* PBXTargetDependency */ = {
-			isa = PBXTargetDependency;
-			name = SwiftLint;
-			target = 52B60EC2A583F24ACBB69C113F5488B9 /* SwiftLint */;
-			targetProxy = EF542CC1FE07715545C724235A6D8DC7 /* PBXContainerItemProxy */;
+			name = FirebaseMessaging;
+			target = 5895B432FE4D2F6826C8FF25A09DB6D2 /* FirebaseMessaging */;
+			targetProxy = EF5906D9FDE6A3B329BA051912DFEC44 /* PBXContainerItemProxy */;
 		};
-		797C4E71774B1EF270766FCB8228D0C7 /* PBXTargetDependency */ = {
+		7FF2EABA736956E7FFDA8BC283D85E96 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = Firebase;
-			target = 072CEA044D2EF26F03496D5996BBF59F /* Firebase */;
-			targetProxy = FCE558D6C6152A82A005FAD0647A11F8 /* PBXContainerItemProxy */;
+			name = "XLPagerTabStrip-XLPagerTabStrip";
+			target = EBF90A3A56D4C5830C212D000AB67BC1 /* XLPagerTabStrip-XLPagerTabStrip */;
+			targetProxy = 3327BA1F642D0B3C69309E11995B56AF /* PBXContainerItemProxy */;
 		};
-		7A8A35F2E12AA4817D3E9DE27C6DCAFB /* PBXTargetDependency */ = {
+		8047364D5FD584476322D2B048E5D422 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = FirebaseMessaging;
-			target = 5895B432FE4D2F6826C8FF25A09DB6D2 /* FirebaseMessaging */;
-			targetProxy = 48DDCB3537B580D64FF8FEAE59E06D9C /* PBXContainerItemProxy */;
+			name = XLPagerTabStrip;
+			target = DC5C3A7662FFA04D04D29F4657D032CE /* XLPagerTabStrip */;
+			targetProxy = 10C12AD3EFE66353AA5CD94B10CF4137 /* PBXContainerItemProxy */;
 		};
-		7CDC24658A30B473FC28A88B280D48FC /* PBXTargetDependency */ = {
+		8398C1A89855281560D2C5978D1898FD /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
 			name = FirebaseInstallations;
 			target = 87803597EB3F20FC46472B85392EC4FD /* FirebaseInstallations */;
-			targetProxy = 9240E29FED9D284CE6B40B482D459BAE /* PBXContainerItemProxy */;
+			targetProxy = 1C9998DBFE428326A44A055ED7607FC5 /* PBXContainerItemProxy */;
 		};
-		7D249492BC94A09A6402778374445802 /* PBXTargetDependency */ = {
+		852C2BDD3ADC0D8B9ECCBAFD072975D7 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = GoogleAppMeasurement;
-			target = B53D977A951AFC38B21751B706C1DF83 /* GoogleAppMeasurement */;
-			targetProxy = 7F0A6591D8732C3B7299C2C0CA4E85AA /* PBXContainerItemProxy */;
+			name = GoogleDataTransport;
+			target = 5C0371EE948D0357B8EE0E34ABB44BF0 /* GoogleDataTransport */;
+			targetProxy = 3C8358482EE4425ED1522A67F05DC74E /* PBXContainerItemProxy */;
 		};
-		7E9B9EFB01155304AABD7B7A6C161FE7 /* PBXTargetDependency */ = {
+		887847E7AD48B696847C8436C5BBF70A /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
 			name = nanopb;
 			target = D2B5E7DCCBBFB32341D857D01211A1A3 /* nanopb */;
-			targetProxy = 5F5AAADA9688EF90CBBA5819F4DC678C /* PBXContainerItemProxy */;
+			targetProxy = 2D35D3D10019D90E2D5566D478548F6C /* PBXContainerItemProxy */;
 		};
-		883ED06EC538768BFADFA2CC144DE53A /* PBXTargetDependency */ = {
-			isa = PBXTargetDependency;
-			name = IQKeyboardManagerSwift;
-			target = B490E7485944099E16C9CBD79119D1D4 /* IQKeyboardManagerSwift */;
-			targetProxy = FE60B039D843952353E1D59B14F529AA /* PBXContainerItemProxy */;
-		};
-		8AB5E28C5E87623D580CCBB59A99A4F6 /* PBXTargetDependency */ = {
+		9D3D0E81860F006146E03A65F6069161 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
 			name = FirebaseAnalytics;
 			target = C49E7A4D59E5C8BE8DE9FB1EFB150185 /* FirebaseAnalytics */;
-			targetProxy = 38AAC8D0E7BBE1698E04D980666FAE54 /* PBXContainerItemProxy */;
+			targetProxy = 2EDA56FBBC0261A3C002111B695676FC /* PBXContainerItemProxy */;
 		};
-		8F09DB9B1771850D7D7B6E1022C38D6A /* PBXTargetDependency */ = {
+		A19EEC48BED63BA0DD3588520D88F0EF /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = nanopb;
-			target = D2B5E7DCCBBFB32341D857D01211A1A3 /* nanopb */;
-			targetProxy = DEB61B4CD485CCDC8ADDFACA29BAA91E /* PBXContainerItemProxy */;
+			name = OTPFieldView;
+			target = 3BFA50DA07196AD4DB6512C559850F45 /* OTPFieldView */;
+			targetProxy = 87A47ED529661307BDE3985F0C2E06A5 /* PBXContainerItemProxy */;
 		};
-		9492BFD758332A61D06EA0AC6C0099A2 /* PBXTargetDependency */ = {
+		A2954C45A280B54FCD847DA6093F7727 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = Parchment;
-			target = 18184DEEDE7075D999122505659B55E9 /* Parchment */;
-			targetProxy = 5BDB19357B03216ACA6CD383EB122602 /* PBXContainerItemProxy */;
+			name = FloatingPanel;
+			target = 4874E7E655CEB4C01E4572AD903AEA21 /* FloatingPanel */;
+			targetProxy = B6C099656B9CEB2851D20EEB30DBF4A3 /* PBXContainerItemProxy */;
 		};
-		9586E53844952532E139BD2D370DCD57 /* PBXTargetDependency */ = {
+		A61DE61D780D6D0B449FB06AD477A7B6 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
 			name = GoogleDataTransport;
 			target = 5C0371EE948D0357B8EE0E34ABB44BF0 /* GoogleDataTransport */;
-			targetProxy = B8188E9BAA21E6E12CDFB5B1049CE62A /* PBXContainerItemProxy */;
+			targetProxy = 046FF734C71B32ADCE631F743BB0A2EF /* PBXContainerItemProxy */;
 		};
-		99C6983A6B6832A41DB92AC507C6BC0F /* PBXTargetDependency */ = {
+		A8C689CCA1709109B2718B0425D6201B /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = GoogleAppMeasurement;
-			target = B53D977A951AFC38B21751B706C1DF83 /* GoogleAppMeasurement */;
-			targetProxy = F6D54D0FFCB4ECA01FB77B9411072B06 /* PBXContainerItemProxy */;
+			name = Alamofire;
+			target = EAAA1AD3A8A1B59AB91319EE40752C6D /* Alamofire */;
+			targetProxy = 8BA675A17BBDDF7100F523A7045F361A /* PBXContainerItemProxy */;
 		};
-		9DE2351FBBC8D2CCFDC89B4DA570EC6E /* PBXTargetDependency */ = {
+		AD6EC7194A1CBEA2835D6DC1CCAE97E9 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = nanopb;
-			target = D2B5E7DCCBBFB32341D857D01211A1A3 /* nanopb */;
-			targetProxy = 084B771E5D78A210C7C36FA65915F542 /* PBXContainerItemProxy */;
+			name = GoogleUtilities;
+			target = 8D7F5D5DD528D21A72DC87ADA5B12E2D /* GoogleUtilities */;
+			targetProxy = 6D60F7C29FB3508397225C587BF623E2 /* PBXContainerItemProxy */;
 		};
-		A61EA89287357936D5700CCB49CEB3FB /* PBXTargetDependency */ = {
+		AEEA7119E92DE1B4209141B41FB6BBE7 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = FirebaseMessaging;
-			target = 5895B432FE4D2F6826C8FF25A09DB6D2 /* FirebaseMessaging */;
-			targetProxy = A551B3BA5F3B69401CCA5A26D9D2D208 /* PBXContainerItemProxy */;
+			name = Parchment;
+			target = 18184DEEDE7075D999122505659B55E9 /* Parchment */;
+			targetProxy = 14E718B69EE23166B4F4EC453FD0FA21 /* PBXContainerItemProxy */;
 		};
-		A96002B7F5D0DEAB4A405B25286BBA76 /* PBXTargetDependency */ = {
+		B6BF2A3AF7A36329E6B07A9CE00DDBDB /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = FirebaseInstallations;
-			target = 87803597EB3F20FC46472B85392EC4FD /* FirebaseInstallations */;
-			targetProxy = DD2D62854D16B4940F0543A9A4581470 /* PBXContainerItemProxy */;
+			name = FirebaseCrashlytics;
+			target = 526C4398D095B3704EB933DADBC30093 /* FirebaseCrashlytics */;
+			targetProxy = CF49C40AE60411F0FF5C3BD608A53558 /* PBXContainerItemProxy */;
 		};
-		B7AAE1793F0368A660AFF1AEEAA0C874 /* PBXTargetDependency */ = {
+		B950BC30DC8ABEDC0654E815BE4EC34A /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = FirebaseCore;
-			target = 4402AFF83DBDC4DD07E198685FDC2DF2 /* FirebaseCore */;
-			targetProxy = AF06E61ACA4804EF3F1C08CD5CCE71E8 /* PBXContainerItemProxy */;
+			name = FirebaseInstallations;
+			target = 87803597EB3F20FC46472B85392EC4FD /* FirebaseInstallations */;
+			targetProxy = 858033529BED0274C305C9FE3CCD4612 /* PBXContainerItemProxy */;
 		};
-		BE573FEF0B7C382A1686F9F9FC47F4C1 /* PBXTargetDependency */ = {
+		BC3A73CB18BF2F2205B970A621BBFDA6 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
 			name = PromisesObjC;
 			target = 2BBF7206D7FAC92C82A042A99C4A98F8 /* PromisesObjC */;
-			targetProxy = 692F1B19EDA54CDE018B2EA7D7D93581 /* PBXContainerItemProxy */;
+			targetProxy = 9AAEF636649E2BC4CE72DF1EEAC0406F /* PBXContainerItemProxy */;
 		};
-		BF77F49F7521D25CCE1B6EB687C1F932 /* PBXTargetDependency */ = {
+		C02D27992C64FC441C61C2470BEC6D4E /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = FirebaseCoreDiagnostics;
-			target = 620E05868772C10B4920DC7E324F2C87 /* FirebaseCoreDiagnostics */;
-			targetProxy = 157CF09C3426820ADFC9FDADEDCED96C /* PBXContainerItemProxy */;
+			name = "CleverTap-iOS-SDK";
+			target = E12536816B6C31D7AF55D161F6F97141 /* CleverTap-iOS-SDK */;
+			targetProxy = 20FC3A8ED5D467A46DCDF348459A80FA /* PBXContainerItemProxy */;
 		};
-		C4DE571E7AEB5386EABF4082A2D8D8B1 /* PBXTargetDependency */ = {
+		C06FD7B2F7A333E97DD7630EF52224D5 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = AlamofireNetworkActivityLogger;
-			target = 8AABDD06F1327BC62BE3ECBBB02AF715 /* AlamofireNetworkActivityLogger */;
-			targetProxy = C4B03AC307FE4DA895732ABC24CDAC2E /* PBXContainerItemProxy */;
+			name = nanopb;
+			target = D2B5E7DCCBBFB32341D857D01211A1A3 /* nanopb */;
+			targetProxy = 57E896FF0160340D41AE50FCE0F0905D /* PBXContainerItemProxy */;
 		};
-		C91A86A463AF274E02E3AC2CB663B35F /* PBXTargetDependency */ = {
+		C1CB6EB42BA302311745366B8893D23C /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = FirebaseCoreDiagnostics;
-			target = 620E05868772C10B4920DC7E324F2C87 /* FirebaseCoreDiagnostics */;
-			targetProxy = D6DB946A8994D774B494CFEF35944104 /* PBXContainerItemProxy */;
+			name = FirebaseInstallations;
+			target = 87803597EB3F20FC46472B85392EC4FD /* FirebaseInstallations */;
+			targetProxy = 41273408111A158F4E00A215A8772831 /* PBXContainerItemProxy */;
 		};
-		D0B2761733C3494815275FF3CEBB3D4B /* PBXTargetDependency */ = {
+		C41676018C87C781BD7244DCBE525BF8 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = "CleverTap-iOS-SDK";
-			target = E12536816B6C31D7AF55D161F6F97141 /* CleverTap-iOS-SDK */;
-			targetProxy = 4C3A6683C56F6439D81D2C4B16F066AE /* PBXContainerItemProxy */;
+			name = GoogleDataTransport;
+			target = 5C0371EE948D0357B8EE0E34ABB44BF0 /* GoogleDataTransport */;
+			targetProxy = 562E938666E2BD235BA7573AEA98F72B /* PBXContainerItemProxy */;
 		};
-		DCE54C9E28376B12A71C550E4213ED3D /* PBXTargetDependency */ = {
+		C98645BB93B2B6059845F5832CD43DD4 /* PBXTargetDependency */ = {
+			isa = PBXTargetDependency;
+			name = ScrollingFollowView;
+			target = 0EFD825E08D2029FAA330EBD40974B79 /* ScrollingFollowView */;
+			targetProxy = 51F7789116F9453C74E737690B24A92E /* PBXContainerItemProxy */;
+		};
+		CC68684BD3304F58BB65E027DE40F651 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
 			name = nanopb;
 			target = D2B5E7DCCBBFB32341D857D01211A1A3 /* nanopb */;
-			targetProxy = 47891EF314E43803A6E33002288111FB /* PBXContainerItemProxy */;
+			targetProxy = 6CA2712AB8F00E413B598FF708F35442 /* PBXContainerItemProxy */;
 		};
-		DD2FA83124BF4A8475B8DF83C830BF20 /* PBXTargetDependency */ = {
+		D4081E3996584F5300C54E91E9686F9C /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = PromisesObjC;
-			target = 2BBF7206D7FAC92C82A042A99C4A98F8 /* PromisesObjC */;
-			targetProxy = 9F764C61FE44B7F3AD208B287B46C71D /* PBXContainerItemProxy */;
+			name = GoogleUtilities;
+			target = 8D7F5D5DD528D21A72DC87ADA5B12E2D /* GoogleUtilities */;
+			targetProxy = 7789CD96376836505A9C440073BEEBF5 /* PBXContainerItemProxy */;
 		};
-		DF4509A85C2FD39B2844C3B41DFBFB1F /* PBXTargetDependency */ = {
+		D546DA73C473BAC53327E4DE45470D79 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
 			name = GoogleUtilities;
 			target = 8D7F5D5DD528D21A72DC87ADA5B12E2D /* GoogleUtilities */;
-			targetProxy = A0EED37AE127DA91A91053CED8465C5D /* PBXContainerItemProxy */;
+			targetProxy = 71129E8B981E480952F2DDBD15F4E6B3 /* PBXContainerItemProxy */;
 		};
-		E33790A90250E5D4B40A76615FFC31AC /* PBXTargetDependency */ = {
+		D641B846FAF94F0B4BB1A7DE990918A0 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = SwiftMessages;
-			target = DAB613A18652334F6BFC5F27BADF515D /* SwiftMessages */;
-			targetProxy = D8B71F684FC8222ACBC6FEF3BAED19C7 /* PBXContainerItemProxy */;
+			name = SwiftLint;
+			target = 52B60EC2A583F24ACBB69C113F5488B9 /* SwiftLint */;
+			targetProxy = 9DA898905641DE773FB4EB7D40A04C20 /* PBXContainerItemProxy */;
 		};
-		E7E4832FFA9519FE56AA7116821221D1 /* PBXTargetDependency */ = {
+		D822FE77CD906E43A675A0A054EE2F86 /* PBXTargetDependency */ = {
+			isa = PBXTargetDependency;
+			name = PromisesObjC;
+			target = 2BBF7206D7FAC92C82A042A99C4A98F8 /* PromisesObjC */;
+			targetProxy = A8343637891DF8075F3CA4FC86B1855B /* PBXContainerItemProxy */;
+		};
+		DA4397EB62149D2EA3FF9D2DC5ECEAE9 /* PBXTargetDependency */ = {
+			isa = PBXTargetDependency;
+			name = "SwiftMessages-SwiftMessages";
+			target = 93789445511E3FEAB3D09A6F552EEE2D /* SwiftMessages-SwiftMessages */;
+			targetProxy = B9A72C8B6599DADCA5B0804218741F1B /* PBXContainerItemProxy */;
+		};
+		E31274D2FEEEB4292F0EA1A900936DD8 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
 			name = nanopb;
 			target = D2B5E7DCCBBFB32341D857D01211A1A3 /* nanopb */;
-			targetProxy = 6BCA576851EDA12236FB02BE645CF154 /* PBXContainerItemProxy */;
+			targetProxy = 51FEE80800F69F61BD7D18A4CDC84DCC /* PBXContainerItemProxy */;
 		};
-		EB4E72C2B2FA6E71E2735D7A37CBA5A8 /* PBXTargetDependency */ = {
+		E401ADBBFDF80FD6D9FFB13151695AF7 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = Alamofire;
-			target = EAAA1AD3A8A1B59AB91319EE40752C6D /* Alamofire */;
-			targetProxy = 36802CA8C54A6B628B8CADF67A911C11 /* PBXContainerItemProxy */;
+			name = FirebaseCore;
+			target = 4402AFF83DBDC4DD07E198685FDC2DF2 /* FirebaseCore */;
+			targetProxy = 82514D8EF05243CAB7A2A66B38B13430 /* PBXContainerItemProxy */;
 		};
-		EEA3C2449C4B81C61E9A61F8078C8F17 /* PBXTargetDependency */ = {
+		E95A31D6FF05782B4D118C2F9488D7B3 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = "XLPagerTabStrip-XLPagerTabStrip";
-			target = EBF90A3A56D4C5830C212D000AB67BC1 /* XLPagerTabStrip-XLPagerTabStrip */;
-			targetProxy = AA598F447EDE9F5291E566D10BBC7595 /* PBXContainerItemProxy */;
+			name = FirebaseCoreDiagnostics;
+			target = 620E05868772C10B4920DC7E324F2C87 /* FirebaseCoreDiagnostics */;
+			targetProxy = D1638116E94261C5164366A0290FC78B /* PBXContainerItemProxy */;
 		};
-		F79AEC417C09A4EC9B0D5896E3B01CF8 /* PBXTargetDependency */ = {
+		F08AF24ED8D614AA9DDCA85E0BB6A927 /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = PromisesObjC;
-			target = 2BBF7206D7FAC92C82A042A99C4A98F8 /* PromisesObjC */;
-			targetProxy = 091C4BE2E3E938C7308935569D95808F /* PBXContainerItemProxy */;
+			name = FirebaseCore;
+			target = 4402AFF83DBDC4DD07E198685FDC2DF2 /* FirebaseCore */;
+			targetProxy = FE538B555BFB15283A2FD5345D9CA2D5 /* PBXContainerItemProxy */;
 		};
-		F8D282ED9FE5B0888481596A8401D98F /* PBXTargetDependency */ = {
+		FB41D915EA2F54BF0373089877F0F03C /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = FirebaseInstallations;
-			target = 87803597EB3F20FC46472B85392EC4FD /* FirebaseInstallations */;
-			targetProxy = 23633E927E0CA637A001452D0E3776B1 /* PBXContainerItemProxy */;
+			name = FirebaseCore;
+			target = 4402AFF83DBDC4DD07E198685FDC2DF2 /* FirebaseCore */;
+			targetProxy = C3C71C184B77A115CCCFF1F2F38346FE /* PBXContainerItemProxy */;
 		};
-		FA30547C79FAC5C8A48899185884A36C /* PBXTargetDependency */ = {
+		FBBC8AC5237316B7BFAADE1304FB23AD /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = GoogleDataTransport;
-			target = 5C0371EE948D0357B8EE0E34ABB44BF0 /* GoogleDataTransport */;
-			targetProxy = 1B86668778D994A95C800873D723DFB2 /* PBXContainerItemProxy */;
+			name = PromisesObjC;
+			target = 2BBF7206D7FAC92C82A042A99C4A98F8 /* PromisesObjC */;
+			targetProxy = 4B2F71CFA973D63A202E71E02EA49DCB /* PBXContainerItemProxy */;
 		};
-		FAA814408B832969ECF4DAF998E54D01 /* PBXTargetDependency */ = {
+		FE87C589B4F1E7980DF35588ECE01896 /* PBXTargetDependency */ = {
+			isa = PBXTargetDependency;
+			name = AlamofireNetworkActivityLogger;
+			target = 8AABDD06F1327BC62BE3ECBBB02AF715 /* AlamofireNetworkActivityLogger */;
+			targetProxy = 237F5C3D57DD205E020E56A23BFA9693 /* PBXContainerItemProxy */;
+		};
+		FECE47CB524550AD90CB82E841520ABC /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
 			name = GoogleUtilities;
 			target = 8D7F5D5DD528D21A72DC87ADA5B12E2D /* GoogleUtilities */;
-			targetProxy = 31D02B2BCD2658A39B56EA9C77276047 /* PBXContainerItemProxy */;
+			targetProxy = 60EBEF0A917E60D710A4F4899A2F5AD5 /* PBXContainerItemProxy */;
 		};
-		FAF5E51FE645828B42DF8F4BDAB641C3 /* PBXTargetDependency */ = {
+		FF0A5F24D6339C9DE56221DD0DAAA27B /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
-			name = Alamofire;
-			target = EAAA1AD3A8A1B59AB91319EE40752C6D /* Alamofire */;
-			targetProxy = 76911EEED6F6FEDB1180DF1BBAE98C81 /* PBXContainerItemProxy */;
+			name = FirebaseCore;
+			target = 4402AFF83DBDC4DD07E198685FDC2DF2 /* FirebaseCore */;
+			targetProxy = AE033D79B5EA22C2E3F2FA293E773894 /* PBXContainerItemProxy */;
 		};
 /* End PBXTargetDependency section */
 
 /* Begin XCBuildConfiguration section */
+		00248FF87EDA27ABFBA5BD57A029045D /* Debug */ = {
+			isa = XCBuildConfiguration;
+			baseConfigurationReference = AD6C4F88B3A8264787F02157EFDE180A /* nanopb.debug.xcconfig */;
+			buildSettings = {
+				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
+				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
+				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
+				CURRENT_PROJECT_VERSION = 1;
+				DEFINES_MODULE = YES;
+				DYLIB_COMPATIBILITY_VERSION = 1;
+				DYLIB_CURRENT_VERSION = 1;
+				DYLIB_INSTALL_NAME_BASE = "@rpath";
+				GCC_PREFIX_HEADER = "Target Support Files/nanopb/nanopb-prefix.pch";
+				INFOPLIST_FILE = "Target Support Files/nanopb/nanopb-Info.plist";
+				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
+				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
+				LD_RUNPATH_SEARCH_PATHS = (
+					"$(inherited)",
+					"@executable_path/Frameworks",
+					"@loader_path/Frameworks",
+				);
+				MODULEMAP_FILE = "Target Support Files/nanopb/nanopb.modulemap";
+				PRODUCT_MODULE_NAME = nanopb;
+				PRODUCT_NAME = nanopb;
+				SDKROOT = iphoneos;
+				SKIP_INSTALL = YES;
+				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
+				SWIFT_VERSION = 4.2;
+				TARGETED_DEVICE_FAMILY = "1,2";
+				VERSIONING_SYSTEM = "apple-generic";
+				VERSION_INFO_PREFIX = "";
+			};
+			name = Debug;
+		};
 		0082FC00BCCBFCAA63AA5C98EA587C17 /* Debug */ = {
 			isa = XCBuildConfiguration;
 			buildSettings = {
@@ -7986,9 +8086,26 @@
 			};
 			name = Debug;
 		};
+		0098F62BC249C2E6E26EAA11E1957967 /* Release */ = {
+			isa = XCBuildConfiguration;
+			baseConfigurationReference = 599B93267E755F9D67A5E2A9BD32FF8C /* GoogleAppMeasurement.release.xcconfig */;
+			buildSettings = {
+				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
+				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
+				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
+				LD_RUNPATH_SEARCH_PATHS = (
+					"$(inherited)",
+					"@executable_path/Frameworks",
+				);
+				SDKROOT = iphoneos;
+				TARGETED_DEVICE_FAMILY = "1,2";
+				VALIDATE_PRODUCT = YES;
+			};
+			name = Release;
+		};
 		015E22A73CAD0B0C23449B5D42BF727C /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 1971254BE7DB209B9554AAB6A126AC21 /* FloatingPanel.debug.xcconfig */;
+			baseConfigurationReference = D62497F380059B2DA3BFEB71F50873E5 /* FloatingPanel.debug.xcconfig */;
 			buildSettings = {
 				CLANG_ENABLE_OBJC_WEAK = NO;
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
@@ -8021,9 +8138,9 @@
 			};
 			name = Debug;
 		};
-		0766F51D7429B596DB3812E898647436 /* Release */ = {
+		097FCE19784279F44DBAEC516A352B10 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = D2D912AF3DC866C4340AD1442C61B39E /* FirebaseInstallations.release.xcconfig */;
+			baseConfigurationReference = 93A8E700678193A09067ADC31C73C35E /* IQKeyboardManagerSwift.release.xcconfig */;
 			buildSettings = {
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
@@ -8033,7 +8150,8 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				INFOPLIST_FILE = "Target Support Files/FirebaseInstallations/FirebaseInstallations-Info.plist";
+				GCC_PREFIX_HEADER = "Target Support Files/IQKeyboardManagerSwift/IQKeyboardManagerSwift-prefix.pch";
+				INFOPLIST_FILE = "Target Support Files/IQKeyboardManagerSwift/IQKeyboardManagerSwift-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = (
@@ -8041,13 +8159,13 @@
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/FirebaseInstallations/FirebaseInstallations.modulemap";
-				PRODUCT_MODULE_NAME = FirebaseInstallations;
-				PRODUCT_NAME = FirebaseInstallations;
+				MODULEMAP_FILE = "Target Support Files/IQKeyboardManagerSwift/IQKeyboardManagerSwift.modulemap";
+				PRODUCT_MODULE_NAME = IQKeyboardManagerSwift;
+				PRODUCT_NAME = IQKeyboardManagerSwift;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
-				SWIFT_VERSION = 4.2;
+				SWIFT_VERSION = 5.5;
 				TARGETED_DEVICE_FAMILY = "1,2";
 				VALIDATE_PRODUCT = YES;
 				VERSIONING_SYSTEM = "apple-generic";
@@ -8055,10 +8173,12 @@
 			};
 			name = Release;
 		};
-		12084724EA51F24CEEC9AD596EFCB14D /* Release */ = {
+		1C116FA5E89679B735B9C9CE4047F1DD /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 291CBDF92E320B388A48898EED424B56 /* FirebaseCrashlytics.release.xcconfig */;
+			baseConfigurationReference = BDF31731A49B9A1CCC27A6A3B4306075 /* Pods-OpenBook.release.xcconfig */;
 			buildSettings = {
+				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = NO;
+				CLANG_ENABLE_OBJC_WEAK = NO;
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
@@ -8067,21 +8187,23 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				INFOPLIST_FILE = "Target Support Files/FirebaseCrashlytics/FirebaseCrashlytics-Info.plist";
+				INFOPLIST_FILE = "Target Support Files/Pods-OpenBook/Pods-OpenBook-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
-				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
+				IPHONEOS_DEPLOYMENT_TARGET = 12.1;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/FirebaseCrashlytics/FirebaseCrashlytics.modulemap";
-				PRODUCT_MODULE_NAME = FirebaseCrashlytics;
-				PRODUCT_NAME = FirebaseCrashlytics;
+				MACH_O_TYPE = staticlib;
+				MODULEMAP_FILE = "Target Support Files/Pods-OpenBook/Pods-OpenBook.modulemap";
+				OTHER_LDFLAGS = "";
+				OTHER_LIBTOOLFLAGS = "";
+				PODS_ROOT = "$(SRCROOT)";
+				PRODUCT_BUNDLE_IDENTIFIER = "org.cocoapods.${PRODUCT_NAME:rfc1034identifier}";
+				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
-				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
-				SWIFT_VERSION = 4.2;
 				TARGETED_DEVICE_FAMILY = "1,2";
 				VALIDATE_PRODUCT = YES;
 				VERSIONING_SYSTEM = "apple-generic";
@@ -8089,26 +8211,44 @@
 			};
 			name = Release;
 		};
-		13A0CFAFBB0F0F2AEC4E89B6182B72C4 /* Release */ = {
+		1E90AA6A06AC3B2204C0E7E86E8C320E /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 1552C6521173FBF69073573A1151B5AB /* GoogleAppMeasurement.release.xcconfig */;
+			baseConfigurationReference = B4E842C465B5B2FEA3F98E2A987334EB /* XLPagerTabStrip.release.xcconfig */;
 			buildSettings = {
-				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
-				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
+				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
+				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
+				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
+				CURRENT_PROJECT_VERSION = 1;
+				DEFINES_MODULE = YES;
+				DYLIB_COMPATIBILITY_VERSION = 1;
+				DYLIB_CURRENT_VERSION = 1;
+				DYLIB_INSTALL_NAME_BASE = "@rpath";
+				GCC_PREFIX_HEADER = "Target Support Files/XLPagerTabStrip/XLPagerTabStrip-prefix.pch";
+				INFOPLIST_FILE = "Target Support Files/XLPagerTabStrip/XLPagerTabStrip-Info.plist";
+				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
+				IPHONEOS_DEPLOYMENT_TARGET = 9.3;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
+					"@loader_path/Frameworks",
 				);
+				MODULEMAP_FILE = "Target Support Files/XLPagerTabStrip/XLPagerTabStrip.modulemap";
+				PRODUCT_MODULE_NAME = XLPagerTabStrip;
+				PRODUCT_NAME = XLPagerTabStrip;
 				SDKROOT = iphoneos;
+				SKIP_INSTALL = YES;
+				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
+				SWIFT_VERSION = 5.0;
 				TARGETED_DEVICE_FAMILY = "1,2";
 				VALIDATE_PRODUCT = YES;
+				VERSIONING_SYSTEM = "apple-generic";
+				VERSION_INFO_PREFIX = "";
 			};
 			name = Release;
 		};
-		1644BC8C040CBDB8CA2028F373705B89 /* Debug */ = {
+		1F8D767B1A7DED899A6A03B6AF0AAB47 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 748F2B0B1D7D6F8344615257771E32B3 /* SwiftMessages.debug.xcconfig */;
+			baseConfigurationReference = 4519D44022E96363988DEF72BF10FF9B /* FirebaseCoreDiagnostics.debug.xcconfig */;
 			buildSettings = {
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
@@ -8118,8 +8258,7 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				GCC_PREFIX_HEADER = "Target Support Files/SwiftMessages/SwiftMessages-prefix.pch";
-				INFOPLIST_FILE = "Target Support Files/SwiftMessages/SwiftMessages-Info.plist";
+				INFOPLIST_FILE = "Target Support Files/FirebaseCoreDiagnostics/FirebaseCoreDiagnostics-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = (
@@ -8127,25 +8266,23 @@
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/SwiftMessages/SwiftMessages.modulemap";
-				PRODUCT_MODULE_NAME = SwiftMessages;
-				PRODUCT_NAME = SwiftMessages;
+				MODULEMAP_FILE = "Target Support Files/FirebaseCoreDiagnostics/FirebaseCoreDiagnostics.modulemap";
+				PRODUCT_MODULE_NAME = FirebaseCoreDiagnostics;
+				PRODUCT_NAME = FirebaseCoreDiagnostics;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
-				SWIFT_VERSION = 5.0;
+				SWIFT_VERSION = 4.2;
 				TARGETED_DEVICE_FAMILY = "1,2";
 				VERSIONING_SYSTEM = "apple-generic";
 				VERSION_INFO_PREFIX = "";
 			};
 			name = Debug;
 		};
-		1C116FA5E89679B735B9C9CE4047F1DD /* Release */ = {
+		25F6328A442E90FFC02D35B9ACD06E91 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = BDF31731A49B9A1CCC27A6A3B4306075 /* Pods-OpenBook.release.xcconfig */;
+			baseConfigurationReference = 29CD212298261E9C69DD1A7EC892F1E5 /* ScrollingFollowView.debug.xcconfig */;
 			buildSettings = {
-				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = NO;
-				CLANG_ENABLE_OBJC_WEAK = NO;
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
@@ -8154,33 +8291,31 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				INFOPLIST_FILE = "Target Support Files/Pods-OpenBook/Pods-OpenBook-Info.plist";
+				GCC_PREFIX_HEADER = "Target Support Files/ScrollingFollowView/ScrollingFollowView-prefix.pch";
+				INFOPLIST_FILE = "Target Support Files/ScrollingFollowView/ScrollingFollowView-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
-				IPHONEOS_DEPLOYMENT_TARGET = 12.1;
+				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MACH_O_TYPE = staticlib;
-				MODULEMAP_FILE = "Target Support Files/Pods-OpenBook/Pods-OpenBook.modulemap";
-				OTHER_LDFLAGS = "";
-				OTHER_LIBTOOLFLAGS = "";
-				PODS_ROOT = "$(SRCROOT)";
-				PRODUCT_BUNDLE_IDENTIFIER = "org.cocoapods.${PRODUCT_NAME:rfc1034identifier}";
-				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
+				MODULEMAP_FILE = "Target Support Files/ScrollingFollowView/ScrollingFollowView.modulemap";
+				PRODUCT_MODULE_NAME = ScrollingFollowView;
+				PRODUCT_NAME = ScrollingFollowView;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
+				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
+				SWIFT_VERSION = 4.2;
 				TARGETED_DEVICE_FAMILY = "1,2";
-				VALIDATE_PRODUCT = YES;
 				VERSIONING_SYSTEM = "apple-generic";
 				VERSION_INFO_PREFIX = "";
 			};
-			name = Release;
+			name = Debug;
 		};
-		1E90AA6A06AC3B2204C0E7E86E8C320E /* Release */ = {
+		25F63F28353F7538F02F736C1D413C7B /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 0CFD192918BF9A8E7F67C1E6516AB785 /* XLPagerTabStrip.release.xcconfig */;
+			baseConfigurationReference = D0211FE662A3AF061E9B1EBB2E5DE567 /* FirebaseInstallations.debug.xcconfig */;
 			buildSettings = {
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
@@ -8190,32 +8325,30 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				GCC_PREFIX_HEADER = "Target Support Files/XLPagerTabStrip/XLPagerTabStrip-prefix.pch";
-				INFOPLIST_FILE = "Target Support Files/XLPagerTabStrip/XLPagerTabStrip-Info.plist";
+				INFOPLIST_FILE = "Target Support Files/FirebaseInstallations/FirebaseInstallations-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
-				IPHONEOS_DEPLOYMENT_TARGET = 9.3;
+				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/XLPagerTabStrip/XLPagerTabStrip.modulemap";
-				PRODUCT_MODULE_NAME = XLPagerTabStrip;
-				PRODUCT_NAME = XLPagerTabStrip;
+				MODULEMAP_FILE = "Target Support Files/FirebaseInstallations/FirebaseInstallations.modulemap";
+				PRODUCT_MODULE_NAME = FirebaseInstallations;
+				PRODUCT_NAME = FirebaseInstallations;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
-				SWIFT_VERSION = 5.0;
+				SWIFT_VERSION = 4.2;
 				TARGETED_DEVICE_FAMILY = "1,2";
-				VALIDATE_PRODUCT = YES;
 				VERSIONING_SYSTEM = "apple-generic";
 				VERSION_INFO_PREFIX = "";
 			};
-			name = Release;
+			name = Debug;
 		};
-		200D94EC448AF06CF5B1723A2BE0EEF0 /* Debug */ = {
+		2EBF846B2EC3C60EBDDC9D90FD3B4788 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 9D7DFB458D13423895508525C657B297 /* FirebaseCoreDiagnostics.debug.xcconfig */;
+			baseConfigurationReference = D573AD7B4FECD8B0C11C8D78CBC5B249 /* PromisesObjC.release.xcconfig */;
 			buildSettings = {
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
@@ -8225,7 +8358,7 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				INFOPLIST_FILE = "Target Support Files/FirebaseCoreDiagnostics/FirebaseCoreDiagnostics-Info.plist";
+				INFOPLIST_FILE = "Target Support Files/PromisesObjC/PromisesObjC-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = (
@@ -8233,22 +8366,59 @@
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/FirebaseCoreDiagnostics/FirebaseCoreDiagnostics.modulemap";
-				PRODUCT_MODULE_NAME = FirebaseCoreDiagnostics;
-				PRODUCT_NAME = FirebaseCoreDiagnostics;
+				MODULEMAP_FILE = "Target Support Files/PromisesObjC/PromisesObjC.modulemap";
+				PRODUCT_MODULE_NAME = FBLPromises;
+				PRODUCT_NAME = FBLPromises;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
 				SWIFT_VERSION = 4.2;
 				TARGETED_DEVICE_FAMILY = "1,2";
+				VALIDATE_PRODUCT = YES;
+				VERSIONING_SYSTEM = "apple-generic";
+				VERSION_INFO_PREFIX = "";
+			};
+			name = Release;
+		};
+		3320480F4F4523E81C39E7F407E59896 /* Release */ = {
+			isa = XCBuildConfiguration;
+			baseConfigurationReference = 72F08C751A42A85DA8A21B237C8BD657 /* AlamofireNetworkActivityLogger.release.xcconfig */;
+			buildSettings = {
+				CLANG_ENABLE_OBJC_WEAK = NO;
+				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
+				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
+				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
+				CURRENT_PROJECT_VERSION = 1;
+				DEFINES_MODULE = YES;
+				DYLIB_COMPATIBILITY_VERSION = 1;
+				DYLIB_CURRENT_VERSION = 1;
+				DYLIB_INSTALL_NAME_BASE = "@rpath";
+				GCC_PREFIX_HEADER = "Target Support Files/AlamofireNetworkActivityLogger/AlamofireNetworkActivityLogger-prefix.pch";
+				INFOPLIST_FILE = "Target Support Files/AlamofireNetworkActivityLogger/AlamofireNetworkActivityLogger-Info.plist";
+				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
+				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
+				LD_RUNPATH_SEARCH_PATHS = (
+					"$(inherited)",
+					"@executable_path/Frameworks",
+					"@loader_path/Frameworks",
+				);
+				MODULEMAP_FILE = "Target Support Files/AlamofireNetworkActivityLogger/AlamofireNetworkActivityLogger.modulemap";
+				PRODUCT_MODULE_NAME = AlamofireNetworkActivityLogger;
+				PRODUCT_NAME = AlamofireNetworkActivityLogger;
+				SDKROOT = iphoneos;
+				SKIP_INSTALL = YES;
+				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
+				SWIFT_VERSION = 5.3;
+				TARGETED_DEVICE_FAMILY = "1,2";
+				VALIDATE_PRODUCT = YES;
 				VERSIONING_SYSTEM = "apple-generic";
 				VERSION_INFO_PREFIX = "";
 			};
-			name = Debug;
+			name = Release;
 		};
-		214B5CD9D844BD018344B14B69612749 /* Release */ = {
+		37398464D517983B429CF7E7217A35C7 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = DCDC21580F8C5152C22C2EBEC5320A10 /* nanopb.release.xcconfig */;
+			baseConfigurationReference = 3EE7A7EB1A9E9ADBD166A08718052C24 /* SDWebImage.release.xcconfig */;
 			buildSettings = {
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
@@ -8258,8 +8428,8 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				GCC_PREFIX_HEADER = "Target Support Files/nanopb/nanopb-prefix.pch";
-				INFOPLIST_FILE = "Target Support Files/nanopb/nanopb-Info.plist";
+				GCC_PREFIX_HEADER = "Target Support Files/SDWebImage/SDWebImage-prefix.pch";
+				INFOPLIST_FILE = "Target Support Files/SDWebImage/SDWebImage-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = (
@@ -8267,9 +8437,9 @@
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/nanopb/nanopb.modulemap";
-				PRODUCT_MODULE_NAME = nanopb;
-				PRODUCT_NAME = nanopb;
+				MODULEMAP_FILE = "Target Support Files/SDWebImage/SDWebImage.modulemap";
+				PRODUCT_MODULE_NAME = SDWebImage;
+				PRODUCT_NAME = SDWebImage;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
@@ -8281,9 +8451,9 @@
 			};
 			name = Release;
 		};
-		216E8718ABC0B6D7A0BBA5B50BEAE309 /* Release */ = {
+		3E3E7F8CBEA448B4BD728ED324B41834 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = F9C57736D06F9088DF305CDF806A810C /* GoogleUtilities.release.xcconfig */;
+			baseConfigurationReference = EDA17B70B2028F4949598050DE199D60 /* ScrollingFollowView.release.xcconfig */;
 			buildSettings = {
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
@@ -8293,17 +8463,18 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				INFOPLIST_FILE = "Target Support Files/GoogleUtilities/GoogleUtilities-Info.plist";
+				GCC_PREFIX_HEADER = "Target Support Files/ScrollingFollowView/ScrollingFollowView-prefix.pch";
+				INFOPLIST_FILE = "Target Support Files/ScrollingFollowView/ScrollingFollowView-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
-				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
+				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/GoogleUtilities/GoogleUtilities.modulemap";
-				PRODUCT_MODULE_NAME = GoogleUtilities;
-				PRODUCT_NAME = GoogleUtilities;
+				MODULEMAP_FILE = "Target Support Files/ScrollingFollowView/ScrollingFollowView.modulemap";
+				PRODUCT_MODULE_NAME = ScrollingFollowView;
+				PRODUCT_NAME = ScrollingFollowView;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
@@ -8315,25 +8486,26 @@
 			};
 			name = Release;
 		};
-		21DD6060FD5D8C54BD486CD31339B75B /* Release */ = {
+		4ACC0787FA6923771E42DCB59B40E9AC /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = D6C49B8E5FB77AF1451EA5F3A807BBAD /* SwiftMessages.release.xcconfig */;
+			baseConfigurationReference = 2F2F5EBF9A7E4E90BAD345F8D400A104 /* UserExperior.debug.xcconfig */;
 			buildSettings = {
-				CONFIGURATION_BUILD_DIR = "$(BUILD_DIR)/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/SwiftMessages";
-				IBSC_MODULE = SwiftMessages;
-				INFOPLIST_FILE = "Target Support Files/SwiftMessages/ResourceBundle-SwiftMessages-SwiftMessages-Info.plist";
-				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
-				PRODUCT_NAME = SwiftMessages;
+				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
+				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
+				CLANG_ENABLE_OBJC_WEAK = NO;
+				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
+				LD_RUNPATH_SEARCH_PATHS = (
+					"$(inherited)",
+					"@executable_path/Frameworks",
+				);
 				SDKROOT = iphoneos;
-				SKIP_INSTALL = YES;
 				TARGETED_DEVICE_FAMILY = "1,2";
-				WRAPPER_EXTENSION = bundle;
 			};
-			name = Release;
+			name = Debug;
 		};
-		23DF180465C20BE20AE2119DE841E973 /* Release */ = {
+		4BD83ED0014DC6828BD96EEEF3C27825 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = D2EB40F6A81227EE71D82CD3A99BB555 /* FirebaseCore.release.xcconfig */;
+			baseConfigurationReference = 7AB36873712063E242B27D55D9A9016F /* FirebaseCrashlytics.debug.xcconfig */;
 			buildSettings = {
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
@@ -8343,7 +8515,7 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				INFOPLIST_FILE = "Target Support Files/FirebaseCore/FirebaseCore-Info.plist";
+				INFOPLIST_FILE = "Target Support Files/FirebaseCrashlytics/FirebaseCrashlytics-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = (
@@ -8351,23 +8523,22 @@
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/FirebaseCore/FirebaseCore.modulemap";
-				PRODUCT_MODULE_NAME = FirebaseCore;
-				PRODUCT_NAME = FirebaseCore;
+				MODULEMAP_FILE = "Target Support Files/FirebaseCrashlytics/FirebaseCrashlytics.modulemap";
+				PRODUCT_MODULE_NAME = FirebaseCrashlytics;
+				PRODUCT_NAME = FirebaseCrashlytics;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
 				SWIFT_VERSION = 4.2;
 				TARGETED_DEVICE_FAMILY = "1,2";
-				VALIDATE_PRODUCT = YES;
 				VERSIONING_SYSTEM = "apple-generic";
 				VERSION_INFO_PREFIX = "";
 			};
-			name = Release;
+			name = Debug;
 		};
-		25F6328A442E90FFC02D35B9ACD06E91 /* Debug */ = {
+		51198B516AC7E789461E7FD4A4988BA9 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 63904F311AC7AF7CF936D5EB23ECE387 /* ScrollingFollowView.debug.xcconfig */;
+			baseConfigurationReference = 6141569F84C571ABF9B039239F6C6330 /* CleverTap-iOS-SDK.release.xcconfig */;
 			buildSettings = {
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
@@ -8377,31 +8548,48 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				GCC_PREFIX_HEADER = "Target Support Files/ScrollingFollowView/ScrollingFollowView-prefix.pch";
-				INFOPLIST_FILE = "Target Support Files/ScrollingFollowView/ScrollingFollowView-Info.plist";
+				GCC_PREFIX_HEADER = "Target Support Files/CleverTap-iOS-SDK/CleverTap-iOS-SDK-prefix.pch";
+				INFOPLIST_FILE = "Target Support Files/CleverTap-iOS-SDK/CleverTap-iOS-SDK-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
-				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
+				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/ScrollingFollowView/ScrollingFollowView.modulemap";
-				PRODUCT_MODULE_NAME = ScrollingFollowView;
-				PRODUCT_NAME = ScrollingFollowView;
+				MODULEMAP_FILE = "Target Support Files/CleverTap-iOS-SDK/CleverTap-iOS-SDK.modulemap";
+				PRODUCT_MODULE_NAME = CleverTapSDK;
+				PRODUCT_NAME = CleverTapSDK;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
 				SWIFT_VERSION = 4.2;
 				TARGETED_DEVICE_FAMILY = "1,2";
+				VALIDATE_PRODUCT = YES;
 				VERSIONING_SYSTEM = "apple-generic";
 				VERSION_INFO_PREFIX = "";
 			};
-			name = Debug;
+			name = Release;
+		};
+		65B1BDC5C2B5EAA36C326EAB20DD7776 /* Release */ = {
+			isa = XCBuildConfiguration;
+			baseConfigurationReference = 42EB1F8D3DD0A014BD005287605B5672 /* SwiftMessages.release.xcconfig */;
+			buildSettings = {
+				CONFIGURATION_BUILD_DIR = "$(BUILD_DIR)/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/SwiftMessages";
+				IBSC_MODULE = SwiftMessages;
+				INFOPLIST_FILE = "Target Support Files/SwiftMessages/ResourceBundle-SwiftMessages-SwiftMessages-Info.plist";
+				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
+				PRODUCT_NAME = SwiftMessages;
+				SDKROOT = iphoneos;
+				SKIP_INSTALL = YES;
+				TARGETED_DEVICE_FAMILY = "1,2";
+				WRAPPER_EXTENSION = bundle;
+			};
+			name = Release;
 		};
-		2A7DA26AF0A7C5162BE1469DC8E89D03 /* Release */ = {
+		6F36C0227DD9AF3AC88E77629A5644BF /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 2869D60F000902691556A7FB4E60F3A0 /* Alamofire.release.xcconfig */;
+			baseConfigurationReference = FBF716EAE3B2BB5EFA4C99C09E96C436 /* FirebaseMessaging.release.xcconfig */;
 			buildSettings = {
 				CLANG_ENABLE_OBJC_WEAK = NO;
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
@@ -8412,8 +8600,7 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				GCC_PREFIX_HEADER = "Target Support Files/Alamofire/Alamofire-prefix.pch";
-				INFOPLIST_FILE = "Target Support Files/Alamofire/Alamofire-Info.plist";
+				INFOPLIST_FILE = "Target Support Files/FirebaseMessaging/FirebaseMessaging-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
 				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
 				LD_RUNPATH_SEARCH_PATHS = (
@@ -8421,13 +8608,13 @@
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/Alamofire/Alamofire.modulemap";
-				PRODUCT_MODULE_NAME = Alamofire;
-				PRODUCT_NAME = Alamofire;
+				MODULEMAP_FILE = "Target Support Files/FirebaseMessaging/FirebaseMessaging.modulemap";
+				PRODUCT_MODULE_NAME = FirebaseMessaging;
+				PRODUCT_NAME = FirebaseMessaging;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
-				SWIFT_VERSION = 5.3;
+				SWIFT_VERSION = 4.2;
 				TARGETED_DEVICE_FAMILY = "1,2";
 				VALIDATE_PRODUCT = YES;
 				VERSIONING_SYSTEM = "apple-generic";
@@ -8435,10 +8622,27 @@
 			};
 			name = Release;
 		};
-		3320480F4F4523E81C39E7F407E59896 /* Release */ = {
+		6F773EB5D0526F7428E9B837344E870D /* Debug */ = {
+			isa = XCBuildConfiguration;
+			baseConfigurationReference = 7CBA4B276C1D5ECE2594DC93F243D07A /* SwiftMessages.debug.xcconfig */;
+			buildSettings = {
+				CONFIGURATION_BUILD_DIR = "$(BUILD_DIR)/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/SwiftMessages";
+				IBSC_MODULE = SwiftMessages;
+				INFOPLIST_FILE = "Target Support Files/SwiftMessages/ResourceBundle-SwiftMessages-SwiftMessages-Info.plist";
+				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
+				PRODUCT_NAME = SwiftMessages;
+				SDKROOT = iphoneos;
+				SKIP_INSTALL = YES;
+				TARGETED_DEVICE_FAMILY = "1,2";
+				WRAPPER_EXTENSION = bundle;
+			};
+			name = Debug;
+		};
+		75AD4CBE5FDDF4B98334B1132650504C /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 2773E84E83287DD1BD8AEE7DB3989727 /* AlamofireNetworkActivityLogger.release.xcconfig */;
+			baseConfigurationReference = 7713751266FBC492D8D0FFCC2E5075BC /* Pods-OpenBook.debug.xcconfig */;
 			buildSettings = {
+				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = NO;
 				CLANG_ENABLE_OBJC_WEAK = NO;
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
@@ -8448,32 +8652,32 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				GCC_PREFIX_HEADER = "Target Support Files/AlamofireNetworkActivityLogger/AlamofireNetworkActivityLogger-prefix.pch";
-				INFOPLIST_FILE = "Target Support Files/AlamofireNetworkActivityLogger/AlamofireNetworkActivityLogger-Info.plist";
+				INFOPLIST_FILE = "Target Support Files/Pods-OpenBook/Pods-OpenBook-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
-				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
+				IPHONEOS_DEPLOYMENT_TARGET = 12.1;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/AlamofireNetworkActivityLogger/AlamofireNetworkActivityLogger.modulemap";
-				PRODUCT_MODULE_NAME = AlamofireNetworkActivityLogger;
-				PRODUCT_NAME = AlamofireNetworkActivityLogger;
+				MACH_O_TYPE = staticlib;
+				MODULEMAP_FILE = "Target Support Files/Pods-OpenBook/Pods-OpenBook.modulemap";
+				OTHER_LDFLAGS = "";
+				OTHER_LIBTOOLFLAGS = "";
+				PODS_ROOT = "$(SRCROOT)";
+				PRODUCT_BUNDLE_IDENTIFIER = "org.cocoapods.${PRODUCT_NAME:rfc1034identifier}";
+				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
-				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
-				SWIFT_VERSION = 5.3;
 				TARGETED_DEVICE_FAMILY = "1,2";
-				VALIDATE_PRODUCT = YES;
 				VERSIONING_SYSTEM = "apple-generic";
 				VERSION_INFO_PREFIX = "";
 			};
-			name = Release;
+			name = Debug;
 		};
-		3E3E7F8CBEA448B4BD728ED324B41834 /* Release */ = {
+		79C12C9427E0DA9FBB23862DDFC0A424 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 88EF017E160D4C160DD8D9FE8D6231AB /* ScrollingFollowView.release.xcconfig */;
+			baseConfigurationReference = 412B404EE1B1C1E4C239846B59A2C6E2 /* FirebaseCrashlytics.release.xcconfig */;
 			buildSettings = {
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
@@ -8483,18 +8687,17 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				GCC_PREFIX_HEADER = "Target Support Files/ScrollingFollowView/ScrollingFollowView-prefix.pch";
-				INFOPLIST_FILE = "Target Support Files/ScrollingFollowView/ScrollingFollowView-Info.plist";
+				INFOPLIST_FILE = "Target Support Files/FirebaseCrashlytics/FirebaseCrashlytics-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
-				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
+				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/ScrollingFollowView/ScrollingFollowView.modulemap";
-				PRODUCT_MODULE_NAME = ScrollingFollowView;
-				PRODUCT_NAME = ScrollingFollowView;
+				MODULEMAP_FILE = "Target Support Files/FirebaseCrashlytics/FirebaseCrashlytics.modulemap";
+				PRODUCT_MODULE_NAME = FirebaseCrashlytics;
+				PRODUCT_NAME = FirebaseCrashlytics;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
@@ -8506,27 +8709,11 @@
 			};
 			name = Release;
 		};
-		4ACC0787FA6923771E42DCB59B40E9AC /* Debug */ = {
+		79FDB89F6CA57D6734D528EAF266BD7B /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 540D2DE36893091E0A8A760A01B5AFD1 /* UserExperior.debug.xcconfig */;
+			baseConfigurationReference = 0A77A5FAFD83F97BC2889B771ED51623 /* Alamofire.release.xcconfig */;
 			buildSettings = {
-				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
 				CLANG_ENABLE_OBJC_WEAK = NO;
-				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
-				LD_RUNPATH_SEARCH_PATHS = (
-					"$(inherited)",
-					"@executable_path/Frameworks",
-				);
-				SDKROOT = iphoneos;
-				TARGETED_DEVICE_FAMILY = "1,2";
-			};
-			name = Debug;
-		};
-		51198B516AC7E789461E7FD4A4988BA9 /* Release */ = {
-			isa = XCBuildConfiguration;
-			baseConfigurationReference = 4BFFF20F126AAB703185FAB8B2187E6E /* CleverTap-iOS-SDK.release.xcconfig */;
-			buildSettings = {
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
@@ -8535,22 +8722,22 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				GCC_PREFIX_HEADER = "Target Support Files/CleverTap-iOS-SDK/CleverTap-iOS-SDK-prefix.pch";
-				INFOPLIST_FILE = "Target Support Files/CleverTap-iOS-SDK/CleverTap-iOS-SDK-Info.plist";
+				GCC_PREFIX_HEADER = "Target Support Files/Alamofire/Alamofire-prefix.pch";
+				INFOPLIST_FILE = "Target Support Files/Alamofire/Alamofire-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
-				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
+				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/CleverTap-iOS-SDK/CleverTap-iOS-SDK.modulemap";
-				PRODUCT_MODULE_NAME = CleverTapSDK;
-				PRODUCT_NAME = CleverTapSDK;
+				MODULEMAP_FILE = "Target Support Files/Alamofire/Alamofire.modulemap";
+				PRODUCT_MODULE_NAME = Alamofire;
+				PRODUCT_NAME = Alamofire;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
-				SWIFT_VERSION = 4.2;
+				SWIFT_VERSION = 5.5;
 				TARGETED_DEVICE_FAMILY = "1,2";
 				VALIDATE_PRODUCT = YES;
 				VERSIONING_SYSTEM = "apple-generic";
@@ -8558,11 +8745,10 @@
 			};
 			name = Release;
 		};
-		52B9BEA91C35BFA40953536D2A278437 /* Debug */ = {
+		7E48BE99840886C0C1C2985B536F310D /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 7CA4E34730D1C1BC863D8D7CF2F69BF8 /* FirebaseMessaging.debug.xcconfig */;
+			baseConfigurationReference = 020B5BB06D51D48F53BD44F5526AC5B0 /* FirebaseInstallations.release.xcconfig */;
 			buildSettings = {
-				CLANG_ENABLE_OBJC_WEAK = NO;
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
@@ -8571,30 +8757,31 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				INFOPLIST_FILE = "Target Support Files/FirebaseMessaging/FirebaseMessaging-Info.plist";
+				INFOPLIST_FILE = "Target Support Files/FirebaseInstallations/FirebaseInstallations-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
-				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
+				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/FirebaseMessaging/FirebaseMessaging.modulemap";
-				PRODUCT_MODULE_NAME = FirebaseMessaging;
-				PRODUCT_NAME = FirebaseMessaging;
+				MODULEMAP_FILE = "Target Support Files/FirebaseInstallations/FirebaseInstallations.modulemap";
+				PRODUCT_MODULE_NAME = FirebaseInstallations;
+				PRODUCT_NAME = FirebaseInstallations;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
 				SWIFT_VERSION = 4.2;
 				TARGETED_DEVICE_FAMILY = "1,2";
+				VALIDATE_PRODUCT = YES;
 				VERSIONING_SYSTEM = "apple-generic";
 				VERSION_INFO_PREFIX = "";
 			};
-			name = Debug;
+			name = Release;
 		};
-		5FB2090EE003F2E12DE5BFF75511F756 /* Release */ = {
+		7FC4E2F77371528BA010DDDC46F0C7D4 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 6EAFF27C482495C4F8BBB52ED240988D /* PromisesObjC.release.xcconfig */;
+			baseConfigurationReference = 6944FCA2E8B8ADB24900CE5439C41D1E /* IQKeyboardManagerSwift.debug.xcconfig */;
 			buildSettings = {
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
@@ -8604,7 +8791,8 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				INFOPLIST_FILE = "Target Support Files/PromisesObjC/PromisesObjC-Info.plist";
+				GCC_PREFIX_HEADER = "Target Support Files/IQKeyboardManagerSwift/IQKeyboardManagerSwift-prefix.pch";
+				INFOPLIST_FILE = "Target Support Files/IQKeyboardManagerSwift/IQKeyboardManagerSwift-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = (
@@ -8612,23 +8800,22 @@
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/PromisesObjC/PromisesObjC.modulemap";
-				PRODUCT_MODULE_NAME = FBLPromises;
-				PRODUCT_NAME = FBLPromises;
+				MODULEMAP_FILE = "Target Support Files/IQKeyboardManagerSwift/IQKeyboardManagerSwift.modulemap";
+				PRODUCT_MODULE_NAME = IQKeyboardManagerSwift;
+				PRODUCT_NAME = IQKeyboardManagerSwift;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
-				SWIFT_VERSION = 4.2;
+				SWIFT_VERSION = 5.5;
 				TARGETED_DEVICE_FAMILY = "1,2";
-				VALIDATE_PRODUCT = YES;
 				VERSIONING_SYSTEM = "apple-generic";
 				VERSION_INFO_PREFIX = "";
 			};
-			name = Release;
+			name = Debug;
 		};
-		5FCCBCA47C1575737B5537CDC12D90ED /* Debug */ = {
+		80CFF3701C30078A716619ED51F45BC5 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 766E09648795C48BBBE87FFB14FE65A3 /* nanopb.debug.xcconfig */;
+			baseConfigurationReference = 42EB1F8D3DD0A014BD005287605B5672 /* SwiftMessages.release.xcconfig */;
 			buildSettings = {
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
@@ -8638,8 +8825,8 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				GCC_PREFIX_HEADER = "Target Support Files/nanopb/nanopb-prefix.pch";
-				INFOPLIST_FILE = "Target Support Files/nanopb/nanopb-Info.plist";
+				GCC_PREFIX_HEADER = "Target Support Files/SwiftMessages/SwiftMessages-prefix.pch";
+				INFOPLIST_FILE = "Target Support Files/SwiftMessages/SwiftMessages-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = (
@@ -8647,41 +8834,24 @@
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/nanopb/nanopb.modulemap";
-				PRODUCT_MODULE_NAME = nanopb;
-				PRODUCT_NAME = nanopb;
+				MODULEMAP_FILE = "Target Support Files/SwiftMessages/SwiftMessages.modulemap";
+				PRODUCT_MODULE_NAME = SwiftMessages;
+				PRODUCT_NAME = SwiftMessages;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
-				SWIFT_VERSION = 4.2;
+				SWIFT_VERSION = 5.0;
 				TARGETED_DEVICE_FAMILY = "1,2";
+				VALIDATE_PRODUCT = YES;
 				VERSIONING_SYSTEM = "apple-generic";
 				VERSION_INFO_PREFIX = "";
 			};
-			name = Debug;
-		};
-		6EA67E711FFDD381111C227F4AFCF680 /* Debug */ = {
-			isa = XCBuildConfiguration;
-			baseConfigurationReference = 00EA0BCE1DF2A5E3F3A5A2437A56E5A2 /* XLPagerTabStrip.debug.xcconfig */;
-			buildSettings = {
-				CONFIGURATION_BUILD_DIR = "$(BUILD_DIR)/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/XLPagerTabStrip";
-				IBSC_MODULE = XLPagerTabStrip;
-				INFOPLIST_FILE = "Target Support Files/XLPagerTabStrip/ResourceBundle-XLPagerTabStrip-XLPagerTabStrip-Info.plist";
-				IPHONEOS_DEPLOYMENT_TARGET = 9.3;
-				PRODUCT_NAME = XLPagerTabStrip;
-				SDKROOT = iphoneos;
-				SKIP_INSTALL = YES;
-				TARGETED_DEVICE_FAMILY = "1,2";
-				WRAPPER_EXTENSION = bundle;
-			};
-			name = Debug;
+			name = Release;
 		};
-		75AD4CBE5FDDF4B98334B1132650504C /* Debug */ = {
+		85DAC54B595B0E9BA117E9C5DFDA905C /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 7713751266FBC492D8D0FFCC2E5075BC /* Pods-OpenBook.debug.xcconfig */;
+			baseConfigurationReference = 8EFD792B63709FF0D329A1AB55BD9EE3 /* SDWebImage.debug.xcconfig */;
 			buildSettings = {
-				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = NO;
-				CLANG_ENABLE_OBJC_WEAK = NO;
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
@@ -8690,67 +8860,49 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				INFOPLIST_FILE = "Target Support Files/Pods-OpenBook/Pods-OpenBook-Info.plist";
+				GCC_PREFIX_HEADER = "Target Support Files/SDWebImage/SDWebImage-prefix.pch";
+				INFOPLIST_FILE = "Target Support Files/SDWebImage/SDWebImage-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
-				IPHONEOS_DEPLOYMENT_TARGET = 12.1;
+				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MACH_O_TYPE = staticlib;
-				MODULEMAP_FILE = "Target Support Files/Pods-OpenBook/Pods-OpenBook.modulemap";
-				OTHER_LDFLAGS = "";
-				OTHER_LIBTOOLFLAGS = "";
-				PODS_ROOT = "$(SRCROOT)";
-				PRODUCT_BUNDLE_IDENTIFIER = "org.cocoapods.${PRODUCT_NAME:rfc1034identifier}";
-				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
+				MODULEMAP_FILE = "Target Support Files/SDWebImage/SDWebImage.modulemap";
+				PRODUCT_MODULE_NAME = SDWebImage;
+				PRODUCT_NAME = SDWebImage;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
+				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
+				SWIFT_VERSION = 4.2;
 				TARGETED_DEVICE_FAMILY = "1,2";
 				VERSIONING_SYSTEM = "apple-generic";
 				VERSION_INFO_PREFIX = "";
 			};
 			name = Debug;
 		};
-		79CAC264ADFE5B001A5B7C3B7E3C344F /* Debug */ = {
+		94F2A91F70094E64FCB4D7EBDA259DC3 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = DA76B355DF5E5984BDA6B62B7946621D /* Alamofire.debug.xcconfig */;
+			baseConfigurationReference = 624A921ED3D6FFBD7CE13F0F6E8B6723 /* Firebase.release.xcconfig */;
 			buildSettings = {
-				CLANG_ENABLE_OBJC_WEAK = NO;
-				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
-				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
-				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
-				CURRENT_PROJECT_VERSION = 1;
-				DEFINES_MODULE = YES;
-				DYLIB_COMPATIBILITY_VERSION = 1;
-				DYLIB_CURRENT_VERSION = 1;
-				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				GCC_PREFIX_HEADER = "Target Support Files/Alamofire/Alamofire-prefix.pch";
-				INFOPLIST_FILE = "Target Support Files/Alamofire/Alamofire-Info.plist";
-				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
+				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
+				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
+				CLANG_ENABLE_OBJC_WEAK = NO;
 				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
-					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/Alamofire/Alamofire.modulemap";
-				PRODUCT_MODULE_NAME = Alamofire;
-				PRODUCT_NAME = Alamofire;
 				SDKROOT = iphoneos;
-				SKIP_INSTALL = YES;
-				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
-				SWIFT_VERSION = 5.3;
 				TARGETED_DEVICE_FAMILY = "1,2";
-				VERSIONING_SYSTEM = "apple-generic";
-				VERSION_INFO_PREFIX = "";
+				VALIDATE_PRODUCT = YES;
 			};
-			name = Debug;
+			name = Release;
 		};
-		7B5BE878C9DF2206C12E302E5EBA27AF /* Release */ = {
+		9B1C96A751F9C169B19BC6C6DA1152FF /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = D6C49B8E5FB77AF1451EA5F3A807BBAD /* SwiftMessages.release.xcconfig */;
+			baseConfigurationReference = 0B37A8970CAEA70232DD52FC9C450F23 /* GoogleUtilities.debug.xcconfig */;
 			buildSettings = {
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
@@ -8760,8 +8912,7 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				GCC_PREFIX_HEADER = "Target Support Files/SwiftMessages/SwiftMessages-prefix.pch";
-				INFOPLIST_FILE = "Target Support Files/SwiftMessages/SwiftMessages-Info.plist";
+				INFOPLIST_FILE = "Target Support Files/GoogleUtilities/GoogleUtilities-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = (
@@ -8769,24 +8920,24 @@
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/SwiftMessages/SwiftMessages.modulemap";
-				PRODUCT_MODULE_NAME = SwiftMessages;
-				PRODUCT_NAME = SwiftMessages;
+				MODULEMAP_FILE = "Target Support Files/GoogleUtilities/GoogleUtilities.modulemap";
+				PRODUCT_MODULE_NAME = GoogleUtilities;
+				PRODUCT_NAME = GoogleUtilities;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
-				SWIFT_VERSION = 5.0;
+				SWIFT_VERSION = 4.2;
 				TARGETED_DEVICE_FAMILY = "1,2";
-				VALIDATE_PRODUCT = YES;
 				VERSIONING_SYSTEM = "apple-generic";
 				VERSION_INFO_PREFIX = "";
 			};
-			name = Release;
+			name = Debug;
 		};
-		7FC9D6F481C34611DDCF62DB751BAAE9 /* Debug */ = {
+		9B63404BD7D3F122569C56BB2921CD67 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = E0D1A70146C42F031269B74235A89D6C /* GoogleDataTransport.debug.xcconfig */;
+			baseConfigurationReference = 02AF9928A561D955C65831099A50A431 /* OTPFieldView.debug.xcconfig */;
 			buildSettings = {
+				CLANG_ENABLE_OBJC_WEAK = NO;
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
@@ -8795,36 +8946,37 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				INFOPLIST_FILE = "Target Support Files/GoogleDataTransport/GoogleDataTransport-Info.plist";
+				GCC_PREFIX_HEADER = "Target Support Files/OTPFieldView/OTPFieldView-prefix.pch";
+				INFOPLIST_FILE = "Target Support Files/OTPFieldView/OTPFieldView-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
-				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
+				IPHONEOS_DEPLOYMENT_TARGET = 10.3;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/GoogleDataTransport/GoogleDataTransport.modulemap";
-				PRODUCT_MODULE_NAME = GoogleDataTransport;
-				PRODUCT_NAME = GoogleDataTransport;
+				MODULEMAP_FILE = "Target Support Files/OTPFieldView/OTPFieldView.modulemap";
+				PRODUCT_MODULE_NAME = OTPFieldView;
+				PRODUCT_NAME = OTPFieldView;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
-				SWIFT_VERSION = 4.2;
+				SWIFT_VERSION = 5.0;
 				TARGETED_DEVICE_FAMILY = "1,2";
 				VERSIONING_SYSTEM = "apple-generic";
 				VERSION_INFO_PREFIX = "";
 			};
 			name = Debug;
 		};
-		84EA84873EB59829895DD790292AC610 /* Debug */ = {
+		9DA0DB770A2C27851CD26D5669C3D1E0 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 748F2B0B1D7D6F8344615257771E32B3 /* SwiftMessages.debug.xcconfig */;
+			baseConfigurationReference = 95909AB0FA2085F0C5C33BE92A491E7A /* XLPagerTabStrip.debug.xcconfig */;
 			buildSettings = {
-				CONFIGURATION_BUILD_DIR = "$(BUILD_DIR)/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/SwiftMessages";
-				IBSC_MODULE = SwiftMessages;
-				INFOPLIST_FILE = "Target Support Files/SwiftMessages/ResourceBundle-SwiftMessages-SwiftMessages-Info.plist";
-				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
-				PRODUCT_NAME = SwiftMessages;
+				CONFIGURATION_BUILD_DIR = "$(BUILD_DIR)/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/XLPagerTabStrip";
+				IBSC_MODULE = XLPagerTabStrip;
+				INFOPLIST_FILE = "Target Support Files/XLPagerTabStrip/ResourceBundle-XLPagerTabStrip-XLPagerTabStrip-Info.plist";
+				IPHONEOS_DEPLOYMENT_TARGET = 9.3;
+				PRODUCT_NAME = XLPagerTabStrip;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				TARGETED_DEVICE_FAMILY = "1,2";
@@ -8832,10 +8984,11 @@
 			};
 			name = Debug;
 		};
-		86B0A1A7556062D316633973C7A695B2 /* Debug */ = {
+		A07598AD8F39E0E75E530F013C5CD233 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 77B583500A4AE470229923AB7EFA97E8 /* FirebaseCrashlytics.debug.xcconfig */;
+			baseConfigurationReference = EADA3E7AFA9DDB06EEB54B557F8966BD /* OTPFieldView.release.xcconfig */;
 			buildSettings = {
+				CLANG_ENABLE_OBJC_WEAK = NO;
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
@@ -8844,30 +8997,32 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				INFOPLIST_FILE = "Target Support Files/FirebaseCrashlytics/FirebaseCrashlytics-Info.plist";
+				GCC_PREFIX_HEADER = "Target Support Files/OTPFieldView/OTPFieldView-prefix.pch";
+				INFOPLIST_FILE = "Target Support Files/OTPFieldView/OTPFieldView-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
-				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
+				IPHONEOS_DEPLOYMENT_TARGET = 10.3;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/FirebaseCrashlytics/FirebaseCrashlytics.modulemap";
-				PRODUCT_MODULE_NAME = FirebaseCrashlytics;
-				PRODUCT_NAME = FirebaseCrashlytics;
+				MODULEMAP_FILE = "Target Support Files/OTPFieldView/OTPFieldView.modulemap";
+				PRODUCT_MODULE_NAME = OTPFieldView;
+				PRODUCT_NAME = OTPFieldView;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
-				SWIFT_VERSION = 4.2;
+				SWIFT_VERSION = 5.0;
 				TARGETED_DEVICE_FAMILY = "1,2";
+				VALIDATE_PRODUCT = YES;
 				VERSIONING_SYSTEM = "apple-generic";
 				VERSION_INFO_PREFIX = "";
 			};
-			name = Debug;
+			name = Release;
 		};
-		876F2B20ED737134817FF257F66D655B /* Debug */ = {
+		A6748B160F4D5223EA7E7A2F02A828CD /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 18F8C2F7A766F5CE76610B0C535F7F87 /* IQKeyboardManagerSwift.debug.xcconfig */;
+			baseConfigurationReference = 9061DBC856B3BED71F1FF9A0A067FFD4 /* GoogleDataTransport.release.xcconfig */;
 			buildSettings = {
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
@@ -8877,69 +9032,52 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				GCC_PREFIX_HEADER = "Target Support Files/IQKeyboardManagerSwift/IQKeyboardManagerSwift-prefix.pch";
-				INFOPLIST_FILE = "Target Support Files/IQKeyboardManagerSwift/IQKeyboardManagerSwift-Info.plist";
+				INFOPLIST_FILE = "Target Support Files/GoogleDataTransport/GoogleDataTransport-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
-				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
+				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/IQKeyboardManagerSwift/IQKeyboardManagerSwift.modulemap";
-				PRODUCT_MODULE_NAME = IQKeyboardManagerSwift;
-				PRODUCT_NAME = IQKeyboardManagerSwift;
+				MODULEMAP_FILE = "Target Support Files/GoogleDataTransport/GoogleDataTransport.modulemap";
+				PRODUCT_MODULE_NAME = GoogleDataTransport;
+				PRODUCT_NAME = GoogleDataTransport;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
-				SWIFT_VERSION = 5.3;
+				SWIFT_VERSION = 4.2;
 				TARGETED_DEVICE_FAMILY = "1,2";
+				VALIDATE_PRODUCT = YES;
 				VERSIONING_SYSTEM = "apple-generic";
 				VERSION_INFO_PREFIX = "";
 			};
-			name = Debug;
+			name = Release;
 		};
-		8BD9FE5FE9CFC32AE90C8A70103212BA /* Debug */ = {
+		AC00A48BB560EC510518B1AE97ECD60B /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = A4094D74BE3B723D5B480DC5F33EAF80 /* FirebaseInstallations.debug.xcconfig */;
+			baseConfigurationReference = 777EEA6E589115848D5A1E78D7FBA756 /* Firebase.debug.xcconfig */;
 			buildSettings = {
-				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
-				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
-				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
-				CURRENT_PROJECT_VERSION = 1;
-				DEFINES_MODULE = YES;
-				DYLIB_COMPATIBILITY_VERSION = 1;
-				DYLIB_CURRENT_VERSION = 1;
-				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				INFOPLIST_FILE = "Target Support Files/FirebaseInstallations/FirebaseInstallations-Info.plist";
-				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
-				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
+				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
+				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
+				CLANG_ENABLE_OBJC_WEAK = NO;
+				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
-					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/FirebaseInstallations/FirebaseInstallations.modulemap";
-				PRODUCT_MODULE_NAME = FirebaseInstallations;
-				PRODUCT_NAME = FirebaseInstallations;
 				SDKROOT = iphoneos;
-				SKIP_INSTALL = YES;
-				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
-				SWIFT_VERSION = 4.2;
 				TARGETED_DEVICE_FAMILY = "1,2";
-				VERSIONING_SYSTEM = "apple-generic";
-				VERSION_INFO_PREFIX = "";
 			};
 			name = Debug;
 		};
-		94F2A91F70094E64FCB4D7EBDA259DC3 /* Release */ = {
+		AD81E62ACCB0B7A923FC8AA288F9921E /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 9FD5A565F680A72ECBFFAA71B7F8F643 /* Firebase.release.xcconfig */;
+			baseConfigurationReference = 397B25BD42483D57228B894C203C6ABB /* SwiftLint.release.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
 				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
-				CLANG_ENABLE_OBJC_WEAK = NO;
-				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
+				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
@@ -8950,9 +9088,9 @@
 			};
 			name = Release;
 		};
-		95A23E8385BD39476AABFC38858BB845 /* Debug */ = {
+		B00500A0CF45E99907E8FC3B4D9A24F4 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 2E6BEEE2EB5BF2E73100EF7C95C7FE73 /* GoogleUtilities.debug.xcconfig */;
+			baseConfigurationReference = 9DA2DBE103108D378C37099A0B5A0F72 /* FirebaseCore.release.xcconfig */;
 			buildSettings = {
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
@@ -8962,7 +9100,7 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				INFOPLIST_FILE = "Target Support Files/GoogleUtilities/GoogleUtilities-Info.plist";
+				INFOPLIST_FILE = "Target Support Files/FirebaseCore/FirebaseCore-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = (
@@ -8970,22 +9108,23 @@
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/GoogleUtilities/GoogleUtilities.modulemap";
-				PRODUCT_MODULE_NAME = GoogleUtilities;
-				PRODUCT_NAME = GoogleUtilities;
+				MODULEMAP_FILE = "Target Support Files/FirebaseCore/FirebaseCore.modulemap";
+				PRODUCT_MODULE_NAME = FirebaseCore;
+				PRODUCT_NAME = FirebaseCore;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
 				SWIFT_VERSION = 4.2;
 				TARGETED_DEVICE_FAMILY = "1,2";
+				VALIDATE_PRODUCT = YES;
 				VERSIONING_SYSTEM = "apple-generic";
 				VERSION_INFO_PREFIX = "";
 			};
-			name = Debug;
+			name = Release;
 		};
-		9B63404BD7D3F122569C56BB2921CD67 /* Debug */ = {
+		B09B9F98BEEF358D930AF4F114D98342 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 5C4E358B18A952F85B92867F9EC69FFD /* OTPFieldView.debug.xcconfig */;
+			baseConfigurationReference = 9F8F17918E912696D4D5EB546D0C2D14 /* youtube-ios-player-helper.debug.xcconfig */;
 			buildSettings = {
 				CLANG_ENABLE_OBJC_WEAK = NO;
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
@@ -8996,33 +9135,48 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				GCC_PREFIX_HEADER = "Target Support Files/OTPFieldView/OTPFieldView-prefix.pch";
-				INFOPLIST_FILE = "Target Support Files/OTPFieldView/OTPFieldView-Info.plist";
+				GCC_PREFIX_HEADER = "Target Support Files/youtube-ios-player-helper/youtube-ios-player-helper-prefix.pch";
+				INFOPLIST_FILE = "Target Support Files/youtube-ios-player-helper/youtube-ios-player-helper-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
-				IPHONEOS_DEPLOYMENT_TARGET = 10.3;
+				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/OTPFieldView/OTPFieldView.modulemap";
-				PRODUCT_MODULE_NAME = OTPFieldView;
-				PRODUCT_NAME = OTPFieldView;
+				MODULEMAP_FILE = "Target Support Files/youtube-ios-player-helper/youtube-ios-player-helper.modulemap";
+				PRODUCT_MODULE_NAME = youtube_ios_player_helper;
+				PRODUCT_NAME = youtube_ios_player_helper;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
-				SWIFT_VERSION = 5.0;
+				SWIFT_VERSION = 4.2;
 				TARGETED_DEVICE_FAMILY = "1,2";
 				VERSIONING_SYSTEM = "apple-generic";
 				VERSION_INFO_PREFIX = "";
 			};
 			name = Debug;
 		};
-		9E503F55A584841875A90C6D98F2CC9F /* Release */ = {
+		B18FBA3A34C73D842AA6DFE8448C9BCA /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = F0AAD166C6FEC321EE3897E8715C08AA /* FirebaseMessaging.release.xcconfig */;
+			baseConfigurationReference = 70AF0E4133E987AE5B9977ECB06AE6F3 /* GoogleAppMeasurement.debug.xcconfig */;
+			buildSettings = {
+				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
+				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
+				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
+				LD_RUNPATH_SEARCH_PATHS = (
+					"$(inherited)",
+					"@executable_path/Frameworks",
+				);
+				SDKROOT = iphoneos;
+				TARGETED_DEVICE_FAMILY = "1,2";
+			};
+			name = Debug;
+		};
+		B2C89343EB7C202BAEE5FBED397500CA /* Debug */ = {
+			isa = XCBuildConfiguration;
+			baseConfigurationReference = 7CBA4B276C1D5ECE2594DC93F243D07A /* SwiftMessages.debug.xcconfig */;
 			buildSettings = {
-				CLANG_ENABLE_OBJC_WEAK = NO;
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
@@ -9031,33 +9185,32 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				INFOPLIST_FILE = "Target Support Files/FirebaseMessaging/FirebaseMessaging-Info.plist";
+				GCC_PREFIX_HEADER = "Target Support Files/SwiftMessages/SwiftMessages-prefix.pch";
+				INFOPLIST_FILE = "Target Support Files/SwiftMessages/SwiftMessages-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
-				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
+				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/FirebaseMessaging/FirebaseMessaging.modulemap";
-				PRODUCT_MODULE_NAME = FirebaseMessaging;
-				PRODUCT_NAME = FirebaseMessaging;
+				MODULEMAP_FILE = "Target Support Files/SwiftMessages/SwiftMessages.modulemap";
+				PRODUCT_MODULE_NAME = SwiftMessages;
+				PRODUCT_NAME = SwiftMessages;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
-				SWIFT_VERSION = 4.2;
+				SWIFT_VERSION = 5.0;
 				TARGETED_DEVICE_FAMILY = "1,2";
-				VALIDATE_PRODUCT = YES;
 				VERSIONING_SYSTEM = "apple-generic";
 				VERSION_INFO_PREFIX = "";
 			};
-			name = Release;
+			name = Debug;
 		};
-		A07598AD8F39E0E75E530F013C5CD233 /* Release */ = {
+		B2FD2BDE1879610333EFAE7188ADA4E2 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 03F23B641B74D6531ED837041034856A /* OTPFieldView.release.xcconfig */;
+			baseConfigurationReference = D9FE2F54B4E13E71A4166999F318D7C4 /* CleverTap-iOS-SDK.debug.xcconfig */;
 			buildSettings = {
-				CLANG_ENABLE_OBJC_WEAK = NO;
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
@@ -9066,33 +9219,33 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				GCC_PREFIX_HEADER = "Target Support Files/OTPFieldView/OTPFieldView-prefix.pch";
-				INFOPLIST_FILE = "Target Support Files/OTPFieldView/OTPFieldView-Info.plist";
+				GCC_PREFIX_HEADER = "Target Support Files/CleverTap-iOS-SDK/CleverTap-iOS-SDK-prefix.pch";
+				INFOPLIST_FILE = "Target Support Files/CleverTap-iOS-SDK/CleverTap-iOS-SDK-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
-				IPHONEOS_DEPLOYMENT_TARGET = 10.3;
+				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/OTPFieldView/OTPFieldView.modulemap";
-				PRODUCT_MODULE_NAME = OTPFieldView;
-				PRODUCT_NAME = OTPFieldView;
+				MODULEMAP_FILE = "Target Support Files/CleverTap-iOS-SDK/CleverTap-iOS-SDK.modulemap";
+				PRODUCT_MODULE_NAME = CleverTapSDK;
+				PRODUCT_NAME = CleverTapSDK;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
-				SWIFT_VERSION = 5.0;
+				SWIFT_VERSION = 4.2;
 				TARGETED_DEVICE_FAMILY = "1,2";
-				VALIDATE_PRODUCT = YES;
 				VERSIONING_SYSTEM = "apple-generic";
 				VERSION_INFO_PREFIX = "";
 			};
-			name = Release;
+			name = Debug;
 		};
-		A475D7959DA3117980DCADA050AB778A /* Debug */ = {
+		B4839F2001B527E038BBEF4FA5C00EA3 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 3FAE0BF617D5B61EB7F7D83121199A2D /* PromisesObjC.debug.xcconfig */;
+			baseConfigurationReference = F0C2DDCA931302A402432E095AC88073 /* FloatingPanel.release.xcconfig */;
 			buildSettings = {
+				CLANG_ENABLE_OBJC_WEAK = NO;
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
@@ -9101,30 +9254,32 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				INFOPLIST_FILE = "Target Support Files/PromisesObjC/PromisesObjC-Info.plist";
+				GCC_PREFIX_HEADER = "Target Support Files/FloatingPanel/FloatingPanel-prefix.pch";
+				INFOPLIST_FILE = "Target Support Files/FloatingPanel/FloatingPanel-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
-				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
+				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/PromisesObjC/PromisesObjC.modulemap";
-				PRODUCT_MODULE_NAME = FBLPromises;
-				PRODUCT_NAME = FBLPromises;
+				MODULEMAP_FILE = "Target Support Files/FloatingPanel/FloatingPanel.modulemap";
+				PRODUCT_MODULE_NAME = FloatingPanel;
+				PRODUCT_NAME = FloatingPanel;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
-				SWIFT_VERSION = 4.2;
+				SWIFT_VERSION = 5.3;
 				TARGETED_DEVICE_FAMILY = "1,2";
+				VALIDATE_PRODUCT = YES;
 				VERSIONING_SYSTEM = "apple-generic";
 				VERSION_INFO_PREFIX = "";
 			};
-			name = Debug;
+			name = Release;
 		};
-		A8C55DAC9B86BA0D4C0B88D5769FA46B /* Debug */ = {
+		B5B3A19CBCB749D95D70E999871296A9 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 6DF4DFD316E8C581A47E9C6D5F28776C /* GoogleAppMeasurement.debug.xcconfig */;
+			baseConfigurationReference = 2D96CD6E92D58351B5F3D9E65F11ECE8 /* FirebaseAnalytics.debug.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
 				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
@@ -9138,45 +9293,26 @@
 			};
 			name = Debug;
 		};
-		AC00A48BB560EC510518B1AE97ECD60B /* Debug */ = {
-			isa = XCBuildConfiguration;
-			baseConfigurationReference = 2FB2854194335ACE93FDD9C05D33DD54 /* Firebase.debug.xcconfig */;
-			buildSettings = {
-				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
-				CLANG_ENABLE_OBJC_WEAK = NO;
-				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
-				LD_RUNPATH_SEARCH_PATHS = (
-					"$(inherited)",
-					"@executable_path/Frameworks",
-				);
-				SDKROOT = iphoneos;
-				TARGETED_DEVICE_FAMILY = "1,2";
-			};
-			name = Debug;
-		};
-		AD81E62ACCB0B7A923FC8AA288F9921E /* Release */ = {
+		BE05A7039FE1186C69AFBBEBEF711FF2 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = F6A5C785D8104E9A994DCD940D56D5B3 /* SwiftLint.release.xcconfig */;
+			baseConfigurationReference = B4E842C465B5B2FEA3F98E2A987334EB /* XLPagerTabStrip.release.xcconfig */;
 			buildSettings = {
-				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
-				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
-				LD_RUNPATH_SEARCH_PATHS = (
-					"$(inherited)",
-					"@executable_path/Frameworks",
-				);
+				CONFIGURATION_BUILD_DIR = "$(BUILD_DIR)/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/XLPagerTabStrip";
+				IBSC_MODULE = XLPagerTabStrip;
+				INFOPLIST_FILE = "Target Support Files/XLPagerTabStrip/ResourceBundle-XLPagerTabStrip-XLPagerTabStrip-Info.plist";
+				IPHONEOS_DEPLOYMENT_TARGET = 9.3;
+				PRODUCT_NAME = XLPagerTabStrip;
 				SDKROOT = iphoneos;
+				SKIP_INSTALL = YES;
 				TARGETED_DEVICE_FAMILY = "1,2";
-				VALIDATE_PRODUCT = YES;
+				WRAPPER_EXTENSION = bundle;
 			};
 			name = Release;
 		};
-		B09B9F98BEEF358D930AF4F114D98342 /* Debug */ = {
+		BEC2F67154ED6B08E7590950EAF512BE /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 2C075CF84C54808C87B9087B876BF78C /* youtube-ios-player-helper.debug.xcconfig */;
+			baseConfigurationReference = 4DB7D0044BBC6BE5C9A616774558EB43 /* FirebaseCoreDiagnostics.release.xcconfig */;
 			buildSettings = {
-				CLANG_ENABLE_OBJC_WEAK = NO;
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
@@ -9185,31 +9321,31 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				GCC_PREFIX_HEADER = "Target Support Files/youtube-ios-player-helper/youtube-ios-player-helper-prefix.pch";
-				INFOPLIST_FILE = "Target Support Files/youtube-ios-player-helper/youtube-ios-player-helper-Info.plist";
+				INFOPLIST_FILE = "Target Support Files/FirebaseCoreDiagnostics/FirebaseCoreDiagnostics-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
-				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
+				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/youtube-ios-player-helper/youtube-ios-player-helper.modulemap";
-				PRODUCT_MODULE_NAME = youtube_ios_player_helper;
-				PRODUCT_NAME = youtube_ios_player_helper;
+				MODULEMAP_FILE = "Target Support Files/FirebaseCoreDiagnostics/FirebaseCoreDiagnostics.modulemap";
+				PRODUCT_MODULE_NAME = FirebaseCoreDiagnostics;
+				PRODUCT_NAME = FirebaseCoreDiagnostics;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
 				SWIFT_VERSION = 4.2;
 				TARGETED_DEVICE_FAMILY = "1,2";
+				VALIDATE_PRODUCT = YES;
 				VERSIONING_SYSTEM = "apple-generic";
 				VERSION_INFO_PREFIX = "";
 			};
-			name = Debug;
+			name = Release;
 		};
-		B2FD2BDE1879610333EFAE7188ADA4E2 /* Debug */ = {
+		BEF159644814B1B907EC452EA5C9713C /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 41C7DA87FA9C48BD5ED37C5DCD679A3B /* CleverTap-iOS-SDK.debug.xcconfig */;
+			baseConfigurationReference = 1C8C3A61B00AAC8E3523F894847420D3 /* Parchment.debug.xcconfig */;
 			buildSettings = {
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
@@ -9219,18 +9355,18 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				GCC_PREFIX_HEADER = "Target Support Files/CleverTap-iOS-SDK/CleverTap-iOS-SDK-prefix.pch";
-				INFOPLIST_FILE = "Target Support Files/CleverTap-iOS-SDK/CleverTap-iOS-SDK-Info.plist";
+				GCC_PREFIX_HEADER = "Target Support Files/Parchment/Parchment-prefix.pch";
+				INFOPLIST_FILE = "Target Support Files/Parchment/Parchment-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
-				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
+				IPHONEOS_DEPLOYMENT_TARGET = 8.2;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/CleverTap-iOS-SDK/CleverTap-iOS-SDK.modulemap";
-				PRODUCT_MODULE_NAME = CleverTapSDK;
-				PRODUCT_NAME = CleverTapSDK;
+				MODULEMAP_FILE = "Target Support Files/Parchment/Parchment.modulemap";
+				PRODUCT_MODULE_NAME = Parchment;
+				PRODUCT_NAME = Parchment;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
@@ -9241,11 +9377,10 @@
 			};
 			name = Debug;
 		};
-		B4839F2001B527E038BBEF4FA5C00EA3 /* Release */ = {
+		C18368CDB54F99E46FAC034FE7522C37 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 2F421BBACE649CEDC01881387FD34461 /* FloatingPanel.release.xcconfig */;
+			baseConfigurationReference = EED80F8EC9AD4C4AB102FDCC29578FB7 /* GoogleDataTransport.debug.xcconfig */;
 			buildSettings = {
-				CLANG_ENABLE_OBJC_WEAK = NO;
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
@@ -9254,49 +9389,30 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				GCC_PREFIX_HEADER = "Target Support Files/FloatingPanel/FloatingPanel-prefix.pch";
-				INFOPLIST_FILE = "Target Support Files/FloatingPanel/FloatingPanel-Info.plist";
+				INFOPLIST_FILE = "Target Support Files/GoogleDataTransport/GoogleDataTransport-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
-				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
+				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/FloatingPanel/FloatingPanel.modulemap";
-				PRODUCT_MODULE_NAME = FloatingPanel;
-				PRODUCT_NAME = FloatingPanel;
+				MODULEMAP_FILE = "Target Support Files/GoogleDataTransport/GoogleDataTransport.modulemap";
+				PRODUCT_MODULE_NAME = GoogleDataTransport;
+				PRODUCT_NAME = GoogleDataTransport;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
-				SWIFT_VERSION = 5.3;
+				SWIFT_VERSION = 4.2;
 				TARGETED_DEVICE_FAMILY = "1,2";
-				VALIDATE_PRODUCT = YES;
 				VERSIONING_SYSTEM = "apple-generic";
 				VERSION_INFO_PREFIX = "";
 			};
-			name = Release;
-		};
-		B797B0BDC699E2E4D6442CB04B3BFCB6 /* Release */ = {
-			isa = XCBuildConfiguration;
-			baseConfigurationReference = 2F9B670ADDBC00EB32AE3C255A25B0F3 /* FirebaseAnalytics.release.xcconfig */;
-			buildSettings = {
-				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
-				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
-				LD_RUNPATH_SEARCH_PATHS = (
-					"$(inherited)",
-					"@executable_path/Frameworks",
-				);
-				SDKROOT = iphoneos;
-				TARGETED_DEVICE_FAMILY = "1,2";
-				VALIDATE_PRODUCT = YES;
-			};
-			name = Release;
+			name = Debug;
 		};
-		BEF159644814B1B907EC452EA5C9713C /* Debug */ = {
+		C2A6A2590C88A1F4BFEA35391266162F /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = CA71E94E5F96DD62381A6E47013C5391 /* Parchment.debug.xcconfig */;
+			baseConfigurationReference = CFC36C7F7AC1A9920BE10C459AF546F7 /* Parchment.release.xcconfig */;
 			buildSettings = {
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
@@ -9323,30 +9439,15 @@
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
 				SWIFT_VERSION = 4.2;
 				TARGETED_DEVICE_FAMILY = "1,2";
+				VALIDATE_PRODUCT = YES;
 				VERSIONING_SYSTEM = "apple-generic";
 				VERSION_INFO_PREFIX = "";
 			};
-			name = Debug;
-		};
-		C18C596019F277BCA019141DEADF4901 /* Debug */ = {
-			isa = XCBuildConfiguration;
-			baseConfigurationReference = 75E9623933DB8FA15D43BAE5F30743B1 /* FirebaseAnalytics.debug.xcconfig */;
-			buildSettings = {
-				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
-				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
-				LD_RUNPATH_SEARCH_PATHS = (
-					"$(inherited)",
-					"@executable_path/Frameworks",
-				);
-				SDKROOT = iphoneos;
-				TARGETED_DEVICE_FAMILY = "1,2";
-			};
-			name = Debug;
+			name = Release;
 		};
-		C1EFFFB3E5DC44C65B95C492C8FE0AF3 /* Debug */ = {
+		C2CF60FE4DB54DFB200E672E4D123378 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = E424A548431E747F5E002B9C1CA862D8 /* FirebaseCore.debug.xcconfig */;
+			baseConfigurationReference = D465D7F54D40B3774407D83780D2D729 /* FirebaseCore.debug.xcconfig */;
 			buildSettings = {
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
@@ -9377,9 +9478,9 @@
 			};
 			name = Debug;
 		};
-		C2A6A2590C88A1F4BFEA35391266162F /* Release */ = {
+		C68D59928B1240A44F7696F5C75A37EB /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 93827B788B439C0A060A6986FC939A49 /* Parchment.release.xcconfig */;
+			baseConfigurationReference = BAD41434D5637C38E35DD97234EEF20F /* GoogleUtilities.release.xcconfig */;
 			buildSettings = {
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
@@ -9389,18 +9490,17 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				GCC_PREFIX_HEADER = "Target Support Files/Parchment/Parchment-prefix.pch";
-				INFOPLIST_FILE = "Target Support Files/Parchment/Parchment-Info.plist";
+				INFOPLIST_FILE = "Target Support Files/GoogleUtilities/GoogleUtilities-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
-				IPHONEOS_DEPLOYMENT_TARGET = 8.2;
+				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/Parchment/Parchment.modulemap";
-				PRODUCT_MODULE_NAME = Parchment;
-				PRODUCT_NAME = Parchment;
+				MODULEMAP_FILE = "Target Support Files/GoogleUtilities/GoogleUtilities.modulemap";
+				PRODUCT_MODULE_NAME = GoogleUtilities;
+				PRODUCT_NAME = GoogleUtilities;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
@@ -9412,43 +9512,26 @@
 			};
 			name = Release;
 		};
-		C5F55A48018714516C801F22E343C92F /* Release */ = {
+		CD589502066ADF0F6E0DE1DCA15B92CE /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 6033D5A4056246D310B127421EBC27B5 /* FirebaseCoreDiagnostics.release.xcconfig */;
+			baseConfigurationReference = 1A57C2F130634A1883E39E6AB20FC4EC /* FirebaseAnalytics.release.xcconfig */;
 			buildSettings = {
-				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
-				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
-				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
-				CURRENT_PROJECT_VERSION = 1;
-				DEFINES_MODULE = YES;
-				DYLIB_COMPATIBILITY_VERSION = 1;
-				DYLIB_CURRENT_VERSION = 1;
-				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				INFOPLIST_FILE = "Target Support Files/FirebaseCoreDiagnostics/FirebaseCoreDiagnostics-Info.plist";
-				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
+				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
+				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
-					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/FirebaseCoreDiagnostics/FirebaseCoreDiagnostics.modulemap";
-				PRODUCT_MODULE_NAME = FirebaseCoreDiagnostics;
-				PRODUCT_NAME = FirebaseCoreDiagnostics;
 				SDKROOT = iphoneos;
-				SKIP_INSTALL = YES;
-				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
-				SWIFT_VERSION = 4.2;
 				TARGETED_DEVICE_FAMILY = "1,2";
 				VALIDATE_PRODUCT = YES;
-				VERSIONING_SYSTEM = "apple-generic";
-				VERSION_INFO_PREFIX = "";
 			};
 			name = Release;
 		};
 		CF24E2F7EFC43D56ADFE8E6AEB721754 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = F58535D86E5CAEF96331D9B139FB4BB6 /* UserExperior.release.xcconfig */;
+			baseConfigurationReference = E52CD80572EE0DF031217943025836D2 /* UserExperior.release.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
 				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
@@ -9464,10 +9547,11 @@
 			};
 			name = Release;
 		};
-		D3FAE5966AF5E3820731D684943C1B87 /* Release */ = {
+		DAAC8A1F722472D0BBFC4BE0613155B7 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = BB617648B6A168E17E0DD60699480B63 /* IQKeyboardManagerSwift.release.xcconfig */;
+			baseConfigurationReference = AA48E61CE0A1CD2E6B046D1E92616989 /* AlamofireNetworkActivityLogger.debug.xcconfig */;
 			buildSettings = {
+				CLANG_ENABLE_OBJC_WEAK = NO;
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
@@ -9476,32 +9560,31 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				GCC_PREFIX_HEADER = "Target Support Files/IQKeyboardManagerSwift/IQKeyboardManagerSwift-prefix.pch";
-				INFOPLIST_FILE = "Target Support Files/IQKeyboardManagerSwift/IQKeyboardManagerSwift-Info.plist";
+				GCC_PREFIX_HEADER = "Target Support Files/AlamofireNetworkActivityLogger/AlamofireNetworkActivityLogger-prefix.pch";
+				INFOPLIST_FILE = "Target Support Files/AlamofireNetworkActivityLogger/AlamofireNetworkActivityLogger-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
-				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
+				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/IQKeyboardManagerSwift/IQKeyboardManagerSwift.modulemap";
-				PRODUCT_MODULE_NAME = IQKeyboardManagerSwift;
-				PRODUCT_NAME = IQKeyboardManagerSwift;
+				MODULEMAP_FILE = "Target Support Files/AlamofireNetworkActivityLogger/AlamofireNetworkActivityLogger.modulemap";
+				PRODUCT_MODULE_NAME = AlamofireNetworkActivityLogger;
+				PRODUCT_NAME = AlamofireNetworkActivityLogger;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
 				SWIFT_VERSION = 5.3;
 				TARGETED_DEVICE_FAMILY = "1,2";
-				VALIDATE_PRODUCT = YES;
 				VERSIONING_SYSTEM = "apple-generic";
 				VERSION_INFO_PREFIX = "";
 			};
-			name = Release;
+			name = Debug;
 		};
-		DAAC8A1F722472D0BBFC4BE0613155B7 /* Debug */ = {
+		DDE66E9EF2650949C1F28ED6BFEEEFED /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = F56B7F94ABA008990F8315E4F1D8225A /* AlamofireNetworkActivityLogger.debug.xcconfig */;
+			baseConfigurationReference = 8F6C5AB32DADD269DB52620DE3C9526A /* Alamofire.debug.xcconfig */;
 			buildSettings = {
 				CLANG_ENABLE_OBJC_WEAK = NO;
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
@@ -9512,8 +9595,8 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				GCC_PREFIX_HEADER = "Target Support Files/AlamofireNetworkActivityLogger/AlamofireNetworkActivityLogger-prefix.pch";
-				INFOPLIST_FILE = "Target Support Files/AlamofireNetworkActivityLogger/AlamofireNetworkActivityLogger-Info.plist";
+				GCC_PREFIX_HEADER = "Target Support Files/Alamofire/Alamofire-prefix.pch";
+				INFOPLIST_FILE = "Target Support Files/Alamofire/Alamofire-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
 				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
 				LD_RUNPATH_SEARCH_PATHS = (
@@ -9521,23 +9604,24 @@
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/AlamofireNetworkActivityLogger/AlamofireNetworkActivityLogger.modulemap";
-				PRODUCT_MODULE_NAME = AlamofireNetworkActivityLogger;
-				PRODUCT_NAME = AlamofireNetworkActivityLogger;
+				MODULEMAP_FILE = "Target Support Files/Alamofire/Alamofire.modulemap";
+				PRODUCT_MODULE_NAME = Alamofire;
+				PRODUCT_NAME = Alamofire;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
-				SWIFT_VERSION = 5.3;
+				SWIFT_VERSION = 5.5;
 				TARGETED_DEVICE_FAMILY = "1,2";
 				VERSIONING_SYSTEM = "apple-generic";
 				VERSION_INFO_PREFIX = "";
 			};
 			name = Debug;
 		};
-		E29B25ECEDC3BFA69D562DFA4347FECC /* Release */ = {
+		E52027A2EBFD45EAA3C53D6258543011 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 73D9B6DAC09A7A50B4A7EEC44247E5DC /* SDWebImage.release.xcconfig */;
+			baseConfigurationReference = 8C78B4E70B98B897F48F44E87E48A999 /* FirebaseMessaging.debug.xcconfig */;
 			buildSettings = {
+				CLANG_ENABLE_OBJC_WEAK = NO;
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
@@ -9546,28 +9630,26 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				GCC_PREFIX_HEADER = "Target Support Files/SDWebImage/SDWebImage-prefix.pch";
-				INFOPLIST_FILE = "Target Support Files/SDWebImage/SDWebImage-Info.plist";
+				INFOPLIST_FILE = "Target Support Files/FirebaseMessaging/FirebaseMessaging-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
-				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
+				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/SDWebImage/SDWebImage.modulemap";
-				PRODUCT_MODULE_NAME = SDWebImage;
-				PRODUCT_NAME = SDWebImage;
+				MODULEMAP_FILE = "Target Support Files/FirebaseMessaging/FirebaseMessaging.modulemap";
+				PRODUCT_MODULE_NAME = FirebaseMessaging;
+				PRODUCT_NAME = FirebaseMessaging;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
 				SWIFT_VERSION = 4.2;
 				TARGETED_DEVICE_FAMILY = "1,2";
-				VALIDATE_PRODUCT = YES;
 				VERSIONING_SYSTEM = "apple-generic";
 				VERSION_INFO_PREFIX = "";
 			};
-			name = Release;
+			name = Debug;
 		};
 		E5B12AB88A4F6C443C963D290ECB2428 /* Release */ = {
 			isa = XCBuildConfiguration;
@@ -9631,9 +9713,25 @@
 			};
 			name = Release;
 		};
-		E8658CEE1E818A4BF1035AEBB2FC0673 /* Debug */ = {
+		EADD1F50ABC8096A0D6CB18822BB4EE4 /* Debug */ = {
+			isa = XCBuildConfiguration;
+			baseConfigurationReference = 2D12B24048616B7759256CEF1DF1CAAA /* SwiftLint.debug.xcconfig */;
+			buildSettings = {
+				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
+				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
+				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
+				LD_RUNPATH_SEARCH_PATHS = (
+					"$(inherited)",
+					"@executable_path/Frameworks",
+				);
+				SDKROOT = iphoneos;
+				TARGETED_DEVICE_FAMILY = "1,2";
+			};
+			name = Debug;
+		};
+		EB808F53127376C22ADC5A0B96FE2043 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = A8743A3F4DFAB718F7A90C4CC9558F6B /* SDWebImage.debug.xcconfig */;
+			baseConfigurationReference = A86AA2EB5FBAB8868EFC42CFA9B41728 /* nanopb.release.xcconfig */;
 			buildSettings = {
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
@@ -9643,8 +9741,8 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				GCC_PREFIX_HEADER = "Target Support Files/SDWebImage/SDWebImage-prefix.pch";
-				INFOPLIST_FILE = "Target Support Files/SDWebImage/SDWebImage-Info.plist";
+				GCC_PREFIX_HEADER = "Target Support Files/nanopb/nanopb-prefix.pch";
+				INFOPLIST_FILE = "Target Support Files/nanopb/nanopb-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = (
@@ -9652,54 +9750,23 @@
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/SDWebImage/SDWebImage.modulemap";
-				PRODUCT_MODULE_NAME = SDWebImage;
-				PRODUCT_NAME = SDWebImage;
+				MODULEMAP_FILE = "Target Support Files/nanopb/nanopb.modulemap";
+				PRODUCT_MODULE_NAME = nanopb;
+				PRODUCT_NAME = nanopb;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
 				SWIFT_VERSION = 4.2;
 				TARGETED_DEVICE_FAMILY = "1,2";
+				VALIDATE_PRODUCT = YES;
 				VERSIONING_SYSTEM = "apple-generic";
 				VERSION_INFO_PREFIX = "";
 			};
-			name = Debug;
-		};
-		EADD1F50ABC8096A0D6CB18822BB4EE4 /* Debug */ = {
-			isa = XCBuildConfiguration;
-			baseConfigurationReference = 760A8E38BFD99B8926146F8BB503CDC2 /* SwiftLint.debug.xcconfig */;
-			buildSettings = {
-				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
-				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
-				LD_RUNPATH_SEARCH_PATHS = (
-					"$(inherited)",
-					"@executable_path/Frameworks",
-				);
-				SDKROOT = iphoneos;
-				TARGETED_DEVICE_FAMILY = "1,2";
-			};
-			name = Debug;
-		};
-		EB9E225BA1C9106DE4C23AF91406B63A /* Release */ = {
-			isa = XCBuildConfiguration;
-			baseConfigurationReference = 0CFD192918BF9A8E7F67C1E6516AB785 /* XLPagerTabStrip.release.xcconfig */;
-			buildSettings = {
-				CONFIGURATION_BUILD_DIR = "$(BUILD_DIR)/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/XLPagerTabStrip";
-				IBSC_MODULE = XLPagerTabStrip;
-				INFOPLIST_FILE = "Target Support Files/XLPagerTabStrip/ResourceBundle-XLPagerTabStrip-XLPagerTabStrip-Info.plist";
-				IPHONEOS_DEPLOYMENT_TARGET = 9.3;
-				PRODUCT_NAME = XLPagerTabStrip;
-				SDKROOT = iphoneos;
-				SKIP_INSTALL = YES;
-				TARGETED_DEVICE_FAMILY = "1,2";
-				WRAPPER_EXTENSION = bundle;
-			};
 			name = Release;
 		};
 		F1A3D2A4AB6EAB9F0503E49A9B3E69F4 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 00EA0BCE1DF2A5E3F3A5A2437A56E5A2 /* XLPagerTabStrip.debug.xcconfig */;
+			baseConfigurationReference = 95909AB0FA2085F0C5C33BE92A491E7A /* XLPagerTabStrip.debug.xcconfig */;
 			buildSettings = {
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
@@ -9731,11 +9798,10 @@
 			};
 			name = Debug;
 		};
-		FB7C14C6595151CA877EE4B1A943A166 /* Release */ = {
+		F3F02655E219B0E30DF13E97258D0551 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 2C0522626DB9CAB3CE7F6272BB44C086 /* youtube-ios-player-helper.release.xcconfig */;
+			baseConfigurationReference = 415F521A4B7DADD0617C4D3272527C07 /* PromisesObjC.debug.xcconfig */;
 			buildSettings = {
-				CLANG_ENABLE_OBJC_WEAK = NO;
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
@@ -9744,33 +9810,32 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				GCC_PREFIX_HEADER = "Target Support Files/youtube-ios-player-helper/youtube-ios-player-helper-prefix.pch";
-				INFOPLIST_FILE = "Target Support Files/youtube-ios-player-helper/youtube-ios-player-helper-Info.plist";
+				INFOPLIST_FILE = "Target Support Files/PromisesObjC/PromisesObjC-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
-				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
+				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/youtube-ios-player-helper/youtube-ios-player-helper.modulemap";
-				PRODUCT_MODULE_NAME = youtube_ios_player_helper;
-				PRODUCT_NAME = youtube_ios_player_helper;
+				MODULEMAP_FILE = "Target Support Files/PromisesObjC/PromisesObjC.modulemap";
+				PRODUCT_MODULE_NAME = FBLPromises;
+				PRODUCT_NAME = FBLPromises;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
 				SWIFT_VERSION = 4.2;
 				TARGETED_DEVICE_FAMILY = "1,2";
-				VALIDATE_PRODUCT = YES;
 				VERSIONING_SYSTEM = "apple-generic";
 				VERSION_INFO_PREFIX = "";
 			};
-			name = Release;
+			name = Debug;
 		};
-		FC5E336DE661995627263DE1DC1AA9A9 /* Release */ = {
+		FB7C14C6595151CA877EE4B1A943A166 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = B4E0A4E0D393D02C6B63DEF41C47BCCB /* GoogleDataTransport.release.xcconfig */;
+			baseConfigurationReference = 3C7D6FF73609CD3D6750C37CD16EC3D5 /* youtube-ios-player-helper.release.xcconfig */;
 			buildSettings = {
+				CLANG_ENABLE_OBJC_WEAK = NO;
 				"CODE_SIGN_IDENTITY[sdk=appletvos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "";
 				"CODE_SIGN_IDENTITY[sdk=watchos*]" = "";
@@ -9779,17 +9844,18 @@
 				DYLIB_COMPATIBILITY_VERSION = 1;
 				DYLIB_CURRENT_VERSION = 1;
 				DYLIB_INSTALL_NAME_BASE = "@rpath";
-				INFOPLIST_FILE = "Target Support Files/GoogleDataTransport/GoogleDataTransport-Info.plist";
+				GCC_PREFIX_HEADER = "Target Support Files/youtube-ios-player-helper/youtube-ios-player-helper-prefix.pch";
+				INFOPLIST_FILE = "Target Support Files/youtube-ios-player-helper/youtube-ios-player-helper-Info.plist";
 				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
-				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
+				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
 				LD_RUNPATH_SEARCH_PATHS = (
 					"$(inherited)",
 					"@executable_path/Frameworks",
 					"@loader_path/Frameworks",
 				);
-				MODULEMAP_FILE = "Target Support Files/GoogleDataTransport/GoogleDataTransport.modulemap";
-				PRODUCT_MODULE_NAME = GoogleDataTransport;
-				PRODUCT_NAME = GoogleDataTransport;
+				MODULEMAP_FILE = "Target Support Files/youtube-ios-player-helper/youtube-ios-player-helper.modulemap";
+				PRODUCT_MODULE_NAME = youtube_ios_player_helper;
+				PRODUCT_NAME = youtube_ios_player_helper;
 				SDKROOT = iphoneos;
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) ";
@@ -9804,20 +9870,20 @@
 /* End XCBuildConfiguration section */
 
 /* Begin XCConfigurationList section */
-		04AF3ED1C020B1DB3415793750C07633 /* Build configuration list for PBXNativeTarget "nanopb" */ = {
+		0578F25DFF9912B9360F23AB3D809EB1 /* Build configuration list for PBXNativeTarget "GoogleDataTransport" */ = {
 			isa = XCConfigurationList;
 			buildConfigurations = (
-				5FCCBCA47C1575737B5537CDC12D90ED /* Debug */,
-				214B5CD9D844BD018344B14B69612749 /* Release */,
+				C18368CDB54F99E46FAC034FE7522C37 /* Debug */,
+				A6748B160F4D5223EA7E7A2F02A828CD /* Release */,
 			);
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
 		};
-		0AA81D98EFA5FCA28C5B7234F9722885 /* Build configuration list for PBXAggregateTarget "FirebaseAnalytics" */ = {
+		094031E521981B6BB6C6C9CDAA595208 /* Build configuration list for PBXAggregateTarget "FirebaseAnalytics" */ = {
 			isa = XCConfigurationList;
 			buildConfigurations = (
-				C18C596019F277BCA019141DEADF4901 /* Debug */,
-				B797B0BDC699E2E4D6442CB04B3BFCB6 /* Release */,
+				B5B3A19CBCB749D95D70E999871296A9 /* Debug */,
+				CD589502066ADF0F6E0DE1DCA15B92CE /* Release */,
 			);
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
@@ -9831,11 +9897,11 @@
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
 		};
-		1C5695BDFC8C02A75AC50BD82584C097 /* Build configuration list for PBXNativeTarget "XLPagerTabStrip-XLPagerTabStrip" */ = {
+		1EA271B298F51DB09C156706510CE49D /* Build configuration list for PBXNativeTarget "GoogleUtilities" */ = {
 			isa = XCConfigurationList;
 			buildConfigurations = (
-				6EA67E711FFDD381111C227F4AFCF680 /* Debug */,
-				EB9E225BA1C9106DE4C23AF91406B63A /* Release */,
+				9B1C96A751F9C169B19BC6C6DA1152FF /* Debug */,
+				C68D59928B1240A44F7696F5C75A37EB /* Release */,
 			);
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
@@ -9849,65 +9915,65 @@
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
 		};
-		411FC26866AF8C05D90E2E3AFC24FF21 /* Build configuration list for PBXAggregateTarget "Firebase" */ = {
+		23BD99A55B6F31BF0C8D17BEB9875712 /* Build configuration list for PBXAggregateTarget "GoogleAppMeasurement" */ = {
 			isa = XCConfigurationList;
 			buildConfigurations = (
-				AC00A48BB560EC510518B1AE97ECD60B /* Debug */,
-				94F2A91F70094E64FCB4D7EBDA259DC3 /* Release */,
+				B18FBA3A34C73D842AA6DFE8448C9BCA /* Debug */,
+				0098F62BC249C2E6E26EAA11E1957967 /* Release */,
 			);
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
 		};
-		478764A588CF8418B639EB08218B5910 /* Build configuration list for PBXNativeTarget "FirebaseMessaging" */ = {
+		3A1BA5817C38E3ABCC3E77960AA43391 /* Build configuration list for PBXNativeTarget "FirebaseMessaging" */ = {
 			isa = XCConfigurationList;
 			buildConfigurations = (
-				52B9BEA91C35BFA40953536D2A278437 /* Debug */,
-				9E503F55A584841875A90C6D98F2CC9F /* Release */,
+				E52027A2EBFD45EAA3C53D6258543011 /* Debug */,
+				6F36C0227DD9AF3AC88E77629A5644BF /* Release */,
 			);
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
 		};
-		4821239608C13582E20E6DA73FD5F1F9 /* Build configuration list for PBXProject "Pods" */ = {
+		411FC26866AF8C05D90E2E3AFC24FF21 /* Build configuration list for PBXAggregateTarget "Firebase" */ = {
 			isa = XCConfigurationList;
 			buildConfigurations = (
-				0082FC00BCCBFCAA63AA5C98EA587C17 /* Debug */,
-				E5B12AB88A4F6C443C963D290ECB2428 /* Release */,
+				AC00A48BB560EC510518B1AE97ECD60B /* Debug */,
+				94F2A91F70094E64FCB4D7EBDA259DC3 /* Release */,
 			);
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
 		};
-		4AB2E21B13871C9F751FC31E33D583B3 /* Build configuration list for PBXNativeTarget "SwiftMessages-SwiftMessages" */ = {
+		42F76AA8E84D32E2DED70BBA35321CB1 /* Build configuration list for PBXNativeTarget "IQKeyboardManagerSwift" */ = {
 			isa = XCConfigurationList;
 			buildConfigurations = (
-				84EA84873EB59829895DD790292AC610 /* Debug */,
-				21DD6060FD5D8C54BD486CD31339B75B /* Release */,
+				7FC4E2F77371528BA010DDDC46F0C7D4 /* Debug */,
+				097FCE19784279F44DBAEC516A352B10 /* Release */,
 			);
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
 		};
-		5312D706E52BF2085E7DDDD89CE63020 /* Build configuration list for PBXNativeTarget "FirebaseInstallations" */ = {
+		4821239608C13582E20E6DA73FD5F1F9 /* Build configuration list for PBXProject "Pods" */ = {
 			isa = XCConfigurationList;
 			buildConfigurations = (
-				8BD9FE5FE9CFC32AE90C8A70103212BA /* Debug */,
-				0766F51D7429B596DB3812E898647436 /* Release */,
+				0082FC00BCCBFCAA63AA5C98EA587C17 /* Debug */,
+				E5B12AB88A4F6C443C963D290ECB2428 /* Release */,
 			);
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
 		};
-		5A8234532590346C1680E28DE822B529 /* Build configuration list for PBXNativeTarget "SDWebImage" */ = {
+		4FD7C2B04E1FC5365718930ADC799D5C /* Build configuration list for PBXNativeTarget "SwiftMessages" */ = {
 			isa = XCConfigurationList;
 			buildConfigurations = (
-				E8658CEE1E818A4BF1035AEBB2FC0673 /* Debug */,
-				E29B25ECEDC3BFA69D562DFA4347FECC /* Release */,
+				B2C89343EB7C202BAEE5FBED397500CA /* Debug */,
+				80CFF3701C30078A716619ED51F45BC5 /* Release */,
 			);
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
 		};
-		5C7819C35FDEA528C00DF6AD8D30B0AE /* Build configuration list for PBXAggregateTarget "GoogleAppMeasurement" */ = {
+		58BA9B10AE2667F16380B2D7C3789EC0 /* Build configuration list for PBXNativeTarget "SwiftMessages-SwiftMessages" */ = {
 			isa = XCConfigurationList;
 			buildConfigurations = (
-				A8C55DAC9B86BA0D4C0B88D5769FA46B /* Debug */,
-				13A0CFAFBB0F0F2AEC4E89B6182B72C4 /* Release */,
+				6F773EB5D0526F7428E9B837344E870D /* Debug */,
+				65B1BDC5C2B5EAA36C326EAB20DD7776 /* Release */,
 			);
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
@@ -9930,20 +9996,29 @@
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
 		};
-		7892336E6D5F90E0F6F47A86363AD745 /* Build configuration list for PBXNativeTarget "SwiftMessages" */ = {
+		77526BB9475F5AE356FF2603D375F898 /* Build configuration list for PBXNativeTarget "nanopb" */ = {
+			isa = XCConfigurationList;
+			buildConfigurations = (
+				00248FF87EDA27ABFBA5BD57A029045D /* Debug */,
+				EB808F53127376C22ADC5A0B96FE2043 /* Release */,
+			);
+			defaultConfigurationIsVisible = 0;
+			defaultConfigurationName = Release;
+		};
+		7E4D442225187899A4C2AEB00E4C83B2 /* Build configuration list for PBXNativeTarget "XLPagerTabStrip-XLPagerTabStrip" */ = {
 			isa = XCConfigurationList;
 			buildConfigurations = (
-				1644BC8C040CBDB8CA2028F373705B89 /* Debug */,
-				7B5BE878C9DF2206C12E302E5EBA27AF /* Release */,
+				9DA0DB770A2C27851CD26D5669C3D1E0 /* Debug */,
+				BE05A7039FE1186C69AFBBEBEF711FF2 /* Release */,
 			);
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
 		};
-		807C9571C43FB25812F895D66DB114ED /* Build configuration list for PBXNativeTarget "PromisesObjC" */ = {
+		80CDE8E095A930280C33652E20656D97 /* Build configuration list for PBXNativeTarget "FirebaseCore" */ = {
 			isa = XCConfigurationList;
 			buildConfigurations = (
-				A475D7959DA3117980DCADA050AB778A /* Debug */,
-				5FB2090EE003F2E12DE5BFF75511F756 /* Release */,
+				C2CF60FE4DB54DFB200E672E4D123378 /* Debug */,
+				B00500A0CF45E99907E8FC3B4D9A24F4 /* Release */,
 			);
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
@@ -9957,20 +10032,20 @@
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
 		};
-		8A21EAB02EDD537C47B0CD57E75B6E0B /* Build configuration list for PBXNativeTarget "FirebaseCore" */ = {
+		8DA97FB479F28D9C34523DC47E402BC8 /* Build configuration list for PBXNativeTarget "FirebaseCrashlytics" */ = {
 			isa = XCConfigurationList;
 			buildConfigurations = (
-				C1EFFFB3E5DC44C65B95C492C8FE0AF3 /* Debug */,
-				23DF180465C20BE20AE2119DE841E973 /* Release */,
+				4BD83ED0014DC6828BD96EEEF3C27825 /* Debug */,
+				79C12C9427E0DA9FBB23862DDFC0A424 /* Release */,
 			);
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
 		};
-		94789D4BD5FF5F5EB7D7AE8E3B1C51D6 /* Build configuration list for PBXNativeTarget "FirebaseCoreDiagnostics" */ = {
+		8DE4D26FC5C62567FBB0ECE5811467AD /* Build configuration list for PBXNativeTarget "SDWebImage" */ = {
 			isa = XCConfigurationList;
 			buildConfigurations = (
-				200D94EC448AF06CF5B1723A2BE0EEF0 /* Debug */,
-				C5F55A48018714516C801F22E343C92F /* Release */,
+				85DAC54B595B0E9BA117E9C5DFDA905C /* Debug */,
+				37398464D517983B429CF7E7217A35C7 /* Release */,
 			);
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
@@ -9978,8 +10053,8 @@
 		9C98220D3187BF01A20E296DC128BED4 /* Build configuration list for PBXNativeTarget "Alamofire" */ = {
 			isa = XCConfigurationList;
 			buildConfigurations = (
-				79CAC264ADFE5B001A5B7C3B7E3C344F /* Debug */,
-				2A7DA26AF0A7C5162BE1469DC8E89D03 /* Release */,
+				DDE66E9EF2650949C1F28ED6BFEEEFED /* Debug */,
+				79FDB89F6CA57D6734D528EAF266BD7B /* Release */,
 			);
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
@@ -9993,15 +10068,6 @@
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
 		};
-		A4F5033C1CF6FAFC07FD65FE92BB63F8 /* Build configuration list for PBXNativeTarget "GoogleUtilities" */ = {
-			isa = XCConfigurationList;
-			buildConfigurations = (
-				95A23E8385BD39476AABFC38858BB845 /* Debug */,
-				216E8718ABC0B6D7A0BBA5B50BEAE309 /* Release */,
-			);
-			defaultConfigurationIsVisible = 0;
-			defaultConfigurationName = Release;
-		};
 		A85E0DA866801521CB2D5FA86BB941CC /* Build configuration list for PBXNativeTarget "Pods-OpenBook" */ = {
 			isa = XCConfigurationList;
 			buildConfigurations = (
@@ -10020,20 +10086,20 @@
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
 		};
-		B2A5377FFD50C8B9D96B8E048D6702FF /* Build configuration list for PBXNativeTarget "FirebaseCrashlytics" */ = {
+		BCD47FDFBBEE12467EB650980BDD46CF /* Build configuration list for PBXNativeTarget "PromisesObjC" */ = {
 			isa = XCConfigurationList;
 			buildConfigurations = (
-				86B0A1A7556062D316633973C7A695B2 /* Debug */,
-				12084724EA51F24CEEC9AD596EFCB14D /* Release */,
+				F3F02655E219B0E30DF13E97258D0551 /* Debug */,
+				2EBF846B2EC3C60EBDDC9D90FD3B4788 /* Release */,
 			);
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
 		};
-		B457B34920679DC500CD041991F040B2 /* Build configuration list for PBXNativeTarget "IQKeyboardManagerSwift" */ = {
+		C4F423AA13738F926F638534D1387E55 /* Build configuration list for PBXNativeTarget "FirebaseCoreDiagnostics" */ = {
 			isa = XCConfigurationList;
 			buildConfigurations = (
-				876F2B20ED737134817FF257F66D655B /* Debug */,
-				D3FAE5966AF5E3820731D684943C1B87 /* Release */,
+				1F8D767B1A7DED899A6A03B6AF0AAB47 /* Debug */,
+				BEC2F67154ED6B08E7590950EAF512BE /* Release */,
 			);
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
@@ -10065,11 +10131,11 @@
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
 		};
-		FB10E9CFD2BA65041D74BF9459EEC895 /* Build configuration list for PBXNativeTarget "GoogleDataTransport" */ = {
+		FD7BFD8A3BE49AAE3F64FC129502D47B /* Build configuration list for PBXNativeTarget "FirebaseInstallations" */ = {
 			isa = XCConfigurationList;
 			buildConfigurations = (
-				7FC9D6F481C34611DDCF62DB751BAAE9 /* Debug */,
-				FC5E336DE661995627263DE1DC1AA9A9 /* Release */,
+				25F63F28353F7538F02F736C1D413C7B /* Debug */,
+				7E48BE99840886C0C1C2985B536F310D /* Release */,
 			);
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
@@ -10077,10 +10143,10 @@
 /* End XCConfigurationList section */
 
 /* Begin XCVersionGroup section */
-		812794DF8600DAFEC7A4F2CCBB8C8ADB /* Inbox.xcdatamodeld */ = {
+		B98C6C35BA385BFE0B86644BA9D00C1C /* Inbox.xcdatamodeld */ = {
 			isa = XCVersionGroup;
 			children = (
-				424A5B9028FED5C0315433007882EC19 /* Inbox.xcdatamodel */,
+				F4BED2E4E7B69189095B7ACA1CC1C3E4 /* Inbox.xcdatamodel */,
 			);
 			name = Inbox.xcdatamodeld;
 			path = CleverTapSDK/Inbox/resources/Inbox.xcdatamodeld;
diff --git a/OpenBook/Pods/SDWebImage/SDWebImage/Core/NSData+ImageContentType.h b/OpenBook/Pods/SDWebImage/SDWebImage/Core/NSData+ImageContentType.h
index a9921ea3..fb5ba60a 100644
--- a/OpenBook/Pods/SDWebImage/SDWebImage/Core/NSData+ImageContentType.h
+++ b/OpenBook/Pods/SDWebImage/SDWebImage/Core/NSData+ImageContentType.h
@@ -45,7 +45,7 @@ static const SDImageFormat SDImageFormatSVG       = 8;
  *
  *  @param format Format as SDImageFormat
  *  @return The UTType as CFStringRef
- *  @note For unknown format, `kUTTypeImage` abstract type will return
+ *  @note For unknown format, `kSDUTTypeImage` abstract type will return
  */
 + (nonnull CFStringRef)sd_UTTypeFromImageFormat:(SDImageFormat)format CF_RETURNS_NOT_RETAINED NS_SWIFT_NAME(sd_UTType(from:));
 
diff --git a/OpenBook/Pods/SDWebImage/SDWebImage/Core/NSData+ImageContentType.m b/OpenBook/Pods/SDWebImage/SDWebImage/Core/NSData+ImageContentType.m
index 35e27aa4..070dfdfc 100644
--- a/OpenBook/Pods/SDWebImage/SDWebImage/Core/NSData+ImageContentType.m
+++ b/OpenBook/Pods/SDWebImage/SDWebImage/Core/NSData+ImageContentType.m
@@ -87,16 +87,16 @@ + (nonnull CFStringRef)sd_UTTypeFromImageFormat:(SDImageFormat)format {
     CFStringRef UTType;
     switch (format) {
         case SDImageFormatJPEG:
-            UTType = kUTTypeJPEG;
+            UTType = kSDUTTypeJPEG;
             break;
         case SDImageFormatPNG:
-            UTType = kUTTypePNG;
+            UTType = kSDUTTypePNG;
             break;
         case SDImageFormatGIF:
-            UTType = kUTTypeGIF;
+            UTType = kSDUTTypeGIF;
             break;
         case SDImageFormatTIFF:
-            UTType = kUTTypeTIFF;
+            UTType = kSDUTTypeTIFF;
             break;
         case SDImageFormatWebP:
             UTType = kSDUTTypeWebP;
@@ -108,14 +108,14 @@ + (nonnull CFStringRef)sd_UTTypeFromImageFormat:(SDImageFormat)format {
             UTType = kSDUTTypeHEIF;
             break;
         case SDImageFormatPDF:
-            UTType = kUTTypePDF;
+            UTType = kSDUTTypePDF;
             break;
         case SDImageFormatSVG:
-            UTType = kUTTypeScalableVectorGraphics;
+            UTType = kSDUTTypeSVG;
             break;
         default:
             // default is kUTTypeImage abstract type
-            UTType = kUTTypeImage;
+            UTType = kSDUTTypeImage;
             break;
     }
     return UTType;
@@ -126,13 +126,13 @@ + (SDImageFormat)sd_imageFormatFromUTType:(CFStringRef)uttype {
         return SDImageFormatUndefined;
     }
     SDImageFormat imageFormat;
-    if (CFStringCompare(uttype, kUTTypeJPEG, 0) == kCFCompareEqualTo) {
+    if (CFStringCompare(uttype, kSDUTTypeJPEG, 0) == kCFCompareEqualTo) {
         imageFormat = SDImageFormatJPEG;
-    } else if (CFStringCompare(uttype, kUTTypePNG, 0) == kCFCompareEqualTo) {
+    } else if (CFStringCompare(uttype, kSDUTTypePNG, 0) == kCFCompareEqualTo) {
         imageFormat = SDImageFormatPNG;
-    } else if (CFStringCompare(uttype, kUTTypeGIF, 0) == kCFCompareEqualTo) {
+    } else if (CFStringCompare(uttype, kSDUTTypeGIF, 0) == kCFCompareEqualTo) {
         imageFormat = SDImageFormatGIF;
-    } else if (CFStringCompare(uttype, kUTTypeTIFF, 0) == kCFCompareEqualTo) {
+    } else if (CFStringCompare(uttype, kSDUTTypeTIFF, 0) == kCFCompareEqualTo) {
         imageFormat = SDImageFormatTIFF;
     } else if (CFStringCompare(uttype, kSDUTTypeWebP, 0) == kCFCompareEqualTo) {
         imageFormat = SDImageFormatWebP;
@@ -140,9 +140,9 @@ + (SDImageFormat)sd_imageFormatFromUTType:(CFStringRef)uttype {
         imageFormat = SDImageFormatHEIC;
     } else if (CFStringCompare(uttype, kSDUTTypeHEIF, 0) == kCFCompareEqualTo) {
         imageFormat = SDImageFormatHEIF;
-    } else if (CFStringCompare(uttype, kUTTypePDF, 0) == kCFCompareEqualTo) {
+    } else if (CFStringCompare(uttype, kSDUTTypePDF, 0) == kCFCompareEqualTo) {
         imageFormat = SDImageFormatPDF;
-    } else if (CFStringCompare(uttype, kUTTypeScalableVectorGraphics, 0) == kCFCompareEqualTo) {
+    } else if (CFStringCompare(uttype, kSDUTTypeSVG, 0) == kCFCompareEqualTo) {
         imageFormat = SDImageFormatSVG;
     } else {
         imageFormat = SDImageFormatUndefined;
diff --git a/OpenBook/Pods/SDWebImage/SDWebImage/Core/NSImage+Compatibility.m b/OpenBook/Pods/SDWebImage/SDWebImage/Core/NSImage+Compatibility.m
index 7de0c703..ce67151e 100644
--- a/OpenBook/Pods/SDWebImage/SDWebImage/Core/NSImage+Compatibility.m
+++ b/OpenBook/Pods/SDWebImage/SDWebImage/Core/NSImage+Compatibility.m
@@ -35,8 +35,8 @@ - (CGFloat)scale {
     NSImageRep *imageRep = [self bestRepresentationForRect:imageRect context:nil hints:nil];
     CGFloat width = imageRep.size.width;
     CGFloat height = imageRep.size.height;
-    NSUInteger pixelWidth = imageRep.pixelsWide;
-    NSUInteger pixelHeight = imageRep.pixelsHigh;
+    CGFloat pixelWidth = (CGFloat)imageRep.pixelsWide;
+    CGFloat pixelHeight = (CGFloat)imageRep.pixelsHigh;
     if (width > 0 && height > 0) {
         CGFloat widthScale = pixelWidth / width;
         CGFloat heightScale = pixelHeight / height;
diff --git a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDAnimatedImage.m b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDAnimatedImage.m
index 6f3916ce..f98c4929 100644
--- a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDAnimatedImage.m
+++ b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDAnimatedImage.m
@@ -314,6 +314,10 @@ - (void)setSd_imageLoopCount:(NSUInteger)sd_imageLoopCount {
     return;
 }
 
+- (NSUInteger)sd_imageFrameCount {
+    return self.animatedImageFrameCount;
+}
+
 - (SDImageFormat)sd_imageFormat {
     return self.animatedImageFormat;
 }
diff --git a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDAnimatedImageRep.m b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDAnimatedImageRep.m
index 08317429..2ef3a88b 100644
--- a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDAnimatedImageRep.m
+++ b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDAnimatedImageRep.m
@@ -27,6 +27,12 @@ - (void)dealloc {
     }
 }
 
+- (instancetype)copyWithZone:(NSZone *)zone {
+  SDAnimatedImageRep *imageRep = [super copyWithZone:zone];
+  CFRetain(imageRep->_imageSource);
+  return imageRep;
+}
+
 // `NSBitmapImageRep`'s `imageRepWithData:` is not designed initializer
 + (instancetype)imageRepWithData:(NSData *)data {
     SDAnimatedImageRep *imageRep = [[SDAnimatedImageRep alloc] initWithData:data];
@@ -52,13 +58,13 @@ - (instancetype)initWithData:(NSData *)data {
         if (!type) {
             return self;
         }
-        if (CFStringCompare(type, kUTTypeGIF, 0) == kCFCompareEqualTo) {
+        if (CFStringCompare(type, kSDUTTypeGIF, 0) == kCFCompareEqualTo) {
             // GIF
             // Fix the `NSBitmapImageRep` GIF loop count calculation issue
             // Which will use 0 when there are no loop count information metadata in GIF data
             NSUInteger loopCount = [SDImageGIFCoder imageLoopCountWithSource:imageSource];
             [self setProperty:NSImageLoopCount withValue:@(loopCount)];
-        } else if (CFStringCompare(type, kUTTypePNG, 0) == kCFCompareEqualTo) {
+        } else if (CFStringCompare(type, kSDUTTypePNG, 0) == kCFCompareEqualTo) {
             // APNG
             // Do initialize about frame count, current frame/duration and loop count
             [self setProperty:NSImageFrameCount withValue:@(frameCount)];
@@ -100,10 +106,10 @@ - (void)setProperty:(NSBitmapImageRepPropertyKey)property withValue:(id)value {
         }
         NSUInteger index = [value unsignedIntegerValue];
         NSTimeInterval frameDuration = 0;
-        if (CFStringCompare(type, kUTTypeGIF, 0) == kCFCompareEqualTo) {
+        if (CFStringCompare(type, kSDUTTypeGIF, 0) == kCFCompareEqualTo) {
             // GIF
             frameDuration = [SDImageGIFCoder frameDurationAtIndex:index source:imageSource];
-        } else if (CFStringCompare(type, kUTTypePNG, 0) == kCFCompareEqualTo) {
+        } else if (CFStringCompare(type, kSDUTTypePNG, 0) == kCFCompareEqualTo) {
             // APNG
             frameDuration = [SDImageAPNGCoder frameDurationAtIndex:index source:imageSource];
         } else if (CFStringCompare(type, kSDUTTypeHEICS, 0) == kCFCompareEqualTo) {
diff --git a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageAPNGCoder.m b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageAPNGCoder.m
index 6581f30d..b262bd3b 100644
--- a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageAPNGCoder.m
+++ b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageAPNGCoder.m
@@ -7,6 +7,7 @@
  */
 
 #import "SDImageAPNGCoder.h"
+#import "SDImageIOAnimatedCoderInternal.h"
 #if SD_MAC
 #import <CoreServices/CoreServices.h>
 #else
@@ -31,7 +32,7 @@ + (SDImageFormat)imageFormat {
 }
 
 + (NSString *)imageUTType {
-    return (__bridge NSString *)kUTTypePNG;
+    return (__bridge NSString *)kSDUTTypePNG;
 }
 
 + (NSString *)dictionaryProperty {
diff --git a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageCache.m b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageCache.m
index c1f99a89..adb886db 100644
--- a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageCache.m
+++ b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageCache.m
@@ -382,6 +382,28 @@ - (nullable UIImage *)imageFromCacheForKey:(nullable NSString *)key {
 - (nullable UIImage *)imageFromCacheForKey:(nullable NSString *)key options:(SDImageCacheOptions)options context:(nullable SDWebImageContext *)context {
     // First check the in-memory cache...
     UIImage *image = [self imageFromMemoryCacheForKey:key];
+    if (image) {
+        if (options & SDImageCacheDecodeFirstFrameOnly) {
+            // Ensure static image
+            Class animatedImageClass = image.class;
+            if (image.sd_isAnimated || ([animatedImageClass isSubclassOfClass:[UIImage class]] && [animatedImageClass conformsToProtocol:@protocol(SDAnimatedImage)])) {
+#if SD_MAC
+                image = [[NSImage alloc] initWithCGImage:image.CGImage scale:image.scale orientation:kCGImagePropertyOrientationUp];
+#else
+                image = [[UIImage alloc] initWithCGImage:image.CGImage scale:image.scale orientation:image.imageOrientation];
+#endif
+            }
+        } else if (options & SDImageCacheMatchAnimatedImageClass) {
+            // Check image class matching
+            Class animatedImageClass = image.class;
+            Class desiredImageClass = context[SDWebImageContextAnimatedImageClass];
+            if (desiredImageClass && ![animatedImageClass isSubclassOfClass:desiredImageClass]) {
+                image = nil;
+            }
+        }
+    }
+    
+    // Since we don't need to query imageData, return image if exist
     if (image) {
         return image;
     }
diff --git a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageCacheConfig.h b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageCacheConfig.h
index f2d19203..468fa09e 100644
--- a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageCacheConfig.h
+++ b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageCacheConfig.h
@@ -57,7 +57,8 @@ typedef NS_ENUM(NSUInteger, SDImageCacheConfigExpireType) {
 /*
  * The option to control weak memory cache for images. When enable, `SDImageCache`'s memory cache will use a weak maptable to store the image at the same time when it stored to memory, and get removed at the same time.
  * However when memory warning is triggered, since the weak maptable does not hold a strong reference to image instance, even when the memory cache itself is purged, some images which are held strongly by UIImageViews or other live instances can be recovered again, to avoid later re-query from disk cache or network. This may be helpful for the case, for example, when app enter background and memory is purged, cause cell flashing after re-enter foreground.
- * Defaults to YES. You can change this option dynamically.
+ * When enabling this option, we will sync back the image from weak maptable to strong cache during next time top level `sd_setImage` function call.
+ * Defaults to NO (YES before 5.12.0 version). You can change this option dynamically.
  */
 @property (assign, nonatomic) BOOL shouldUseWeakMemoryCache;
 
diff --git a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageCacheConfig.m b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageCacheConfig.m
index ad5bcaad..fc022859 100644
--- a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageCacheConfig.m
+++ b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageCacheConfig.m
@@ -27,7 +27,7 @@ - (instancetype)init {
     if (self = [super init]) {
         _shouldDisableiCloud = YES;
         _shouldCacheImagesInMemory = YES;
-        _shouldUseWeakMemoryCache = YES;
+        _shouldUseWeakMemoryCache = NO;
         _shouldRemoveExpiredDataWhenEnterBackground = YES;
         _shouldRemoveExpiredDataWhenTerminate = YES;
         _diskCacheReadingOptions = 0;
diff --git a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageCoderHelper.m b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageCoderHelper.m
index 4244a924..56a645a9 100644
--- a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageCoderHelper.m
+++ b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageCoderHelper.m
@@ -135,7 +135,6 @@ + (UIImage *)animatedImageWithFrames:(NSArray<SDImageFrame *> *)frames {
         avgDuration = 0.1; // if it's a animated image but no duration, set it to default 100ms (this do not have that 10ms limit like GIF or WebP to allow custom coder provide the limit)
     }
     
-    __block NSUInteger index = 0;
     __block NSUInteger repeatCount = 1;
     __block UIImage *previousImage = animatedImages.firstObject;
     [animatedImages enumerateObjectsUsingBlock:^(UIImage * _Nonnull image, NSUInteger idx, BOOL * _Nonnull stop) {
@@ -149,15 +148,12 @@ + (UIImage *)animatedImageWithFrames:(NSArray<SDImageFrame *> *)frames {
             SDImageFrame *frame = [SDImageFrame frameWithImage:previousImage duration:avgDuration * repeatCount];
             [frames addObject:frame];
             repeatCount = 1;
-            index++;
         }
         previousImage = image;
-        // last one
-        if (idx == frameCount - 1) {
-            SDImageFrame *frame = [SDImageFrame frameWithImage:previousImage duration:avgDuration * repeatCount];
-            [frames addObject:frame];
-        }
     }];
+    // last one
+    SDImageFrame *frame = [SDImageFrame frameWithImage:previousImage duration:avgDuration * repeatCount];
+    [frames addObject:frame];
     
 #else
     
diff --git a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageGIFCoder.m b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageGIFCoder.m
index e4aaa5d9..a1838b16 100644
--- a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageGIFCoder.m
+++ b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageGIFCoder.m
@@ -7,6 +7,7 @@
  */
 
 #import "SDImageGIFCoder.h"
+#import "SDImageIOAnimatedCoderInternal.h"
 #if SD_MAC
 #import <CoreServices/CoreServices.h>
 #else
@@ -31,7 +32,7 @@ + (SDImageFormat)imageFormat {
 }
 
 + (NSString *)imageUTType {
-    return (__bridge NSString *)kUTTypeGIF;
+    return (__bridge NSString *)kSDUTTypeGIF;
 }
 
 + (NSString *)dictionaryProperty {
diff --git a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageIOAnimatedCoder.h b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageIOAnimatedCoder.h
index 3f4149a4..a314c57a 100644
--- a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageIOAnimatedCoder.h
+++ b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageIOAnimatedCoder.h
@@ -24,7 +24,7 @@
  */
 @property (class, readonly) SDImageFormat imageFormat;
 /**
- The supported image format UTI Type. Such as `kUTTypeGIF`.
+ The supported image format UTI Type. Such as `kSDUTTypeGIF`.
  This can be used for cases when we can not detect `SDImageFormat. Such as progressive decoding's hint format `kCGImageSourceTypeIdentifierHint`.
  @note Subclass override.
  */
diff --git a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageIOAnimatedCoder.m b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageIOAnimatedCoder.m
index bcb79c75..a7e08c19 100644
--- a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageIOAnimatedCoder.m
+++ b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageIOAnimatedCoder.m
@@ -191,8 +191,8 @@ + (UIImage *)createFrameAtIndex:(NSUInteger)index source:(CGImageSourceRef)sourc
     // Some options need to pass to `CGImageSourceCopyPropertiesAtIndex` before `CGImageSourceCreateImageAtIndex`, or ImageIO will ignore them because they parse once :)
     // Parse the image properties
     NSDictionary *properties = (__bridge_transfer NSDictionary *)CGImageSourceCopyPropertiesAtIndex(source, index, (__bridge CFDictionaryRef)options);
-    NSUInteger pixelWidth = [properties[(__bridge NSString *)kCGImagePropertyPixelWidth] unsignedIntegerValue];
-    NSUInteger pixelHeight = [properties[(__bridge NSString *)kCGImagePropertyPixelHeight] unsignedIntegerValue];
+    CGFloat pixelWidth = [properties[(__bridge NSString *)kCGImagePropertyPixelWidth] doubleValue];
+    CGFloat pixelHeight = [properties[(__bridge NSString *)kCGImagePropertyPixelHeight] doubleValue];
     CGImagePropertyOrientation exifOrientation = (CGImagePropertyOrientation)[properties[(__bridge NSString *)kCGImagePropertyOrientation] unsignedIntegerValue];
     if (!exifOrientation) {
         exifOrientation = kCGImagePropertyOrientationUp;
@@ -496,8 +496,8 @@ - (NSData *)encodedDataWithImage:(UIImage *)image format:(SDImageFormat)format o
         maxPixelSize = maxPixelSizeValue.CGSizeValue;
 #endif
     }
-    NSUInteger pixelWidth = CGImageGetWidth(imageRef);
-    NSUInteger pixelHeight = CGImageGetHeight(imageRef);
+    CGFloat pixelWidth = (CGFloat)CGImageGetWidth(imageRef);
+    CGFloat pixelHeight = (CGFloat)CGImageGetHeight(imageRef);
     CGFloat finalPixelSize = 0;
     if (maxPixelSize.width > 0 && maxPixelSize.height > 0 && pixelWidth > maxPixelSize.width && pixelHeight > maxPixelSize.height) {
         CGFloat pixelRatio = pixelWidth / pixelHeight;
diff --git a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageIOCoder.m b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageIOCoder.m
index d858125d..8e1199f4 100644
--- a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageIOCoder.m
+++ b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDImageIOCoder.m
@@ -250,8 +250,8 @@ - (NSData *)encodedDataWithImage:(UIImage *)image format:(SDImageFormat)format o
         maxPixelSize = maxPixelSizeValue.CGSizeValue;
 #endif
     }
-    NSUInteger pixelWidth = CGImageGetWidth(imageRef);
-    NSUInteger pixelHeight = CGImageGetHeight(imageRef);
+    CGFloat pixelWidth = (CGFloat)CGImageGetWidth(imageRef);
+    CGFloat pixelHeight = (CGFloat)CGImageGetHeight(imageRef);
     if (maxPixelSize.width > 0 && maxPixelSize.height > 0 && pixelWidth > maxPixelSize.width && pixelHeight > maxPixelSize.height) {
         CGFloat pixelRatio = pixelWidth / pixelHeight;
         CGFloat maxPixelSizeRatio = maxPixelSize.width / maxPixelSize.height;
diff --git a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageDownloader.h b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageDownloader.h
index 49ecd5d3..a2f50f46 100644
--- a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageDownloader.h
+++ b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageDownloader.h
@@ -157,7 +157,7 @@ typedef SDImageLoaderCompletedBlock SDWebImageDownloaderCompletedBlock;
 
 /**
  * Set the response modifier to modify the original download response during image load.
- * This request modifier method will be called for each downloading image response. Return the original response means no modification. Return nil will mark current download as cancelled.
+ * This response modifier method will be called for each downloading image response. Return the original response means no modification. Return nil will mark current download as cancelled.
  * Defaults to nil, means does not modify the original download response.
  * @note If you want to modify single response, consider using `SDWebImageContextDownloadResponseModifier` context option.
  */
diff --git a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageDownloader.m b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageDownloader.m
index 2eeb05e4..cd6b7966 100644
--- a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageDownloader.m
+++ b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageDownloader.m
@@ -349,6 +349,14 @@ - (nullable SDWebImageDownloadToken *)downloadImageWithURL:(nullable NSURL *)url
         operation.minimumProgressInterval = MIN(MAX(self.config.minimumProgressInterval, 0), 1);
     }
     
+    if ([operation respondsToSelector:@selector(setAcceptableStatusCodes:)]) {
+        operation.acceptableStatusCodes = self.config.acceptableStatusCodes;
+    }
+    
+    if ([operation respondsToSelector:@selector(setAcceptableContentTypes:)]) {
+        operation.acceptableContentTypes = self.config.acceptableContentTypes;
+    }
+    
     if (options & SDWebImageDownloaderHighPriority) {
         operation.queuePriority = NSOperationQueuePriorityHigh;
     } else if (options & SDWebImageDownloaderLowPriority) {
diff --git a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageDownloaderConfig.h b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageDownloaderConfig.h
index 5a8cf583..9d5e67bf 100644
--- a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageDownloaderConfig.h
+++ b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageDownloaderConfig.h
@@ -95,4 +95,19 @@ typedef NS_ENUM(NSInteger, SDWebImageDownloaderExecutionOrder) {
  */
 @property (nonatomic, copy, nullable) NSString *password;
 
+/**
+ * Set the acceptable HTTP Response status code. The status code which beyond the range will mark the download operation failed.
+ * For example, if we config [200, 400) but server response is 503, the download will fail with error code `SDWebImageErrorInvalidDownloadStatusCode`.
+ * Defaults to [200,400). Nil means no validation at all.
+ */
+@property (nonatomic, copy, nullable) NSIndexSet *acceptableStatusCodes;
+
+/**
+ * Set the acceptable HTTP Response content type. The content type beyond the set will mark the download operation failed.
+ * For example, if we config ["image/png"] but server response is "application/json", the download will fail with error code `SDWebImageErrorInvalidDownloadContentType`.
+ * Normally you don't need this for image format detection because we use image's data file signature magic bytes: https://en.wikipedia.org/wiki/List_of_file_signatures
+ * Defaults to nil. Nil means no validation at all.
+ */
+@property (nonatomic, copy, nullable) NSSet<NSString *> *acceptableContentTypes;
+
 @end
diff --git a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageDownloaderConfig.m b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageDownloaderConfig.m
index 1fc93308..6120bd8a 100644
--- a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageDownloaderConfig.m
+++ b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageDownloaderConfig.m
@@ -26,6 +26,7 @@ - (instancetype)init {
         _maxConcurrentDownloads = 6;
         _downloadTimeout = 15.0;
         _executionOrder = SDWebImageDownloaderFIFOExecutionOrder;
+        _acceptableStatusCodes = [NSIndexSet indexSetWithIndexesInRange:NSMakeRange(200, 100)];
     }
     return self;
 }
@@ -41,6 +42,8 @@ - (id)copyWithZone:(NSZone *)zone {
     config.urlCredential = self.urlCredential;
     config.username = self.username;
     config.password = self.password;
+    config.acceptableStatusCodes = self.acceptableStatusCodes;
+    config.acceptableContentTypes = self.acceptableContentTypes;
     
     return config;
 }
diff --git a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageDownloaderOperation.h b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageDownloaderOperation.h
index 5fc19289..1cd2a50d 100644
--- a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageDownloaderOperation.h
+++ b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageDownloaderOperation.h
@@ -37,8 +37,12 @@
 @optional
 @property (strong, nonatomic, readonly, nullable) NSURLSessionTask *dataTask;
 @property (strong, nonatomic, readonly, nullable) NSURLSessionTaskMetrics *metrics API_AVAILABLE(macosx(10.12), ios(10.0), watchos(3.0), tvos(10.0));
+
+// These operation-level config was inherited from downloader. See `SDWebImageDownloaderConfig` for documentation.
 @property (strong, nonatomic, nullable) NSURLCredential *credential;
 @property (assign, nonatomic) double minimumProgressInterval;
+@property (copy, nonatomic, nullable) NSIndexSet *acceptableStatusCodes;
+@property (copy, nonatomic, nullable) NSSet<NSString *> *acceptableContentTypes;
 
 @end
 
@@ -85,6 +89,21 @@
  */
 @property (assign, nonatomic) double minimumProgressInterval;
 
+/**
+ * Set the acceptable HTTP Response status code. The status code which beyond the range will mark the download operation failed.
+ * For example, if we config [200, 400) but server response is 503, the download will fail with error code `SDWebImageErrorInvalidDownloadStatusCode`.
+ * Defaults to [200,400). Nil means no validation at all.
+ */
+@property (copy, nonatomic, nullable) NSIndexSet *acceptableStatusCodes;
+
+/**
+ * Set the acceptable HTTP Response content type. The content type beyond the set will mark the download operation failed.
+ * For example, if we config ["image/png"] but server response is "application/json", the download will fail with error code `SDWebImageErrorInvalidDownloadContentType`.
+ * Normally you don't need this for image format detection because we use image's data file signature magic bytes: https://en.wikipedia.org/wiki/List_of_file_signatures
+ * Defaults to nil. Nil means no validation at all.
+ */
+@property (copy, nonatomic, nullable) NSSet<NSString *> *acceptableContentTypes;
+
 /**
  * The options for the receiver.
  */
diff --git a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageDownloaderOperation.m b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageDownloaderOperation.m
index 1de1e7e9..446c36db 100644
--- a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageDownloaderOperation.m
+++ b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageDownloaderOperation.m
@@ -191,6 +191,7 @@ - (void)start {
             }
             if (cachedResponse) {
                 self.cachedData = cachedResponse.data;
+                self.response = cachedResponse.response;
             }
         }
         
@@ -323,7 +324,9 @@ - (void)URLSession:(NSURLSession *)session
         response = [self.responseModifier modifiedResponseWithResponse:response];
         if (!response) {
             valid = NO;
-            self.responseError = [NSError errorWithDomain:SDWebImageErrorDomain code:SDWebImageErrorInvalidDownloadResponse userInfo:@{NSLocalizedDescriptionKey : @"Download marked as failed because response is nil"}];
+            self.responseError = [NSError errorWithDomain:SDWebImageErrorDomain
+                                                     code:SDWebImageErrorInvalidDownloadResponse
+                                                 userInfo:@{NSLocalizedDescriptionKey : @"Download marked as failed because response is nil"}];
         }
     }
     
@@ -332,18 +335,42 @@ - (void)URLSession:(NSURLSession *)session
     self.expectedSize = expected;
     self.response = response;
     
-    NSInteger statusCode = [response respondsToSelector:@selector(statusCode)] ? ((NSHTTPURLResponse *)response).statusCode : 200;
-    // Status code should between [200,400)
-    BOOL statusCodeValid = statusCode >= 200 && statusCode < 400;
+    // Check status code valid (defaults [200,400))
+    NSInteger statusCode = [response isKindOfClass:NSHTTPURLResponse.class] ? ((NSHTTPURLResponse *)response).statusCode : 0;
+    BOOL statusCodeValid = YES;
+    if (valid && statusCode > 0 && self.acceptableStatusCodes) {
+        statusCodeValid = [self.acceptableStatusCodes containsIndex:statusCode];
+    }
     if (!statusCodeValid) {
         valid = NO;
-        self.responseError = [NSError errorWithDomain:SDWebImageErrorDomain code:SDWebImageErrorInvalidDownloadStatusCode userInfo:@{NSLocalizedDescriptionKey : @"Download marked as failed because response status code is not in 200-400", SDWebImageErrorDownloadStatusCodeKey : @(statusCode)}];
+        self.responseError = [NSError errorWithDomain:SDWebImageErrorDomain
+                                                 code:SDWebImageErrorInvalidDownloadStatusCode
+                                             userInfo:@{NSLocalizedDescriptionKey : [NSString stringWithFormat:@"Download marked as failed because of invalid response status code %ld", (long)statusCode],
+                                                        SDWebImageErrorDownloadStatusCodeKey : @(statusCode),
+                                                        SDWebImageErrorDownloadResponseKey : response}];
+    }
+    // Check content type valid (defaults nil)
+    NSString *contentType = [response isKindOfClass:NSHTTPURLResponse.class] ? ((NSHTTPURLResponse *)response).MIMEType : nil;
+    BOOL contentTypeValid = YES;
+    if (valid && contentType.length > 0 && self.acceptableContentTypes) {
+        contentTypeValid = [self.acceptableContentTypes containsObject:contentType];
+    }
+    if (!contentTypeValid) {
+        valid = NO;
+        self.responseError = [NSError errorWithDomain:SDWebImageErrorDomain
+                                                 code:SDWebImageErrorInvalidDownloadContentType
+                                             userInfo:@{NSLocalizedDescriptionKey : [NSString stringWithFormat:@"Download marked as failed because of invalid response content type %@", contentType],
+                                                        SDWebImageErrorDownloadContentTypeKey : contentType,
+                                                        SDWebImageErrorDownloadResponseKey : response}];
     }
     //'304 Not Modified' is an exceptional one
     //URLSession current behavior will return 200 status code when the server respond 304 and URLCache hit. But this is not a standard behavior and we just add a check
-    if (statusCode == 304 && !self.cachedData) {
+    if (valid && statusCode == 304 && !self.cachedData) {
         valid = NO;
-        self.responseError = [NSError errorWithDomain:SDWebImageErrorDomain code:SDWebImageErrorCacheNotModified userInfo:@{NSLocalizedDescriptionKey : @"Download response status code is 304 not modified and ignored"}];
+        self.responseError = [NSError errorWithDomain:SDWebImageErrorDomain
+                                                 code:SDWebImageErrorCacheNotModified
+                                             userInfo:@{NSLocalizedDescriptionKey: @"Download response status code is 304 not modified and ignored",
+                                                        SDWebImageErrorDownloadResponseKey : response}];
     }
     
     if (valid) {
@@ -476,7 +503,10 @@ - (void)URLSession:(NSURLSession *)session task:(NSURLSessionTask *)task didComp
                  *  then we should check if the cached data is equal to image data
                  */
                 if (self.options & SDWebImageDownloaderIgnoreCachedResponse && [self.cachedData isEqualToData:imageData]) {
-                    self.responseError = [NSError errorWithDomain:SDWebImageErrorDomain code:SDWebImageErrorCacheNotModified userInfo:@{NSLocalizedDescriptionKey : @"Downloaded image is not modified and ignored"}];
+                    self.responseError = [NSError errorWithDomain:SDWebImageErrorDomain
+                                                             code:SDWebImageErrorCacheNotModified
+                                                         userInfo:@{NSLocalizedDescriptionKey : @"Downloaded image is not modified and ignored",
+                                                                    SDWebImageErrorDownloadResponseKey : self.response}];
                     // call completion block with not modified error
                     [self callCompletionBlocksWithError:self.responseError];
                     [self done];
@@ -535,7 +565,9 @@ - (void)URLSession:(NSURLSession *)session task:(NSURLSessionTask *)task didRece
                 credential = self.credential;
                 disposition = NSURLSessionAuthChallengeUseCredential;
             } else {
-                disposition = NSURLSessionAuthChallengeCancelAuthenticationChallenge;
+                // Web Server like Nginx can set `ssl_verify_client` to optional but not always on
+                // We'd better use default handling here
+                disposition = NSURLSessionAuthChallengePerformDefaultHandling;
             }
         } else {
             disposition = NSURLSessionAuthChallengeCancelAuthenticationChallenge;
diff --git a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageError.h b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageError.h
index 2b412010..bb91d0bd 100644
--- a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageError.h
+++ b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageError.h
@@ -11,8 +11,12 @@
 
 FOUNDATION_EXPORT NSErrorDomain const _Nonnull SDWebImageErrorDomain;
 
+/// The response instance for invalid download response (NSURLResponse *)
+FOUNDATION_EXPORT NSErrorUserInfoKey const _Nonnull SDWebImageErrorDownloadResponseKey;
 /// The HTTP status code for invalid download response (NSNumber *)
 FOUNDATION_EXPORT NSErrorUserInfoKey const _Nonnull SDWebImageErrorDownloadStatusCodeKey;
+/// The HTTP MIME content type for invalid download response (NSString *)
+FOUNDATION_EXPORT NSErrorUserInfoKey const _Nonnull SDWebImageErrorDownloadContentTypeKey;
 
 /// SDWebImage error domain and codes
 typedef NS_ERROR_ENUM(SDWebImageErrorDomain, SDWebImageError) {
@@ -24,4 +28,5 @@ typedef NS_ERROR_ENUM(SDWebImageErrorDomain, SDWebImageError) {
     SDWebImageErrorInvalidDownloadStatusCode = 2001, // The image download response a invalid status code. You can check the status code in error's userInfo under `SDWebImageErrorDownloadStatusCodeKey`
     SDWebImageErrorCancelled = 2002, // The image loading operation is cancelled before finished, during either async disk cache query, or waiting before actual network request. For actual network request error, check `NSURLErrorDomain` error domain and code.
     SDWebImageErrorInvalidDownloadResponse = 2003, // When using response modifier, the modified download response is nil and marked as failed.
+    SDWebImageErrorInvalidDownloadContentType = 2004, // The image download response a invalid content type. You can check the MIME content type in error's userInfo under `SDWebImageErrorDownloadContentTypeKey`
 };
diff --git a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageError.m b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageError.m
index 6d174769..bd0d17ad 100644
--- a/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageError.m
+++ b/OpenBook/Pods/SDWebImage/SDWebImage/Core/SDWebImageError.m
@@ -10,4 +10,7 @@
 #import "SDWebImageError.h"
 
 NSErrorDomain const _Nonnull SDWebImageErrorDomain = @"SDWebImageErrorDomain";
+
+NSErrorUserInfoKey const _Nonnull SDWebImageErrorDownloadResponseKey = @"SDWebImageErrorDownloadResponseKey";
 NSErrorUserInfoKey const _Nonnull SDWebImageErrorDownloadStatusCodeKey = @"SDWebImageErrorDownloadStatusCodeKey";
+NSErrorUserInfoKey const _Nonnull SDWebImageErrorDownloadContentTypeKey = @"SDWebImageErrorDownloadContentTypeKey";
diff --git a/OpenBook/Pods/SDWebImage/SDWebImage/Core/UIImage+MemoryCacheCost.m b/OpenBook/Pods/SDWebImage/SDWebImage/Core/UIImage+MemoryCacheCost.m
index b0883b1f..b9365009 100644
--- a/OpenBook/Pods/SDWebImage/SDWebImage/Core/UIImage+MemoryCacheCost.m
+++ b/OpenBook/Pods/SDWebImage/SDWebImage/Core/UIImage+MemoryCacheCost.m
@@ -20,7 +20,8 @@ FOUNDATION_STATIC_INLINE NSUInteger SDMemoryCacheCostForImage(UIImage *image) {
 #if SD_MAC
     frameCount = 1;
 #elif SD_UIKIT || SD_WATCH
-    frameCount = image.images.count > 0 ? image.images.count : 1;
+    // Filter the same frame in `_UIAnimatedImage`.
+    frameCount = image.images.count > 1 ? [NSSet setWithArray:image.images].count : 1;
 #endif
     NSUInteger cost = bytesPerFrame * frameCount;
     return cost;
diff --git a/OpenBook/Pods/SDWebImage/SDWebImage/Core/UIImage+Metadata.h b/OpenBook/Pods/SDWebImage/SDWebImage/Core/UIImage+Metadata.h
index 8328c261..6a278e2e 100644
--- a/OpenBook/Pods/SDWebImage/SDWebImage/Core/UIImage+Metadata.h
+++ b/OpenBook/Pods/SDWebImage/SDWebImage/Core/UIImage+Metadata.h
@@ -20,12 +20,23 @@
  * For animated image format, 0 means infinite looping.
  * Note that because of the limitations of categories this property can get out of sync if you create another instance with CGImage or other methods.
  * AppKit:
- * NSImage currently only support animated via GIF imageRep unlike UIImage.
- * The getter of this property will get the loop count from GIF imageRep
- * The setter of this property will set the loop count from GIF imageRep
+ * NSImage currently only support animated via `NSBitmapImageRep`(GIF) or `SDAnimatedImageRep`(APNG/GIF/WebP) unlike UIImage.
+ * The getter of this property will get the loop count from animated imageRep
+ * The setter of this property will set the loop count from animated imageRep
  */
 @property (nonatomic, assign) NSUInteger sd_imageLoopCount;
 
+/**
+ * UIKit:
+ * Returns the `images`'s count by unapply the patch for the different frame durations. Which matches the real visible frame count when displaying on UIImageView.
+ * See more in `SDImageCoderHelper.animatedImageWithFrames`.
+ * Returns 1 for static image.
+ * AppKit:
+ * Returns the underlaying `NSBitmapImageRep` or `SDAnimatedImageRep` frame count.
+ * Returns 1 for static image.
+ */
+@property (nonatomic, assign, readonly) NSUInteger sd_imageFrameCount;
+
 /**
  * UIKit:
  * Check the `images` array property.
diff --git a/OpenBook/Pods/SDWebImage/SDWebImage/Core/UIImage+Metadata.m b/OpenBook/Pods/SDWebImage/SDWebImage/Core/UIImage+Metadata.m
index 09724236..b8f4fd82 100644
--- a/OpenBook/Pods/SDWebImage/SDWebImage/Core/UIImage+Metadata.m
+++ b/OpenBook/Pods/SDWebImage/SDWebImage/Core/UIImage+Metadata.m
@@ -29,6 +29,32 @@ - (void)setSd_imageLoopCount:(NSUInteger)sd_imageLoopCount {
     objc_setAssociatedObject(self, @selector(sd_imageLoopCount), value, OBJC_ASSOCIATION_RETAIN_NONATOMIC);
 }
 
+- (NSUInteger)sd_imageFrameCount {
+    NSArray<UIImage *> *animatedImages = self.images;
+    if (!animatedImages || animatedImages.count <= 1) {
+        return 1;
+    }
+    NSNumber *value = objc_getAssociatedObject(self, @selector(sd_imageFrameCount));
+    if ([value isKindOfClass:[NSNumber class]]) {
+        return [value unsignedIntegerValue];
+    }
+    __block NSUInteger frameCount = 1;
+    __block UIImage *previousImage = animatedImages.firstObject;
+    [animatedImages enumerateObjectsUsingBlock:^(UIImage * _Nonnull image, NSUInteger idx, BOOL * _Nonnull stop) {
+        // ignore first
+        if (idx == 0) {
+            return;
+        }
+        if (![image isEqual:previousImage]) {
+            frameCount++;
+        }
+        previousImage = image;
+    }];
+    objc_setAssociatedObject(self, @selector(sd_imageFrameCount), @(frameCount), OBJC_ASSOCIATION_RETAIN_NONATOMIC);
+    
+    return frameCount;
+}
+
 - (BOOL)sd_isAnimated {
     return (self.images != nil);
 }
@@ -87,6 +113,19 @@ - (void)setSd_imageLoopCount:(NSUInteger)sd_imageLoopCount {
     }
 }
 
+- (NSUInteger)sd_imageFrameCount {
+    NSRect imageRect = NSMakeRect(0, 0, self.size.width, self.size.height);
+    NSImageRep *imageRep = [self bestRepresentationForRect:imageRect context:nil hints:nil];
+    NSBitmapImageRep *bitmapImageRep;
+    if ([imageRep isKindOfClass:[NSBitmapImageRep class]]) {
+        bitmapImageRep = (NSBitmapImageRep *)imageRep;
+    }
+    if (bitmapImageRep) {
+        return [[bitmapImageRep valueForProperty:NSImageFrameCount] unsignedIntegerValue];
+    }
+    return 1;
+}
+
 - (BOOL)sd_isAnimated {
     BOOL isAnimated = NO;
     NSRect imageRect = NSMakeRect(0, 0, self.size.width, self.size.height);
diff --git a/OpenBook/Pods/SDWebImage/SDWebImage/Core/UIView+WebCache.m b/OpenBook/Pods/SDWebImage/SDWebImage/Core/UIView+WebCache.m
index d559b4cc..35f10362 100644
--- a/OpenBook/Pods/SDWebImage/SDWebImage/Core/UIView+WebCache.m
+++ b/OpenBook/Pods/SDWebImage/SDWebImage/Core/UIView+WebCache.m
@@ -12,6 +12,7 @@
 #import "SDWebImageError.h"
 #import "SDInternalMacros.h"
 #import "SDWebImageTransitionInternal.h"
+#import "SDImageCache.h"
 
 const int64_t SDWebImageProgressUnitCountUnknown = 1LL;
 
@@ -71,7 +72,28 @@ - (void)sd_internalSetImageWithURL:(nullable NSURL *)url
     [self sd_cancelImageLoadOperationWithKey:validOperationKey];
     self.sd_imageURL = url;
     
+    SDWebImageManager *manager = context[SDWebImageContextCustomManager];
+    if (!manager) {
+        manager = [SDWebImageManager sharedManager];
+    } else {
+        // remove this manager to avoid retain cycle (manger -> loader -> operation -> context -> manager)
+        SDWebImageMutableContext *mutableContext = [context mutableCopy];
+        mutableContext[SDWebImageContextCustomManager] = nil;
+        context = [mutableContext copy];
+    }
+    
+    BOOL shouldUseWeakCache = NO;
+    if ([manager.imageCache isKindOfClass:SDImageCache.class]) {
+        shouldUseWeakCache = ((SDImageCache *)manager.imageCache).config.shouldUseWeakMemoryCache;
+    }
     if (!(options & SDWebImageDelayPlaceholder)) {
+        if (shouldUseWeakCache) {
+            NSString *key = [manager cacheKeyForURL:url context:context];
+            // call memory cache to trigger weak cache sync logic, ignore the return value and go on normal query
+            // this unfortunately will cause twice memory cache query, but it's fast enough
+            // in the future the weak cache feature may be re-design or removed
+            [((SDImageCache *)manager.imageCache) imageFromMemoryCacheForKey:key];
+        }
         dispatch_main_async_safe(^{
             [self sd_setImage:placeholder imageData:nil basedOnClassOrViaCustomSetImageBlock:setImageBlock cacheType:SDImageCacheTypeNone imageURL:url];
         });
@@ -90,15 +112,6 @@ - (void)sd_internalSetImageWithURL:(nullable NSURL *)url
         [self sd_startImageIndicator];
         id<SDWebImageIndicator> imageIndicator = self.sd_imageIndicator;
 #endif
-        SDWebImageManager *manager = context[SDWebImageContextCustomManager];
-        if (!manager) {
-            manager = [SDWebImageManager sharedManager];
-        } else {
-            // remove this manager to avoid retain cycle (manger -> loader -> operation -> context -> manager)
-            SDWebImageMutableContext *mutableContext = [context mutableCopy];
-            mutableContext[SDWebImageContextCustomManager] = nil;
-            context = [mutableContext copy];
-        }
         
         SDImageLoaderProgressBlock combinedProgressBlock = ^(NSInteger receivedSize, NSInteger expectedSize, NSURL * _Nullable targetURL) {
             if (imageProgress) {
@@ -283,7 +296,7 @@ - (void)sd_setImage:(UIImage *)image imageData:(NSData *)imageData basedOnClassO
             if (transition.prepares) {
                 transition.prepares(view, image, imageData, cacheType, imageURL);
             }
-        } completion:^(BOOL finished) {
+        } completion:^(BOOL tempFinished) {
             [UIView transitionWithView:view duration:transition.duration options:transition.animationOptions animations:^{
                 if (!view.sd_latestOperationKey || ![originalOperationKey isEqualToString:view.sd_latestOperationKey]) {
                     return;
diff --git a/OpenBook/Pods/SDWebImage/SDWebImage/Private/SDDisplayLink.m b/OpenBook/Pods/SDWebImage/SDWebImage/Private/SDDisplayLink.m
index 8ff0fc16..1dcfd99f 100644
--- a/OpenBook/Pods/SDWebImage/SDWebImage/Private/SDDisplayLink.m
+++ b/OpenBook/Pods/SDWebImage/SDWebImage/Private/SDDisplayLink.m
@@ -89,7 +89,12 @@ - (CFTimeInterval)duration {
 #elif SD_IOS || SD_TV
 #pragma clang diagnostic push
 #pragma clang diagnostic ignored "-Wdeprecated-declarations"
-    NSTimeInterval duration = self.displayLink.duration * self.displayLink.frameInterval;
+    NSTimeInterval duration = 0;
+    if (@available(iOS 10.0, tvOS 10.0, *)) {
+        duration = self.displayLink.targetTimestamp - CACurrentMediaTime();
+    } else {
+        duration = self.displayLink.duration * self.displayLink.frameInterval;
+    }
 #pragma clang diagnostic pop
 #else
     NSTimeInterval duration = 0;
@@ -98,7 +103,7 @@ - (CFTimeInterval)duration {
         duration = nextFireDate - self.currentFireDate;
     }
 #endif
-    if (duration == 0) {
+    if (duration <= 0) {
         duration = kSDDisplayLinkInterval;
     }
     return duration;
diff --git a/OpenBook/Pods/SDWebImage/SDWebImage/Private/SDImageIOAnimatedCoderInternal.h b/OpenBook/Pods/SDWebImage/SDWebImage/Private/SDImageIOAnimatedCoderInternal.h
index 022cf7dc..f74be7e5 100644
--- a/OpenBook/Pods/SDWebImage/SDWebImage/Private/SDImageIOAnimatedCoderInternal.h
+++ b/OpenBook/Pods/SDWebImage/SDWebImage/Private/SDImageIOAnimatedCoderInternal.h
@@ -10,12 +10,20 @@
 #import "SDImageIOAnimatedCoder.h"
 
 // AVFileTypeHEIC/AVFileTypeHEIF is defined in AVFoundation via iOS 11, we use this without import AVFoundation
-#define kSDUTTypeHEIC ((__bridge CFStringRef)@"public.heic")
-#define kSDUTTypeHEIF ((__bridge CFStringRef)@"public.heif")
+#define kSDUTTypeHEIC  ((__bridge CFStringRef)@"public.heic")
+#define kSDUTTypeHEIF  ((__bridge CFStringRef)@"public.heif")
 // HEIC Sequence (Animated Image)
 #define kSDUTTypeHEICS ((__bridge CFStringRef)@"public.heics")
-// kUTTypeWebP seems not defined in public UTI framework, Apple use the hardcode string, we define them :)
-#define kSDUTTypeWebP ((__bridge CFStringRef)@"org.webmproject.webp")
+// kSDUTTypeWebP seems not defined in public UTI framework, Apple use the hardcode string, we define them :)
+#define kSDUTTypeWebP  ((__bridge CFStringRef)@"org.webmproject.webp")
+
+#define kSDUTTypeImage ((__bridge CFStringRef)@"public.image")
+#define kSDUTTypeJPEG  ((__bridge CFStringRef)@"public.jpeg")
+#define kSDUTTypePNG   ((__bridge CFStringRef)@"public.png")
+#define kSDUTTypeTIFF  ((__bridge CFStringRef)@"public.tiff")
+#define kSDUTTypeSVG   ((__bridge CFStringRef)@"public.svg-image")
+#define kSDUTTypeGIF   ((__bridge CFStringRef)@"com.compuserve.gif")
+#define kSDUTTypePDF   ((__bridge CFStringRef)@"com.adobe.pdf")
 
 @interface SDImageIOAnimatedCoder ()
 
diff --git a/OpenBook/Pods/SwiftLint/swiftlint b/OpenBook/Pods/SwiftLint/swiftlint
index 6837f762..05399be1 100755
Binary files a/OpenBook/Pods/SwiftLint/swiftlint and b/OpenBook/Pods/SwiftLint/swiftlint differ
diff --git a/OpenBook/Pods/SwiftMessages/SwiftMessages/KeyboardTrackingView.swift b/OpenBook/Pods/SwiftMessages/SwiftMessages/KeyboardTrackingView.swift
index 6af384a6..301d969c 100644
--- a/OpenBook/Pods/SwiftMessages/SwiftMessages/KeyboardTrackingView.swift
+++ b/OpenBook/Pods/SwiftMessages/SwiftMessages/KeyboardTrackingView.swift
@@ -44,6 +44,18 @@ open class KeyboardTrackingView: UIView {
     /// The margin to maintain between the keyboard and the top of the view.
     @IBInspectable open var topMargin: CGFloat = 0
 
+    /// Subclasses can override this to do something before the change.
+    open func willChange(
+        change: KeyboardTrackingView.Change,
+        userInfo: [AnyHashable : Any]
+    ) {}
+
+    /// Subclasses can override this to do something after the change.
+    open func didChange(
+        change: KeyboardTrackingView.Change,
+        userInfo: [AnyHashable : Any]
+    ) {}
+
     override public init(frame: CGRect) {
         super.init(frame: frame)
         postInit()
@@ -101,11 +113,12 @@ open class KeyboardTrackingView: UIView {
         guard !(isPaused || isAutomaticallyPaused),
             let userInfo = (notification as NSNotification).userInfo,
             let value = userInfo[UIResponder.keyboardFrameEndUserInfoKey] as? NSValue else { return }
+        willChange(change: change, userInfo: userInfo)
+        delegate?.keyboardTrackingViewWillChange(change: change, userInfo: userInfo)
         let keyboardRect = value.cgRectValue
         let thisRect = convert(bounds, to: nil)
         let newHeight = max(0, thisRect.maxY - keyboardRect.minY) + topMargin
         guard heightConstraint.constant != newHeight else { return }
-        delegate?.keyboardTrackingViewWillChange(change: change, userInfo: userInfo)
         animateKeyboardChange(change: change, height: newHeight, userInfo: userInfo)
     }
 
@@ -115,6 +128,7 @@ open class KeyboardTrackingView: UIView {
             let curveNumber = userInfo[UIResponder.keyboardAnimationCurveUserInfoKey] as? NSNumber {
             CATransaction.begin()
             CATransaction.setCompletionBlock {
+                self.didChange(change: change, userInfo: userInfo)
                 self.delegate?.keyboardTrackingViewDidChange(change: change, userInfo: userInfo)
             }
             UIView.beginAnimations(nil, context: nil)
diff --git a/OpenBook/Pods/SwiftMessages/SwiftMessages/MaskingView.swift b/OpenBook/Pods/SwiftMessages/SwiftMessages/MaskingView.swift
index 0ce4c428..d6313427 100644
--- a/OpenBook/Pods/SwiftMessages/SwiftMessages/MaskingView.swift
+++ b/OpenBook/Pods/SwiftMessages/SwiftMessages/MaskingView.swift
@@ -65,6 +65,15 @@ class MaskingView: PassthroughView {
         guard let keyboardTrackingView = keyboardTrackingView,
             view != keyboardTrackingView,
             view != backgroundView else { return }
-        keyboardTrackingView.topAnchor.constraint(greaterThanOrEqualTo: view.bottomAnchor).with(priority: UILayoutPriority(250)).isActive = true
+        let offset: CGFloat
+        if let adjustable = view as? MarginAdjustable {
+            offset = -adjustable.bounceAnimationOffset
+        } else {
+            offset = 0
+        }
+        keyboardTrackingView.topAnchor.constraint(
+            greaterThanOrEqualTo: view.bottomAnchor,
+            constant: offset
+        ).with(priority: UILayoutPriority(250)).isActive = true
     }
 }
diff --git a/OpenBook/Pods/SwiftMessages/SwiftMessages/MessageView.swift b/OpenBook/Pods/SwiftMessages/SwiftMessages/MessageView.swift
index d9be31d9..c71141a6 100644
--- a/OpenBook/Pods/SwiftMessages/SwiftMessages/MessageView.swift
+++ b/OpenBook/Pods/SwiftMessages/SwiftMessages/MessageView.swift
@@ -251,24 +251,72 @@ extension MessageView {
      */
     public func configureTheme(_ theme: Theme, iconStyle: IconStyle = .default) {
         let iconImage = iconStyle.image(theme: theme)
+        let backgroundColor: UIColor
+        let foregroundColor: UIColor
+        let defaultBackgroundColor: UIColor
+        let defaultForegroundColor: UIColor
         switch theme {
         case .info:
-            let backgroundColor = UIColor(red: 225.0/255.0, green: 225.0/255.0, blue: 225.0/255.0, alpha: 1.0)
-            let foregroundColor = UIColor.darkText
-            configureTheme(backgroundColor: backgroundColor, foregroundColor: foregroundColor, iconImage: iconImage)
+            defaultBackgroundColor = UIColor(red: 225.0/255.0, green: 225.0/255.0, blue: 225.0/255.0, alpha: 1.0)
+            defaultForegroundColor = UIColor.darkText
         case .success:
-            let backgroundColor = UIColor(red: 97.0/255.0, green: 161.0/255.0, blue: 23.0/255.0, alpha: 1.0)
-            let foregroundColor = UIColor.white
-            configureTheme(backgroundColor: backgroundColor, foregroundColor: foregroundColor, iconImage: iconImage)
+            defaultBackgroundColor = UIColor(red: 97.0/255.0, green: 161.0/255.0, blue: 23.0/255.0, alpha: 1.0)
+            defaultForegroundColor = UIColor.white
         case .warning:
-            let backgroundColor = UIColor(red: 238.0/255.0, green: 189.0/255.0, blue: 34.0/255.0, alpha: 1.0)
-            let foregroundColor = UIColor.white
-            configureTheme(backgroundColor: backgroundColor, foregroundColor: foregroundColor, iconImage: iconImage)
+            defaultBackgroundColor = UIColor(red: 246.0/255.0, green: 197.0/255.0, blue: 44.0/255.0, alpha: 1.0)
+            defaultForegroundColor = UIColor.white
         case .error:
-            let backgroundColor = UIColor(red: 249.0/255.0, green: 66.0/255.0, blue: 47.0/255.0, alpha: 1.0)
-            let foregroundColor = UIColor.white
-            configureTheme(backgroundColor: backgroundColor, foregroundColor: foregroundColor, iconImage: iconImage)
+            defaultBackgroundColor = UIColor(red: 249.0/255.0, green: 66.0/255.0, blue: 47.0/255.0, alpha: 1.0)
+            defaultForegroundColor = UIColor.white
         }
+        if #available(iOS 13.0, *) {
+            switch theme {
+            case .info:
+                backgroundColor = UIColor {
+                    switch $0.userInterfaceStyle {
+                    case .dark, .unspecified: return UIColor(red: 125/255.0, green: 125/255.0, blue: 125/255.0, alpha: 1.0)
+                    case .light: fallthrough
+                    @unknown default:
+                        return defaultBackgroundColor
+                    }
+                }
+                foregroundColor = .label
+            case .success:
+                backgroundColor = UIColor {
+                    switch $0.userInterfaceStyle {
+                    case .dark, .unspecified: return UIColor(red: 55/255.0, green: 122/255.0, blue: 0/255.0, alpha: 1.0)
+                    case .light: fallthrough
+                    @unknown default:
+                        return defaultBackgroundColor
+                    }
+                }
+                foregroundColor = .white
+            case .warning:
+                backgroundColor = UIColor {
+                    switch $0.userInterfaceStyle {
+                    case .dark, .unspecified: return UIColor(red: 239/255.0, green: 184/255.0, blue: 10/255.0, alpha: 1.0)
+                    case .light: fallthrough
+                    @unknown default:
+                        return defaultBackgroundColor
+                    }
+                }
+                foregroundColor = .white
+            case .error:
+                backgroundColor = UIColor {
+                    switch $0.userInterfaceStyle {
+                    case .dark, .unspecified: return UIColor(red: 195/255.0, green: 12/255.0, blue: 12/255.0, alpha: 1.0)
+                    case .light: fallthrough
+                    @unknown default:
+                        return defaultBackgroundColor
+                    }
+                }
+                foregroundColor = .white
+            }
+        } else {
+            backgroundColor = defaultBackgroundColor
+            foregroundColor = defaultForegroundColor
+        }
+        configureTheme(backgroundColor: backgroundColor, foregroundColor: foregroundColor, iconImage: iconImage)
     }
     
     /**
diff --git a/OpenBook/Pods/SwiftMessages/SwiftMessages/SwiftMessages.Config+Extensions.swift b/OpenBook/Pods/SwiftMessages/SwiftMessages/SwiftMessages.Config+Extensions.swift
index 9682b5b9..ac0475da 100644
--- a/OpenBook/Pods/SwiftMessages/SwiftMessages/SwiftMessages.Config+Extensions.swift
+++ b/OpenBook/Pods/SwiftMessages/SwiftMessages/SwiftMessages.Config+Extensions.swift
@@ -20,7 +20,7 @@ extension SwiftMessages.Config {
     @available (iOS 13.0, *)
     var windowScene: UIWindowScene? {
         switch presentationContext {
-        case .windowScene(let scene, _): return scene
+        case .windowScene(let scene, _): return scene as? UIWindowScene
         default:
             #if SWIFTMESSAGES_APP_EXTENSIONS
             return nil
diff --git a/OpenBook/Pods/SwiftMessages/SwiftMessages/SwiftMessages.swift b/OpenBook/Pods/SwiftMessages/SwiftMessages/SwiftMessages.swift
index dfae859c..7c0042f5 100644
--- a/OpenBook/Pods/SwiftMessages/SwiftMessages/SwiftMessages.swift
+++ b/OpenBook/Pods/SwiftMessages/SwiftMessages/SwiftMessages.swift
@@ -77,10 +77,10 @@ open class SwiftMessages {
          of any message view that adopts the `MarginInsetting` protocol (as `MessageView` does)
          to account for the status bar. As of iOS 13, windows can no longer cover the
          status bar. The only alternative is to set `Config.prefersStatusBarHidden = true`
-         to hide it.
+         to hide it. The `WindowScene` protocol works around the change in Xcode 13 that prevents
+         using `@availability` attribute with `enum` cases containing associated values.
         */
-        @available(iOS 13.0, *)
-        case windowScene(_: UIWindowScene, windowLevel: UIWindow.Level)
+        case windowScene(_: WindowScene, windowLevel: UIWindow.Level)
 
         /**
          Displays the message view under navigation bars and tab bars if an
@@ -248,7 +248,16 @@ open class SwiftMessages {
          Specifies how the container for presenting the message view
          is selected. The default is `.Automatic`.
          */
-        public var presentationContext = PresentationContext.automatic
+        public var presentationContext = PresentationContext.automatic {
+            didSet {
+                if case .windowScene = presentationContext {
+                    guard #available(iOS 13.0, *) else {
+                        assertionFailure("windowScene is not supported below iOS 13.0.")
+                        return
+                    }
+                }
+            }
+        }
 
         /**
          Specifies the duration of the message view's time on screen before it is
diff --git a/OpenBook/Pods/Target Support Files/Alamofire/Alamofire-Info.plist b/OpenBook/Pods/Target Support Files/Alamofire/Alamofire-Info.plist
index f6f37a1a..40a20b1a 100644
--- a/OpenBook/Pods/Target Support Files/Alamofire/Alamofire-Info.plist	
+++ b/OpenBook/Pods/Target Support Files/Alamofire/Alamofire-Info.plist	
@@ -15,7 +15,7 @@
   <key>CFBundlePackageType</key>
   <string>FMWK</string>
   <key>CFBundleShortVersionString</key>
-  <string>5.4.3</string>
+  <string>5.4.4</string>
   <key>CFBundleSignature</key>
   <string>????</string>
   <key>CFBundleVersion</key>
diff --git a/OpenBook/Pods/Target Support Files/FloatingPanel/FloatingPanel-Info.plist b/OpenBook/Pods/Target Support Files/FloatingPanel/FloatingPanel-Info.plist
index e5268496..3e850498 100644
--- a/OpenBook/Pods/Target Support Files/FloatingPanel/FloatingPanel-Info.plist	
+++ b/OpenBook/Pods/Target Support Files/FloatingPanel/FloatingPanel-Info.plist	
@@ -15,7 +15,7 @@
   <key>CFBundlePackageType</key>
   <string>FMWK</string>
   <key>CFBundleShortVersionString</key>
-  <string>2.4.0</string>
+  <string>2.5.0</string>
   <key>CFBundleSignature</key>
   <string>????</string>
   <key>CFBundleVersion</key>
diff --git a/OpenBook/Pods/Target Support Files/IQKeyboardManagerSwift/IQKeyboardManagerSwift-Info.plist b/OpenBook/Pods/Target Support Files/IQKeyboardManagerSwift/IQKeyboardManagerSwift-Info.plist
index c59fdce3..d7e419a3 100644
--- a/OpenBook/Pods/Target Support Files/IQKeyboardManagerSwift/IQKeyboardManagerSwift-Info.plist	
+++ b/OpenBook/Pods/Target Support Files/IQKeyboardManagerSwift/IQKeyboardManagerSwift-Info.plist	
@@ -15,7 +15,7 @@
   <key>CFBundlePackageType</key>
   <string>FMWK</string>
   <key>CFBundleShortVersionString</key>
-  <string>6.5.6</string>
+  <string>6.5.9</string>
   <key>CFBundleSignature</key>
   <string>????</string>
   <key>CFBundleVersion</key>
diff --git a/OpenBook/Pods/Target Support Files/Parchment/Parchment-Info.plist b/OpenBook/Pods/Target Support Files/Parchment/Parchment-Info.plist
index b0b461e3..90db36aa 100644
--- a/OpenBook/Pods/Target Support Files/Parchment/Parchment-Info.plist	
+++ b/OpenBook/Pods/Target Support Files/Parchment/Parchment-Info.plist	
@@ -15,7 +15,7 @@
   <key>CFBundlePackageType</key>
   <string>FMWK</string>
   <key>CFBundleShortVersionString</key>
-  <string>3.0.1</string>
+  <string>3.1.0</string>
   <key>CFBundleSignature</key>
   <string>????</string>
   <key>CFBundleVersion</key>
diff --git a/OpenBook/Pods/Target Support Files/Pods-OpenBook/Pods-OpenBook.debug.xcconfig b/OpenBook/Pods/Target Support Files/Pods-OpenBook/Pods-OpenBook.debug.xcconfig
index ddb26b55..0a816831 100644
--- a/OpenBook/Pods/Target Support Files/Pods-OpenBook/Pods-OpenBook.debug.xcconfig	
+++ b/OpenBook/Pods/Target Support Files/Pods-OpenBook/Pods-OpenBook.debug.xcconfig	
@@ -1,12 +1,12 @@
 ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES
 CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = NO
 EXCLUDED_ARCHS[sdk=iphonesimulator*] = arm64
-FRAMEWORK_SEARCH_PATHS = $(inherited) "${PODS_CONFIGURATION_BUILD_DIR}/Alamofire" "${PODS_CONFIGURATION_BUILD_DIR}/AlamofireNetworkActivityLogger" "${PODS_CONFIGURATION_BUILD_DIR}/CleverTap-iOS-SDK" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseCore" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseCoreDiagnostics" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseCrashlytics" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseInstallations" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseMessaging" "${PODS_CONFIGURATION_BUILD_DIR}/FloatingPanel" "${PODS_CONFIGURATION_BUILD_DIR}/GoogleDataTransport" "${PODS_CONFIGURATION_BUILD_DIR}/GoogleUtilities" "${PODS_CONFIGURATION_BUILD_DIR}/IQKeyboardManagerSwift" "${PODS_CONFIGURATION_BUILD_DIR}/OTPFieldView" "${PODS_CONFIGURATION_BUILD_DIR}/Parchment" "${PODS_CONFIGURATION_BUILD_DIR}/PromisesObjC" "${PODS_CONFIGURATION_BUILD_DIR}/SDWebImage" "${PODS_CONFIGURATION_BUILD_DIR}/ScrollingFollowView" "${PODS_CONFIGURATION_BUILD_DIR}/SwiftMessages" "${PODS_CONFIGURATION_BUILD_DIR}/XLPagerTabStrip" "${PODS_CONFIGURATION_BUILD_DIR}/nanopb" "${PODS_CONFIGURATION_BUILD_DIR}/youtube-ios-player-helper" "${PODS_ROOT}/FirebaseAnalytics/Frameworks" "${PODS_ROOT}/GoogleAppMeasurement/Frameworks" "${PODS_ROOT}/UserExperior" "${PODS_XCFRAMEWORKS_BUILD_DIR}/FirebaseAnalytics/AdIdSupport" "${PODS_XCFRAMEWORKS_BUILD_DIR}/GoogleAppMeasurement/AdIdSupport" "${PODS_XCFRAMEWORKS_BUILD_DIR}/UserExperior"
+FRAMEWORK_SEARCH_PATHS = $(inherited) "${PODS_CONFIGURATION_BUILD_DIR}/Alamofire" "${PODS_CONFIGURATION_BUILD_DIR}/AlamofireNetworkActivityLogger" "${PODS_CONFIGURATION_BUILD_DIR}/CleverTap-iOS-SDK" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseCore" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseCoreDiagnostics" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseCrashlytics" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseInstallations" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseMessaging" "${PODS_CONFIGURATION_BUILD_DIR}/FloatingPanel" "${PODS_CONFIGURATION_BUILD_DIR}/GoogleDataTransport" "${PODS_CONFIGURATION_BUILD_DIR}/GoogleUtilities" "${PODS_CONFIGURATION_BUILD_DIR}/IQKeyboardManagerSwift" "${PODS_CONFIGURATION_BUILD_DIR}/OTPFieldView" "${PODS_CONFIGURATION_BUILD_DIR}/Parchment" "${PODS_CONFIGURATION_BUILD_DIR}/PromisesObjC" "${PODS_CONFIGURATION_BUILD_DIR}/SDWebImage" "${PODS_CONFIGURATION_BUILD_DIR}/ScrollingFollowView" "${PODS_CONFIGURATION_BUILD_DIR}/SwiftMessages" "${PODS_CONFIGURATION_BUILD_DIR}/XLPagerTabStrip" "${PODS_CONFIGURATION_BUILD_DIR}/nanopb" "${PODS_CONFIGURATION_BUILD_DIR}/youtube-ios-player-helper" "${PODS_ROOT}/FirebaseAnalytics/Frameworks" "${PODS_ROOT}/GoogleAppMeasurement/Frameworks" "${PODS_ROOT}/UserExperior" "${PODS_XCFRAMEWORKS_BUILD_DIR}/FirebaseAnalytics/AdIdSupport" "${PODS_XCFRAMEWORKS_BUILD_DIR}/GoogleAppMeasurement/AdIdSupport" "${PODS_XCFRAMEWORKS_BUILD_DIR}/GoogleAppMeasurement/WithoutAdIdSupport" "${PODS_XCFRAMEWORKS_BUILD_DIR}/UserExperior"
 GCC_PREPROCESSOR_DEFINITIONS = $(inherited) COCOAPODS=1 $(inherited) PB_FIELD_32BIT=1 PB_NO_PACKED_STRUCTS=1 PB_ENABLE_MALLOC=1
 HEADER_SEARCH_PATHS = $(inherited) "${PODS_CONFIGURATION_BUILD_DIR}/Alamofire/Alamofire.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/AlamofireNetworkActivityLogger/AlamofireNetworkActivityLogger.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/CleverTap-iOS-SDK/CleverTapSDK.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseCore/FirebaseCore.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseCoreDiagnostics/FirebaseCoreDiagnostics.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseCrashlytics/FirebaseCrashlytics.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseInstallations/FirebaseInstallations.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseMessaging/FirebaseMessaging.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/FloatingPanel/FloatingPanel.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/GoogleDataTransport/GoogleDataTransport.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/GoogleUtilities/GoogleUtilities.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/IQKeyboardManagerSwift/IQKeyboardManagerSwift.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/OTPFieldView/OTPFieldView.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/Parchment/Parchment.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/PromisesObjC/FBLPromises.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/SDWebImage/SDWebImage.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/ScrollingFollowView/ScrollingFollowView.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/SwiftMessages/SwiftMessages.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/XLPagerTabStrip/XLPagerTabStrip.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/nanopb/nanopb.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/youtube-ios-player-helper/youtube_ios_player_helper.framework/Headers" "${PODS_ROOT}/Headers/Public" "${PODS_ROOT}/Headers/Public/Firebase" $(inherited) ${PODS_ROOT}/Firebase/CoreOnly/Sources "${PODS_TARGET_SRCROOT}/Sources/FBLPromises/include"
 LD_RUNPATH_SEARCH_PATHS = $(inherited) /usr/lib/swift '@executable_path/Frameworks' '@loader_path/Frameworks'
 LIBRARY_SEARCH_PATHS = $(inherited) "${DT_TOOLCHAIN_DIR}/usr/lib/swift/${PLATFORM_NAME}" /usr/lib/swift
-OTHER_LDFLAGS = $(inherited) -ObjC -l"c++" -l"sqlite3" -l"z" -framework "Alamofire" -framework "AlamofireNetworkActivityLogger" -framework "CFNetwork" -framework "CleverTapSDK" -framework "CoreGraphics" -framework "CoreTelephony" -framework "FBLPromises" -framework "FirebaseAnalytics" -framework "FirebaseCore" -framework "FirebaseCoreDiagnostics" -framework "FirebaseCrashlytics" -framework "FirebaseInstallations" -framework "FirebaseMessaging" -framework "FloatingPanel" -framework "Foundation" -framework "GoogleAppMeasurement" -framework "GoogleDataTransport" -framework "GoogleUtilities" -framework "IQKeyboardManagerSwift" -framework "ImageIO" -framework "OTPFieldView" -framework "Parchment" -framework "QuartzCore" -framework "SDWebImage" -framework "ScrollingFollowView" -framework "Security" -framework "StoreKit" -framework "SwiftMessages" -framework "SystemConfiguration" -framework "UIKit" -framework "UserExperiorSDK" -framework "XLPagerTabStrip" -framework "nanopb" -framework "youtube_ios_player_helper" -weak_framework "UserNotifications"
+OTHER_LDFLAGS = $(inherited) -ObjC -l"c++" -l"sqlite3" -l"z" -framework "Alamofire" -framework "AlamofireNetworkActivityLogger" -framework "CFNetwork" -framework "CleverTapSDK" -framework "CoreGraphics" -framework "CoreTelephony" -framework "FBLPromises" -framework "FirebaseAnalytics" -framework "FirebaseCore" -framework "FirebaseCoreDiagnostics" -framework "FirebaseCrashlytics" -framework "FirebaseInstallations" -framework "FirebaseMessaging" -framework "FloatingPanel" -framework "Foundation" -framework "GoogleAppMeasurement" -framework "GoogleAppMeasurementIdentitySupport" -framework "GoogleDataTransport" -framework "GoogleUtilities" -framework "IQKeyboardManagerSwift" -framework "ImageIO" -framework "OTPFieldView" -framework "Parchment" -framework "QuartzCore" -framework "SDWebImage" -framework "ScrollingFollowView" -framework "Security" -framework "StoreKit" -framework "SwiftMessages" -framework "SystemConfiguration" -framework "UIKit" -framework "UserExperiorSDK" -framework "XLPagerTabStrip" -framework "nanopb" -framework "youtube_ios_player_helper" -weak_framework "UserNotifications"
 OTHER_SWIFT_FLAGS = $(inherited) -D COCOAPODS
 PODS_BUILD_DIR = ${BUILD_DIR}
 PODS_CONFIGURATION_BUILD_DIR = ${PODS_BUILD_DIR}/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)
diff --git a/OpenBook/Pods/Target Support Files/Pods-OpenBook/Pods-OpenBook.release.xcconfig b/OpenBook/Pods/Target Support Files/Pods-OpenBook/Pods-OpenBook.release.xcconfig
index ddb26b55..0a816831 100644
--- a/OpenBook/Pods/Target Support Files/Pods-OpenBook/Pods-OpenBook.release.xcconfig	
+++ b/OpenBook/Pods/Target Support Files/Pods-OpenBook/Pods-OpenBook.release.xcconfig	
@@ -1,12 +1,12 @@
 ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES
 CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = NO
 EXCLUDED_ARCHS[sdk=iphonesimulator*] = arm64
-FRAMEWORK_SEARCH_PATHS = $(inherited) "${PODS_CONFIGURATION_BUILD_DIR}/Alamofire" "${PODS_CONFIGURATION_BUILD_DIR}/AlamofireNetworkActivityLogger" "${PODS_CONFIGURATION_BUILD_DIR}/CleverTap-iOS-SDK" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseCore" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseCoreDiagnostics" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseCrashlytics" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseInstallations" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseMessaging" "${PODS_CONFIGURATION_BUILD_DIR}/FloatingPanel" "${PODS_CONFIGURATION_BUILD_DIR}/GoogleDataTransport" "${PODS_CONFIGURATION_BUILD_DIR}/GoogleUtilities" "${PODS_CONFIGURATION_BUILD_DIR}/IQKeyboardManagerSwift" "${PODS_CONFIGURATION_BUILD_DIR}/OTPFieldView" "${PODS_CONFIGURATION_BUILD_DIR}/Parchment" "${PODS_CONFIGURATION_BUILD_DIR}/PromisesObjC" "${PODS_CONFIGURATION_BUILD_DIR}/SDWebImage" "${PODS_CONFIGURATION_BUILD_DIR}/ScrollingFollowView" "${PODS_CONFIGURATION_BUILD_DIR}/SwiftMessages" "${PODS_CONFIGURATION_BUILD_DIR}/XLPagerTabStrip" "${PODS_CONFIGURATION_BUILD_DIR}/nanopb" "${PODS_CONFIGURATION_BUILD_DIR}/youtube-ios-player-helper" "${PODS_ROOT}/FirebaseAnalytics/Frameworks" "${PODS_ROOT}/GoogleAppMeasurement/Frameworks" "${PODS_ROOT}/UserExperior" "${PODS_XCFRAMEWORKS_BUILD_DIR}/FirebaseAnalytics/AdIdSupport" "${PODS_XCFRAMEWORKS_BUILD_DIR}/GoogleAppMeasurement/AdIdSupport" "${PODS_XCFRAMEWORKS_BUILD_DIR}/UserExperior"
+FRAMEWORK_SEARCH_PATHS = $(inherited) "${PODS_CONFIGURATION_BUILD_DIR}/Alamofire" "${PODS_CONFIGURATION_BUILD_DIR}/AlamofireNetworkActivityLogger" "${PODS_CONFIGURATION_BUILD_DIR}/CleverTap-iOS-SDK" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseCore" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseCoreDiagnostics" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseCrashlytics" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseInstallations" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseMessaging" "${PODS_CONFIGURATION_BUILD_DIR}/FloatingPanel" "${PODS_CONFIGURATION_BUILD_DIR}/GoogleDataTransport" "${PODS_CONFIGURATION_BUILD_DIR}/GoogleUtilities" "${PODS_CONFIGURATION_BUILD_DIR}/IQKeyboardManagerSwift" "${PODS_CONFIGURATION_BUILD_DIR}/OTPFieldView" "${PODS_CONFIGURATION_BUILD_DIR}/Parchment" "${PODS_CONFIGURATION_BUILD_DIR}/PromisesObjC" "${PODS_CONFIGURATION_BUILD_DIR}/SDWebImage" "${PODS_CONFIGURATION_BUILD_DIR}/ScrollingFollowView" "${PODS_CONFIGURATION_BUILD_DIR}/SwiftMessages" "${PODS_CONFIGURATION_BUILD_DIR}/XLPagerTabStrip" "${PODS_CONFIGURATION_BUILD_DIR}/nanopb" "${PODS_CONFIGURATION_BUILD_DIR}/youtube-ios-player-helper" "${PODS_ROOT}/FirebaseAnalytics/Frameworks" "${PODS_ROOT}/GoogleAppMeasurement/Frameworks" "${PODS_ROOT}/UserExperior" "${PODS_XCFRAMEWORKS_BUILD_DIR}/FirebaseAnalytics/AdIdSupport" "${PODS_XCFRAMEWORKS_BUILD_DIR}/GoogleAppMeasurement/AdIdSupport" "${PODS_XCFRAMEWORKS_BUILD_DIR}/GoogleAppMeasurement/WithoutAdIdSupport" "${PODS_XCFRAMEWORKS_BUILD_DIR}/UserExperior"
 GCC_PREPROCESSOR_DEFINITIONS = $(inherited) COCOAPODS=1 $(inherited) PB_FIELD_32BIT=1 PB_NO_PACKED_STRUCTS=1 PB_ENABLE_MALLOC=1
 HEADER_SEARCH_PATHS = $(inherited) "${PODS_CONFIGURATION_BUILD_DIR}/Alamofire/Alamofire.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/AlamofireNetworkActivityLogger/AlamofireNetworkActivityLogger.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/CleverTap-iOS-SDK/CleverTapSDK.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseCore/FirebaseCore.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseCoreDiagnostics/FirebaseCoreDiagnostics.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseCrashlytics/FirebaseCrashlytics.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseInstallations/FirebaseInstallations.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/FirebaseMessaging/FirebaseMessaging.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/FloatingPanel/FloatingPanel.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/GoogleDataTransport/GoogleDataTransport.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/GoogleUtilities/GoogleUtilities.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/IQKeyboardManagerSwift/IQKeyboardManagerSwift.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/OTPFieldView/OTPFieldView.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/Parchment/Parchment.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/PromisesObjC/FBLPromises.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/SDWebImage/SDWebImage.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/ScrollingFollowView/ScrollingFollowView.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/SwiftMessages/SwiftMessages.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/XLPagerTabStrip/XLPagerTabStrip.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/nanopb/nanopb.framework/Headers" "${PODS_CONFIGURATION_BUILD_DIR}/youtube-ios-player-helper/youtube_ios_player_helper.framework/Headers" "${PODS_ROOT}/Headers/Public" "${PODS_ROOT}/Headers/Public/Firebase" $(inherited) ${PODS_ROOT}/Firebase/CoreOnly/Sources "${PODS_TARGET_SRCROOT}/Sources/FBLPromises/include"
 LD_RUNPATH_SEARCH_PATHS = $(inherited) /usr/lib/swift '@executable_path/Frameworks' '@loader_path/Frameworks'
 LIBRARY_SEARCH_PATHS = $(inherited) "${DT_TOOLCHAIN_DIR}/usr/lib/swift/${PLATFORM_NAME}" /usr/lib/swift
-OTHER_LDFLAGS = $(inherited) -ObjC -l"c++" -l"sqlite3" -l"z" -framework "Alamofire" -framework "AlamofireNetworkActivityLogger" -framework "CFNetwork" -framework "CleverTapSDK" -framework "CoreGraphics" -framework "CoreTelephony" -framework "FBLPromises" -framework "FirebaseAnalytics" -framework "FirebaseCore" -framework "FirebaseCoreDiagnostics" -framework "FirebaseCrashlytics" -framework "FirebaseInstallations" -framework "FirebaseMessaging" -framework "FloatingPanel" -framework "Foundation" -framework "GoogleAppMeasurement" -framework "GoogleDataTransport" -framework "GoogleUtilities" -framework "IQKeyboardManagerSwift" -framework "ImageIO" -framework "OTPFieldView" -framework "Parchment" -framework "QuartzCore" -framework "SDWebImage" -framework "ScrollingFollowView" -framework "Security" -framework "StoreKit" -framework "SwiftMessages" -framework "SystemConfiguration" -framework "UIKit" -framework "UserExperiorSDK" -framework "XLPagerTabStrip" -framework "nanopb" -framework "youtube_ios_player_helper" -weak_framework "UserNotifications"
+OTHER_LDFLAGS = $(inherited) -ObjC -l"c++" -l"sqlite3" -l"z" -framework "Alamofire" -framework "AlamofireNetworkActivityLogger" -framework "CFNetwork" -framework "CleverTapSDK" -framework "CoreGraphics" -framework "CoreTelephony" -framework "FBLPromises" -framework "FirebaseAnalytics" -framework "FirebaseCore" -framework "FirebaseCoreDiagnostics" -framework "FirebaseCrashlytics" -framework "FirebaseInstallations" -framework "FirebaseMessaging" -framework "FloatingPanel" -framework "Foundation" -framework "GoogleAppMeasurement" -framework "GoogleAppMeasurementIdentitySupport" -framework "GoogleDataTransport" -framework "GoogleUtilities" -framework "IQKeyboardManagerSwift" -framework "ImageIO" -framework "OTPFieldView" -framework "Parchment" -framework "QuartzCore" -framework "SDWebImage" -framework "ScrollingFollowView" -framework "Security" -framework "StoreKit" -framework "SwiftMessages" -framework "SystemConfiguration" -framework "UIKit" -framework "UserExperiorSDK" -framework "XLPagerTabStrip" -framework "nanopb" -framework "youtube_ios_player_helper" -weak_framework "UserNotifications"
 OTHER_SWIFT_FLAGS = $(inherited) -D COCOAPODS
 PODS_BUILD_DIR = ${BUILD_DIR}
 PODS_CONFIGURATION_BUILD_DIR = ${PODS_BUILD_DIR}/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)
diff --git a/OpenBook/Pods/Target Support Files/SDWebImage/SDWebImage-Info.plist b/OpenBook/Pods/Target Support Files/SDWebImage/SDWebImage-Info.plist
index 614eba16..ced4f96f 100644
--- a/OpenBook/Pods/Target Support Files/SDWebImage/SDWebImage-Info.plist	
+++ b/OpenBook/Pods/Target Support Files/SDWebImage/SDWebImage-Info.plist	
@@ -15,7 +15,7 @@
   <key>CFBundlePackageType</key>
   <string>FMWK</string>
   <key>CFBundleShortVersionString</key>
-  <string>5.11.1</string>
+  <string>5.12.1</string>
   <key>CFBundleSignature</key>
   <string>????</string>
   <key>CFBundleVersion</key>
diff --git a/OpenBook/Pods/Target Support Files/SwiftMessages/ResourceBundle-SwiftMessages-SwiftMessages-Info.plist b/OpenBook/Pods/Target Support Files/SwiftMessages/ResourceBundle-SwiftMessages-SwiftMessages-Info.plist
index fa5d486a..54841fab 100644
--- a/OpenBook/Pods/Target Support Files/SwiftMessages/ResourceBundle-SwiftMessages-SwiftMessages-Info.plist	
+++ b/OpenBook/Pods/Target Support Files/SwiftMessages/ResourceBundle-SwiftMessages-SwiftMessages-Info.plist	
@@ -13,7 +13,7 @@
   <key>CFBundlePackageType</key>
   <string>BNDL</string>
   <key>CFBundleShortVersionString</key>
-  <string>9.0.3</string>
+  <string>9.0.5</string>
   <key>CFBundleSignature</key>
   <string>????</string>
   <key>CFBundleVersion</key>
diff --git a/OpenBook/Pods/Target Support Files/SwiftMessages/SwiftMessages-Info.plist b/OpenBook/Pods/Target Support Files/SwiftMessages/SwiftMessages-Info.plist
index 364cea2f..855437d5 100644
--- a/OpenBook/Pods/Target Support Files/SwiftMessages/SwiftMessages-Info.plist	
+++ b/OpenBook/Pods/Target Support Files/SwiftMessages/SwiftMessages-Info.plist	
@@ -15,7 +15,7 @@
   <key>CFBundlePackageType</key>
   <string>FMWK</string>
   <key>CFBundleShortVersionString</key>
-  <string>9.0.3</string>
+  <string>9.0.5</string>
   <key>CFBundleSignature</key>
   <string>????</string>
   <key>CFBundleVersion</key>
diff --git a/OpenBook/Pods/Target Support Files/TrueSDK/ResourceBundle-TrueSDK-TrueSDK-Info.plist b/OpenBook/Pods/Target Support Files/TrueSDK/ResourceBundle-TrueSDK-TrueSDK-Info.plist
deleted file mode 100644
index 69fae46b..00000000
--- a/OpenBook/Pods/Target Support Files/TrueSDK/ResourceBundle-TrueSDK-TrueSDK-Info.plist	
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
-<plist version="1.0">
-<dict>
-  <key>CFBundleDevelopmentRegion</key>
-  <string>en</string>
-  <key>CFBundleIdentifier</key>
-  <string>${PRODUCT_BUNDLE_IDENTIFIER}</string>
-  <key>CFBundleInfoDictionaryVersion</key>
-  <string>6.0</string>
-  <key>CFBundleName</key>
-  <string>${PRODUCT_NAME}</string>
-  <key>CFBundlePackageType</key>
-  <string>BNDL</string>
-  <key>CFBundleShortVersionString</key>
-  <string>0.1.6</string>
-  <key>CFBundleSignature</key>
-  <string>????</string>
-  <key>CFBundleVersion</key>
-  <string>1</string>
-  <key>NSPrincipalClass</key>
-  <string></string>
-</dict>
-</plist>
diff --git a/OpenBook/Pods/Target Support Files/TrueSDK/TrueSDK-Info.plist b/OpenBook/Pods/Target Support Files/TrueSDK/TrueSDK-Info.plist
deleted file mode 100644
index c970b741..00000000
--- a/OpenBook/Pods/Target Support Files/TrueSDK/TrueSDK-Info.plist	
+++ /dev/null
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
-<plist version="1.0">
-<dict>
-  <key>CFBundleDevelopmentRegion</key>
-  <string>en</string>
-  <key>CFBundleExecutable</key>
-  <string>${EXECUTABLE_NAME}</string>
-  <key>CFBundleIdentifier</key>
-  <string>${PRODUCT_BUNDLE_IDENTIFIER}</string>
-  <key>CFBundleInfoDictionaryVersion</key>
-  <string>6.0</string>
-  <key>CFBundleName</key>
-  <string>${PRODUCT_NAME}</string>
-  <key>CFBundlePackageType</key>
-  <string>FMWK</string>
-  <key>CFBundleShortVersionString</key>
-  <string>0.1.6</string>
-  <key>CFBundleSignature</key>
-  <string>????</string>
-  <key>CFBundleVersion</key>
-  <string>${CURRENT_PROJECT_VERSION}</string>
-  <key>NSPrincipalClass</key>
-  <string></string>
-</dict>
-</plist>
diff --git a/OpenBook/Pods/Target Support Files/TrueSDK/TrueSDK-dummy.m b/OpenBook/Pods/Target Support Files/TrueSDK/TrueSDK-dummy.m
deleted file mode 100644
index a4ae7549..00000000
--- a/OpenBook/Pods/Target Support Files/TrueSDK/TrueSDK-dummy.m	
+++ /dev/null
@@ -1,5 +0,0 @@
-#import <Foundation/Foundation.h>
-@interface PodsDummy_TrueSDK : NSObject
-@end
-@implementation PodsDummy_TrueSDK
-@end
diff --git a/OpenBook/Pods/Target Support Files/TrueSDK/TrueSDK-prefix.pch b/OpenBook/Pods/Target Support Files/TrueSDK/TrueSDK-prefix.pch
deleted file mode 100644
index beb2a244..00000000
--- a/OpenBook/Pods/Target Support Files/TrueSDK/TrueSDK-prefix.pch	
+++ /dev/null
@@ -1,12 +0,0 @@
-#ifdef __OBJC__
-#import <UIKit/UIKit.h>
-#else
-#ifndef FOUNDATION_EXPORT
-#if defined(__cplusplus)
-#define FOUNDATION_EXPORT extern "C"
-#else
-#define FOUNDATION_EXPORT extern
-#endif
-#endif
-#endif
-
diff --git a/OpenBook/Pods/Target Support Files/TrueSDK/TrueSDK-umbrella.h b/OpenBook/Pods/Target Support Files/TrueSDK/TrueSDK-umbrella.h
deleted file mode 100644
index bdcb816d..00000000
--- a/OpenBook/Pods/Target Support Files/TrueSDK/TrueSDK-umbrella.h	
+++ /dev/null
@@ -1,27 +0,0 @@
-#ifdef __OBJC__
-#import <UIKit/UIKit.h>
-#else
-#ifndef FOUNDATION_EXPORT
-#if defined(__cplusplus)
-#define FOUNDATION_EXPORT extern "C"
-#else
-#define FOUNDATION_EXPORT extern
-#endif
-#endif
-#endif
-
-#import "TrueSDK.h"
-#import "NSURL+TrueSDK.h"
-#import "TCError.h"
-#import "TCTrueProfile.h"
-#import "TCTrueProfileRequest.h"
-#import "TCTrueProfileResponse.h"
-#import "TCTrueSDKLogger.h"
-#import "TCUtils.h"
-#import "TCVersion.h"
-#import "TCProfileRequestButton.h"
-#import "TCTrueSDK.h"
-
-FOUNDATION_EXPORT double TrueSDKVersionNumber;
-FOUNDATION_EXPORT const unsigned char TrueSDKVersionString[];
-
diff --git a/OpenBook/Pods/Target Support Files/TrueSDK/TrueSDK.debug.xcconfig b/OpenBook/Pods/Target Support Files/TrueSDK/TrueSDK.debug.xcconfig
deleted file mode 100644
index bb990240..00000000
--- a/OpenBook/Pods/Target Support Files/TrueSDK/TrueSDK.debug.xcconfig	
+++ /dev/null
@@ -1,12 +0,0 @@
-CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = NO
-CONFIGURATION_BUILD_DIR = ${PODS_CONFIGURATION_BUILD_DIR}/TrueSDK
-GCC_PREPROCESSOR_DEFINITIONS = $(inherited) COCOAPODS=1
-OTHER_LDFLAGS = $(inherited) -weak_framework "Foundation" -weak_framework "UIKit"
-PODS_BUILD_DIR = ${BUILD_DIR}
-PODS_CONFIGURATION_BUILD_DIR = ${PODS_BUILD_DIR}/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)
-PODS_ROOT = ${SRCROOT}
-PODS_TARGET_SRCROOT = ${PODS_ROOT}/TrueSDK
-PODS_XCFRAMEWORKS_BUILD_DIR = $(PODS_CONFIGURATION_BUILD_DIR)/XCFrameworkIntermediates
-PRODUCT_BUNDLE_IDENTIFIER = org.cocoapods.${PRODUCT_NAME:rfc1034identifier}
-SKIP_INSTALL = YES
-USE_RECURSIVE_SCRIPT_INPUTS_IN_SCRIPT_PHASES = YES
diff --git a/OpenBook/Pods/Target Support Files/TrueSDK/TrueSDK.modulemap b/OpenBook/Pods/Target Support Files/TrueSDK/TrueSDK.modulemap
deleted file mode 100644
index 9cfa9681..00000000
--- a/OpenBook/Pods/Target Support Files/TrueSDK/TrueSDK.modulemap	
+++ /dev/null
@@ -1,6 +0,0 @@
-framework module TrueSDK {
-  umbrella header "TrueSDK-umbrella.h"
-
-  export *
-  module * { export * }
-}
diff --git a/OpenBook/Pods/Target Support Files/TrueSDK/TrueSDK.release.xcconfig b/OpenBook/Pods/Target Support Files/TrueSDK/TrueSDK.release.xcconfig
deleted file mode 100644
index bb990240..00000000
--- a/OpenBook/Pods/Target Support Files/TrueSDK/TrueSDK.release.xcconfig	
+++ /dev/null
@@ -1,12 +0,0 @@
-CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = NO
-CONFIGURATION_BUILD_DIR = ${PODS_CONFIGURATION_BUILD_DIR}/TrueSDK
-GCC_PREPROCESSOR_DEFINITIONS = $(inherited) COCOAPODS=1
-OTHER_LDFLAGS = $(inherited) -weak_framework "Foundation" -weak_framework "UIKit"
-PODS_BUILD_DIR = ${BUILD_DIR}
-PODS_CONFIGURATION_BUILD_DIR = ${PODS_BUILD_DIR}/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)
-PODS_ROOT = ${SRCROOT}
-PODS_TARGET_SRCROOT = ${PODS_ROOT}/TrueSDK
-PODS_XCFRAMEWORKS_BUILD_DIR = $(PODS_CONFIGURATION_BUILD_DIR)/XCFrameworkIntermediates
-PRODUCT_BUNDLE_IDENTIFIER = org.cocoapods.${PRODUCT_NAME:rfc1034identifier}
-SKIP_INSTALL = YES
-USE_RECURSIVE_SCRIPT_INPUTS_IN_SCRIPT_PHASES = YES
diff --git a/OpenBook/Pods/Target Support Files/TrueSDK/TrueSDK.xcconfig b/OpenBook/Pods/Target Support Files/TrueSDK/TrueSDK.xcconfig
deleted file mode 100644
index 925ff3f0..00000000
--- a/OpenBook/Pods/Target Support Files/TrueSDK/TrueSDK.xcconfig	
+++ /dev/null
@@ -1,10 +0,0 @@
-CONFIGURATION_BUILD_DIR = ${PODS_CONFIGURATION_BUILD_DIR}/TrueSDK
-GCC_PREPROCESSOR_DEFINITIONS = $(inherited) COCOAPODS=1
-OTHER_LDFLAGS = $(inherited) -weak_framework "Foundation" -weak_framework "UIKit"
-PODS_BUILD_DIR = ${BUILD_DIR}
-PODS_CONFIGURATION_BUILD_DIR = ${PODS_BUILD_DIR}/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)
-PODS_ROOT = ${SRCROOT}
-PODS_TARGET_SRCROOT = ${PODS_ROOT}/TrueSDK
-PRODUCT_BUNDLE_IDENTIFIER = org.cocoapods.${PRODUCT_NAME:rfc1034identifier}
-SKIP_INSTALL = YES
-USE_RECURSIVE_SCRIPT_INPUTS_IN_SCRIPT_PHASES = YES
